/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: bt.swigcxx

package bt

import "unsafe"
import _ "runtime/cgo"

type _ unsafe.Pointer

type _swig_fnptr *byte
type _swig_memberptr *byte

const BT_BULLET_VERSION int = 282

func BtGetVersion() int

const BT_LARGE_FLOAT float64 = 1e18

func _swig_wrap_btInfinityMask_set(int)

func SetBtInfinityMask(arg1 int) {
	_swig_wrap_btInfinityMask_set(arg1)
}

func GetBtInfinityMask() int
func BtSqrt(float32) float32
func BtFabs(float32) float32
func BtCos(float32) float32
func BtSin(float32) float32
func BtTan(float32) float32
func BtAcos(float32) float32
func BtAsin(float32) float32
func BtAtan(float32) float32
func BtAtan2(float32, float32) float32
func BtExp(float32) float32
func BtLog(float32) float32
func BtPow(float32, float32) float32
func BtFmod(float32, float32) float32
func BtAtan2Fast(float32, float32) float32
func BtFuzzyZero(float32) bool
func BtEqual(float32, float32) bool
func BtGreaterEqual(float32, float32) bool
func BtIsNegative(float32) int
func BtRadians(float32) float32
func BtDegrees(float32) float32
func BtFsel(float32, float32, float32) float32
func BtMachineIsLittleEndian() bool
func BtSelect__SWIG_0(uint, uint, uint) uint
func BtSelect__SWIG_1(uint, int, int) int
func BtSelect__SWIG_2(uint, float32, float32) float32
func BtSelect(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[1].(uint); !ok {
			goto check_1
		}
		if _, ok := a[2].(uint); !ok {
			goto check_1
		}
		return BtSelect__SWIG_0(a[0].(uint), a[1].(uint), a[2].(uint))
	}
check_1:
	if argc == 3 {
		if _, ok := a[1].(int); !ok {
			goto check_2
		}
		if _, ok := a[2].(int); !ok {
			goto check_2
		}
		return BtSelect__SWIG_1(a[0].(uint), a[1].(int), a[2].(int))
	}
check_2:
	if argc == 3 {
		return BtSelect__SWIG_2(a[0].(uint), a[1].(float32), a[2].(float32))
	}
	panic("No match for overloaded function call")
}

func BtSwapEndian__SWIG_0(uint) uint
func BtSwapEndian__SWIG_1(uint16) uint16
func BtSwapEndian__SWIG_2(int) uint
func BtSwapEndian__SWIG_3(int16) uint16
func BtSwapEndian(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(uint16); !ok {
			goto check_1
		}
		return BtSwapEndian__SWIG_1(a[0].(uint16))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(int16); !ok {
			goto check_2
		}
		return BtSwapEndian__SWIG_3(a[0].(int16))
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_3
		}
		return BtSwapEndian__SWIG_2(a[0].(int))
	}
check_3:
	if argc == 1 {
		return BtSwapEndian__SWIG_0(a[0].(uint))
	}
	panic("No match for overloaded function call")
}

func BtSwapEndianFloat(float32) uint
func BtUnswapEndianFloat(uint) float32
func _swig_wrap_btSwapEndianDouble(float64, string)

func BtSwapEndianDouble(arg1 float64, arg2 string) {
	_swig_wrap_btSwapEndianDouble(arg1, arg2)
}

func BtUnswapEndianDouble(string) float64
func BtLargeDot(*float32, *float32, int) float32
func BtNormalizeAngle(float32) float32

type SwigcptrBtTypedObject uintptr

func (p SwigcptrBtTypedObject) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTypedObject) SwigIsBtTypedObject() {
}

func _swig_wrap_new_btTypedObject(int) SwigcptrBtTypedObject

func NewBtTypedObject(arg1 int) BtTypedObject {
	return _swig_wrap_new_btTypedObject(arg1)
}

func _swig_wrap_btTypedObject_m_objectType_set(SwigcptrBtTypedObject, int)

func (arg1 SwigcptrBtTypedObject) SetM_objectType(arg2 int) {
	_swig_wrap_btTypedObject_m_objectType_set(arg1, arg2)
}

func _swig_wrap_btTypedObject_m_objectType_get(SwigcptrBtTypedObject) int

func (arg1 SwigcptrBtTypedObject) GetM_objectType() int {
	return _swig_wrap_btTypedObject_m_objectType_get(arg1)
}

func _swig_wrap_btTypedObject_getObjectType(SwigcptrBtTypedObject) int

func (arg1 SwigcptrBtTypedObject) GetObjectType() int {
	return _swig_wrap_btTypedObject_getObjectType(arg1)
}

func _swig_wrap_delete_btTypedObject(uintptr)

func DeleteBtTypedObject(arg1 BtTypedObject) {
	_swig_wrap_delete_btTypedObject(arg1.Swigcptr())
}

type BtTypedObject interface {
	Swigcptr() uintptr
	SwigIsBtTypedObject()
	SetM_objectType(arg2 int)
	GetM_objectType() int
	GetObjectType() int
}

func BtAlignedAllocInternal(int64, int) uintptr
func _swig_wrap_btAlignedFreeInternal(uintptr)

func BtAlignedFreeInternal(arg1 uintptr) {
	_swig_wrap_btAlignedFreeInternal(arg1)
}

func _swig_wrap_btAlignedAllocSetCustom(*_swig_fnptr, *_swig_fnptr)

func BtAlignedAllocSetCustom(arg1 *_swig_fnptr, arg2 *_swig_fnptr) {
	_swig_wrap_btAlignedAllocSetCustom(arg1, arg2)
}

func _swig_wrap_btAlignedAllocSetCustomAligned(*_swig_fnptr, *_swig_fnptr)

func BtAlignedAllocSetCustomAligned(arg1 *_swig_fnptr, arg2 *_swig_fnptr) {
	_swig_wrap_btAlignedAllocSetCustomAligned(arg1, arg2)
}

const BtVector3DataName string = "btVector3FloatData"

type SwigcptrBtVector3 uintptr

func (p SwigcptrBtVector3) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtVector3) SwigIsBtVector3() {
}

func _swig_wrap_btVector3_m_floats_set(SwigcptrBtVector3, *float32)

func (arg1 SwigcptrBtVector3) SetM_floats(arg2 *float32) {
	_swig_wrap_btVector3_m_floats_set(arg1, arg2)
}

func _swig_wrap_btVector3_m_floats_get(SwigcptrBtVector3) *float32

func (arg1 SwigcptrBtVector3) GetM_floats() *float32 {
	return _swig_wrap_btVector3_m_floats_get(arg1)
}

func _swig_wrap_new_btVector3__SWIG_0() SwigcptrBtVector3

func NewBtVector3__SWIG_0() BtVector3 {
	return _swig_wrap_new_btVector3__SWIG_0()
}

func _swig_wrap_new_btVector3__SWIG_1(float32, float32, float32) SwigcptrBtVector3

func NewBtVector3__SWIG_1(arg1 float32, arg2 float32, arg3 float32) BtVector3 {
	return _swig_wrap_new_btVector3__SWIG_1(arg1, arg2, arg3)
}

func NewBtVector3(a ...interface{}) BtVector3 {
	argc := len(a)
	if argc == 0 {
		return NewBtVector3__SWIG_0()
	}
	if argc == 3 {
		return NewBtVector3__SWIG_1(a[0].(float32), a[1].(float32), a[2].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btVector3_dot(SwigcptrBtVector3, uintptr) float32

func (arg1 SwigcptrBtVector3) Dot(arg2 BtVector3) float32 {
	return _swig_wrap_btVector3_dot(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_length2(SwigcptrBtVector3) float32

func (arg1 SwigcptrBtVector3) Length2() float32 {
	return _swig_wrap_btVector3_length2(arg1)
}

func _swig_wrap_btVector3_length(SwigcptrBtVector3) float32

func (arg1 SwigcptrBtVector3) Length() float32 {
	return _swig_wrap_btVector3_length(arg1)
}

func _swig_wrap_btVector3_norm(SwigcptrBtVector3) float32

func (arg1 SwigcptrBtVector3) Norm() float32 {
	return _swig_wrap_btVector3_norm(arg1)
}

func _swig_wrap_btVector3_distance2(SwigcptrBtVector3, uintptr) float32

func (arg1 SwigcptrBtVector3) Distance2(arg2 BtVector3) float32 {
	return _swig_wrap_btVector3_distance2(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_distance(SwigcptrBtVector3, uintptr) float32

func (arg1 SwigcptrBtVector3) Distance(arg2 BtVector3) float32 {
	return _swig_wrap_btVector3_distance(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_safeNormalize(SwigcptrBtVector3) SwigcptrBtVector3

func (arg1 SwigcptrBtVector3) SafeNormalize() BtVector3 {
	return _swig_wrap_btVector3_safeNormalize(arg1)
}

func _swig_wrap_btVector3_normalize(SwigcptrBtVector3) SwigcptrBtVector3

func (arg1 SwigcptrBtVector3) Normalize() BtVector3 {
	return _swig_wrap_btVector3_normalize(arg1)
}

func _swig_wrap_btVector3_normalized(SwigcptrBtVector3) SwigcptrBtVector3

func (arg1 SwigcptrBtVector3) Normalized() BtVector3 {
	return _swig_wrap_btVector3_normalized(arg1)
}

func _swig_wrap_btVector3_rotate(SwigcptrBtVector3, uintptr, float32) SwigcptrBtVector3

func (arg1 SwigcptrBtVector3) Rotate(arg2 BtVector3, arg3 float32) BtVector3 {
	return _swig_wrap_btVector3_rotate(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btVector3_angle(SwigcptrBtVector3, uintptr) float32

func (arg1 SwigcptrBtVector3) Angle(arg2 BtVector3) float32 {
	return _swig_wrap_btVector3_angle(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_absolute(SwigcptrBtVector3) SwigcptrBtVector3

func (arg1 SwigcptrBtVector3) Absolute() BtVector3 {
	return _swig_wrap_btVector3_absolute(arg1)
}

func _swig_wrap_btVector3_cross(SwigcptrBtVector3, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtVector3) Cross(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btVector3_cross(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_triple(SwigcptrBtVector3, uintptr, uintptr) float32

func (arg1 SwigcptrBtVector3) Triple(arg2 BtVector3, arg3 BtVector3) float32 {
	return _swig_wrap_btVector3_triple(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btVector3_minAxis(SwigcptrBtVector3) int

func (arg1 SwigcptrBtVector3) MinAxis() int {
	return _swig_wrap_btVector3_minAxis(arg1)
}

func _swig_wrap_btVector3_maxAxis(SwigcptrBtVector3) int

func (arg1 SwigcptrBtVector3) MaxAxis() int {
	return _swig_wrap_btVector3_maxAxis(arg1)
}

func _swig_wrap_btVector3_furthestAxis(SwigcptrBtVector3) int

func (arg1 SwigcptrBtVector3) FurthestAxis() int {
	return _swig_wrap_btVector3_furthestAxis(arg1)
}

func _swig_wrap_btVector3_closestAxis(SwigcptrBtVector3) int

func (arg1 SwigcptrBtVector3) ClosestAxis() int {
	return _swig_wrap_btVector3_closestAxis(arg1)
}

func _swig_wrap_btVector3_setInterpolate3(SwigcptrBtVector3, uintptr, uintptr, float32)

func (arg1 SwigcptrBtVector3) SetInterpolate3(arg2 BtVector3, arg3 BtVector3, arg4 float32) {
	_swig_wrap_btVector3_setInterpolate3(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btVector3_lerp(SwigcptrBtVector3, uintptr, float32) SwigcptrBtVector3

func (arg1 SwigcptrBtVector3) Lerp(arg2 BtVector3, arg3 float32) BtVector3 {
	return _swig_wrap_btVector3_lerp(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btVector3_getX(SwigcptrBtVector3) float32

func (arg1 SwigcptrBtVector3) GetX() float32 {
	return _swig_wrap_btVector3_getX(arg1)
}

func _swig_wrap_btVector3_getY(SwigcptrBtVector3) float32

func (arg1 SwigcptrBtVector3) GetY() float32 {
	return _swig_wrap_btVector3_getY(arg1)
}

func _swig_wrap_btVector3_getZ(SwigcptrBtVector3) float32

func (arg1 SwigcptrBtVector3) GetZ() float32 {
	return _swig_wrap_btVector3_getZ(arg1)
}

func _swig_wrap_btVector3_setX(SwigcptrBtVector3, float32)

func (arg1 SwigcptrBtVector3) SetX(arg2 float32) {
	_swig_wrap_btVector3_setX(arg1, arg2)
}

func _swig_wrap_btVector3_setY(SwigcptrBtVector3, float32)

func (arg1 SwigcptrBtVector3) SetY(arg2 float32) {
	_swig_wrap_btVector3_setY(arg1, arg2)
}

func _swig_wrap_btVector3_setZ(SwigcptrBtVector3, float32)

func (arg1 SwigcptrBtVector3) SetZ(arg2 float32) {
	_swig_wrap_btVector3_setZ(arg1, arg2)
}

func _swig_wrap_btVector3_setW(SwigcptrBtVector3, float32)

func (arg1 SwigcptrBtVector3) SetW(arg2 float32) {
	_swig_wrap_btVector3_setW(arg1, arg2)
}

func _swig_wrap_btVector3_x(SwigcptrBtVector3) float32

func (arg1 SwigcptrBtVector3) X() float32 {
	return _swig_wrap_btVector3_x(arg1)
}

func _swig_wrap_btVector3_y(SwigcptrBtVector3) float32

func (arg1 SwigcptrBtVector3) Y() float32 {
	return _swig_wrap_btVector3_y(arg1)
}

func _swig_wrap_btVector3_z(SwigcptrBtVector3) float32

func (arg1 SwigcptrBtVector3) Z() float32 {
	return _swig_wrap_btVector3_z(arg1)
}

func _swig_wrap_btVector3_w(SwigcptrBtVector3) float32

func (arg1 SwigcptrBtVector3) W() float32 {
	return _swig_wrap_btVector3_w(arg1)
}

func _swig_wrap_btVector3_setMax(SwigcptrBtVector3, uintptr)

func (arg1 SwigcptrBtVector3) SetMax(arg2 BtVector3) {
	_swig_wrap_btVector3_setMax(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_setMin(SwigcptrBtVector3, uintptr)

func (arg1 SwigcptrBtVector3) SetMin(arg2 BtVector3) {
	_swig_wrap_btVector3_setMin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_setValue(SwigcptrBtVector3, float32, float32, float32)

func (arg1 SwigcptrBtVector3) SetValue(arg2 float32, arg3 float32, arg4 float32) {
	_swig_wrap_btVector3_setValue(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btVector3_getSkewSymmetricMatrix(SwigcptrBtVector3, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtVector3) GetSkewSymmetricMatrix(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btVector3_getSkewSymmetricMatrix(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btVector3_setZero(SwigcptrBtVector3)

func (arg1 SwigcptrBtVector3) SetZero() {
	_swig_wrap_btVector3_setZero(arg1)
}

func _swig_wrap_btVector3_isZero(SwigcptrBtVector3) bool

func (arg1 SwigcptrBtVector3) IsZero() bool {
	return _swig_wrap_btVector3_isZero(arg1)
}

func _swig_wrap_btVector3_fuzzyZero(SwigcptrBtVector3) bool

func (arg1 SwigcptrBtVector3) FuzzyZero() bool {
	return _swig_wrap_btVector3_fuzzyZero(arg1)
}

func _swig_wrap_btVector3_serialize(SwigcptrBtVector3, uintptr)

func (arg1 SwigcptrBtVector3) Serialize(arg2 BtVector3FloatData) {
	_swig_wrap_btVector3_serialize(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_deSerialize(SwigcptrBtVector3, uintptr)

func (arg1 SwigcptrBtVector3) DeSerialize(arg2 BtVector3FloatData) {
	_swig_wrap_btVector3_deSerialize(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_serializeFloat(SwigcptrBtVector3, uintptr)

func (arg1 SwigcptrBtVector3) SerializeFloat(arg2 BtVector3FloatData) {
	_swig_wrap_btVector3_serializeFloat(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_deSerializeFloat(SwigcptrBtVector3, uintptr)

func (arg1 SwigcptrBtVector3) DeSerializeFloat(arg2 BtVector3FloatData) {
	_swig_wrap_btVector3_deSerializeFloat(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_serializeDouble(SwigcptrBtVector3, uintptr)

func (arg1 SwigcptrBtVector3) SerializeDouble(arg2 BtVector3DoubleData) {
	_swig_wrap_btVector3_serializeDouble(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_deSerializeDouble(SwigcptrBtVector3, uintptr)

func (arg1 SwigcptrBtVector3) DeSerializeDouble(arg2 BtVector3DoubleData) {
	_swig_wrap_btVector3_deSerializeDouble(arg1, arg2.Swigcptr())
}

func _swig_wrap_btVector3_maxDot(SwigcptrBtVector3, uintptr, int64, *float32) int64

func (arg1 SwigcptrBtVector3) MaxDot(arg2 BtVector3, arg3 int64, arg4 *float32) int64 {
	return _swig_wrap_btVector3_maxDot(arg1, arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btVector3_minDot(SwigcptrBtVector3, uintptr, int64, *float32) int64

func (arg1 SwigcptrBtVector3) MinDot(arg2 BtVector3, arg3 int64, arg4 *float32) int64 {
	return _swig_wrap_btVector3_minDot(arg1, arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btVector3_dot3(SwigcptrBtVector3, uintptr, uintptr, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtVector3) Dot3(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3) BtVector3 {
	return _swig_wrap_btVector3_dot3(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_delete_btVector3(uintptr)

func DeleteBtVector3(arg1 BtVector3) {
	_swig_wrap_delete_btVector3(arg1.Swigcptr())
}

type BtVector3 interface {
	Swigcptr() uintptr
	SwigIsBtVector3()
	SetM_floats(arg2 *float32)
	GetM_floats() *float32
	Dot(arg2 BtVector3) float32
	Length2() float32
	Length() float32
	Norm() float32
	Distance2(arg2 BtVector3) float32
	Distance(arg2 BtVector3) float32
	SafeNormalize() BtVector3
	Normalize() BtVector3
	Normalized() BtVector3
	Rotate(arg2 BtVector3, arg3 float32) BtVector3
	Angle(arg2 BtVector3) float32
	Absolute() BtVector3
	Cross(arg2 BtVector3) BtVector3
	Triple(arg2 BtVector3, arg3 BtVector3) float32
	MinAxis() int
	MaxAxis() int
	FurthestAxis() int
	ClosestAxis() int
	SetInterpolate3(arg2 BtVector3, arg3 BtVector3, arg4 float32)
	Lerp(arg2 BtVector3, arg3 float32) BtVector3
	GetX() float32
	GetY() float32
	GetZ() float32
	SetX(arg2 float32)
	SetY(arg2 float32)
	SetZ(arg2 float32)
	SetW(arg2 float32)
	X() float32
	Y() float32
	Z() float32
	W() float32
	SetMax(arg2 BtVector3)
	SetMin(arg2 BtVector3)
	SetValue(arg2 float32, arg3 float32, arg4 float32)
	GetSkewSymmetricMatrix(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3)
	SetZero()
	IsZero() bool
	FuzzyZero() bool
	Serialize(arg2 BtVector3FloatData)
	DeSerialize(arg2 BtVector3FloatData)
	SerializeFloat(arg2 BtVector3FloatData)
	DeSerializeFloat(arg2 BtVector3FloatData)
	SerializeDouble(arg2 BtVector3DoubleData)
	DeSerializeDouble(arg2 BtVector3DoubleData)
	MaxDot(arg2 BtVector3, arg3 int64, arg4 *float32) int64
	MinDot(arg2 BtVector3, arg3 int64, arg4 *float32) int64
	Dot3(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3) BtVector3
}

func _swig_wrap_btDot(uintptr, uintptr) float32

func BtDot(arg1 BtVector3, arg2 BtVector3) float32 {
	return _swig_wrap_btDot(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btDistance2(uintptr, uintptr) float32

func BtDistance2(arg1 BtVector3, arg2 BtVector3) float32 {
	return _swig_wrap_btDistance2(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btDistance(uintptr, uintptr) float32

func BtDistance(arg1 BtVector3, arg2 BtVector3) float32 {
	return _swig_wrap_btDistance(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btAngle__SWIG_0(uintptr, uintptr) float32

func BtAngle__SWIG_0(arg1 BtVector3, arg2 BtVector3) float32 {
	return _swig_wrap_btAngle__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btCross(uintptr, uintptr) SwigcptrBtVector3

func BtCross(arg1 BtVector3, arg2 BtVector3) BtVector3 {
	return _swig_wrap_btCross(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btTriple(uintptr, uintptr, uintptr) float32

func BtTriple(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3) float32 {
	return _swig_wrap_btTriple(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_lerp(uintptr, uintptr, float32) SwigcptrBtVector3

func Lerp(arg1 BtVector3, arg2 BtVector3, arg3 float32) BtVector3 {
	return _swig_wrap_lerp(arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

type SwigcptrBtVector4 uintptr

func (p SwigcptrBtVector4) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtVector4) SwigIsBtVector4() {
}

func _swig_wrap_new_btVector4__SWIG_0() SwigcptrBtVector4

func NewBtVector4__SWIG_0() BtVector4 {
	return _swig_wrap_new_btVector4__SWIG_0()
}

func _swig_wrap_new_btVector4__SWIG_1(float32, float32, float32, float32) SwigcptrBtVector4

func NewBtVector4__SWIG_1(arg1 float32, arg2 float32, arg3 float32, arg4 float32) BtVector4 {
	return _swig_wrap_new_btVector4__SWIG_1(arg1, arg2, arg3, arg4)
}

func NewBtVector4(a ...interface{}) BtVector4 {
	argc := len(a)
	if argc == 0 {
		return NewBtVector4__SWIG_0()
	}
	if argc == 4 {
		return NewBtVector4__SWIG_1(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btVector4_absolute4(SwigcptrBtVector4) SwigcptrBtVector4

func (arg1 SwigcptrBtVector4) Absolute4() BtVector4 {
	return _swig_wrap_btVector4_absolute4(arg1)
}

func _swig_wrap_btVector4_getW(SwigcptrBtVector4) float32

func (arg1 SwigcptrBtVector4) GetW() float32 {
	return _swig_wrap_btVector4_getW(arg1)
}

func _swig_wrap_btVector4_maxAxis4(SwigcptrBtVector4) int

func (arg1 SwigcptrBtVector4) MaxAxis4() int {
	return _swig_wrap_btVector4_maxAxis4(arg1)
}

func _swig_wrap_btVector4_minAxis4(SwigcptrBtVector4) int

func (arg1 SwigcptrBtVector4) MinAxis4() int {
	return _swig_wrap_btVector4_minAxis4(arg1)
}

func _swig_wrap_btVector4_closestAxis4(SwigcptrBtVector4) int

func (arg1 SwigcptrBtVector4) ClosestAxis4() int {
	return _swig_wrap_btVector4_closestAxis4(arg1)
}

func _swig_wrap_btVector4_setValue(SwigcptrBtVector4, float32, float32, float32, float32)

func (arg1 SwigcptrBtVector4) SetValue(arg2 float32, arg3 float32, arg4 float32, arg5 float32) {
	_swig_wrap_btVector4_setValue(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_delete_btVector4(uintptr)

func DeleteBtVector4(arg1 BtVector4) {
	_swig_wrap_delete_btVector4(arg1.Swigcptr())
}

func _swig_wrap_SetbtVector4_M_floats(SwigcptrBtVector4, *float32)

func (_swig_base SwigcptrBtVector4) SetM_floats(arg1 *float32) {
	_swig_wrap_SetbtVector4_M_floats(_swig_base, arg1)
}

func _swig_wrap_GetbtVector4_M_floats(SwigcptrBtVector4) *float32

func (_swig_base SwigcptrBtVector4) GetM_floats() *float32 {
	return _swig_wrap_GetbtVector4_M_floats(_swig_base)
}

func _swig_wrap_btVector4_dot(SwigcptrBtVector4, uintptr) float32

func (_swig_base SwigcptrBtVector4) Dot(arg1 BtVector3) float32 {
	return _swig_wrap_btVector4_dot(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_length2(SwigcptrBtVector4) float32

func (_swig_base SwigcptrBtVector4) Length2() float32 {
	return _swig_wrap_btVector4_length2(_swig_base)
}

func _swig_wrap_btVector4_length(SwigcptrBtVector4) float32

func (_swig_base SwigcptrBtVector4) Length() float32 {
	return _swig_wrap_btVector4_length(_swig_base)
}

func _swig_wrap_btVector4_norm(SwigcptrBtVector4) float32

func (_swig_base SwigcptrBtVector4) Norm() float32 {
	return _swig_wrap_btVector4_norm(_swig_base)
}

func _swig_wrap_btVector4_distance2(SwigcptrBtVector4, uintptr) float32

func (_swig_base SwigcptrBtVector4) Distance2(arg1 BtVector3) float32 {
	return _swig_wrap_btVector4_distance2(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_distance(SwigcptrBtVector4, uintptr) float32

func (_swig_base SwigcptrBtVector4) Distance(arg1 BtVector3) float32 {
	return _swig_wrap_btVector4_distance(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_safeNormalize(SwigcptrBtVector4) SwigcptrBtVector3

func (_swig_base SwigcptrBtVector4) SafeNormalize() BtVector3 {
	return _swig_wrap_btVector4_safeNormalize(_swig_base)
}

func _swig_wrap_btVector4_normalize(SwigcptrBtVector4) SwigcptrBtVector3

func (_swig_base SwigcptrBtVector4) Normalize() BtVector3 {
	return _swig_wrap_btVector4_normalize(_swig_base)
}

func _swig_wrap_btVector4_normalized(SwigcptrBtVector4) SwigcptrBtVector3

func (_swig_base SwigcptrBtVector4) Normalized() BtVector3 {
	return _swig_wrap_btVector4_normalized(_swig_base)
}

func _swig_wrap_btVector4_rotate(SwigcptrBtVector4, uintptr, float32) SwigcptrBtVector3

func (_swig_base SwigcptrBtVector4) Rotate(arg1 BtVector3, arg2 float32) BtVector3 {
	return _swig_wrap_btVector4_rotate(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btVector4_angle(SwigcptrBtVector4, uintptr) float32

func (_swig_base SwigcptrBtVector4) Angle(arg1 BtVector3) float32 {
	return _swig_wrap_btVector4_angle(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_absolute(SwigcptrBtVector4) SwigcptrBtVector3

func (_swig_base SwigcptrBtVector4) Absolute() BtVector3 {
	return _swig_wrap_btVector4_absolute(_swig_base)
}

func _swig_wrap_btVector4_cross(SwigcptrBtVector4, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtVector4) Cross(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btVector4_cross(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_triple(SwigcptrBtVector4, uintptr, uintptr) float32

func (_swig_base SwigcptrBtVector4) Triple(arg1 BtVector3, arg2 BtVector3) float32 {
	return _swig_wrap_btVector4_triple(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btVector4_minAxis(SwigcptrBtVector4) int

func (_swig_base SwigcptrBtVector4) MinAxis() int {
	return _swig_wrap_btVector4_minAxis(_swig_base)
}

func _swig_wrap_btVector4_maxAxis(SwigcptrBtVector4) int

func (_swig_base SwigcptrBtVector4) MaxAxis() int {
	return _swig_wrap_btVector4_maxAxis(_swig_base)
}

func _swig_wrap_btVector4_furthestAxis(SwigcptrBtVector4) int

func (_swig_base SwigcptrBtVector4) FurthestAxis() int {
	return _swig_wrap_btVector4_furthestAxis(_swig_base)
}

func _swig_wrap_btVector4_closestAxis(SwigcptrBtVector4) int

func (_swig_base SwigcptrBtVector4) ClosestAxis() int {
	return _swig_wrap_btVector4_closestAxis(_swig_base)
}

func _swig_wrap_btVector4_setInterpolate3(SwigcptrBtVector4, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtVector4) SetInterpolate3(arg1 BtVector3, arg2 BtVector3, arg3 float32) {
	_swig_wrap_btVector4_setInterpolate3(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btVector4_lerp(SwigcptrBtVector4, uintptr, float32) SwigcptrBtVector3

func (_swig_base SwigcptrBtVector4) Lerp(arg1 BtVector3, arg2 float32) BtVector3 {
	return _swig_wrap_btVector4_lerp(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btVector4_getX(SwigcptrBtVector4) float32

func (_swig_base SwigcptrBtVector4) GetX() float32 {
	return _swig_wrap_btVector4_getX(_swig_base)
}

func _swig_wrap_btVector4_getY(SwigcptrBtVector4) float32

func (_swig_base SwigcptrBtVector4) GetY() float32 {
	return _swig_wrap_btVector4_getY(_swig_base)
}

func _swig_wrap_btVector4_getZ(SwigcptrBtVector4) float32

func (_swig_base SwigcptrBtVector4) GetZ() float32 {
	return _swig_wrap_btVector4_getZ(_swig_base)
}

func _swig_wrap_btVector4_setX(SwigcptrBtVector4, float32)

func (_swig_base SwigcptrBtVector4) SetX(arg1 float32) {
	_swig_wrap_btVector4_setX(_swig_base, arg1)
}

func _swig_wrap_btVector4_setY(SwigcptrBtVector4, float32)

func (_swig_base SwigcptrBtVector4) SetY(arg1 float32) {
	_swig_wrap_btVector4_setY(_swig_base, arg1)
}

func _swig_wrap_btVector4_setZ(SwigcptrBtVector4, float32)

func (_swig_base SwigcptrBtVector4) SetZ(arg1 float32) {
	_swig_wrap_btVector4_setZ(_swig_base, arg1)
}

func _swig_wrap_btVector4_setW(SwigcptrBtVector4, float32)

func (_swig_base SwigcptrBtVector4) SetW(arg1 float32) {
	_swig_wrap_btVector4_setW(_swig_base, arg1)
}

func _swig_wrap_btVector4_x(SwigcptrBtVector4) float32

func (_swig_base SwigcptrBtVector4) X() float32 {
	return _swig_wrap_btVector4_x(_swig_base)
}

func _swig_wrap_btVector4_y(SwigcptrBtVector4) float32

func (_swig_base SwigcptrBtVector4) Y() float32 {
	return _swig_wrap_btVector4_y(_swig_base)
}

func _swig_wrap_btVector4_z(SwigcptrBtVector4) float32

func (_swig_base SwigcptrBtVector4) Z() float32 {
	return _swig_wrap_btVector4_z(_swig_base)
}

func _swig_wrap_btVector4_w(SwigcptrBtVector4) float32

func (_swig_base SwigcptrBtVector4) W() float32 {
	return _swig_wrap_btVector4_w(_swig_base)
}

func _swig_wrap_btVector4_setMax(SwigcptrBtVector4, uintptr)

func (_swig_base SwigcptrBtVector4) SetMax(arg1 BtVector3) {
	_swig_wrap_btVector4_setMax(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_setMin(SwigcptrBtVector4, uintptr)

func (_swig_base SwigcptrBtVector4) SetMin(arg1 BtVector3) {
	_swig_wrap_btVector4_setMin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_getSkewSymmetricMatrix(SwigcptrBtVector4, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtVector4) GetSkewSymmetricMatrix(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btVector4_getSkewSymmetricMatrix(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btVector4_setZero(SwigcptrBtVector4)

func (_swig_base SwigcptrBtVector4) SetZero() {
	_swig_wrap_btVector4_setZero(_swig_base)
}

func _swig_wrap_btVector4_isZero(SwigcptrBtVector4) bool

func (_swig_base SwigcptrBtVector4) IsZero() bool {
	return _swig_wrap_btVector4_isZero(_swig_base)
}

func _swig_wrap_btVector4_fuzzyZero(SwigcptrBtVector4) bool

func (_swig_base SwigcptrBtVector4) FuzzyZero() bool {
	return _swig_wrap_btVector4_fuzzyZero(_swig_base)
}

func _swig_wrap_btVector4_serialize(SwigcptrBtVector4, uintptr)

func (_swig_base SwigcptrBtVector4) Serialize(arg1 BtVector3FloatData) {
	_swig_wrap_btVector4_serialize(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_deSerialize(SwigcptrBtVector4, uintptr)

func (_swig_base SwigcptrBtVector4) DeSerialize(arg1 BtVector3FloatData) {
	_swig_wrap_btVector4_deSerialize(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_serializeFloat(SwigcptrBtVector4, uintptr)

func (_swig_base SwigcptrBtVector4) SerializeFloat(arg1 BtVector3FloatData) {
	_swig_wrap_btVector4_serializeFloat(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_deSerializeFloat(SwigcptrBtVector4, uintptr)

func (_swig_base SwigcptrBtVector4) DeSerializeFloat(arg1 BtVector3FloatData) {
	_swig_wrap_btVector4_deSerializeFloat(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_serializeDouble(SwigcptrBtVector4, uintptr)

func (_swig_base SwigcptrBtVector4) SerializeDouble(arg1 BtVector3DoubleData) {
	_swig_wrap_btVector4_serializeDouble(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_deSerializeDouble(SwigcptrBtVector4, uintptr)

func (_swig_base SwigcptrBtVector4) DeSerializeDouble(arg1 BtVector3DoubleData) {
	_swig_wrap_btVector4_deSerializeDouble(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btVector4_maxDot(SwigcptrBtVector4, uintptr, int64, *float32) int64

func (_swig_base SwigcptrBtVector4) MaxDot(arg1 BtVector3, arg2 int64, arg3 *float32) int64 {
	return _swig_wrap_btVector4_maxDot(_swig_base, arg1.Swigcptr(), arg2, arg3)
}

func _swig_wrap_btVector4_minDot(SwigcptrBtVector4, uintptr, int64, *float32) int64

func (_swig_base SwigcptrBtVector4) MinDot(arg1 BtVector3, arg2 int64, arg3 *float32) int64 {
	return _swig_wrap_btVector4_minDot(_swig_base, arg1.Swigcptr(), arg2, arg3)
}

func _swig_wrap_btVector4_dot3(SwigcptrBtVector4, uintptr, uintptr, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtVector4) Dot3(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3) BtVector3 {
	return _swig_wrap_btVector4_dot3(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func (p SwigcptrBtVector4) SwigIsBtVector3() {
}

func (p SwigcptrBtVector4) SwigGetBtVector3() BtVector3 {
	return SwigcptrBtVector3(p.Swigcptr())
}

type BtVector4 interface {
	Swigcptr() uintptr
	SwigIsBtVector4()
	Absolute4() BtVector4
	GetW() float32
	MaxAxis4() int
	MinAxis4() int
	ClosestAxis4() int
	SetValue(arg2 float32, arg3 float32, arg4 float32, arg5 float32)
	SetM_floats(arg1 *float32)
	GetM_floats() *float32
	Dot(arg1 BtVector3) float32
	Length2() float32
	Length() float32
	Norm() float32
	Distance2(arg1 BtVector3) float32
	Distance(arg1 BtVector3) float32
	SafeNormalize() BtVector3
	Normalize() BtVector3
	Normalized() BtVector3
	Rotate(arg1 BtVector3, arg2 float32) BtVector3
	Angle(arg1 BtVector3) float32
	Absolute() BtVector3
	Cross(arg1 BtVector3) BtVector3
	Triple(arg1 BtVector3, arg2 BtVector3) float32
	MinAxis() int
	MaxAxis() int
	FurthestAxis() int
	ClosestAxis() int
	SetInterpolate3(arg1 BtVector3, arg2 BtVector3, arg3 float32)
	Lerp(arg1 BtVector3, arg2 float32) BtVector3
	GetX() float32
	GetY() float32
	GetZ() float32
	SetX(arg1 float32)
	SetY(arg1 float32)
	SetZ(arg1 float32)
	SetW(arg1 float32)
	X() float32
	Y() float32
	Z() float32
	W() float32
	SetMax(arg1 BtVector3)
	SetMin(arg1 BtVector3)
	GetSkewSymmetricMatrix(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3)
	SetZero()
	IsZero() bool
	FuzzyZero() bool
	Serialize(arg1 BtVector3FloatData)
	DeSerialize(arg1 BtVector3FloatData)
	SerializeFloat(arg1 BtVector3FloatData)
	DeSerializeFloat(arg1 BtVector3FloatData)
	SerializeDouble(arg1 BtVector3DoubleData)
	DeSerializeDouble(arg1 BtVector3DoubleData)
	MaxDot(arg1 BtVector3, arg2 int64, arg3 *float32) int64
	MinDot(arg1 BtVector3, arg2 int64, arg3 *float32) int64
	Dot3(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3) BtVector3
	SwigIsBtVector3()
	SwigGetBtVector3() BtVector3
}

func _swig_wrap_btSwapScalarEndian(float32, *float32)

func BtSwapScalarEndian(arg1 float32, arg2 *float32) {
	_swig_wrap_btSwapScalarEndian(arg1, arg2)
}

func _swig_wrap_btSwapVector3Endian(uintptr, uintptr)

func BtSwapVector3Endian(arg1 BtVector3, arg2 BtVector3) {
	_swig_wrap_btSwapVector3Endian(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btUnSwapVector3Endian(uintptr)

func BtUnSwapVector3Endian(arg1 BtVector3) {
	_swig_wrap_btUnSwapVector3Endian(arg1.Swigcptr())
}

type SwigcptrBtVector3FloatData uintptr

func (p SwigcptrBtVector3FloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtVector3FloatData) SwigIsBtVector3FloatData() {
}

func _swig_wrap_btVector3FloatData_m_floats_set(SwigcptrBtVector3FloatData, *float32)

func (arg1 SwigcptrBtVector3FloatData) SetM_floats(arg2 *float32) {
	_swig_wrap_btVector3FloatData_m_floats_set(arg1, arg2)
}

func _swig_wrap_btVector3FloatData_m_floats_get(SwigcptrBtVector3FloatData) *float32

func (arg1 SwigcptrBtVector3FloatData) GetM_floats() *float32 {
	return _swig_wrap_btVector3FloatData_m_floats_get(arg1)
}

func _swig_wrap_new_btVector3FloatData() SwigcptrBtVector3FloatData

func NewBtVector3FloatData() BtVector3FloatData {
	return _swig_wrap_new_btVector3FloatData()
}

func _swig_wrap_delete_btVector3FloatData(uintptr)

func DeleteBtVector3FloatData(arg1 BtVector3FloatData) {
	_swig_wrap_delete_btVector3FloatData(arg1.Swigcptr())
}

type BtVector3FloatData interface {
	Swigcptr() uintptr
	SwigIsBtVector3FloatData()
	SetM_floats(arg2 *float32)
	GetM_floats() *float32
}

type SwigcptrBtVector3DoubleData uintptr

func (p SwigcptrBtVector3DoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtVector3DoubleData) SwigIsBtVector3DoubleData() {
}

func _swig_wrap_btVector3DoubleData_m_floats_set(SwigcptrBtVector3DoubleData, *float64)

func (arg1 SwigcptrBtVector3DoubleData) SetM_floats(arg2 *float64) {
	_swig_wrap_btVector3DoubleData_m_floats_set(arg1, arg2)
}

func _swig_wrap_btVector3DoubleData_m_floats_get(SwigcptrBtVector3DoubleData) *float64

func (arg1 SwigcptrBtVector3DoubleData) GetM_floats() *float64 {
	return _swig_wrap_btVector3DoubleData_m_floats_get(arg1)
}

func _swig_wrap_new_btVector3DoubleData() SwigcptrBtVector3DoubleData

func NewBtVector3DoubleData() BtVector3DoubleData {
	return _swig_wrap_new_btVector3DoubleData()
}

func _swig_wrap_delete_btVector3DoubleData(uintptr)

func DeleteBtVector3DoubleData(arg1 BtVector3DoubleData) {
	_swig_wrap_delete_btVector3DoubleData(arg1.Swigcptr())
}

type BtVector3DoubleData interface {
	Swigcptr() uintptr
	SwigIsBtVector3DoubleData()
	SetM_floats(arg2 *float64)
	GetM_floats() *float64
}

type SwigcptrBtQuadWord uintptr

func (p SwigcptrBtQuadWord) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtQuadWord) SwigIsBtQuadWord() {
}

func _swig_wrap_btQuadWord_getX(SwigcptrBtQuadWord) float32

func (arg1 SwigcptrBtQuadWord) GetX() float32 {
	return _swig_wrap_btQuadWord_getX(arg1)
}

func _swig_wrap_btQuadWord_getY(SwigcptrBtQuadWord) float32

func (arg1 SwigcptrBtQuadWord) GetY() float32 {
	return _swig_wrap_btQuadWord_getY(arg1)
}

func _swig_wrap_btQuadWord_getZ(SwigcptrBtQuadWord) float32

func (arg1 SwigcptrBtQuadWord) GetZ() float32 {
	return _swig_wrap_btQuadWord_getZ(arg1)
}

func _swig_wrap_btQuadWord_setX(SwigcptrBtQuadWord, float32)

func (arg1 SwigcptrBtQuadWord) SetX(arg2 float32) {
	_swig_wrap_btQuadWord_setX(arg1, arg2)
}

func _swig_wrap_btQuadWord_setY(SwigcptrBtQuadWord, float32)

func (arg1 SwigcptrBtQuadWord) SetY(arg2 float32) {
	_swig_wrap_btQuadWord_setY(arg1, arg2)
}

func _swig_wrap_btQuadWord_setZ(SwigcptrBtQuadWord, float32)

func (arg1 SwigcptrBtQuadWord) SetZ(arg2 float32) {
	_swig_wrap_btQuadWord_setZ(arg1, arg2)
}

func _swig_wrap_btQuadWord_setW(SwigcptrBtQuadWord, float32)

func (arg1 SwigcptrBtQuadWord) SetW(arg2 float32) {
	_swig_wrap_btQuadWord_setW(arg1, arg2)
}

func _swig_wrap_btQuadWord_x(SwigcptrBtQuadWord) float32

func (arg1 SwigcptrBtQuadWord) X() float32 {
	return _swig_wrap_btQuadWord_x(arg1)
}

func _swig_wrap_btQuadWord_y(SwigcptrBtQuadWord) float32

func (arg1 SwigcptrBtQuadWord) Y() float32 {
	return _swig_wrap_btQuadWord_y(arg1)
}

func _swig_wrap_btQuadWord_z(SwigcptrBtQuadWord) float32

func (arg1 SwigcptrBtQuadWord) Z() float32 {
	return _swig_wrap_btQuadWord_z(arg1)
}

func _swig_wrap_btQuadWord_w(SwigcptrBtQuadWord) float32

func (arg1 SwigcptrBtQuadWord) W() float32 {
	return _swig_wrap_btQuadWord_w(arg1)
}

func _swig_wrap_btQuadWord_setValue__SWIG_0(SwigcptrBtQuadWord, float32, float32, float32)

func (arg1 SwigcptrBtQuadWord) SetValue__SWIG_0(arg2 float32, arg3 float32, arg4 float32) {
	_swig_wrap_btQuadWord_setValue__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btQuadWord_setValue__SWIG_1(SwigcptrBtQuadWord, float32, float32, float32, float32)

func (arg1 SwigcptrBtQuadWord) SetValue__SWIG_1(arg2 float32, arg3 float32, arg4 float32, arg5 float32) {
	_swig_wrap_btQuadWord_setValue__SWIG_1(arg1, arg2, arg3, arg4, arg5)
}

func (p SwigcptrBtQuadWord) SetValue(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.SetValue__SWIG_0(a[0].(float32), a[1].(float32), a[2].(float32))
		return
	}
	if argc == 4 {
		p.SetValue__SWIG_1(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_new_btQuadWord__SWIG_0() SwigcptrBtQuadWord

func NewBtQuadWord__SWIG_0() BtQuadWord {
	return _swig_wrap_new_btQuadWord__SWIG_0()
}

func _swig_wrap_new_btQuadWord__SWIG_1(float32, float32, float32) SwigcptrBtQuadWord

func NewBtQuadWord__SWIG_1(arg1 float32, arg2 float32, arg3 float32) BtQuadWord {
	return _swig_wrap_new_btQuadWord__SWIG_1(arg1, arg2, arg3)
}

func _swig_wrap_new_btQuadWord__SWIG_2(float32, float32, float32, float32) SwigcptrBtQuadWord

func NewBtQuadWord__SWIG_2(arg1 float32, arg2 float32, arg3 float32, arg4 float32) BtQuadWord {
	return _swig_wrap_new_btQuadWord__SWIG_2(arg1, arg2, arg3, arg4)
}

func NewBtQuadWord(a ...interface{}) BtQuadWord {
	argc := len(a)
	if argc == 0 {
		return NewBtQuadWord__SWIG_0()
	}
	if argc == 3 {
		return NewBtQuadWord__SWIG_1(a[0].(float32), a[1].(float32), a[2].(float32))
	}
	if argc == 4 {
		return NewBtQuadWord__SWIG_2(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btQuadWord_setMax(SwigcptrBtQuadWord, uintptr)

func (arg1 SwigcptrBtQuadWord) SetMax(arg2 BtQuadWord) {
	_swig_wrap_btQuadWord_setMax(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuadWord_setMin(SwigcptrBtQuadWord, uintptr)

func (arg1 SwigcptrBtQuadWord) SetMin(arg2 BtQuadWord) {
	_swig_wrap_btQuadWord_setMin(arg1, arg2.Swigcptr())
}

func _swig_wrap_delete_btQuadWord(uintptr)

func DeleteBtQuadWord(arg1 BtQuadWord) {
	_swig_wrap_delete_btQuadWord(arg1.Swigcptr())
}

type BtQuadWord interface {
	Swigcptr() uintptr
	SwigIsBtQuadWord()
	GetX() float32
	GetY() float32
	GetZ() float32
	SetX(arg2 float32)
	SetY(arg2 float32)
	SetZ(arg2 float32)
	SetW(arg2 float32)
	X() float32
	Y() float32
	Z() float32
	W() float32
	SetValue(a ...interface{})
	SetMax(arg2 BtQuadWord)
	SetMin(arg2 BtQuadWord)
}

type SwigcptrBtQuaternion uintptr

func (p SwigcptrBtQuaternion) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtQuaternion) SwigIsBtQuaternion() {
}

func _swig_wrap_new_btQuaternion__SWIG_0() SwigcptrBtQuaternion

func NewBtQuaternion__SWIG_0() BtQuaternion {
	return _swig_wrap_new_btQuaternion__SWIG_0()
}

func _swig_wrap_new_btQuaternion__SWIG_1(float32, float32, float32, float32) SwigcptrBtQuaternion

func NewBtQuaternion__SWIG_1(arg1 float32, arg2 float32, arg3 float32, arg4 float32) BtQuaternion {
	return _swig_wrap_new_btQuaternion__SWIG_1(arg1, arg2, arg3, arg4)
}

func _swig_wrap_new_btQuaternion__SWIG_2(uintptr, float32) SwigcptrBtQuaternion

func NewBtQuaternion__SWIG_2(arg1 BtVector3, arg2 float32) BtQuaternion {
	return _swig_wrap_new_btQuaternion__SWIG_2(arg1.Swigcptr(), arg2)
}

func _swig_wrap_new_btQuaternion__SWIG_3(float32, float32, float32) SwigcptrBtQuaternion

func NewBtQuaternion__SWIG_3(arg1 float32, arg2 float32, arg3 float32) BtQuaternion {
	return _swig_wrap_new_btQuaternion__SWIG_3(arg1, arg2, arg3)
}

func NewBtQuaternion(a ...interface{}) BtQuaternion {
	argc := len(a)
	if argc == 0 {
		return NewBtQuaternion__SWIG_0()
	}
	if argc == 2 {
		return NewBtQuaternion__SWIG_2(a[0].(BtVector3), a[1].(float32))
	}
	if argc == 3 {
		return NewBtQuaternion__SWIG_3(a[0].(float32), a[1].(float32), a[2].(float32))
	}
	if argc == 4 {
		return NewBtQuaternion__SWIG_1(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btQuaternion_setRotation(SwigcptrBtQuaternion, uintptr, float32)

func (arg1 SwigcptrBtQuaternion) SetRotation(arg2 BtVector3, arg3 float32) {
	_swig_wrap_btQuaternion_setRotation(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btQuaternion_setEuler(SwigcptrBtQuaternion, float32, float32, float32)

func (arg1 SwigcptrBtQuaternion) SetEuler(arg2 float32, arg3 float32, arg4 float32) {
	_swig_wrap_btQuaternion_setEuler(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btQuaternion_setEulerZYX(SwigcptrBtQuaternion, float32, float32, float32)

func (arg1 SwigcptrBtQuaternion) SetEulerZYX(arg2 float32, arg3 float32, arg4 float32) {
	_swig_wrap_btQuaternion_setEulerZYX(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btQuaternion_dot(SwigcptrBtQuaternion, uintptr) float32

func (arg1 SwigcptrBtQuaternion) Dot(arg2 BtQuaternion) float32 {
	return _swig_wrap_btQuaternion_dot(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuaternion_length2(SwigcptrBtQuaternion) float32

func (arg1 SwigcptrBtQuaternion) Length2() float32 {
	return _swig_wrap_btQuaternion_length2(arg1)
}

func _swig_wrap_btQuaternion_length(SwigcptrBtQuaternion) float32

func (arg1 SwigcptrBtQuaternion) Length() float32 {
	return _swig_wrap_btQuaternion_length(arg1)
}

func _swig_wrap_btQuaternion_normalize(SwigcptrBtQuaternion) SwigcptrBtQuaternion

func (arg1 SwigcptrBtQuaternion) Normalize() BtQuaternion {
	return _swig_wrap_btQuaternion_normalize(arg1)
}

func _swig_wrap_btQuaternion_normalized(SwigcptrBtQuaternion) SwigcptrBtQuaternion

func (arg1 SwigcptrBtQuaternion) Normalized() BtQuaternion {
	return _swig_wrap_btQuaternion_normalized(arg1)
}

func _swig_wrap_btQuaternion_angle(SwigcptrBtQuaternion, uintptr) float32

func (arg1 SwigcptrBtQuaternion) Angle(arg2 BtQuaternion) float32 {
	return _swig_wrap_btQuaternion_angle(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuaternion_angleShortestPath(SwigcptrBtQuaternion, uintptr) float32

func (arg1 SwigcptrBtQuaternion) AngleShortestPath(arg2 BtQuaternion) float32 {
	return _swig_wrap_btQuaternion_angleShortestPath(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuaternion_getAngle(SwigcptrBtQuaternion) float32

func (arg1 SwigcptrBtQuaternion) GetAngle() float32 {
	return _swig_wrap_btQuaternion_getAngle(arg1)
}

func _swig_wrap_btQuaternion_getAngleShortestPath(SwigcptrBtQuaternion) float32

func (arg1 SwigcptrBtQuaternion) GetAngleShortestPath() float32 {
	return _swig_wrap_btQuaternion_getAngleShortestPath(arg1)
}

func _swig_wrap_btQuaternion_getAxis(SwigcptrBtQuaternion) SwigcptrBtVector3

func (arg1 SwigcptrBtQuaternion) GetAxis() BtVector3 {
	return _swig_wrap_btQuaternion_getAxis(arg1)
}

func _swig_wrap_btQuaternion_inverse(SwigcptrBtQuaternion) SwigcptrBtQuaternion

func (arg1 SwigcptrBtQuaternion) Inverse() BtQuaternion {
	return _swig_wrap_btQuaternion_inverse(arg1)
}

func _swig_wrap_btQuaternion_farthest(SwigcptrBtQuaternion, uintptr) SwigcptrBtQuaternion

func (arg1 SwigcptrBtQuaternion) Farthest(arg2 BtQuaternion) BtQuaternion {
	return _swig_wrap_btQuaternion_farthest(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuaternion_nearest(SwigcptrBtQuaternion, uintptr) SwigcptrBtQuaternion

func (arg1 SwigcptrBtQuaternion) Nearest(arg2 BtQuaternion) BtQuaternion {
	return _swig_wrap_btQuaternion_nearest(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuaternion_slerp(SwigcptrBtQuaternion, uintptr, float32) SwigcptrBtQuaternion

func (arg1 SwigcptrBtQuaternion) Slerp(arg2 BtQuaternion, arg3 float32) BtQuaternion {
	return _swig_wrap_btQuaternion_slerp(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btQuaternion_getIdentity() SwigcptrBtQuaternion

func BtQuaternionGetIdentity() BtQuaternion {
	return _swig_wrap_btQuaternion_getIdentity()
}

func _swig_wrap_btQuaternion_getW(SwigcptrBtQuaternion) float32

func (arg1 SwigcptrBtQuaternion) GetW() float32 {
	return _swig_wrap_btQuaternion_getW(arg1)
}

func _swig_wrap_delete_btQuaternion(uintptr)

func DeleteBtQuaternion(arg1 BtQuaternion) {
	_swig_wrap_delete_btQuaternion(arg1.Swigcptr())
}

func _swig_wrap_btQuaternion_getX(SwigcptrBtQuaternion) float32

func (_swig_base SwigcptrBtQuaternion) GetX() float32 {
	return _swig_wrap_btQuaternion_getX(_swig_base)
}

func _swig_wrap_btQuaternion_getY(SwigcptrBtQuaternion) float32

func (_swig_base SwigcptrBtQuaternion) GetY() float32 {
	return _swig_wrap_btQuaternion_getY(_swig_base)
}

func _swig_wrap_btQuaternion_getZ(SwigcptrBtQuaternion) float32

func (_swig_base SwigcptrBtQuaternion) GetZ() float32 {
	return _swig_wrap_btQuaternion_getZ(_swig_base)
}

func _swig_wrap_btQuaternion_setX(SwigcptrBtQuaternion, float32)

func (_swig_base SwigcptrBtQuaternion) SetX(arg1 float32) {
	_swig_wrap_btQuaternion_setX(_swig_base, arg1)
}

func _swig_wrap_btQuaternion_setY(SwigcptrBtQuaternion, float32)

func (_swig_base SwigcptrBtQuaternion) SetY(arg1 float32) {
	_swig_wrap_btQuaternion_setY(_swig_base, arg1)
}

func _swig_wrap_btQuaternion_setZ(SwigcptrBtQuaternion, float32)

func (_swig_base SwigcptrBtQuaternion) SetZ(arg1 float32) {
	_swig_wrap_btQuaternion_setZ(_swig_base, arg1)
}

func _swig_wrap_btQuaternion_setW(SwigcptrBtQuaternion, float32)

func (_swig_base SwigcptrBtQuaternion) SetW(arg1 float32) {
	_swig_wrap_btQuaternion_setW(_swig_base, arg1)
}

func _swig_wrap_btQuaternion_x(SwigcptrBtQuaternion) float32

func (_swig_base SwigcptrBtQuaternion) X() float32 {
	return _swig_wrap_btQuaternion_x(_swig_base)
}

func _swig_wrap_btQuaternion_y(SwigcptrBtQuaternion) float32

func (_swig_base SwigcptrBtQuaternion) Y() float32 {
	return _swig_wrap_btQuaternion_y(_swig_base)
}

func _swig_wrap_btQuaternion_z(SwigcptrBtQuaternion) float32

func (_swig_base SwigcptrBtQuaternion) Z() float32 {
	return _swig_wrap_btQuaternion_z(_swig_base)
}

func _swig_wrap_btQuaternion_w(SwigcptrBtQuaternion) float32

func (_swig_base SwigcptrBtQuaternion) W() float32 {
	return _swig_wrap_btQuaternion_w(_swig_base)
}

func _swig_wrap_btQuaternion_setValue__SWIG_0(SwigcptrBtQuaternion, float32, float32, float32)

func (_swig_base SwigcptrBtQuaternion) SetValue__SWIG_0(arg1 float32, arg2 float32, arg3 float32) {
	_swig_wrap_btQuaternion_setValue__SWIG_0(_swig_base, arg1, arg2, arg3)
}

func _swig_wrap_btQuaternion_setValue__SWIG_1(SwigcptrBtQuaternion, float32, float32, float32, float32)

func (_swig_base SwigcptrBtQuaternion) SetValue__SWIG_1(arg1 float32, arg2 float32, arg3 float32, arg4 float32) {
	_swig_wrap_btQuaternion_setValue__SWIG_1(_swig_base, arg1, arg2, arg3, arg4)
}

func (p SwigcptrBtQuaternion) SetValue(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.SetValue__SWIG_0(a[0].(float32), a[1].(float32), a[2].(float32))
		return
	}
	if argc == 4 {
		p.SetValue__SWIG_1(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btQuaternion_setMax(SwigcptrBtQuaternion, uintptr)

func (_swig_base SwigcptrBtQuaternion) SetMax(arg1 BtQuadWord) {
	_swig_wrap_btQuaternion_setMax(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btQuaternion_setMin(SwigcptrBtQuaternion, uintptr)

func (_swig_base SwigcptrBtQuaternion) SetMin(arg1 BtQuadWord) {
	_swig_wrap_btQuaternion_setMin(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtQuaternion) SwigIsBtQuadWord() {
}

func (p SwigcptrBtQuaternion) SwigGetBtQuadWord() BtQuadWord {
	return SwigcptrBtQuadWord(p.Swigcptr())
}

type BtQuaternion interface {
	Swigcptr() uintptr
	SwigIsBtQuaternion()
	SetRotation(arg2 BtVector3, arg3 float32)
	SetEuler(arg2 float32, arg3 float32, arg4 float32)
	SetEulerZYX(arg2 float32, arg3 float32, arg4 float32)
	Dot(arg2 BtQuaternion) float32
	Length2() float32
	Length() float32
	Normalize() BtQuaternion
	Normalized() BtQuaternion
	Angle(arg2 BtQuaternion) float32
	AngleShortestPath(arg2 BtQuaternion) float32
	GetAngle() float32
	GetAngleShortestPath() float32
	GetAxis() BtVector3
	Inverse() BtQuaternion
	Farthest(arg2 BtQuaternion) BtQuaternion
	Nearest(arg2 BtQuaternion) BtQuaternion
	Slerp(arg2 BtQuaternion, arg3 float32) BtQuaternion
	GetW() float32
	GetX() float32
	GetY() float32
	GetZ() float32
	SetX(arg1 float32)
	SetY(arg1 float32)
	SetZ(arg1 float32)
	SetW(arg1 float32)
	X() float32
	Y() float32
	Z() float32
	W() float32
	SetValue(a ...interface{})
	SetMax(arg1 BtQuadWord)
	SetMin(arg1 BtQuadWord)
	SwigIsBtQuadWord()
	SwigGetBtQuadWord() BtQuadWord
}

func _swig_wrap_dot(uintptr, uintptr) float32

func Dot(arg1 BtQuaternion, arg2 BtQuaternion) float32 {
	return _swig_wrap_dot(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_length(uintptr) float32

func Length(arg1 BtQuaternion) float32 {
	return _swig_wrap_length(arg1.Swigcptr())
}

func _swig_wrap_btAngle__SWIG_1(uintptr, uintptr) float32

func BtAngle__SWIG_1(arg1 BtQuaternion, arg2 BtQuaternion) float32 {
	return _swig_wrap_btAngle__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr())
}

func BtAngle(a ...interface{}) float32 {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		if _, ok := a[1].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		return BtAngle__SWIG_0(a[0].(BtVector3), a[1].(BtVector3))
	}
check_1:
	if argc == 2 {
		return BtAngle__SWIG_1(a[0].(BtQuaternion), a[1].(BtQuaternion))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_inverse(uintptr) SwigcptrBtQuaternion

func Inverse(arg1 BtQuaternion) BtQuaternion {
	return _swig_wrap_inverse(arg1.Swigcptr())
}

func _swig_wrap_slerp(uintptr, uintptr, float32) SwigcptrBtQuaternion

func Slerp(arg1 BtQuaternion, arg2 BtQuaternion, arg3 float32) BtQuaternion {
	return _swig_wrap_slerp(arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_quatRotate(uintptr, uintptr) SwigcptrBtVector3

func QuatRotate(arg1 BtQuaternion, arg2 BtVector3) BtVector3 {
	return _swig_wrap_quatRotate(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_shortestArcQuat(uintptr, uintptr) SwigcptrBtQuaternion

func ShortestArcQuat(arg1 BtVector3, arg2 BtVector3) BtQuaternion {
	return _swig_wrap_shortestArcQuat(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_shortestArcQuatNormalize2(uintptr, uintptr) SwigcptrBtQuaternion

func ShortestArcQuatNormalize2(arg1 BtVector3, arg2 BtVector3) BtQuaternion {
	return _swig_wrap_shortestArcQuatNormalize2(arg1.Swigcptr(), arg2.Swigcptr())
}

type SwigcptrBtMatrix3x3 uintptr

func (p SwigcptrBtMatrix3x3) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtMatrix3x3) SwigIsBtMatrix3x3() {
}

func _swig_wrap_new_btMatrix3x3__SWIG_0() SwigcptrBtMatrix3x3

func NewBtMatrix3x3__SWIG_0() BtMatrix3x3 {
	return _swig_wrap_new_btMatrix3x3__SWIG_0()
}

func _swig_wrap_new_btMatrix3x3__SWIG_1(uintptr) SwigcptrBtMatrix3x3

func NewBtMatrix3x3__SWIG_1(arg1 BtQuaternion) BtMatrix3x3 {
	return _swig_wrap_new_btMatrix3x3__SWIG_1(arg1.Swigcptr())
}

func _swig_wrap_new_btMatrix3x3__SWIG_2(float32, float32, float32, float32, float32, float32, float32, float32, float32) SwigcptrBtMatrix3x3

func NewBtMatrix3x3__SWIG_2(arg1 float32, arg2 float32, arg3 float32, arg4 float32, arg5 float32, arg6 float32, arg7 float32, arg8 float32, arg9 float32) BtMatrix3x3 {
	return _swig_wrap_new_btMatrix3x3__SWIG_2(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
}

func _swig_wrap_new_btMatrix3x3__SWIG_3(uintptr) SwigcptrBtMatrix3x3

func NewBtMatrix3x3__SWIG_3(arg1 BtMatrix3x3) BtMatrix3x3 {
	return _swig_wrap_new_btMatrix3x3__SWIG_3(arg1.Swigcptr())
}

func NewBtMatrix3x3(a ...interface{}) BtMatrix3x3 {
	argc := len(a)
	if argc == 0 {
		return NewBtMatrix3x3__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtQuaternion); !ok {
			goto check_2
		}
		return NewBtMatrix3x3__SWIG_1(a[0].(BtQuaternion))
	}
check_2:
	if argc == 1 {
		return NewBtMatrix3x3__SWIG_3(a[0].(BtMatrix3x3))
	}
	if argc == 9 {
		return NewBtMatrix3x3__SWIG_2(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32), a[4].(float32), a[5].(float32), a[6].(float32), a[7].(float32), a[8].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btMatrix3x3_getColumn(SwigcptrBtMatrix3x3, int) SwigcptrBtVector3

func (arg1 SwigcptrBtMatrix3x3) GetColumn(arg2 int) BtVector3 {
	return _swig_wrap_btMatrix3x3_getColumn(arg1, arg2)
}

func _swig_wrap_btMatrix3x3_getRow(SwigcptrBtMatrix3x3, int) SwigcptrBtVector3

func (arg1 SwigcptrBtMatrix3x3) GetRow(arg2 int) BtVector3 {
	return _swig_wrap_btMatrix3x3_getRow(arg1, arg2)
}

func _swig_wrap_btMatrix3x3_setFromOpenGLSubMatrix(SwigcptrBtMatrix3x3, *float32)

func (arg1 SwigcptrBtMatrix3x3) SetFromOpenGLSubMatrix(arg2 *float32) {
	_swig_wrap_btMatrix3x3_setFromOpenGLSubMatrix(arg1, arg2)
}

func _swig_wrap_btMatrix3x3_setValue(SwigcptrBtMatrix3x3, float32, float32, float32, float32, float32, float32, float32, float32, float32)

func (arg1 SwigcptrBtMatrix3x3) SetValue(arg2 float32, arg3 float32, arg4 float32, arg5 float32, arg6 float32, arg7 float32, arg8 float32, arg9 float32, arg10 float32) {
	_swig_wrap_btMatrix3x3_setValue(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
}

func _swig_wrap_btMatrix3x3_setRotation(SwigcptrBtMatrix3x3, uintptr)

func (arg1 SwigcptrBtMatrix3x3) SetRotation(arg2 BtQuaternion) {
	_swig_wrap_btMatrix3x3_setRotation(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_setEulerYPR(SwigcptrBtMatrix3x3, float32, float32, float32)

func (arg1 SwigcptrBtMatrix3x3) SetEulerYPR(arg2 float32, arg3 float32, arg4 float32) {
	_swig_wrap_btMatrix3x3_setEulerYPR(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btMatrix3x3_setEulerZYX(SwigcptrBtMatrix3x3, float32, float32, float32)

func (arg1 SwigcptrBtMatrix3x3) SetEulerZYX(arg2 float32, arg3 float32, arg4 float32) {
	_swig_wrap_btMatrix3x3_setEulerZYX(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btMatrix3x3_setIdentity(SwigcptrBtMatrix3x3)

func (arg1 SwigcptrBtMatrix3x3) SetIdentity() {
	_swig_wrap_btMatrix3x3_setIdentity(arg1)
}

func _swig_wrap_btMatrix3x3_getIdentity() SwigcptrBtMatrix3x3

func BtMatrix3x3GetIdentity() BtMatrix3x3 {
	return _swig_wrap_btMatrix3x3_getIdentity()
}

func _swig_wrap_btMatrix3x3_getOpenGLSubMatrix(SwigcptrBtMatrix3x3, *float32)

func (arg1 SwigcptrBtMatrix3x3) GetOpenGLSubMatrix(arg2 *float32) {
	_swig_wrap_btMatrix3x3_getOpenGLSubMatrix(arg1, arg2)
}

func _swig_wrap_btMatrix3x3_getRotation(SwigcptrBtMatrix3x3, uintptr)

func (arg1 SwigcptrBtMatrix3x3) GetRotation(arg2 BtQuaternion) {
	_swig_wrap_btMatrix3x3_getRotation(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_getEulerYPR(SwigcptrBtMatrix3x3, *float32, *float32, *float32)

func (arg1 SwigcptrBtMatrix3x3) GetEulerYPR(arg2 *float32, arg3 *float32, arg4 *float32) {
	_swig_wrap_btMatrix3x3_getEulerYPR(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btMatrix3x3_getEulerZYX__SWIG_0(SwigcptrBtMatrix3x3, *float32, *float32, *float32, uint)

func (arg1 SwigcptrBtMatrix3x3) GetEulerZYX__SWIG_0(arg2 *float32, arg3 *float32, arg4 *float32, arg5 uint) {
	_swig_wrap_btMatrix3x3_getEulerZYX__SWIG_0(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_btMatrix3x3_getEulerZYX__SWIG_1(SwigcptrBtMatrix3x3, *float32, *float32, *float32)

func (arg1 SwigcptrBtMatrix3x3) GetEulerZYX__SWIG_1(arg2 *float32, arg3 *float32, arg4 *float32) {
	_swig_wrap_btMatrix3x3_getEulerZYX__SWIG_1(arg1, arg2, arg3, arg4)
}

func (p SwigcptrBtMatrix3x3) GetEulerZYX(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.GetEulerZYX__SWIG_1(a[0].(*float32), a[1].(*float32), a[2].(*float32))
		return
	}
	if argc == 4 {
		p.GetEulerZYX__SWIG_0(a[0].(*float32), a[1].(*float32), a[2].(*float32), a[3].(uint))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btMatrix3x3_scaled(SwigcptrBtMatrix3x3, uintptr) SwigcptrBtMatrix3x3

func (arg1 SwigcptrBtMatrix3x3) Scaled(arg2 BtVector3) BtMatrix3x3 {
	return _swig_wrap_btMatrix3x3_scaled(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_determinant(SwigcptrBtMatrix3x3) float32

func (arg1 SwigcptrBtMatrix3x3) Determinant() float32 {
	return _swig_wrap_btMatrix3x3_determinant(arg1)
}

func _swig_wrap_btMatrix3x3_adjoint(SwigcptrBtMatrix3x3) SwigcptrBtMatrix3x3

func (arg1 SwigcptrBtMatrix3x3) Adjoint() BtMatrix3x3 {
	return _swig_wrap_btMatrix3x3_adjoint(arg1)
}

func _swig_wrap_btMatrix3x3_absolute(SwigcptrBtMatrix3x3) SwigcptrBtMatrix3x3

func (arg1 SwigcptrBtMatrix3x3) Absolute() BtMatrix3x3 {
	return _swig_wrap_btMatrix3x3_absolute(arg1)
}

func _swig_wrap_btMatrix3x3_transpose(SwigcptrBtMatrix3x3) SwigcptrBtMatrix3x3

func (arg1 SwigcptrBtMatrix3x3) Transpose() BtMatrix3x3 {
	return _swig_wrap_btMatrix3x3_transpose(arg1)
}

func _swig_wrap_btMatrix3x3_inverse(SwigcptrBtMatrix3x3) SwigcptrBtMatrix3x3

func (arg1 SwigcptrBtMatrix3x3) Inverse() BtMatrix3x3 {
	return _swig_wrap_btMatrix3x3_inverse(arg1)
}

func _swig_wrap_btMatrix3x3_transposeTimes(SwigcptrBtMatrix3x3, uintptr) SwigcptrBtMatrix3x3

func (arg1 SwigcptrBtMatrix3x3) TransposeTimes(arg2 BtMatrix3x3) BtMatrix3x3 {
	return _swig_wrap_btMatrix3x3_transposeTimes(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_timesTranspose(SwigcptrBtMatrix3x3, uintptr) SwigcptrBtMatrix3x3

func (arg1 SwigcptrBtMatrix3x3) TimesTranspose(arg2 BtMatrix3x3) BtMatrix3x3 {
	return _swig_wrap_btMatrix3x3_timesTranspose(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_tdotx(SwigcptrBtMatrix3x3, uintptr) float32

func (arg1 SwigcptrBtMatrix3x3) Tdotx(arg2 BtVector3) float32 {
	return _swig_wrap_btMatrix3x3_tdotx(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_tdoty(SwigcptrBtMatrix3x3, uintptr) float32

func (arg1 SwigcptrBtMatrix3x3) Tdoty(arg2 BtVector3) float32 {
	return _swig_wrap_btMatrix3x3_tdoty(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_tdotz(SwigcptrBtMatrix3x3, uintptr) float32

func (arg1 SwigcptrBtMatrix3x3) Tdotz(arg2 BtVector3) float32 {
	return _swig_wrap_btMatrix3x3_tdotz(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_diagonalize(SwigcptrBtMatrix3x3, uintptr, float32, int)

func (arg1 SwigcptrBtMatrix3x3) Diagonalize(arg2 BtMatrix3x3, arg3 float32, arg4 int) {
	_swig_wrap_btMatrix3x3_diagonalize(arg1, arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btMatrix3x3_cofac(SwigcptrBtMatrix3x3, int, int, int, int) float32

func (arg1 SwigcptrBtMatrix3x3) Cofac(arg2 int, arg3 int, arg4 int, arg5 int) float32 {
	return _swig_wrap_btMatrix3x3_cofac(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_btMatrix3x3_serialize(SwigcptrBtMatrix3x3, uintptr)

func (arg1 SwigcptrBtMatrix3x3) Serialize(arg2 BtMatrix3x3FloatData) {
	_swig_wrap_btMatrix3x3_serialize(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_serializeFloat(SwigcptrBtMatrix3x3, uintptr)

func (arg1 SwigcptrBtMatrix3x3) SerializeFloat(arg2 BtMatrix3x3FloatData) {
	_swig_wrap_btMatrix3x3_serializeFloat(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_deSerialize(SwigcptrBtMatrix3x3, uintptr)

func (arg1 SwigcptrBtMatrix3x3) DeSerialize(arg2 BtMatrix3x3FloatData) {
	_swig_wrap_btMatrix3x3_deSerialize(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_deSerializeFloat(SwigcptrBtMatrix3x3, uintptr)

func (arg1 SwigcptrBtMatrix3x3) DeSerializeFloat(arg2 BtMatrix3x3FloatData) {
	_swig_wrap_btMatrix3x3_deSerializeFloat(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3_deSerializeDouble(SwigcptrBtMatrix3x3, uintptr)

func (arg1 SwigcptrBtMatrix3x3) DeSerializeDouble(arg2 BtMatrix3x3DoubleData) {
	_swig_wrap_btMatrix3x3_deSerializeDouble(arg1, arg2.Swigcptr())
}

func _swig_wrap_delete_btMatrix3x3(uintptr)

func DeleteBtMatrix3x3(arg1 BtMatrix3x3) {
	_swig_wrap_delete_btMatrix3x3(arg1.Swigcptr())
}

type BtMatrix3x3 interface {
	Swigcptr() uintptr
	SwigIsBtMatrix3x3()
	GetColumn(arg2 int) BtVector3
	GetRow(arg2 int) BtVector3
	SetFromOpenGLSubMatrix(arg2 *float32)
	SetValue(arg2 float32, arg3 float32, arg4 float32, arg5 float32, arg6 float32, arg7 float32, arg8 float32, arg9 float32, arg10 float32)
	SetRotation(arg2 BtQuaternion)
	SetEulerYPR(arg2 float32, arg3 float32, arg4 float32)
	SetEulerZYX(arg2 float32, arg3 float32, arg4 float32)
	SetIdentity()
	GetOpenGLSubMatrix(arg2 *float32)
	GetRotation(arg2 BtQuaternion)
	GetEulerYPR(arg2 *float32, arg3 *float32, arg4 *float32)
	GetEulerZYX(a ...interface{})
	Scaled(arg2 BtVector3) BtMatrix3x3
	Determinant() float32
	Adjoint() BtMatrix3x3
	Absolute() BtMatrix3x3
	Transpose() BtMatrix3x3
	Inverse() BtMatrix3x3
	TransposeTimes(arg2 BtMatrix3x3) BtMatrix3x3
	TimesTranspose(arg2 BtMatrix3x3) BtMatrix3x3
	Tdotx(arg2 BtVector3) float32
	Tdoty(arg2 BtVector3) float32
	Tdotz(arg2 BtVector3) float32
	Diagonalize(arg2 BtMatrix3x3, arg3 float32, arg4 int)
	Cofac(arg2 int, arg3 int, arg4 int, arg5 int) float32
	Serialize(arg2 BtMatrix3x3FloatData)
	SerializeFloat(arg2 BtMatrix3x3FloatData)
	DeSerialize(arg2 BtMatrix3x3FloatData)
	DeSerializeFloat(arg2 BtMatrix3x3FloatData)
	DeSerializeDouble(arg2 BtMatrix3x3DoubleData)
}

type SwigcptrBtMatrix3x3FloatData uintptr

func (p SwigcptrBtMatrix3x3FloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtMatrix3x3FloatData) SwigIsBtMatrix3x3FloatData() {
}

func _swig_wrap_btMatrix3x3FloatData_m_el_set(SwigcptrBtMatrix3x3FloatData, uintptr)

func (arg1 SwigcptrBtMatrix3x3FloatData) SetM_el(arg2 BtVector3FloatData) {
	_swig_wrap_btMatrix3x3FloatData_m_el_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3FloatData_m_el_get(SwigcptrBtMatrix3x3FloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtMatrix3x3FloatData) GetM_el() BtVector3FloatData {
	return _swig_wrap_btMatrix3x3FloatData_m_el_get(arg1)
}

func _swig_wrap_new_btMatrix3x3FloatData() SwigcptrBtMatrix3x3FloatData

func NewBtMatrix3x3FloatData() BtMatrix3x3FloatData {
	return _swig_wrap_new_btMatrix3x3FloatData()
}

func _swig_wrap_delete_btMatrix3x3FloatData(uintptr)

func DeleteBtMatrix3x3FloatData(arg1 BtMatrix3x3FloatData) {
	_swig_wrap_delete_btMatrix3x3FloatData(arg1.Swigcptr())
}

type BtMatrix3x3FloatData interface {
	Swigcptr() uintptr
	SwigIsBtMatrix3x3FloatData()
	SetM_el(arg2 BtVector3FloatData)
	GetM_el() BtVector3FloatData
}

type SwigcptrBtMatrix3x3DoubleData uintptr

func (p SwigcptrBtMatrix3x3DoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtMatrix3x3DoubleData) SwigIsBtMatrix3x3DoubleData() {
}

func _swig_wrap_btMatrix3x3DoubleData_m_el_set(SwigcptrBtMatrix3x3DoubleData, uintptr)

func (arg1 SwigcptrBtMatrix3x3DoubleData) SetM_el(arg2 BtVector3DoubleData) {
	_swig_wrap_btMatrix3x3DoubleData_m_el_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMatrix3x3DoubleData_m_el_get(SwigcptrBtMatrix3x3DoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtMatrix3x3DoubleData) GetM_el() BtVector3DoubleData {
	return _swig_wrap_btMatrix3x3DoubleData_m_el_get(arg1)
}

func _swig_wrap_new_btMatrix3x3DoubleData() SwigcptrBtMatrix3x3DoubleData

func NewBtMatrix3x3DoubleData() BtMatrix3x3DoubleData {
	return _swig_wrap_new_btMatrix3x3DoubleData()
}

func _swig_wrap_delete_btMatrix3x3DoubleData(uintptr)

func DeleteBtMatrix3x3DoubleData(arg1 BtMatrix3x3DoubleData) {
	_swig_wrap_delete_btMatrix3x3DoubleData(arg1.Swigcptr())
}

type BtMatrix3x3DoubleData interface {
	Swigcptr() uintptr
	SwigIsBtMatrix3x3DoubleData()
	SetM_el(arg2 BtVector3DoubleData)
	GetM_el() BtVector3DoubleData
}

type SwigcptrBtTransform uintptr

func (p SwigcptrBtTransform) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTransform) SwigIsBtTransform() {
}

func _swig_wrap_new_btTransform__SWIG_0() SwigcptrBtTransform

func NewBtTransform__SWIG_0() BtTransform {
	return _swig_wrap_new_btTransform__SWIG_0()
}

func _swig_wrap_new_btTransform__SWIG_1(uintptr, uintptr) SwigcptrBtTransform

func NewBtTransform__SWIG_1(arg1 BtQuaternion, arg2 BtVector3) BtTransform {
	return _swig_wrap_new_btTransform__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_new_btTransform__SWIG_2(uintptr) SwigcptrBtTransform

func NewBtTransform__SWIG_2(arg1 BtQuaternion) BtTransform {
	return _swig_wrap_new_btTransform__SWIG_2(arg1.Swigcptr())
}

func _swig_wrap_new_btTransform__SWIG_3(uintptr, uintptr) SwigcptrBtTransform

func NewBtTransform__SWIG_3(arg1 BtMatrix3x3, arg2 BtVector3) BtTransform {
	return _swig_wrap_new_btTransform__SWIG_3(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_new_btTransform__SWIG_4(uintptr) SwigcptrBtTransform

func NewBtTransform__SWIG_4(arg1 BtMatrix3x3) BtTransform {
	return _swig_wrap_new_btTransform__SWIG_4(arg1.Swigcptr())
}

func _swig_wrap_new_btTransform__SWIG_5(uintptr) SwigcptrBtTransform

func NewBtTransform__SWIG_5(arg1 BtTransform) BtTransform {
	return _swig_wrap_new_btTransform__SWIG_5(arg1.Swigcptr())
}

func NewBtTransform(a ...interface{}) BtTransform {
	argc := len(a)
	if argc == 0 {
		return NewBtTransform__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtQuaternion); !ok {
			goto check_2
		}
		return NewBtTransform__SWIG_2(a[0].(BtQuaternion))
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtMatrix3x3); !ok {
			goto check_3
		}
		return NewBtTransform__SWIG_4(a[0].(BtMatrix3x3))
	}
check_3:
	if argc == 1 {
		return NewBtTransform__SWIG_5(a[0].(BtTransform))
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtQuaternion); !ok {
			goto check_5
		}
		return NewBtTransform__SWIG_1(a[0].(BtQuaternion), a[1].(BtVector3))
	}
check_5:
	if argc == 2 {
		return NewBtTransform__SWIG_3(a[0].(BtMatrix3x3), a[1].(BtVector3))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTransform_mult(SwigcptrBtTransform, uintptr, uintptr)

func (arg1 SwigcptrBtTransform) Mult(arg2 BtTransform, arg3 BtTransform) {
	_swig_wrap_btTransform_mult(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btTransform_getBasis__SWIG_0(SwigcptrBtTransform) SwigcptrBtMatrix3x3

func (arg1 SwigcptrBtTransform) GetBasis__SWIG_0() BtMatrix3x3 {
	return _swig_wrap_btTransform_getBasis__SWIG_0(arg1)
}

func _swig_wrap_btTransform_getBasis__SWIG_1(SwigcptrBtTransform) SwigcptrBtMatrix3x3

func (arg1 SwigcptrBtTransform) GetBasis__SWIG_1() BtMatrix3x3 {
	return _swig_wrap_btTransform_getBasis__SWIG_1(arg1)
}

func (p SwigcptrBtTransform) GetBasis(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetBasis__SWIG_0()
	}
	if argc == 0 {
		return p.GetBasis__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTransform_getOrigin__SWIG_0(SwigcptrBtTransform) SwigcptrBtVector3

func (arg1 SwigcptrBtTransform) GetOrigin__SWIG_0() BtVector3 {
	return _swig_wrap_btTransform_getOrigin__SWIG_0(arg1)
}

func _swig_wrap_btTransform_getOrigin__SWIG_1(SwigcptrBtTransform) SwigcptrBtVector3

func (arg1 SwigcptrBtTransform) GetOrigin__SWIG_1() BtVector3 {
	return _swig_wrap_btTransform_getOrigin__SWIG_1(arg1)
}

func (p SwigcptrBtTransform) GetOrigin(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetOrigin__SWIG_0()
	}
	if argc == 0 {
		return p.GetOrigin__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTransform_getRotation(SwigcptrBtTransform) SwigcptrBtQuaternion

func (arg1 SwigcptrBtTransform) GetRotation() BtQuaternion {
	return _swig_wrap_btTransform_getRotation(arg1)
}

func _swig_wrap_btTransform_setFromOpenGLMatrix(SwigcptrBtTransform, *float32)

func (arg1 SwigcptrBtTransform) SetFromOpenGLMatrix(arg2 *float32) {
	_swig_wrap_btTransform_setFromOpenGLMatrix(arg1, arg2)
}

func _swig_wrap_btTransform_getOpenGLMatrix(SwigcptrBtTransform, *float32)

func (arg1 SwigcptrBtTransform) GetOpenGLMatrix(arg2 *float32) {
	_swig_wrap_btTransform_getOpenGLMatrix(arg1, arg2)
}

func _swig_wrap_btTransform_setOrigin(SwigcptrBtTransform, uintptr)

func (arg1 SwigcptrBtTransform) SetOrigin(arg2 BtVector3) {
	_swig_wrap_btTransform_setOrigin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransform_invXform(SwigcptrBtTransform, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtTransform) InvXform(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btTransform_invXform(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransform_setBasis(SwigcptrBtTransform, uintptr)

func (arg1 SwigcptrBtTransform) SetBasis(arg2 BtMatrix3x3) {
	_swig_wrap_btTransform_setBasis(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransform_setRotation(SwigcptrBtTransform, uintptr)

func (arg1 SwigcptrBtTransform) SetRotation(arg2 BtQuaternion) {
	_swig_wrap_btTransform_setRotation(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransform_setIdentity(SwigcptrBtTransform)

func (arg1 SwigcptrBtTransform) SetIdentity() {
	_swig_wrap_btTransform_setIdentity(arg1)
}

func _swig_wrap_btTransform_inverse(SwigcptrBtTransform) SwigcptrBtTransform

func (arg1 SwigcptrBtTransform) Inverse() BtTransform {
	return _swig_wrap_btTransform_inverse(arg1)
}

func _swig_wrap_btTransform_inverseTimes(SwigcptrBtTransform, uintptr) SwigcptrBtTransform

func (arg1 SwigcptrBtTransform) InverseTimes(arg2 BtTransform) BtTransform {
	return _swig_wrap_btTransform_inverseTimes(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransform_getIdentity() SwigcptrBtTransform

func BtTransformGetIdentity() BtTransform {
	return _swig_wrap_btTransform_getIdentity()
}

func _swig_wrap_btTransform_serialize(SwigcptrBtTransform, uintptr)

func (arg1 SwigcptrBtTransform) Serialize(arg2 BtTransformFloatData) {
	_swig_wrap_btTransform_serialize(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransform_serializeFloat(SwigcptrBtTransform, uintptr)

func (arg1 SwigcptrBtTransform) SerializeFloat(arg2 BtTransformFloatData) {
	_swig_wrap_btTransform_serializeFloat(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransform_deSerialize(SwigcptrBtTransform, uintptr)

func (arg1 SwigcptrBtTransform) DeSerialize(arg2 BtTransformFloatData) {
	_swig_wrap_btTransform_deSerialize(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransform_deSerializeDouble(SwigcptrBtTransform, uintptr)

func (arg1 SwigcptrBtTransform) DeSerializeDouble(arg2 BtTransformDoubleData) {
	_swig_wrap_btTransform_deSerializeDouble(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransform_deSerializeFloat(SwigcptrBtTransform, uintptr)

func (arg1 SwigcptrBtTransform) DeSerializeFloat(arg2 BtTransformFloatData) {
	_swig_wrap_btTransform_deSerializeFloat(arg1, arg2.Swigcptr())
}

func _swig_wrap_delete_btTransform(uintptr)

func DeleteBtTransform(arg1 BtTransform) {
	_swig_wrap_delete_btTransform(arg1.Swigcptr())
}

type BtTransform interface {
	Swigcptr() uintptr
	SwigIsBtTransform()
	Mult(arg2 BtTransform, arg3 BtTransform)
	GetBasis(a ...interface{}) interface{}
	GetOrigin(a ...interface{}) interface{}
	GetRotation() BtQuaternion
	SetFromOpenGLMatrix(arg2 *float32)
	GetOpenGLMatrix(arg2 *float32)
	SetOrigin(arg2 BtVector3)
	InvXform(arg2 BtVector3) BtVector3
	SetBasis(arg2 BtMatrix3x3)
	SetRotation(arg2 BtQuaternion)
	SetIdentity()
	Inverse() BtTransform
	InverseTimes(arg2 BtTransform) BtTransform
	Serialize(arg2 BtTransformFloatData)
	SerializeFloat(arg2 BtTransformFloatData)
	DeSerialize(arg2 BtTransformFloatData)
	DeSerializeDouble(arg2 BtTransformDoubleData)
	DeSerializeFloat(arg2 BtTransformFloatData)
}

type SwigcptrBtTransformFloatData uintptr

func (p SwigcptrBtTransformFloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTransformFloatData) SwigIsBtTransformFloatData() {
}

func _swig_wrap_btTransformFloatData_m_basis_set(SwigcptrBtTransformFloatData, uintptr)

func (arg1 SwigcptrBtTransformFloatData) SetM_basis(arg2 BtMatrix3x3FloatData) {
	_swig_wrap_btTransformFloatData_m_basis_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransformFloatData_m_basis_get(SwigcptrBtTransformFloatData) SwigcptrBtMatrix3x3FloatData

func (arg1 SwigcptrBtTransformFloatData) GetM_basis() BtMatrix3x3FloatData {
	return _swig_wrap_btTransformFloatData_m_basis_get(arg1)
}

func _swig_wrap_btTransformFloatData_m_origin_set(SwigcptrBtTransformFloatData, uintptr)

func (arg1 SwigcptrBtTransformFloatData) SetM_origin(arg2 BtVector3FloatData) {
	_swig_wrap_btTransformFloatData_m_origin_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransformFloatData_m_origin_get(SwigcptrBtTransformFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtTransformFloatData) GetM_origin() BtVector3FloatData {
	return _swig_wrap_btTransformFloatData_m_origin_get(arg1)
}

func _swig_wrap_new_btTransformFloatData() SwigcptrBtTransformFloatData

func NewBtTransformFloatData() BtTransformFloatData {
	return _swig_wrap_new_btTransformFloatData()
}

func _swig_wrap_delete_btTransformFloatData(uintptr)

func DeleteBtTransformFloatData(arg1 BtTransformFloatData) {
	_swig_wrap_delete_btTransformFloatData(arg1.Swigcptr())
}

type BtTransformFloatData interface {
	Swigcptr() uintptr
	SwigIsBtTransformFloatData()
	SetM_basis(arg2 BtMatrix3x3FloatData)
	GetM_basis() BtMatrix3x3FloatData
	SetM_origin(arg2 BtVector3FloatData)
	GetM_origin() BtVector3FloatData
}

type SwigcptrBtTransformDoubleData uintptr

func (p SwigcptrBtTransformDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTransformDoubleData) SwigIsBtTransformDoubleData() {
}

func _swig_wrap_btTransformDoubleData_m_basis_set(SwigcptrBtTransformDoubleData, uintptr)

func (arg1 SwigcptrBtTransformDoubleData) SetM_basis(arg2 BtMatrix3x3DoubleData) {
	_swig_wrap_btTransformDoubleData_m_basis_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransformDoubleData_m_basis_get(SwigcptrBtTransformDoubleData) SwigcptrBtMatrix3x3DoubleData

func (arg1 SwigcptrBtTransformDoubleData) GetM_basis() BtMatrix3x3DoubleData {
	return _swig_wrap_btTransformDoubleData_m_basis_get(arg1)
}

func _swig_wrap_btTransformDoubleData_m_origin_set(SwigcptrBtTransformDoubleData, uintptr)

func (arg1 SwigcptrBtTransformDoubleData) SetM_origin(arg2 BtVector3DoubleData) {
	_swig_wrap_btTransformDoubleData_m_origin_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTransformDoubleData_m_origin_get(SwigcptrBtTransformDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtTransformDoubleData) GetM_origin() BtVector3DoubleData {
	return _swig_wrap_btTransformDoubleData_m_origin_get(arg1)
}

func _swig_wrap_new_btTransformDoubleData() SwigcptrBtTransformDoubleData

func NewBtTransformDoubleData() BtTransformDoubleData {
	return _swig_wrap_new_btTransformDoubleData()
}

func _swig_wrap_delete_btTransformDoubleData(uintptr)

func DeleteBtTransformDoubleData(arg1 BtTransformDoubleData) {
	_swig_wrap_delete_btTransformDoubleData(arg1.Swigcptr())
}

type BtTransformDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtTransformDoubleData()
	SetM_basis(arg2 BtMatrix3x3DoubleData)
	GetM_basis() BtMatrix3x3DoubleData
	SetM_origin(arg2 BtVector3DoubleData)
	GetM_origin() BtVector3DoubleData
}

const ACTIVE_TAG int = 1
const ISLAND_SLEEPING int = 2
const WANTS_DEACTIVATION int = 3
const DISABLE_DEACTIVATION int = 4
const DISABLE_SIMULATION int = 5

type SwigcptrBtMotionState uintptr

func (p SwigcptrBtMotionState) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtMotionState) SwigIsBtMotionState() {
}

func _swig_wrap_delete_btMotionState(uintptr)

func DeleteBtMotionState(arg1 BtMotionState) {
	_swig_wrap_delete_btMotionState(arg1.Swigcptr())
}

func _swig_wrap_btMotionState_getWorldTransform(SwigcptrBtMotionState, uintptr)

func (arg1 SwigcptrBtMotionState) GetWorldTransform(arg2 BtTransform) {
	_swig_wrap_btMotionState_getWorldTransform(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMotionState_setWorldTransform(SwigcptrBtMotionState, uintptr)

func (arg1 SwigcptrBtMotionState) SetWorldTransform(arg2 BtTransform) {
	_swig_wrap_btMotionState_setWorldTransform(arg1, arg2.Swigcptr())
}

type BtMotionState interface {
	Swigcptr() uintptr
	SwigIsBtMotionState()
	GetWorldTransform(arg2 BtTransform)
	SetWorldTransform(arg2 BtTransform)
}

const BT_USE_PLACEMENT_NEW int = 1
const BtCollisionObjectDataName string = "btCollisionObjectFloatData"

type SwigcptrBtCollisionObject uintptr

func (p SwigcptrBtCollisionObject) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionObject) SwigIsBtCollisionObject() {
}

type BtCollisionObjectCollisionFlags int

func _swig_getbtCollisionObject_CF_STATIC_OBJECT_btCollisionObject() BtCollisionObjectCollisionFlags

var BtCollisionObjectCF_STATIC_OBJECT BtCollisionObjectCollisionFlags = _swig_getbtCollisionObject_CF_STATIC_OBJECT_btCollisionObject()

func _swig_getbtCollisionObject_CF_KINEMATIC_OBJECT_btCollisionObject() BtCollisionObjectCollisionFlags

var BtCollisionObjectCF_KINEMATIC_OBJECT BtCollisionObjectCollisionFlags = _swig_getbtCollisionObject_CF_KINEMATIC_OBJECT_btCollisionObject()

func _swig_getbtCollisionObject_CF_NO_CONTACT_RESPONSE_btCollisionObject() BtCollisionObjectCollisionFlags

var BtCollisionObjectCF_NO_CONTACT_RESPONSE BtCollisionObjectCollisionFlags = _swig_getbtCollisionObject_CF_NO_CONTACT_RESPONSE_btCollisionObject()

func _swig_getbtCollisionObject_CF_CUSTOM_MATERIAL_CALLBACK_btCollisionObject() BtCollisionObjectCollisionFlags

var BtCollisionObjectCF_CUSTOM_MATERIAL_CALLBACK BtCollisionObjectCollisionFlags = _swig_getbtCollisionObject_CF_CUSTOM_MATERIAL_CALLBACK_btCollisionObject()

func _swig_getbtCollisionObject_CF_CHARACTER_OBJECT_btCollisionObject() BtCollisionObjectCollisionFlags

var BtCollisionObjectCF_CHARACTER_OBJECT BtCollisionObjectCollisionFlags = _swig_getbtCollisionObject_CF_CHARACTER_OBJECT_btCollisionObject()

func _swig_getbtCollisionObject_CF_DISABLE_VISUALIZE_OBJECT_btCollisionObject() BtCollisionObjectCollisionFlags

var BtCollisionObjectCF_DISABLE_VISUALIZE_OBJECT BtCollisionObjectCollisionFlags = _swig_getbtCollisionObject_CF_DISABLE_VISUALIZE_OBJECT_btCollisionObject()

func _swig_getbtCollisionObject_CF_DISABLE_SPU_COLLISION_PROCESSING_btCollisionObject() BtCollisionObjectCollisionFlags

var BtCollisionObjectCF_DISABLE_SPU_COLLISION_PROCESSING BtCollisionObjectCollisionFlags = _swig_getbtCollisionObject_CF_DISABLE_SPU_COLLISION_PROCESSING_btCollisionObject()

type BtCollisionObjectCollisionObjectTypes int

func _swig_getbtCollisionObject_CO_COLLISION_OBJECT_btCollisionObject() BtCollisionObjectCollisionObjectTypes

var BtCollisionObjectCO_COLLISION_OBJECT BtCollisionObjectCollisionObjectTypes = _swig_getbtCollisionObject_CO_COLLISION_OBJECT_btCollisionObject()

func _swig_getbtCollisionObject_CO_RIGID_BODY_btCollisionObject() BtCollisionObjectCollisionObjectTypes

var BtCollisionObjectCO_RIGID_BODY BtCollisionObjectCollisionObjectTypes = _swig_getbtCollisionObject_CO_RIGID_BODY_btCollisionObject()

func _swig_getbtCollisionObject_CO_GHOST_OBJECT_btCollisionObject() BtCollisionObjectCollisionObjectTypes

var BtCollisionObjectCO_GHOST_OBJECT BtCollisionObjectCollisionObjectTypes = _swig_getbtCollisionObject_CO_GHOST_OBJECT_btCollisionObject()

func _swig_getbtCollisionObject_CO_SOFT_BODY_btCollisionObject() BtCollisionObjectCollisionObjectTypes

var BtCollisionObjectCO_SOFT_BODY BtCollisionObjectCollisionObjectTypes = _swig_getbtCollisionObject_CO_SOFT_BODY_btCollisionObject()

func _swig_getbtCollisionObject_CO_HF_FLUID_btCollisionObject() BtCollisionObjectCollisionObjectTypes

var BtCollisionObjectCO_HF_FLUID BtCollisionObjectCollisionObjectTypes = _swig_getbtCollisionObject_CO_HF_FLUID_btCollisionObject()

func _swig_getbtCollisionObject_CO_USER_TYPE_btCollisionObject() BtCollisionObjectCollisionObjectTypes

var BtCollisionObjectCO_USER_TYPE BtCollisionObjectCollisionObjectTypes = _swig_getbtCollisionObject_CO_USER_TYPE_btCollisionObject()

func _swig_getbtCollisionObject_CO_FEATHERSTONE_LINK_btCollisionObject() BtCollisionObjectCollisionObjectTypes

var BtCollisionObjectCO_FEATHERSTONE_LINK BtCollisionObjectCollisionObjectTypes = _swig_getbtCollisionObject_CO_FEATHERSTONE_LINK_btCollisionObject()

type BtCollisionObjectAnisotropicFrictionFlags int

func _swig_getbtCollisionObject_CF_ANISOTROPIC_FRICTION_DISABLED_btCollisionObject() BtCollisionObjectAnisotropicFrictionFlags

var BtCollisionObjectCF_ANISOTROPIC_FRICTION_DISABLED BtCollisionObjectAnisotropicFrictionFlags = _swig_getbtCollisionObject_CF_ANISOTROPIC_FRICTION_DISABLED_btCollisionObject()

func _swig_getbtCollisionObject_CF_ANISOTROPIC_FRICTION_btCollisionObject() BtCollisionObjectAnisotropicFrictionFlags

var BtCollisionObjectCF_ANISOTROPIC_FRICTION BtCollisionObjectAnisotropicFrictionFlags = _swig_getbtCollisionObject_CF_ANISOTROPIC_FRICTION_btCollisionObject()

func _swig_getbtCollisionObject_CF_ANISOTROPIC_ROLLING_FRICTION_btCollisionObject() BtCollisionObjectAnisotropicFrictionFlags

var BtCollisionObjectCF_ANISOTROPIC_ROLLING_FRICTION BtCollisionObjectAnisotropicFrictionFlags = _swig_getbtCollisionObject_CF_ANISOTROPIC_ROLLING_FRICTION_btCollisionObject()

func _swig_wrap_btCollisionObject_mergesSimulationIslands(SwigcptrBtCollisionObject) bool

func (arg1 SwigcptrBtCollisionObject) MergesSimulationIslands() bool {
	return _swig_wrap_btCollisionObject_mergesSimulationIslands(arg1)
}

func _swig_wrap_btCollisionObject_getAnisotropicFriction(SwigcptrBtCollisionObject) SwigcptrBtVector3

func (arg1 SwigcptrBtCollisionObject) GetAnisotropicFriction() BtVector3 {
	return _swig_wrap_btCollisionObject_getAnisotropicFriction(arg1)
}

func _swig_wrap_btCollisionObject_setAnisotropicFriction__SWIG_0(SwigcptrBtCollisionObject, uintptr, int)

func (arg1 SwigcptrBtCollisionObject) SetAnisotropicFriction__SWIG_0(arg2 BtVector3, arg3 int) {
	_swig_wrap_btCollisionObject_setAnisotropicFriction__SWIG_0(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btCollisionObject_setAnisotropicFriction__SWIG_1(SwigcptrBtCollisionObject, uintptr)

func (arg1 SwigcptrBtCollisionObject) SetAnisotropicFriction__SWIG_1(arg2 BtVector3) {
	_swig_wrap_btCollisionObject_setAnisotropicFriction__SWIG_1(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtCollisionObject) SetAnisotropicFriction(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.SetAnisotropicFriction__SWIG_1(a[0].(BtVector3))
		return
	}
	if argc == 2 {
		p.SetAnisotropicFriction__SWIG_0(a[0].(BtVector3), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionObject_hasAnisotropicFriction__SWIG_0(SwigcptrBtCollisionObject, int) bool

func (arg1 SwigcptrBtCollisionObject) HasAnisotropicFriction__SWIG_0(arg2 int) bool {
	return _swig_wrap_btCollisionObject_hasAnisotropicFriction__SWIG_0(arg1, arg2)
}

func _swig_wrap_btCollisionObject_hasAnisotropicFriction__SWIG_1(SwigcptrBtCollisionObject) bool

func (arg1 SwigcptrBtCollisionObject) HasAnisotropicFriction__SWIG_1() bool {
	return _swig_wrap_btCollisionObject_hasAnisotropicFriction__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionObject) HasAnisotropicFriction(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.HasAnisotropicFriction__SWIG_1()
	}
	if argc == 1 {
		return p.HasAnisotropicFriction__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionObject_setContactProcessingThreshold(SwigcptrBtCollisionObject, float32)

func (arg1 SwigcptrBtCollisionObject) SetContactProcessingThreshold(arg2 float32) {
	_swig_wrap_btCollisionObject_setContactProcessingThreshold(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getContactProcessingThreshold(SwigcptrBtCollisionObject) float32

func (arg1 SwigcptrBtCollisionObject) GetContactProcessingThreshold() float32 {
	return _swig_wrap_btCollisionObject_getContactProcessingThreshold(arg1)
}

func _swig_wrap_btCollisionObject_isStaticObject(SwigcptrBtCollisionObject) bool

func (arg1 SwigcptrBtCollisionObject) IsStaticObject() bool {
	return _swig_wrap_btCollisionObject_isStaticObject(arg1)
}

func _swig_wrap_btCollisionObject_isKinematicObject(SwigcptrBtCollisionObject) bool

func (arg1 SwigcptrBtCollisionObject) IsKinematicObject() bool {
	return _swig_wrap_btCollisionObject_isKinematicObject(arg1)
}

func _swig_wrap_btCollisionObject_isStaticOrKinematicObject(SwigcptrBtCollisionObject) bool

func (arg1 SwigcptrBtCollisionObject) IsStaticOrKinematicObject() bool {
	return _swig_wrap_btCollisionObject_isStaticOrKinematicObject(arg1)
}

func _swig_wrap_btCollisionObject_hasContactResponse(SwigcptrBtCollisionObject) bool

func (arg1 SwigcptrBtCollisionObject) HasContactResponse() bool {
	return _swig_wrap_btCollisionObject_hasContactResponse(arg1)
}

func _swig_wrap_new_btCollisionObject() SwigcptrBtCollisionObject

func NewBtCollisionObject() BtCollisionObject {
	return _swig_wrap_new_btCollisionObject()
}

func _swig_wrap_delete_btCollisionObject(uintptr)

func DeleteBtCollisionObject(arg1 BtCollisionObject) {
	_swig_wrap_delete_btCollisionObject(arg1.Swigcptr())
}

func _swig_wrap_btCollisionObject_setCollisionShape(SwigcptrBtCollisionObject, uintptr)

func (arg1 SwigcptrBtCollisionObject) SetCollisionShape(arg2 BtCollisionShape) {
	_swig_wrap_btCollisionObject_setCollisionShape(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObject_getCollisionShape__SWIG_0(SwigcptrBtCollisionObject) SwigcptrBtCollisionShape

func (arg1 SwigcptrBtCollisionObject) GetCollisionShape__SWIG_0() BtCollisionShape {
	return _swig_wrap_btCollisionObject_getCollisionShape__SWIG_0(arg1)
}

func _swig_wrap_btCollisionObject_getCollisionShape__SWIG_1(SwigcptrBtCollisionObject) SwigcptrBtCollisionShape

func (arg1 SwigcptrBtCollisionObject) GetCollisionShape__SWIG_1() BtCollisionShape {
	return _swig_wrap_btCollisionObject_getCollisionShape__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionObject) GetCollisionShape(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetCollisionShape__SWIG_0()
	}
	if argc == 0 {
		return p.GetCollisionShape__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionObject_internalGetExtensionPointer(SwigcptrBtCollisionObject) uintptr

func (arg1 SwigcptrBtCollisionObject) InternalGetExtensionPointer() uintptr {
	return _swig_wrap_btCollisionObject_internalGetExtensionPointer(arg1)
}

func _swig_wrap_btCollisionObject_internalSetExtensionPointer(SwigcptrBtCollisionObject, uintptr)

func (arg1 SwigcptrBtCollisionObject) InternalSetExtensionPointer(arg2 uintptr) {
	_swig_wrap_btCollisionObject_internalSetExtensionPointer(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getActivationState(SwigcptrBtCollisionObject) int

func (arg1 SwigcptrBtCollisionObject) GetActivationState() int {
	return _swig_wrap_btCollisionObject_getActivationState(arg1)
}

func _swig_wrap_btCollisionObject_setActivationState(SwigcptrBtCollisionObject, int)

func (arg1 SwigcptrBtCollisionObject) SetActivationState(arg2 int) {
	_swig_wrap_btCollisionObject_setActivationState(arg1, arg2)
}

func _swig_wrap_btCollisionObject_setDeactivationTime(SwigcptrBtCollisionObject, float32)

func (arg1 SwigcptrBtCollisionObject) SetDeactivationTime(arg2 float32) {
	_swig_wrap_btCollisionObject_setDeactivationTime(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getDeactivationTime(SwigcptrBtCollisionObject) float32

func (arg1 SwigcptrBtCollisionObject) GetDeactivationTime() float32 {
	return _swig_wrap_btCollisionObject_getDeactivationTime(arg1)
}

func _swig_wrap_btCollisionObject_forceActivationState(SwigcptrBtCollisionObject, int)

func (arg1 SwigcptrBtCollisionObject) ForceActivationState(arg2 int) {
	_swig_wrap_btCollisionObject_forceActivationState(arg1, arg2)
}

func _swig_wrap_btCollisionObject_activate__SWIG_0(SwigcptrBtCollisionObject, bool)

func (arg1 SwigcptrBtCollisionObject) Activate__SWIG_0(arg2 bool) {
	_swig_wrap_btCollisionObject_activate__SWIG_0(arg1, arg2)
}

func _swig_wrap_btCollisionObject_activate__SWIG_1(SwigcptrBtCollisionObject)

func (arg1 SwigcptrBtCollisionObject) Activate__SWIG_1() {
	_swig_wrap_btCollisionObject_activate__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionObject) Activate(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Activate__SWIG_1()
		return
	}
	if argc == 1 {
		p.Activate__SWIG_0(a[0].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionObject_isActive(SwigcptrBtCollisionObject) bool

func (arg1 SwigcptrBtCollisionObject) IsActive() bool {
	return _swig_wrap_btCollisionObject_isActive(arg1)
}

func _swig_wrap_btCollisionObject_setRestitution(SwigcptrBtCollisionObject, float32)

func (arg1 SwigcptrBtCollisionObject) SetRestitution(arg2 float32) {
	_swig_wrap_btCollisionObject_setRestitution(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getRestitution(SwigcptrBtCollisionObject) float32

func (arg1 SwigcptrBtCollisionObject) GetRestitution() float32 {
	return _swig_wrap_btCollisionObject_getRestitution(arg1)
}

func _swig_wrap_btCollisionObject_setFriction(SwigcptrBtCollisionObject, float32)

func (arg1 SwigcptrBtCollisionObject) SetFriction(arg2 float32) {
	_swig_wrap_btCollisionObject_setFriction(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getFriction(SwigcptrBtCollisionObject) float32

func (arg1 SwigcptrBtCollisionObject) GetFriction() float32 {
	return _swig_wrap_btCollisionObject_getFriction(arg1)
}

func _swig_wrap_btCollisionObject_setRollingFriction(SwigcptrBtCollisionObject, float32)

func (arg1 SwigcptrBtCollisionObject) SetRollingFriction(arg2 float32) {
	_swig_wrap_btCollisionObject_setRollingFriction(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getRollingFriction(SwigcptrBtCollisionObject) float32

func (arg1 SwigcptrBtCollisionObject) GetRollingFriction() float32 {
	return _swig_wrap_btCollisionObject_getRollingFriction(arg1)
}

func _swig_wrap_btCollisionObject_getInternalType(SwigcptrBtCollisionObject) int

func (arg1 SwigcptrBtCollisionObject) GetInternalType() int {
	return _swig_wrap_btCollisionObject_getInternalType(arg1)
}

func _swig_wrap_btCollisionObject_getWorldTransform__SWIG_0(SwigcptrBtCollisionObject) SwigcptrBtTransform

func (arg1 SwigcptrBtCollisionObject) GetWorldTransform__SWIG_0() BtTransform {
	return _swig_wrap_btCollisionObject_getWorldTransform__SWIG_0(arg1)
}

func _swig_wrap_btCollisionObject_getWorldTransform__SWIG_1(SwigcptrBtCollisionObject) SwigcptrBtTransform

func (arg1 SwigcptrBtCollisionObject) GetWorldTransform__SWIG_1() BtTransform {
	return _swig_wrap_btCollisionObject_getWorldTransform__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionObject) GetWorldTransform(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetWorldTransform__SWIG_0()
	}
	if argc == 0 {
		return p.GetWorldTransform__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionObject_setWorldTransform(SwigcptrBtCollisionObject, uintptr)

func (arg1 SwigcptrBtCollisionObject) SetWorldTransform(arg2 BtTransform) {
	_swig_wrap_btCollisionObject_setWorldTransform(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObject_getBroadphaseHandle__SWIG_0(SwigcptrBtCollisionObject) SwigcptrBtBroadphaseProxy

func (arg1 SwigcptrBtCollisionObject) GetBroadphaseHandle__SWIG_0() BtBroadphaseProxy {
	return _swig_wrap_btCollisionObject_getBroadphaseHandle__SWIG_0(arg1)
}

func _swig_wrap_btCollisionObject_getBroadphaseHandle__SWIG_1(SwigcptrBtCollisionObject) SwigcptrBtBroadphaseProxy

func (arg1 SwigcptrBtCollisionObject) GetBroadphaseHandle__SWIG_1() BtBroadphaseProxy {
	return _swig_wrap_btCollisionObject_getBroadphaseHandle__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionObject) GetBroadphaseHandle(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetBroadphaseHandle__SWIG_0()
	}
	if argc == 0 {
		return p.GetBroadphaseHandle__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionObject_setBroadphaseHandle(SwigcptrBtCollisionObject, uintptr)

func (arg1 SwigcptrBtCollisionObject) SetBroadphaseHandle(arg2 BtBroadphaseProxy) {
	_swig_wrap_btCollisionObject_setBroadphaseHandle(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObject_getInterpolationWorldTransform__SWIG_0(SwigcptrBtCollisionObject) SwigcptrBtTransform

func (arg1 SwigcptrBtCollisionObject) GetInterpolationWorldTransform__SWIG_0() BtTransform {
	return _swig_wrap_btCollisionObject_getInterpolationWorldTransform__SWIG_0(arg1)
}

func _swig_wrap_btCollisionObject_getInterpolationWorldTransform__SWIG_1(SwigcptrBtCollisionObject) SwigcptrBtTransform

func (arg1 SwigcptrBtCollisionObject) GetInterpolationWorldTransform__SWIG_1() BtTransform {
	return _swig_wrap_btCollisionObject_getInterpolationWorldTransform__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionObject) GetInterpolationWorldTransform(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetInterpolationWorldTransform__SWIG_0()
	}
	if argc == 0 {
		return p.GetInterpolationWorldTransform__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionObject_setInterpolationWorldTransform(SwigcptrBtCollisionObject, uintptr)

func (arg1 SwigcptrBtCollisionObject) SetInterpolationWorldTransform(arg2 BtTransform) {
	_swig_wrap_btCollisionObject_setInterpolationWorldTransform(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObject_setInterpolationLinearVelocity(SwigcptrBtCollisionObject, uintptr)

func (arg1 SwigcptrBtCollisionObject) SetInterpolationLinearVelocity(arg2 BtVector3) {
	_swig_wrap_btCollisionObject_setInterpolationLinearVelocity(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObject_setInterpolationAngularVelocity(SwigcptrBtCollisionObject, uintptr)

func (arg1 SwigcptrBtCollisionObject) SetInterpolationAngularVelocity(arg2 BtVector3) {
	_swig_wrap_btCollisionObject_setInterpolationAngularVelocity(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObject_getInterpolationLinearVelocity(SwigcptrBtCollisionObject) SwigcptrBtVector3

func (arg1 SwigcptrBtCollisionObject) GetInterpolationLinearVelocity() BtVector3 {
	return _swig_wrap_btCollisionObject_getInterpolationLinearVelocity(arg1)
}

func _swig_wrap_btCollisionObject_getInterpolationAngularVelocity(SwigcptrBtCollisionObject) SwigcptrBtVector3

func (arg1 SwigcptrBtCollisionObject) GetInterpolationAngularVelocity() BtVector3 {
	return _swig_wrap_btCollisionObject_getInterpolationAngularVelocity(arg1)
}

func _swig_wrap_btCollisionObject_getIslandTag(SwigcptrBtCollisionObject) int

func (arg1 SwigcptrBtCollisionObject) GetIslandTag() int {
	return _swig_wrap_btCollisionObject_getIslandTag(arg1)
}

func _swig_wrap_btCollisionObject_setIslandTag(SwigcptrBtCollisionObject, int)

func (arg1 SwigcptrBtCollisionObject) SetIslandTag(arg2 int) {
	_swig_wrap_btCollisionObject_setIslandTag(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getCompanionId(SwigcptrBtCollisionObject) int

func (arg1 SwigcptrBtCollisionObject) GetCompanionId() int {
	return _swig_wrap_btCollisionObject_getCompanionId(arg1)
}

func _swig_wrap_btCollisionObject_setCompanionId(SwigcptrBtCollisionObject, int)

func (arg1 SwigcptrBtCollisionObject) SetCompanionId(arg2 int) {
	_swig_wrap_btCollisionObject_setCompanionId(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getHitFraction(SwigcptrBtCollisionObject) float32

func (arg1 SwigcptrBtCollisionObject) GetHitFraction() float32 {
	return _swig_wrap_btCollisionObject_getHitFraction(arg1)
}

func _swig_wrap_btCollisionObject_setHitFraction(SwigcptrBtCollisionObject, float32)

func (arg1 SwigcptrBtCollisionObject) SetHitFraction(arg2 float32) {
	_swig_wrap_btCollisionObject_setHitFraction(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getCollisionFlags(SwigcptrBtCollisionObject) int

func (arg1 SwigcptrBtCollisionObject) GetCollisionFlags() int {
	return _swig_wrap_btCollisionObject_getCollisionFlags(arg1)
}

func _swig_wrap_btCollisionObject_setCollisionFlags(SwigcptrBtCollisionObject, int)

func (arg1 SwigcptrBtCollisionObject) SetCollisionFlags(arg2 int) {
	_swig_wrap_btCollisionObject_setCollisionFlags(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getCcdSweptSphereRadius(SwigcptrBtCollisionObject) float32

func (arg1 SwigcptrBtCollisionObject) GetCcdSweptSphereRadius() float32 {
	return _swig_wrap_btCollisionObject_getCcdSweptSphereRadius(arg1)
}

func _swig_wrap_btCollisionObject_setCcdSweptSphereRadius(SwigcptrBtCollisionObject, float32)

func (arg1 SwigcptrBtCollisionObject) SetCcdSweptSphereRadius(arg2 float32) {
	_swig_wrap_btCollisionObject_setCcdSweptSphereRadius(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getCcdMotionThreshold(SwigcptrBtCollisionObject) float32

func (arg1 SwigcptrBtCollisionObject) GetCcdMotionThreshold() float32 {
	return _swig_wrap_btCollisionObject_getCcdMotionThreshold(arg1)
}

func _swig_wrap_btCollisionObject_getCcdSquareMotionThreshold(SwigcptrBtCollisionObject) float32

func (arg1 SwigcptrBtCollisionObject) GetCcdSquareMotionThreshold() float32 {
	return _swig_wrap_btCollisionObject_getCcdSquareMotionThreshold(arg1)
}

func _swig_wrap_btCollisionObject_setCcdMotionThreshold(SwigcptrBtCollisionObject, float32)

func (arg1 SwigcptrBtCollisionObject) SetCcdMotionThreshold(arg2 float32) {
	_swig_wrap_btCollisionObject_setCcdMotionThreshold(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getUserPointer(SwigcptrBtCollisionObject) uintptr

func (arg1 SwigcptrBtCollisionObject) GetUserPointer() uintptr {
	return _swig_wrap_btCollisionObject_getUserPointer(arg1)
}

func _swig_wrap_btCollisionObject_getUserIndex(SwigcptrBtCollisionObject) int

func (arg1 SwigcptrBtCollisionObject) GetUserIndex() int {
	return _swig_wrap_btCollisionObject_getUserIndex(arg1)
}

func _swig_wrap_btCollisionObject_setUserPointer(SwigcptrBtCollisionObject, uintptr)

func (arg1 SwigcptrBtCollisionObject) SetUserPointer(arg2 uintptr) {
	_swig_wrap_btCollisionObject_setUserPointer(arg1, arg2)
}

func _swig_wrap_btCollisionObject_setUserIndex(SwigcptrBtCollisionObject, int)

func (arg1 SwigcptrBtCollisionObject) SetUserIndex(arg2 int) {
	_swig_wrap_btCollisionObject_setUserIndex(arg1, arg2)
}

func _swig_wrap_btCollisionObject_getUpdateRevisionInternal(SwigcptrBtCollisionObject) int

func (arg1 SwigcptrBtCollisionObject) GetUpdateRevisionInternal() int {
	return _swig_wrap_btCollisionObject_getUpdateRevisionInternal(arg1)
}

func _swig_wrap_btCollisionObject_checkCollideWith(SwigcptrBtCollisionObject, uintptr) bool

func (arg1 SwigcptrBtCollisionObject) CheckCollideWith(arg2 BtCollisionObject) bool {
	return _swig_wrap_btCollisionObject_checkCollideWith(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObject_calculateSerializeBufferSize(SwigcptrBtCollisionObject) int

func (arg1 SwigcptrBtCollisionObject) CalculateSerializeBufferSize() int {
	return _swig_wrap_btCollisionObject_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btCollisionObject_serialize(SwigcptrBtCollisionObject, uintptr, uintptr) string

func (arg1 SwigcptrBtCollisionObject) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btCollisionObject_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btCollisionObject_serializeSingleObject(SwigcptrBtCollisionObject, uintptr)

func (arg1 SwigcptrBtCollisionObject) SerializeSingleObject(arg2 BtSerializer) {
	_swig_wrap_btCollisionObject_serializeSingleObject(arg1, arg2.Swigcptr())
}

type BtCollisionObject interface {
	Swigcptr() uintptr
	SwigIsBtCollisionObject()
	MergesSimulationIslands() bool
	GetAnisotropicFriction() BtVector3
	SetAnisotropicFriction(a ...interface{})
	HasAnisotropicFriction(a ...interface{}) bool
	SetContactProcessingThreshold(arg2 float32)
	GetContactProcessingThreshold() float32
	IsStaticObject() bool
	IsKinematicObject() bool
	IsStaticOrKinematicObject() bool
	HasContactResponse() bool
	SetCollisionShape(arg2 BtCollisionShape)
	GetCollisionShape(a ...interface{}) interface{}
	InternalGetExtensionPointer() uintptr
	InternalSetExtensionPointer(arg2 uintptr)
	GetActivationState() int
	SetActivationState(arg2 int)
	SetDeactivationTime(arg2 float32)
	GetDeactivationTime() float32
	ForceActivationState(arg2 int)
	Activate(a ...interface{})
	IsActive() bool
	SetRestitution(arg2 float32)
	GetRestitution() float32
	SetFriction(arg2 float32)
	GetFriction() float32
	SetRollingFriction(arg2 float32)
	GetRollingFriction() float32
	GetInternalType() int
	GetWorldTransform(a ...interface{}) interface{}
	SetWorldTransform(arg2 BtTransform)
	GetBroadphaseHandle(a ...interface{}) interface{}
	SetBroadphaseHandle(arg2 BtBroadphaseProxy)
	GetInterpolationWorldTransform(a ...interface{}) interface{}
	SetInterpolationWorldTransform(arg2 BtTransform)
	SetInterpolationLinearVelocity(arg2 BtVector3)
	SetInterpolationAngularVelocity(arg2 BtVector3)
	GetInterpolationLinearVelocity() BtVector3
	GetInterpolationAngularVelocity() BtVector3
	GetIslandTag() int
	SetIslandTag(arg2 int)
	GetCompanionId() int
	SetCompanionId(arg2 int)
	GetHitFraction() float32
	SetHitFraction(arg2 float32)
	GetCollisionFlags() int
	SetCollisionFlags(arg2 int)
	GetCcdSweptSphereRadius() float32
	SetCcdSweptSphereRadius(arg2 float32)
	GetCcdMotionThreshold() float32
	GetCcdSquareMotionThreshold() float32
	SetCcdMotionThreshold(arg2 float32)
	GetUserPointer() uintptr
	GetUserIndex() int
	SetUserPointer(arg2 uintptr)
	SetUserIndex(arg2 int)
	GetUpdateRevisionInternal() int
	CheckCollideWith(arg2 BtCollisionObject) bool
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	SerializeSingleObject(arg2 BtSerializer)
}

type SwigcptrBtCollisionObjectDoubleData uintptr

func (p SwigcptrBtCollisionObjectDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionObjectDoubleData) SwigIsBtCollisionObjectDoubleData() {
}

func _swig_wrap_btCollisionObjectDoubleData_m_broadphaseHandle_set(SwigcptrBtCollisionObjectDoubleData, uintptr)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_broadphaseHandle(arg2 uintptr) {
	_swig_wrap_btCollisionObjectDoubleData_m_broadphaseHandle_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_broadphaseHandle_get(SwigcptrBtCollisionObjectDoubleData) uintptr

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_broadphaseHandle() uintptr {
	return _swig_wrap_btCollisionObjectDoubleData_m_broadphaseHandle_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_collisionShape_set(SwigcptrBtCollisionObjectDoubleData, uintptr)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_collisionShape(arg2 uintptr) {
	_swig_wrap_btCollisionObjectDoubleData_m_collisionShape_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_collisionShape_get(SwigcptrBtCollisionObjectDoubleData) uintptr

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_collisionShape() uintptr {
	return _swig_wrap_btCollisionObjectDoubleData_m_collisionShape_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_rootCollisionShape_set(SwigcptrBtCollisionObjectDoubleData, uintptr)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_rootCollisionShape(arg2 BtCollisionShapeData) {
	_swig_wrap_btCollisionObjectDoubleData_m_rootCollisionShape_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectDoubleData_m_rootCollisionShape_get(SwigcptrBtCollisionObjectDoubleData) SwigcptrBtCollisionShapeData

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_rootCollisionShape() BtCollisionShapeData {
	return _swig_wrap_btCollisionObjectDoubleData_m_rootCollisionShape_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_name_set(SwigcptrBtCollisionObjectDoubleData, string)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_name(arg2 string) {
	_swig_wrap_btCollisionObjectDoubleData_m_name_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_name_get(SwigcptrBtCollisionObjectDoubleData) string

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_name() string {
	return _swig_wrap_btCollisionObjectDoubleData_m_name_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_worldTransform_set(SwigcptrBtCollisionObjectDoubleData, uintptr)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_worldTransform(arg2 BtTransformDoubleData) {
	_swig_wrap_btCollisionObjectDoubleData_m_worldTransform_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectDoubleData_m_worldTransform_get(SwigcptrBtCollisionObjectDoubleData) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_worldTransform() BtTransformDoubleData {
	return _swig_wrap_btCollisionObjectDoubleData_m_worldTransform_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_interpolationWorldTransform_set(SwigcptrBtCollisionObjectDoubleData, uintptr)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_interpolationWorldTransform(arg2 BtTransformDoubleData) {
	_swig_wrap_btCollisionObjectDoubleData_m_interpolationWorldTransform_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectDoubleData_m_interpolationWorldTransform_get(SwigcptrBtCollisionObjectDoubleData) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_interpolationWorldTransform() BtTransformDoubleData {
	return _swig_wrap_btCollisionObjectDoubleData_m_interpolationWorldTransform_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_interpolationLinearVelocity_set(SwigcptrBtCollisionObjectDoubleData, uintptr)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_interpolationLinearVelocity(arg2 BtVector3DoubleData) {
	_swig_wrap_btCollisionObjectDoubleData_m_interpolationLinearVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectDoubleData_m_interpolationLinearVelocity_get(SwigcptrBtCollisionObjectDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_interpolationLinearVelocity() BtVector3DoubleData {
	return _swig_wrap_btCollisionObjectDoubleData_m_interpolationLinearVelocity_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_interpolationAngularVelocity_set(SwigcptrBtCollisionObjectDoubleData, uintptr)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_interpolationAngularVelocity(arg2 BtVector3DoubleData) {
	_swig_wrap_btCollisionObjectDoubleData_m_interpolationAngularVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectDoubleData_m_interpolationAngularVelocity_get(SwigcptrBtCollisionObjectDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_interpolationAngularVelocity() BtVector3DoubleData {
	return _swig_wrap_btCollisionObjectDoubleData_m_interpolationAngularVelocity_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_anisotropicFriction_set(SwigcptrBtCollisionObjectDoubleData, uintptr)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_anisotropicFriction(arg2 BtVector3DoubleData) {
	_swig_wrap_btCollisionObjectDoubleData_m_anisotropicFriction_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectDoubleData_m_anisotropicFriction_get(SwigcptrBtCollisionObjectDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_anisotropicFriction() BtVector3DoubleData {
	return _swig_wrap_btCollisionObjectDoubleData_m_anisotropicFriction_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_contactProcessingThreshold_set(SwigcptrBtCollisionObjectDoubleData, float64)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_contactProcessingThreshold(arg2 float64) {
	_swig_wrap_btCollisionObjectDoubleData_m_contactProcessingThreshold_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_contactProcessingThreshold_get(SwigcptrBtCollisionObjectDoubleData) float64

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_contactProcessingThreshold() float64 {
	return _swig_wrap_btCollisionObjectDoubleData_m_contactProcessingThreshold_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_deactivationTime_set(SwigcptrBtCollisionObjectDoubleData, float64)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_deactivationTime(arg2 float64) {
	_swig_wrap_btCollisionObjectDoubleData_m_deactivationTime_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_deactivationTime_get(SwigcptrBtCollisionObjectDoubleData) float64

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_deactivationTime() float64 {
	return _swig_wrap_btCollisionObjectDoubleData_m_deactivationTime_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_friction_set(SwigcptrBtCollisionObjectDoubleData, float64)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_friction(arg2 float64) {
	_swig_wrap_btCollisionObjectDoubleData_m_friction_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_friction_get(SwigcptrBtCollisionObjectDoubleData) float64

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_friction() float64 {
	return _swig_wrap_btCollisionObjectDoubleData_m_friction_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_rollingFriction_set(SwigcptrBtCollisionObjectDoubleData, float64)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_rollingFriction(arg2 float64) {
	_swig_wrap_btCollisionObjectDoubleData_m_rollingFriction_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_rollingFriction_get(SwigcptrBtCollisionObjectDoubleData) float64

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_rollingFriction() float64 {
	return _swig_wrap_btCollisionObjectDoubleData_m_rollingFriction_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_restitution_set(SwigcptrBtCollisionObjectDoubleData, float64)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_restitution(arg2 float64) {
	_swig_wrap_btCollisionObjectDoubleData_m_restitution_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_restitution_get(SwigcptrBtCollisionObjectDoubleData) float64

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_restitution() float64 {
	return _swig_wrap_btCollisionObjectDoubleData_m_restitution_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_hitFraction_set(SwigcptrBtCollisionObjectDoubleData, float64)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_hitFraction(arg2 float64) {
	_swig_wrap_btCollisionObjectDoubleData_m_hitFraction_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_hitFraction_get(SwigcptrBtCollisionObjectDoubleData) float64

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_hitFraction() float64 {
	return _swig_wrap_btCollisionObjectDoubleData_m_hitFraction_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_ccdSweptSphereRadius_set(SwigcptrBtCollisionObjectDoubleData, float64)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_ccdSweptSphereRadius(arg2 float64) {
	_swig_wrap_btCollisionObjectDoubleData_m_ccdSweptSphereRadius_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_ccdSweptSphereRadius_get(SwigcptrBtCollisionObjectDoubleData) float64

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_ccdSweptSphereRadius() float64 {
	return _swig_wrap_btCollisionObjectDoubleData_m_ccdSweptSphereRadius_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_ccdMotionThreshold_set(SwigcptrBtCollisionObjectDoubleData, float64)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_ccdMotionThreshold(arg2 float64) {
	_swig_wrap_btCollisionObjectDoubleData_m_ccdMotionThreshold_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_ccdMotionThreshold_get(SwigcptrBtCollisionObjectDoubleData) float64

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_ccdMotionThreshold() float64 {
	return _swig_wrap_btCollisionObjectDoubleData_m_ccdMotionThreshold_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_hasAnisotropicFriction_set(SwigcptrBtCollisionObjectDoubleData, int)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_hasAnisotropicFriction(arg2 int) {
	_swig_wrap_btCollisionObjectDoubleData_m_hasAnisotropicFriction_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_hasAnisotropicFriction_get(SwigcptrBtCollisionObjectDoubleData) int

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_hasAnisotropicFriction() int {
	return _swig_wrap_btCollisionObjectDoubleData_m_hasAnisotropicFriction_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_collisionFlags_set(SwigcptrBtCollisionObjectDoubleData, int)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_collisionFlags(arg2 int) {
	_swig_wrap_btCollisionObjectDoubleData_m_collisionFlags_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_collisionFlags_get(SwigcptrBtCollisionObjectDoubleData) int

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_collisionFlags() int {
	return _swig_wrap_btCollisionObjectDoubleData_m_collisionFlags_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_islandTag1_set(SwigcptrBtCollisionObjectDoubleData, int)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_islandTag1(arg2 int) {
	_swig_wrap_btCollisionObjectDoubleData_m_islandTag1_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_islandTag1_get(SwigcptrBtCollisionObjectDoubleData) int

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_islandTag1() int {
	return _swig_wrap_btCollisionObjectDoubleData_m_islandTag1_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_companionId_set(SwigcptrBtCollisionObjectDoubleData, int)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_companionId(arg2 int) {
	_swig_wrap_btCollisionObjectDoubleData_m_companionId_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_companionId_get(SwigcptrBtCollisionObjectDoubleData) int

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_companionId() int {
	return _swig_wrap_btCollisionObjectDoubleData_m_companionId_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_activationState1_set(SwigcptrBtCollisionObjectDoubleData, int)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_activationState1(arg2 int) {
	_swig_wrap_btCollisionObjectDoubleData_m_activationState1_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_activationState1_get(SwigcptrBtCollisionObjectDoubleData) int

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_activationState1() int {
	return _swig_wrap_btCollisionObjectDoubleData_m_activationState1_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_internalType_set(SwigcptrBtCollisionObjectDoubleData, int)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_internalType(arg2 int) {
	_swig_wrap_btCollisionObjectDoubleData_m_internalType_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_internalType_get(SwigcptrBtCollisionObjectDoubleData) int

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_internalType() int {
	return _swig_wrap_btCollisionObjectDoubleData_m_internalType_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_checkCollideWith_set(SwigcptrBtCollisionObjectDoubleData, int)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_checkCollideWith(arg2 int) {
	_swig_wrap_btCollisionObjectDoubleData_m_checkCollideWith_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_checkCollideWith_get(SwigcptrBtCollisionObjectDoubleData) int

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_checkCollideWith() int {
	return _swig_wrap_btCollisionObjectDoubleData_m_checkCollideWith_get(arg1)
}

func _swig_wrap_btCollisionObjectDoubleData_m_padding_set(SwigcptrBtCollisionObjectDoubleData, string)

func (arg1 SwigcptrBtCollisionObjectDoubleData) SetM_padding(arg2 string) {
	_swig_wrap_btCollisionObjectDoubleData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectDoubleData_m_padding_get(SwigcptrBtCollisionObjectDoubleData) string

func (arg1 SwigcptrBtCollisionObjectDoubleData) GetM_padding() string {
	return _swig_wrap_btCollisionObjectDoubleData_m_padding_get(arg1)
}

func _swig_wrap_new_btCollisionObjectDoubleData() SwigcptrBtCollisionObjectDoubleData

func NewBtCollisionObjectDoubleData() BtCollisionObjectDoubleData {
	return _swig_wrap_new_btCollisionObjectDoubleData()
}

func _swig_wrap_delete_btCollisionObjectDoubleData(uintptr)

func DeleteBtCollisionObjectDoubleData(arg1 BtCollisionObjectDoubleData) {
	_swig_wrap_delete_btCollisionObjectDoubleData(arg1.Swigcptr())
}

type BtCollisionObjectDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtCollisionObjectDoubleData()
	SetM_broadphaseHandle(arg2 uintptr)
	GetM_broadphaseHandle() uintptr
	SetM_collisionShape(arg2 uintptr)
	GetM_collisionShape() uintptr
	SetM_rootCollisionShape(arg2 BtCollisionShapeData)
	GetM_rootCollisionShape() BtCollisionShapeData
	SetM_name(arg2 string)
	GetM_name() string
	SetM_worldTransform(arg2 BtTransformDoubleData)
	GetM_worldTransform() BtTransformDoubleData
	SetM_interpolationWorldTransform(arg2 BtTransformDoubleData)
	GetM_interpolationWorldTransform() BtTransformDoubleData
	SetM_interpolationLinearVelocity(arg2 BtVector3DoubleData)
	GetM_interpolationLinearVelocity() BtVector3DoubleData
	SetM_interpolationAngularVelocity(arg2 BtVector3DoubleData)
	GetM_interpolationAngularVelocity() BtVector3DoubleData
	SetM_anisotropicFriction(arg2 BtVector3DoubleData)
	GetM_anisotropicFriction() BtVector3DoubleData
	SetM_contactProcessingThreshold(arg2 float64)
	GetM_contactProcessingThreshold() float64
	SetM_deactivationTime(arg2 float64)
	GetM_deactivationTime() float64
	SetM_friction(arg2 float64)
	GetM_friction() float64
	SetM_rollingFriction(arg2 float64)
	GetM_rollingFriction() float64
	SetM_restitution(arg2 float64)
	GetM_restitution() float64
	SetM_hitFraction(arg2 float64)
	GetM_hitFraction() float64
	SetM_ccdSweptSphereRadius(arg2 float64)
	GetM_ccdSweptSphereRadius() float64
	SetM_ccdMotionThreshold(arg2 float64)
	GetM_ccdMotionThreshold() float64
	SetM_hasAnisotropicFriction(arg2 int)
	GetM_hasAnisotropicFriction() int
	SetM_collisionFlags(arg2 int)
	GetM_collisionFlags() int
	SetM_islandTag1(arg2 int)
	GetM_islandTag1() int
	SetM_companionId(arg2 int)
	GetM_companionId() int
	SetM_activationState1(arg2 int)
	GetM_activationState1() int
	SetM_internalType(arg2 int)
	GetM_internalType() int
	SetM_checkCollideWith(arg2 int)
	GetM_checkCollideWith() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtCollisionObjectFloatData uintptr

func (p SwigcptrBtCollisionObjectFloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionObjectFloatData) SwigIsBtCollisionObjectFloatData() {
}

func _swig_wrap_btCollisionObjectFloatData_m_broadphaseHandle_set(SwigcptrBtCollisionObjectFloatData, uintptr)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_broadphaseHandle(arg2 uintptr) {
	_swig_wrap_btCollisionObjectFloatData_m_broadphaseHandle_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_broadphaseHandle_get(SwigcptrBtCollisionObjectFloatData) uintptr

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_broadphaseHandle() uintptr {
	return _swig_wrap_btCollisionObjectFloatData_m_broadphaseHandle_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_collisionShape_set(SwigcptrBtCollisionObjectFloatData, uintptr)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_collisionShape(arg2 uintptr) {
	_swig_wrap_btCollisionObjectFloatData_m_collisionShape_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_collisionShape_get(SwigcptrBtCollisionObjectFloatData) uintptr

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_collisionShape() uintptr {
	return _swig_wrap_btCollisionObjectFloatData_m_collisionShape_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_rootCollisionShape_set(SwigcptrBtCollisionObjectFloatData, uintptr)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_rootCollisionShape(arg2 BtCollisionShapeData) {
	_swig_wrap_btCollisionObjectFloatData_m_rootCollisionShape_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectFloatData_m_rootCollisionShape_get(SwigcptrBtCollisionObjectFloatData) SwigcptrBtCollisionShapeData

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_rootCollisionShape() BtCollisionShapeData {
	return _swig_wrap_btCollisionObjectFloatData_m_rootCollisionShape_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_name_set(SwigcptrBtCollisionObjectFloatData, string)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_name(arg2 string) {
	_swig_wrap_btCollisionObjectFloatData_m_name_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_name_get(SwigcptrBtCollisionObjectFloatData) string

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_name() string {
	return _swig_wrap_btCollisionObjectFloatData_m_name_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_worldTransform_set(SwigcptrBtCollisionObjectFloatData, uintptr)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_worldTransform(arg2 BtTransformFloatData) {
	_swig_wrap_btCollisionObjectFloatData_m_worldTransform_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectFloatData_m_worldTransform_get(SwigcptrBtCollisionObjectFloatData) SwigcptrBtTransformFloatData

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_worldTransform() BtTransformFloatData {
	return _swig_wrap_btCollisionObjectFloatData_m_worldTransform_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_interpolationWorldTransform_set(SwigcptrBtCollisionObjectFloatData, uintptr)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_interpolationWorldTransform(arg2 BtTransformFloatData) {
	_swig_wrap_btCollisionObjectFloatData_m_interpolationWorldTransform_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectFloatData_m_interpolationWorldTransform_get(SwigcptrBtCollisionObjectFloatData) SwigcptrBtTransformFloatData

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_interpolationWorldTransform() BtTransformFloatData {
	return _swig_wrap_btCollisionObjectFloatData_m_interpolationWorldTransform_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_interpolationLinearVelocity_set(SwigcptrBtCollisionObjectFloatData, uintptr)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_interpolationLinearVelocity(arg2 BtVector3FloatData) {
	_swig_wrap_btCollisionObjectFloatData_m_interpolationLinearVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectFloatData_m_interpolationLinearVelocity_get(SwigcptrBtCollisionObjectFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_interpolationLinearVelocity() BtVector3FloatData {
	return _swig_wrap_btCollisionObjectFloatData_m_interpolationLinearVelocity_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_interpolationAngularVelocity_set(SwigcptrBtCollisionObjectFloatData, uintptr)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_interpolationAngularVelocity(arg2 BtVector3FloatData) {
	_swig_wrap_btCollisionObjectFloatData_m_interpolationAngularVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectFloatData_m_interpolationAngularVelocity_get(SwigcptrBtCollisionObjectFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_interpolationAngularVelocity() BtVector3FloatData {
	return _swig_wrap_btCollisionObjectFloatData_m_interpolationAngularVelocity_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_anisotropicFriction_set(SwigcptrBtCollisionObjectFloatData, uintptr)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_anisotropicFriction(arg2 BtVector3FloatData) {
	_swig_wrap_btCollisionObjectFloatData_m_anisotropicFriction_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectFloatData_m_anisotropicFriction_get(SwigcptrBtCollisionObjectFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_anisotropicFriction() BtVector3FloatData {
	return _swig_wrap_btCollisionObjectFloatData_m_anisotropicFriction_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_contactProcessingThreshold_set(SwigcptrBtCollisionObjectFloatData, float32)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_contactProcessingThreshold(arg2 float32) {
	_swig_wrap_btCollisionObjectFloatData_m_contactProcessingThreshold_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_contactProcessingThreshold_get(SwigcptrBtCollisionObjectFloatData) float32

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_contactProcessingThreshold() float32 {
	return _swig_wrap_btCollisionObjectFloatData_m_contactProcessingThreshold_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_deactivationTime_set(SwigcptrBtCollisionObjectFloatData, float32)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_deactivationTime(arg2 float32) {
	_swig_wrap_btCollisionObjectFloatData_m_deactivationTime_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_deactivationTime_get(SwigcptrBtCollisionObjectFloatData) float32

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_deactivationTime() float32 {
	return _swig_wrap_btCollisionObjectFloatData_m_deactivationTime_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_friction_set(SwigcptrBtCollisionObjectFloatData, float32)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_friction(arg2 float32) {
	_swig_wrap_btCollisionObjectFloatData_m_friction_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_friction_get(SwigcptrBtCollisionObjectFloatData) float32

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_friction() float32 {
	return _swig_wrap_btCollisionObjectFloatData_m_friction_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_rollingFriction_set(SwigcptrBtCollisionObjectFloatData, float32)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_rollingFriction(arg2 float32) {
	_swig_wrap_btCollisionObjectFloatData_m_rollingFriction_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_rollingFriction_get(SwigcptrBtCollisionObjectFloatData) float32

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_rollingFriction() float32 {
	return _swig_wrap_btCollisionObjectFloatData_m_rollingFriction_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_restitution_set(SwigcptrBtCollisionObjectFloatData, float32)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_restitution(arg2 float32) {
	_swig_wrap_btCollisionObjectFloatData_m_restitution_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_restitution_get(SwigcptrBtCollisionObjectFloatData) float32

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_restitution() float32 {
	return _swig_wrap_btCollisionObjectFloatData_m_restitution_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_hitFraction_set(SwigcptrBtCollisionObjectFloatData, float32)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_hitFraction(arg2 float32) {
	_swig_wrap_btCollisionObjectFloatData_m_hitFraction_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_hitFraction_get(SwigcptrBtCollisionObjectFloatData) float32

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_hitFraction() float32 {
	return _swig_wrap_btCollisionObjectFloatData_m_hitFraction_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_ccdSweptSphereRadius_set(SwigcptrBtCollisionObjectFloatData, float32)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_ccdSweptSphereRadius(arg2 float32) {
	_swig_wrap_btCollisionObjectFloatData_m_ccdSweptSphereRadius_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_ccdSweptSphereRadius_get(SwigcptrBtCollisionObjectFloatData) float32

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_ccdSweptSphereRadius() float32 {
	return _swig_wrap_btCollisionObjectFloatData_m_ccdSweptSphereRadius_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_ccdMotionThreshold_set(SwigcptrBtCollisionObjectFloatData, float32)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_ccdMotionThreshold(arg2 float32) {
	_swig_wrap_btCollisionObjectFloatData_m_ccdMotionThreshold_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_ccdMotionThreshold_get(SwigcptrBtCollisionObjectFloatData) float32

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_ccdMotionThreshold() float32 {
	return _swig_wrap_btCollisionObjectFloatData_m_ccdMotionThreshold_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_hasAnisotropicFriction_set(SwigcptrBtCollisionObjectFloatData, int)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_hasAnisotropicFriction(arg2 int) {
	_swig_wrap_btCollisionObjectFloatData_m_hasAnisotropicFriction_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_hasAnisotropicFriction_get(SwigcptrBtCollisionObjectFloatData) int

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_hasAnisotropicFriction() int {
	return _swig_wrap_btCollisionObjectFloatData_m_hasAnisotropicFriction_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_collisionFlags_set(SwigcptrBtCollisionObjectFloatData, int)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_collisionFlags(arg2 int) {
	_swig_wrap_btCollisionObjectFloatData_m_collisionFlags_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_collisionFlags_get(SwigcptrBtCollisionObjectFloatData) int

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_collisionFlags() int {
	return _swig_wrap_btCollisionObjectFloatData_m_collisionFlags_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_islandTag1_set(SwigcptrBtCollisionObjectFloatData, int)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_islandTag1(arg2 int) {
	_swig_wrap_btCollisionObjectFloatData_m_islandTag1_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_islandTag1_get(SwigcptrBtCollisionObjectFloatData) int

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_islandTag1() int {
	return _swig_wrap_btCollisionObjectFloatData_m_islandTag1_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_companionId_set(SwigcptrBtCollisionObjectFloatData, int)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_companionId(arg2 int) {
	_swig_wrap_btCollisionObjectFloatData_m_companionId_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_companionId_get(SwigcptrBtCollisionObjectFloatData) int

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_companionId() int {
	return _swig_wrap_btCollisionObjectFloatData_m_companionId_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_activationState1_set(SwigcptrBtCollisionObjectFloatData, int)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_activationState1(arg2 int) {
	_swig_wrap_btCollisionObjectFloatData_m_activationState1_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_activationState1_get(SwigcptrBtCollisionObjectFloatData) int

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_activationState1() int {
	return _swig_wrap_btCollisionObjectFloatData_m_activationState1_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_internalType_set(SwigcptrBtCollisionObjectFloatData, int)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_internalType(arg2 int) {
	_swig_wrap_btCollisionObjectFloatData_m_internalType_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_internalType_get(SwigcptrBtCollisionObjectFloatData) int

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_internalType() int {
	return _swig_wrap_btCollisionObjectFloatData_m_internalType_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_checkCollideWith_set(SwigcptrBtCollisionObjectFloatData, int)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_checkCollideWith(arg2 int) {
	_swig_wrap_btCollisionObjectFloatData_m_checkCollideWith_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_checkCollideWith_get(SwigcptrBtCollisionObjectFloatData) int

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_checkCollideWith() int {
	return _swig_wrap_btCollisionObjectFloatData_m_checkCollideWith_get(arg1)
}

func _swig_wrap_btCollisionObjectFloatData_m_padding_set(SwigcptrBtCollisionObjectFloatData, string)

func (arg1 SwigcptrBtCollisionObjectFloatData) SetM_padding(arg2 string) {
	_swig_wrap_btCollisionObjectFloatData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectFloatData_m_padding_get(SwigcptrBtCollisionObjectFloatData) string

func (arg1 SwigcptrBtCollisionObjectFloatData) GetM_padding() string {
	return _swig_wrap_btCollisionObjectFloatData_m_padding_get(arg1)
}

func _swig_wrap_new_btCollisionObjectFloatData() SwigcptrBtCollisionObjectFloatData

func NewBtCollisionObjectFloatData() BtCollisionObjectFloatData {
	return _swig_wrap_new_btCollisionObjectFloatData()
}

func _swig_wrap_delete_btCollisionObjectFloatData(uintptr)

func DeleteBtCollisionObjectFloatData(arg1 BtCollisionObjectFloatData) {
	_swig_wrap_delete_btCollisionObjectFloatData(arg1.Swigcptr())
}

type BtCollisionObjectFloatData interface {
	Swigcptr() uintptr
	SwigIsBtCollisionObjectFloatData()
	SetM_broadphaseHandle(arg2 uintptr)
	GetM_broadphaseHandle() uintptr
	SetM_collisionShape(arg2 uintptr)
	GetM_collisionShape() uintptr
	SetM_rootCollisionShape(arg2 BtCollisionShapeData)
	GetM_rootCollisionShape() BtCollisionShapeData
	SetM_name(arg2 string)
	GetM_name() string
	SetM_worldTransform(arg2 BtTransformFloatData)
	GetM_worldTransform() BtTransformFloatData
	SetM_interpolationWorldTransform(arg2 BtTransformFloatData)
	GetM_interpolationWorldTransform() BtTransformFloatData
	SetM_interpolationLinearVelocity(arg2 BtVector3FloatData)
	GetM_interpolationLinearVelocity() BtVector3FloatData
	SetM_interpolationAngularVelocity(arg2 BtVector3FloatData)
	GetM_interpolationAngularVelocity() BtVector3FloatData
	SetM_anisotropicFriction(arg2 BtVector3FloatData)
	GetM_anisotropicFriction() BtVector3FloatData
	SetM_contactProcessingThreshold(arg2 float32)
	GetM_contactProcessingThreshold() float32
	SetM_deactivationTime(arg2 float32)
	GetM_deactivationTime() float32
	SetM_friction(arg2 float32)
	GetM_friction() float32
	SetM_rollingFriction(arg2 float32)
	GetM_rollingFriction() float32
	SetM_restitution(arg2 float32)
	GetM_restitution() float32
	SetM_hitFraction(arg2 float32)
	GetM_hitFraction() float32
	SetM_ccdSweptSphereRadius(arg2 float32)
	GetM_ccdSweptSphereRadius() float32
	SetM_ccdMotionThreshold(arg2 float32)
	GetM_ccdMotionThreshold() float32
	SetM_hasAnisotropicFriction(arg2 int)
	GetM_hasAnisotropicFriction() int
	SetM_collisionFlags(arg2 int)
	GetM_collisionFlags() int
	SetM_islandTag1(arg2 int)
	GetM_islandTag1() int
	SetM_companionId(arg2 int)
	GetM_companionId() int
	SetM_activationState1(arg2 int)
	GetM_activationState1() int
	SetM_internalType(arg2 int)
	GetM_internalType() int
	SetM_checkCollideWith(arg2 int)
	GetM_checkCollideWith() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtDispatcherInfo uintptr

func (p SwigcptrBtDispatcherInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDispatcherInfo) SwigIsBtDispatcherInfo() {
}

type BtDispatcherInfoDispatchFunc int

func _swig_getbtDispatcherInfo_DISPATCH_DISCRETE_btDispatcherInfo() BtDispatcherInfoDispatchFunc

var BtDispatcherInfoDISPATCH_DISCRETE BtDispatcherInfoDispatchFunc = _swig_getbtDispatcherInfo_DISPATCH_DISCRETE_btDispatcherInfo()

func _swig_getbtDispatcherInfo_DISPATCH_CONTINUOUS_btDispatcherInfo() BtDispatcherInfoDispatchFunc

var BtDispatcherInfoDISPATCH_CONTINUOUS BtDispatcherInfoDispatchFunc = _swig_getbtDispatcherInfo_DISPATCH_CONTINUOUS_btDispatcherInfo()

func _swig_wrap_new_btDispatcherInfo() SwigcptrBtDispatcherInfo

func NewBtDispatcherInfo() BtDispatcherInfo {
	return _swig_wrap_new_btDispatcherInfo()
}

func _swig_wrap_btDispatcherInfo_m_timeStep_set(SwigcptrBtDispatcherInfo, float32)

func (arg1 SwigcptrBtDispatcherInfo) SetM_timeStep(arg2 float32) {
	_swig_wrap_btDispatcherInfo_m_timeStep_set(arg1, arg2)
}

func _swig_wrap_btDispatcherInfo_m_timeStep_get(SwigcptrBtDispatcherInfo) float32

func (arg1 SwigcptrBtDispatcherInfo) GetM_timeStep() float32 {
	return _swig_wrap_btDispatcherInfo_m_timeStep_get(arg1)
}

func _swig_wrap_btDispatcherInfo_m_stepCount_set(SwigcptrBtDispatcherInfo, int)

func (arg1 SwigcptrBtDispatcherInfo) SetM_stepCount(arg2 int) {
	_swig_wrap_btDispatcherInfo_m_stepCount_set(arg1, arg2)
}

func _swig_wrap_btDispatcherInfo_m_stepCount_get(SwigcptrBtDispatcherInfo) int

func (arg1 SwigcptrBtDispatcherInfo) GetM_stepCount() int {
	return _swig_wrap_btDispatcherInfo_m_stepCount_get(arg1)
}

func _swig_wrap_btDispatcherInfo_m_dispatchFunc_set(SwigcptrBtDispatcherInfo, int)

func (arg1 SwigcptrBtDispatcherInfo) SetM_dispatchFunc(arg2 int) {
	_swig_wrap_btDispatcherInfo_m_dispatchFunc_set(arg1, arg2)
}

func _swig_wrap_btDispatcherInfo_m_dispatchFunc_get(SwigcptrBtDispatcherInfo) int

func (arg1 SwigcptrBtDispatcherInfo) GetM_dispatchFunc() int {
	return _swig_wrap_btDispatcherInfo_m_dispatchFunc_get(arg1)
}

func _swig_wrap_btDispatcherInfo_m_timeOfImpact_set(SwigcptrBtDispatcherInfo, float32)

func (arg1 SwigcptrBtDispatcherInfo) SetM_timeOfImpact(arg2 float32) {
	_swig_wrap_btDispatcherInfo_m_timeOfImpact_set(arg1, arg2)
}

func _swig_wrap_btDispatcherInfo_m_timeOfImpact_get(SwigcptrBtDispatcherInfo) float32

func (arg1 SwigcptrBtDispatcherInfo) GetM_timeOfImpact() float32 {
	return _swig_wrap_btDispatcherInfo_m_timeOfImpact_get(arg1)
}

func _swig_wrap_btDispatcherInfo_m_useContinuous_set(SwigcptrBtDispatcherInfo, bool)

func (arg1 SwigcptrBtDispatcherInfo) SetM_useContinuous(arg2 bool) {
	_swig_wrap_btDispatcherInfo_m_useContinuous_set(arg1, arg2)
}

func _swig_wrap_btDispatcherInfo_m_useContinuous_get(SwigcptrBtDispatcherInfo) bool

func (arg1 SwigcptrBtDispatcherInfo) GetM_useContinuous() bool {
	return _swig_wrap_btDispatcherInfo_m_useContinuous_get(arg1)
}

func _swig_wrap_btDispatcherInfo_m_debugDraw_set(SwigcptrBtDispatcherInfo, uintptr)

func (arg1 SwigcptrBtDispatcherInfo) SetM_debugDraw(arg2 BtIDebugDraw) {
	_swig_wrap_btDispatcherInfo_m_debugDraw_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDispatcherInfo_m_debugDraw_get(SwigcptrBtDispatcherInfo) SwigcptrBtIDebugDraw

func (arg1 SwigcptrBtDispatcherInfo) GetM_debugDraw() BtIDebugDraw {
	return _swig_wrap_btDispatcherInfo_m_debugDraw_get(arg1)
}

func _swig_wrap_btDispatcherInfo_m_enableSatConvex_set(SwigcptrBtDispatcherInfo, bool)

func (arg1 SwigcptrBtDispatcherInfo) SetM_enableSatConvex(arg2 bool) {
	_swig_wrap_btDispatcherInfo_m_enableSatConvex_set(arg1, arg2)
}

func _swig_wrap_btDispatcherInfo_m_enableSatConvex_get(SwigcptrBtDispatcherInfo) bool

func (arg1 SwigcptrBtDispatcherInfo) GetM_enableSatConvex() bool {
	return _swig_wrap_btDispatcherInfo_m_enableSatConvex_get(arg1)
}

func _swig_wrap_btDispatcherInfo_m_enableSPU_set(SwigcptrBtDispatcherInfo, bool)

func (arg1 SwigcptrBtDispatcherInfo) SetM_enableSPU(arg2 bool) {
	_swig_wrap_btDispatcherInfo_m_enableSPU_set(arg1, arg2)
}

func _swig_wrap_btDispatcherInfo_m_enableSPU_get(SwigcptrBtDispatcherInfo) bool

func (arg1 SwigcptrBtDispatcherInfo) GetM_enableSPU() bool {
	return _swig_wrap_btDispatcherInfo_m_enableSPU_get(arg1)
}

func _swig_wrap_btDispatcherInfo_m_useEpa_set(SwigcptrBtDispatcherInfo, bool)

func (arg1 SwigcptrBtDispatcherInfo) SetM_useEpa(arg2 bool) {
	_swig_wrap_btDispatcherInfo_m_useEpa_set(arg1, arg2)
}

func _swig_wrap_btDispatcherInfo_m_useEpa_get(SwigcptrBtDispatcherInfo) bool

func (arg1 SwigcptrBtDispatcherInfo) GetM_useEpa() bool {
	return _swig_wrap_btDispatcherInfo_m_useEpa_get(arg1)
}

func _swig_wrap_btDispatcherInfo_m_allowedCcdPenetration_set(SwigcptrBtDispatcherInfo, float32)

func (arg1 SwigcptrBtDispatcherInfo) SetM_allowedCcdPenetration(arg2 float32) {
	_swig_wrap_btDispatcherInfo_m_allowedCcdPenetration_set(arg1, arg2)
}

func _swig_wrap_btDispatcherInfo_m_allowedCcdPenetration_get(SwigcptrBtDispatcherInfo) float32

func (arg1 SwigcptrBtDispatcherInfo) GetM_allowedCcdPenetration() float32 {
	return _swig_wrap_btDispatcherInfo_m_allowedCcdPenetration_get(arg1)
}

func _swig_wrap_btDispatcherInfo_m_useConvexConservativeDistanceUtil_set(SwigcptrBtDispatcherInfo, bool)

func (arg1 SwigcptrBtDispatcherInfo) SetM_useConvexConservativeDistanceUtil(arg2 bool) {
	_swig_wrap_btDispatcherInfo_m_useConvexConservativeDistanceUtil_set(arg1, arg2)
}

func _swig_wrap_btDispatcherInfo_m_useConvexConservativeDistanceUtil_get(SwigcptrBtDispatcherInfo) bool

func (arg1 SwigcptrBtDispatcherInfo) GetM_useConvexConservativeDistanceUtil() bool {
	return _swig_wrap_btDispatcherInfo_m_useConvexConservativeDistanceUtil_get(arg1)
}

func _swig_wrap_btDispatcherInfo_m_convexConservativeDistanceThreshold_set(SwigcptrBtDispatcherInfo, float32)

func (arg1 SwigcptrBtDispatcherInfo) SetM_convexConservativeDistanceThreshold(arg2 float32) {
	_swig_wrap_btDispatcherInfo_m_convexConservativeDistanceThreshold_set(arg1, arg2)
}

func _swig_wrap_btDispatcherInfo_m_convexConservativeDistanceThreshold_get(SwigcptrBtDispatcherInfo) float32

func (arg1 SwigcptrBtDispatcherInfo) GetM_convexConservativeDistanceThreshold() float32 {
	return _swig_wrap_btDispatcherInfo_m_convexConservativeDistanceThreshold_get(arg1)
}

func _swig_wrap_delete_btDispatcherInfo(uintptr)

func DeleteBtDispatcherInfo(arg1 BtDispatcherInfo) {
	_swig_wrap_delete_btDispatcherInfo(arg1.Swigcptr())
}

type BtDispatcherInfo interface {
	Swigcptr() uintptr
	SwigIsBtDispatcherInfo()
	SetM_timeStep(arg2 float32)
	GetM_timeStep() float32
	SetM_stepCount(arg2 int)
	GetM_stepCount() int
	SetM_dispatchFunc(arg2 int)
	GetM_dispatchFunc() int
	SetM_timeOfImpact(arg2 float32)
	GetM_timeOfImpact() float32
	SetM_useContinuous(arg2 bool)
	GetM_useContinuous() bool
	SetM_debugDraw(arg2 BtIDebugDraw)
	GetM_debugDraw() BtIDebugDraw
	SetM_enableSatConvex(arg2 bool)
	GetM_enableSatConvex() bool
	SetM_enableSPU(arg2 bool)
	GetM_enableSPU() bool
	SetM_useEpa(arg2 bool)
	GetM_useEpa() bool
	SetM_allowedCcdPenetration(arg2 float32)
	GetM_allowedCcdPenetration() float32
	SetM_useConvexConservativeDistanceUtil(arg2 bool)
	GetM_useConvexConservativeDistanceUtil() bool
	SetM_convexConservativeDistanceThreshold(arg2 float32)
	GetM_convexConservativeDistanceThreshold() float32
}

type SwigcptrBtDispatcher uintptr

func (p SwigcptrBtDispatcher) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDispatcher) SwigIsBtDispatcher() {
}

func _swig_wrap_delete_btDispatcher(uintptr)

func DeleteBtDispatcher(arg1 BtDispatcher) {
	_swig_wrap_delete_btDispatcher(arg1.Swigcptr())
}

func _swig_wrap_btDispatcher_findAlgorithm__SWIG_0(SwigcptrBtDispatcher, uintptr, uintptr, uintptr) SwigcptrBtCollisionAlgorithm

func (arg1 SwigcptrBtDispatcher) FindAlgorithm__SWIG_0(arg2 BtCollisionObjectWrapper, arg3 BtCollisionObjectWrapper, arg4 BtPersistentManifold) BtCollisionAlgorithm {
	return _swig_wrap_btDispatcher_findAlgorithm__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btDispatcher_findAlgorithm__SWIG_1(SwigcptrBtDispatcher, uintptr, uintptr) SwigcptrBtCollisionAlgorithm

func (arg1 SwigcptrBtDispatcher) FindAlgorithm__SWIG_1(arg2 BtCollisionObjectWrapper, arg3 BtCollisionObjectWrapper) BtCollisionAlgorithm {
	return _swig_wrap_btDispatcher_findAlgorithm__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func (p SwigcptrBtDispatcher) FindAlgorithm(a ...interface{}) BtCollisionAlgorithm {
	argc := len(a)
	if argc == 2 {
		return p.FindAlgorithm__SWIG_1(a[0].(BtCollisionObjectWrapper), a[1].(BtCollisionObjectWrapper))
	}
	if argc == 3 {
		return p.FindAlgorithm__SWIG_0(a[0].(BtCollisionObjectWrapper), a[1].(BtCollisionObjectWrapper), a[2].(BtPersistentManifold))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDispatcher_getNewManifold(SwigcptrBtDispatcher, uintptr, uintptr) SwigcptrBtPersistentManifold

func (arg1 SwigcptrBtDispatcher) GetNewManifold(arg2 BtCollisionObject, arg3 BtCollisionObject) BtPersistentManifold {
	return _swig_wrap_btDispatcher_getNewManifold(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDispatcher_releaseManifold(SwigcptrBtDispatcher, uintptr)

func (arg1 SwigcptrBtDispatcher) ReleaseManifold(arg2 BtPersistentManifold) {
	_swig_wrap_btDispatcher_releaseManifold(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDispatcher_clearManifold(SwigcptrBtDispatcher, uintptr)

func (arg1 SwigcptrBtDispatcher) ClearManifold(arg2 BtPersistentManifold) {
	_swig_wrap_btDispatcher_clearManifold(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDispatcher_needsCollision(SwigcptrBtDispatcher, uintptr, uintptr) bool

func (arg1 SwigcptrBtDispatcher) NeedsCollision(arg2 BtCollisionObject, arg3 BtCollisionObject) bool {
	return _swig_wrap_btDispatcher_needsCollision(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDispatcher_needsResponse(SwigcptrBtDispatcher, uintptr, uintptr) bool

func (arg1 SwigcptrBtDispatcher) NeedsResponse(arg2 BtCollisionObject, arg3 BtCollisionObject) bool {
	return _swig_wrap_btDispatcher_needsResponse(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDispatcher_dispatchAllCollisionPairs(SwigcptrBtDispatcher, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDispatcher) DispatchAllCollisionPairs(arg2 BtOverlappingPairCache, arg3 BtDispatcherInfo, arg4 BtDispatcher) {
	_swig_wrap_btDispatcher_dispatchAllCollisionPairs(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btDispatcher_getNumManifolds(SwigcptrBtDispatcher) int

func (arg1 SwigcptrBtDispatcher) GetNumManifolds() int {
	return _swig_wrap_btDispatcher_getNumManifolds(arg1)
}

func _swig_wrap_btDispatcher_getManifoldByIndexInternal(SwigcptrBtDispatcher, int) SwigcptrBtPersistentManifold

func (arg1 SwigcptrBtDispatcher) GetManifoldByIndexInternal(arg2 int) BtPersistentManifold {
	return _swig_wrap_btDispatcher_getManifoldByIndexInternal(arg1, arg2)
}

func _swig_wrap_btDispatcher_getInternalManifoldPointer(SwigcptrBtDispatcher) SwigcptrBtPersistentManifold

func (arg1 SwigcptrBtDispatcher) GetInternalManifoldPointer() BtPersistentManifold {
	return _swig_wrap_btDispatcher_getInternalManifoldPointer(arg1)
}

func _swig_wrap_btDispatcher_getInternalManifoldPool__SWIG_0(SwigcptrBtDispatcher) SwigcptrBtPoolAllocator

func (arg1 SwigcptrBtDispatcher) GetInternalManifoldPool__SWIG_0() BtPoolAllocator {
	return _swig_wrap_btDispatcher_getInternalManifoldPool__SWIG_0(arg1)
}

func _swig_wrap_btDispatcher_getInternalManifoldPool__SWIG_1(SwigcptrBtDispatcher) SwigcptrBtPoolAllocator

func (arg1 SwigcptrBtDispatcher) GetInternalManifoldPool__SWIG_1() BtPoolAllocator {
	return _swig_wrap_btDispatcher_getInternalManifoldPool__SWIG_1(arg1)
}

func (p SwigcptrBtDispatcher) GetInternalManifoldPool(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetInternalManifoldPool__SWIG_0()
	}
	if argc == 0 {
		return p.GetInternalManifoldPool__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDispatcher_allocateCollisionAlgorithm(SwigcptrBtDispatcher, int) uintptr

func (arg1 SwigcptrBtDispatcher) AllocateCollisionAlgorithm(arg2 int) uintptr {
	return _swig_wrap_btDispatcher_allocateCollisionAlgorithm(arg1, arg2)
}

func _swig_wrap_btDispatcher_freeCollisionAlgorithm(SwigcptrBtDispatcher, uintptr)

func (arg1 SwigcptrBtDispatcher) FreeCollisionAlgorithm(arg2 uintptr) {
	_swig_wrap_btDispatcher_freeCollisionAlgorithm(arg1, arg2)
}

type BtDispatcher interface {
	Swigcptr() uintptr
	SwigIsBtDispatcher()
	FindAlgorithm(a ...interface{}) BtCollisionAlgorithm
	GetNewManifold(arg2 BtCollisionObject, arg3 BtCollisionObject) BtPersistentManifold
	ReleaseManifold(arg2 BtPersistentManifold)
	ClearManifold(arg2 BtPersistentManifold)
	NeedsCollision(arg2 BtCollisionObject, arg3 BtCollisionObject) bool
	NeedsResponse(arg2 BtCollisionObject, arg3 BtCollisionObject) bool
	DispatchAllCollisionPairs(arg2 BtOverlappingPairCache, arg3 BtDispatcherInfo, arg4 BtDispatcher)
	GetNumManifolds() int
	GetManifoldByIndexInternal(arg2 int) BtPersistentManifold
	GetInternalManifoldPointer() BtPersistentManifold
	GetInternalManifoldPool(a ...interface{}) interface{}
	AllocateCollisionAlgorithm(arg2 int) uintptr
	FreeCollisionAlgorithm(arg2 uintptr)
}

func _swig_wrap_btAabbSupport(uintptr, uintptr) SwigcptrBtVector3

func BtAabbSupport(arg1 BtVector3, arg2 BtVector3) BtVector3 {
	return _swig_wrap_btAabbSupport(arg1.Swigcptr(), arg2.Swigcptr())
}

type SwigcptrBtTransformUtil uintptr

func (p SwigcptrBtTransformUtil) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTransformUtil) SwigIsBtTransformUtil() {
}

func _swig_wrap_btTransformUtil_integrateTransform(uintptr, uintptr, uintptr, float32, uintptr)

func BtTransformUtilIntegrateTransform(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtTransform) {
	_swig_wrap_btTransformUtil_integrateTransform(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr())
}

func _swig_wrap_btTransformUtil_calculateVelocityQuaternion(uintptr, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func BtTransformUtilCalculateVelocityQuaternion(arg1 BtVector3, arg2 BtVector3, arg3 BtQuaternion, arg4 BtQuaternion, arg5 float32, arg6 BtVector3, arg7 BtVector3) {
	_swig_wrap_btTransformUtil_calculateVelocityQuaternion(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5, arg6.Swigcptr(), arg7.Swigcptr())
}

func _swig_wrap_btTransformUtil_calculateDiffAxisAngleQuaternion(uintptr, uintptr, uintptr, *float32)

func BtTransformUtilCalculateDiffAxisAngleQuaternion(arg1 BtQuaternion, arg2 BtQuaternion, arg3 BtVector3, arg4 *float32) {
	_swig_wrap_btTransformUtil_calculateDiffAxisAngleQuaternion(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btTransformUtil_calculateVelocity(uintptr, uintptr, float32, uintptr, uintptr)

func BtTransformUtilCalculateVelocity(arg1 BtTransform, arg2 BtTransform, arg3 float32, arg4 BtVector3, arg5 BtVector3) {
	_swig_wrap_btTransformUtil_calculateVelocity(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btTransformUtil_calculateDiffAxisAngle(uintptr, uintptr, uintptr, *float32)

func BtTransformUtilCalculateDiffAxisAngle(arg1 BtTransform, arg2 BtTransform, arg3 BtVector3, arg4 *float32) {
	_swig_wrap_btTransformUtil_calculateDiffAxisAngle(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_new_btTransformUtil() SwigcptrBtTransformUtil

func NewBtTransformUtil() BtTransformUtil {
	return _swig_wrap_new_btTransformUtil()
}

func _swig_wrap_delete_btTransformUtil(uintptr)

func DeleteBtTransformUtil(arg1 BtTransformUtil) {
	_swig_wrap_delete_btTransformUtil(arg1.Swigcptr())
}

type BtTransformUtil interface {
	Swigcptr() uintptr
	SwigIsBtTransformUtil()
}

type SwigcptrBtConvexSeparatingDistanceUtil uintptr

func (p SwigcptrBtConvexSeparatingDistanceUtil) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConvexSeparatingDistanceUtil) SwigIsBtConvexSeparatingDistanceUtil() {
}

func _swig_wrap_new_btConvexSeparatingDistanceUtil(float32, float32) SwigcptrBtConvexSeparatingDistanceUtil

func NewBtConvexSeparatingDistanceUtil(arg1 float32, arg2 float32) BtConvexSeparatingDistanceUtil {
	return _swig_wrap_new_btConvexSeparatingDistanceUtil(arg1, arg2)
}

func _swig_wrap_btConvexSeparatingDistanceUtil_getConservativeSeparatingDistance(SwigcptrBtConvexSeparatingDistanceUtil) float32

func (arg1 SwigcptrBtConvexSeparatingDistanceUtil) GetConservativeSeparatingDistance() float32 {
	return _swig_wrap_btConvexSeparatingDistanceUtil_getConservativeSeparatingDistance(arg1)
}

func _swig_wrap_btConvexSeparatingDistanceUtil_updateSeparatingDistance(SwigcptrBtConvexSeparatingDistanceUtil, uintptr, uintptr)

func (arg1 SwigcptrBtConvexSeparatingDistanceUtil) UpdateSeparatingDistance(arg2 BtTransform, arg3 BtTransform) {
	_swig_wrap_btConvexSeparatingDistanceUtil_updateSeparatingDistance(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConvexSeparatingDistanceUtil_initSeparatingDistance(SwigcptrBtConvexSeparatingDistanceUtil, uintptr, float32, uintptr, uintptr)

func (arg1 SwigcptrBtConvexSeparatingDistanceUtil) InitSeparatingDistance(arg2 BtVector3, arg3 float32, arg4 BtTransform, arg5 BtTransform) {
	_swig_wrap_btConvexSeparatingDistanceUtil_initSeparatingDistance(arg1, arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_delete_btConvexSeparatingDistanceUtil(uintptr)

func DeleteBtConvexSeparatingDistanceUtil(arg1 BtConvexSeparatingDistanceUtil) {
	_swig_wrap_delete_btConvexSeparatingDistanceUtil(arg1.Swigcptr())
}

type BtConvexSeparatingDistanceUtil interface {
	Swigcptr() uintptr
	SwigIsBtConvexSeparatingDistanceUtil()
	GetConservativeSeparatingDistance() float32
	UpdateSeparatingDistance(arg2 BtTransform, arg3 BtTransform)
	InitSeparatingDistance(arg2 BtVector3, arg3 float32, arg4 BtTransform, arg5 BtTransform)
}

type SwigcptrBtConstraintRow uintptr

func (p SwigcptrBtConstraintRow) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConstraintRow) SwigIsBtConstraintRow() {
}

func _swig_wrap_btConstraintRow_m_normal_set(SwigcptrBtConstraintRow, *float32)

func (arg1 SwigcptrBtConstraintRow) SetM_normal(arg2 *float32) {
	_swig_wrap_btConstraintRow_m_normal_set(arg1, arg2)
}

func _swig_wrap_btConstraintRow_m_normal_get(SwigcptrBtConstraintRow) *float32

func (arg1 SwigcptrBtConstraintRow) GetM_normal() *float32 {
	return _swig_wrap_btConstraintRow_m_normal_get(arg1)
}

func _swig_wrap_btConstraintRow_m_rhs_set(SwigcptrBtConstraintRow, float32)

func (arg1 SwigcptrBtConstraintRow) SetM_rhs(arg2 float32) {
	_swig_wrap_btConstraintRow_m_rhs_set(arg1, arg2)
}

func _swig_wrap_btConstraintRow_m_rhs_get(SwigcptrBtConstraintRow) float32

func (arg1 SwigcptrBtConstraintRow) GetM_rhs() float32 {
	return _swig_wrap_btConstraintRow_m_rhs_get(arg1)
}

func _swig_wrap_btConstraintRow_m_jacDiagInv_set(SwigcptrBtConstraintRow, float32)

func (arg1 SwigcptrBtConstraintRow) SetM_jacDiagInv(arg2 float32) {
	_swig_wrap_btConstraintRow_m_jacDiagInv_set(arg1, arg2)
}

func _swig_wrap_btConstraintRow_m_jacDiagInv_get(SwigcptrBtConstraintRow) float32

func (arg1 SwigcptrBtConstraintRow) GetM_jacDiagInv() float32 {
	return _swig_wrap_btConstraintRow_m_jacDiagInv_get(arg1)
}

func _swig_wrap_btConstraintRow_m_lowerLimit_set(SwigcptrBtConstraintRow, float32)

func (arg1 SwigcptrBtConstraintRow) SetM_lowerLimit(arg2 float32) {
	_swig_wrap_btConstraintRow_m_lowerLimit_set(arg1, arg2)
}

func _swig_wrap_btConstraintRow_m_lowerLimit_get(SwigcptrBtConstraintRow) float32

func (arg1 SwigcptrBtConstraintRow) GetM_lowerLimit() float32 {
	return _swig_wrap_btConstraintRow_m_lowerLimit_get(arg1)
}

func _swig_wrap_btConstraintRow_m_upperLimit_set(SwigcptrBtConstraintRow, float32)

func (arg1 SwigcptrBtConstraintRow) SetM_upperLimit(arg2 float32) {
	_swig_wrap_btConstraintRow_m_upperLimit_set(arg1, arg2)
}

func _swig_wrap_btConstraintRow_m_upperLimit_get(SwigcptrBtConstraintRow) float32

func (arg1 SwigcptrBtConstraintRow) GetM_upperLimit() float32 {
	return _swig_wrap_btConstraintRow_m_upperLimit_get(arg1)
}

func _swig_wrap_btConstraintRow_m_accumImpulse_set(SwigcptrBtConstraintRow, float32)

func (arg1 SwigcptrBtConstraintRow) SetM_accumImpulse(arg2 float32) {
	_swig_wrap_btConstraintRow_m_accumImpulse_set(arg1, arg2)
}

func _swig_wrap_btConstraintRow_m_accumImpulse_get(SwigcptrBtConstraintRow) float32

func (arg1 SwigcptrBtConstraintRow) GetM_accumImpulse() float32 {
	return _swig_wrap_btConstraintRow_m_accumImpulse_get(arg1)
}

func _swig_wrap_new_btConstraintRow() SwigcptrBtConstraintRow

func NewBtConstraintRow() BtConstraintRow {
	return _swig_wrap_new_btConstraintRow()
}

func _swig_wrap_delete_btConstraintRow(uintptr)

func DeleteBtConstraintRow(arg1 BtConstraintRow) {
	_swig_wrap_delete_btConstraintRow(arg1.Swigcptr())
}

type BtConstraintRow interface {
	Swigcptr() uintptr
	SwigIsBtConstraintRow()
	SetM_normal(arg2 *float32)
	GetM_normal() *float32
	SetM_rhs(arg2 float32)
	GetM_rhs() float32
	SetM_jacDiagInv(arg2 float32)
	GetM_jacDiagInv() float32
	SetM_lowerLimit(arg2 float32)
	GetM_lowerLimit() float32
	SetM_upperLimit(arg2 float32)
	GetM_upperLimit() float32
	SetM_accumImpulse(arg2 float32)
	GetM_accumImpulse() float32
}

type SwigcptrBtManifoldPoint uintptr

func (p SwigcptrBtManifoldPoint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtManifoldPoint) SwigIsBtManifoldPoint() {
}

func _swig_wrap_new_btManifoldPoint__SWIG_0() SwigcptrBtManifoldPoint

func NewBtManifoldPoint__SWIG_0() BtManifoldPoint {
	return _swig_wrap_new_btManifoldPoint__SWIG_0()
}

func _swig_wrap_new_btManifoldPoint__SWIG_1(uintptr, uintptr, uintptr, float32) SwigcptrBtManifoldPoint

func NewBtManifoldPoint__SWIG_1(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3, arg4 float32) BtManifoldPoint {
	return _swig_wrap_new_btManifoldPoint__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func NewBtManifoldPoint(a ...interface{}) BtManifoldPoint {
	argc := len(a)
	if argc == 0 {
		return NewBtManifoldPoint__SWIG_0()
	}
	if argc == 4 {
		return NewBtManifoldPoint__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btManifoldPoint_m_localPointA_set(SwigcptrBtManifoldPoint, uintptr)

func (arg1 SwigcptrBtManifoldPoint) SetM_localPointA(arg2 BtVector3) {
	_swig_wrap_btManifoldPoint_m_localPointA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btManifoldPoint_m_localPointA_get(SwigcptrBtManifoldPoint) SwigcptrBtVector3

func (arg1 SwigcptrBtManifoldPoint) GetM_localPointA() BtVector3 {
	return _swig_wrap_btManifoldPoint_m_localPointA_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_localPointB_set(SwigcptrBtManifoldPoint, uintptr)

func (arg1 SwigcptrBtManifoldPoint) SetM_localPointB(arg2 BtVector3) {
	_swig_wrap_btManifoldPoint_m_localPointB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btManifoldPoint_m_localPointB_get(SwigcptrBtManifoldPoint) SwigcptrBtVector3

func (arg1 SwigcptrBtManifoldPoint) GetM_localPointB() BtVector3 {
	return _swig_wrap_btManifoldPoint_m_localPointB_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_positionWorldOnB_set(SwigcptrBtManifoldPoint, uintptr)

func (arg1 SwigcptrBtManifoldPoint) SetM_positionWorldOnB(arg2 BtVector3) {
	_swig_wrap_btManifoldPoint_m_positionWorldOnB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btManifoldPoint_m_positionWorldOnB_get(SwigcptrBtManifoldPoint) SwigcptrBtVector3

func (arg1 SwigcptrBtManifoldPoint) GetM_positionWorldOnB() BtVector3 {
	return _swig_wrap_btManifoldPoint_m_positionWorldOnB_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_positionWorldOnA_set(SwigcptrBtManifoldPoint, uintptr)

func (arg1 SwigcptrBtManifoldPoint) SetM_positionWorldOnA(arg2 BtVector3) {
	_swig_wrap_btManifoldPoint_m_positionWorldOnA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btManifoldPoint_m_positionWorldOnA_get(SwigcptrBtManifoldPoint) SwigcptrBtVector3

func (arg1 SwigcptrBtManifoldPoint) GetM_positionWorldOnA() BtVector3 {
	return _swig_wrap_btManifoldPoint_m_positionWorldOnA_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_normalWorldOnB_set(SwigcptrBtManifoldPoint, uintptr)

func (arg1 SwigcptrBtManifoldPoint) SetM_normalWorldOnB(arg2 BtVector3) {
	_swig_wrap_btManifoldPoint_m_normalWorldOnB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btManifoldPoint_m_normalWorldOnB_get(SwigcptrBtManifoldPoint) SwigcptrBtVector3

func (arg1 SwigcptrBtManifoldPoint) GetM_normalWorldOnB() BtVector3 {
	return _swig_wrap_btManifoldPoint_m_normalWorldOnB_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_distance1_set(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetM_distance1(arg2 float32) {
	_swig_wrap_btManifoldPoint_m_distance1_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_distance1_get(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetM_distance1() float32 {
	return _swig_wrap_btManifoldPoint_m_distance1_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_combinedFriction_set(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetM_combinedFriction(arg2 float32) {
	_swig_wrap_btManifoldPoint_m_combinedFriction_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_combinedFriction_get(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetM_combinedFriction() float32 {
	return _swig_wrap_btManifoldPoint_m_combinedFriction_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_combinedRollingFriction_set(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetM_combinedRollingFriction(arg2 float32) {
	_swig_wrap_btManifoldPoint_m_combinedRollingFriction_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_combinedRollingFriction_get(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetM_combinedRollingFriction() float32 {
	return _swig_wrap_btManifoldPoint_m_combinedRollingFriction_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_combinedRestitution_set(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetM_combinedRestitution(arg2 float32) {
	_swig_wrap_btManifoldPoint_m_combinedRestitution_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_combinedRestitution_get(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetM_combinedRestitution() float32 {
	return _swig_wrap_btManifoldPoint_m_combinedRestitution_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_partId0_set(SwigcptrBtManifoldPoint, int)

func (arg1 SwigcptrBtManifoldPoint) SetM_partId0(arg2 int) {
	_swig_wrap_btManifoldPoint_m_partId0_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_partId0_get(SwigcptrBtManifoldPoint) int

func (arg1 SwigcptrBtManifoldPoint) GetM_partId0() int {
	return _swig_wrap_btManifoldPoint_m_partId0_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_partId1_set(SwigcptrBtManifoldPoint, int)

func (arg1 SwigcptrBtManifoldPoint) SetM_partId1(arg2 int) {
	_swig_wrap_btManifoldPoint_m_partId1_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_partId1_get(SwigcptrBtManifoldPoint) int

func (arg1 SwigcptrBtManifoldPoint) GetM_partId1() int {
	return _swig_wrap_btManifoldPoint_m_partId1_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_index0_set(SwigcptrBtManifoldPoint, int)

func (arg1 SwigcptrBtManifoldPoint) SetM_index0(arg2 int) {
	_swig_wrap_btManifoldPoint_m_index0_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_index0_get(SwigcptrBtManifoldPoint) int

func (arg1 SwigcptrBtManifoldPoint) GetM_index0() int {
	return _swig_wrap_btManifoldPoint_m_index0_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_index1_set(SwigcptrBtManifoldPoint, int)

func (arg1 SwigcptrBtManifoldPoint) SetM_index1(arg2 int) {
	_swig_wrap_btManifoldPoint_m_index1_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_index1_get(SwigcptrBtManifoldPoint) int

func (arg1 SwigcptrBtManifoldPoint) GetM_index1() int {
	return _swig_wrap_btManifoldPoint_m_index1_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_userPersistentData_set(SwigcptrBtManifoldPoint, uintptr)

func (arg1 SwigcptrBtManifoldPoint) SetM_userPersistentData(arg2 uintptr) {
	_swig_wrap_btManifoldPoint_m_userPersistentData_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_userPersistentData_get(SwigcptrBtManifoldPoint) uintptr

func (arg1 SwigcptrBtManifoldPoint) GetM_userPersistentData() uintptr {
	return _swig_wrap_btManifoldPoint_m_userPersistentData_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_lateralFrictionInitialized_set(SwigcptrBtManifoldPoint, bool)

func (arg1 SwigcptrBtManifoldPoint) SetM_lateralFrictionInitialized(arg2 bool) {
	_swig_wrap_btManifoldPoint_m_lateralFrictionInitialized_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_lateralFrictionInitialized_get(SwigcptrBtManifoldPoint) bool

func (arg1 SwigcptrBtManifoldPoint) GetM_lateralFrictionInitialized() bool {
	return _swig_wrap_btManifoldPoint_m_lateralFrictionInitialized_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_appliedImpulse_set(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetM_appliedImpulse(arg2 float32) {
	_swig_wrap_btManifoldPoint_m_appliedImpulse_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_appliedImpulse_get(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetM_appliedImpulse() float32 {
	return _swig_wrap_btManifoldPoint_m_appliedImpulse_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_appliedImpulseLateral1_set(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetM_appliedImpulseLateral1(arg2 float32) {
	_swig_wrap_btManifoldPoint_m_appliedImpulseLateral1_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_appliedImpulseLateral1_get(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetM_appliedImpulseLateral1() float32 {
	return _swig_wrap_btManifoldPoint_m_appliedImpulseLateral1_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_appliedImpulseLateral2_set(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetM_appliedImpulseLateral2(arg2 float32) {
	_swig_wrap_btManifoldPoint_m_appliedImpulseLateral2_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_appliedImpulseLateral2_get(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetM_appliedImpulseLateral2() float32 {
	return _swig_wrap_btManifoldPoint_m_appliedImpulseLateral2_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_contactMotion1_set(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetM_contactMotion1(arg2 float32) {
	_swig_wrap_btManifoldPoint_m_contactMotion1_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_contactMotion1_get(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetM_contactMotion1() float32 {
	return _swig_wrap_btManifoldPoint_m_contactMotion1_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_contactMotion2_set(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetM_contactMotion2(arg2 float32) {
	_swig_wrap_btManifoldPoint_m_contactMotion2_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_contactMotion2_get(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetM_contactMotion2() float32 {
	return _swig_wrap_btManifoldPoint_m_contactMotion2_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_contactCFM1_set(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetM_contactCFM1(arg2 float32) {
	_swig_wrap_btManifoldPoint_m_contactCFM1_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_contactCFM1_get(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetM_contactCFM1() float32 {
	return _swig_wrap_btManifoldPoint_m_contactCFM1_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_contactCFM2_set(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetM_contactCFM2(arg2 float32) {
	_swig_wrap_btManifoldPoint_m_contactCFM2_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_contactCFM2_get(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetM_contactCFM2() float32 {
	return _swig_wrap_btManifoldPoint_m_contactCFM2_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_lifeTime_set(SwigcptrBtManifoldPoint, int)

func (arg1 SwigcptrBtManifoldPoint) SetM_lifeTime(arg2 int) {
	_swig_wrap_btManifoldPoint_m_lifeTime_set(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_m_lifeTime_get(SwigcptrBtManifoldPoint) int

func (arg1 SwigcptrBtManifoldPoint) GetM_lifeTime() int {
	return _swig_wrap_btManifoldPoint_m_lifeTime_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_lateralFrictionDir1_set(SwigcptrBtManifoldPoint, uintptr)

func (arg1 SwigcptrBtManifoldPoint) SetM_lateralFrictionDir1(arg2 BtVector3) {
	_swig_wrap_btManifoldPoint_m_lateralFrictionDir1_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btManifoldPoint_m_lateralFrictionDir1_get(SwigcptrBtManifoldPoint) SwigcptrBtVector3

func (arg1 SwigcptrBtManifoldPoint) GetM_lateralFrictionDir1() BtVector3 {
	return _swig_wrap_btManifoldPoint_m_lateralFrictionDir1_get(arg1)
}

func _swig_wrap_btManifoldPoint_m_lateralFrictionDir2_set(SwigcptrBtManifoldPoint, uintptr)

func (arg1 SwigcptrBtManifoldPoint) SetM_lateralFrictionDir2(arg2 BtVector3) {
	_swig_wrap_btManifoldPoint_m_lateralFrictionDir2_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btManifoldPoint_m_lateralFrictionDir2_get(SwigcptrBtManifoldPoint) SwigcptrBtVector3

func (arg1 SwigcptrBtManifoldPoint) GetM_lateralFrictionDir2() BtVector3 {
	return _swig_wrap_btManifoldPoint_m_lateralFrictionDir2_get(arg1)
}

func _swig_wrap_btManifoldPoint_getDistance(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetDistance() float32 {
	return _swig_wrap_btManifoldPoint_getDistance(arg1)
}

func _swig_wrap_btManifoldPoint_getLifeTime(SwigcptrBtManifoldPoint) int

func (arg1 SwigcptrBtManifoldPoint) GetLifeTime() int {
	return _swig_wrap_btManifoldPoint_getLifeTime(arg1)
}

func _swig_wrap_btManifoldPoint_getPositionWorldOnA(SwigcptrBtManifoldPoint) SwigcptrBtVector3

func (arg1 SwigcptrBtManifoldPoint) GetPositionWorldOnA() BtVector3 {
	return _swig_wrap_btManifoldPoint_getPositionWorldOnA(arg1)
}

func _swig_wrap_btManifoldPoint_getPositionWorldOnB(SwigcptrBtManifoldPoint) SwigcptrBtVector3

func (arg1 SwigcptrBtManifoldPoint) GetPositionWorldOnB() BtVector3 {
	return _swig_wrap_btManifoldPoint_getPositionWorldOnB(arg1)
}

func _swig_wrap_btManifoldPoint_setDistance(SwigcptrBtManifoldPoint, float32)

func (arg1 SwigcptrBtManifoldPoint) SetDistance(arg2 float32) {
	_swig_wrap_btManifoldPoint_setDistance(arg1, arg2)
}

func _swig_wrap_btManifoldPoint_getAppliedImpulse(SwigcptrBtManifoldPoint) float32

func (arg1 SwigcptrBtManifoldPoint) GetAppliedImpulse() float32 {
	return _swig_wrap_btManifoldPoint_getAppliedImpulse(arg1)
}

func _swig_wrap_delete_btManifoldPoint(uintptr)

func DeleteBtManifoldPoint(arg1 BtManifoldPoint) {
	_swig_wrap_delete_btManifoldPoint(arg1.Swigcptr())
}

type BtManifoldPoint interface {
	Swigcptr() uintptr
	SwigIsBtManifoldPoint()
	SetM_localPointA(arg2 BtVector3)
	GetM_localPointA() BtVector3
	SetM_localPointB(arg2 BtVector3)
	GetM_localPointB() BtVector3
	SetM_positionWorldOnB(arg2 BtVector3)
	GetM_positionWorldOnB() BtVector3
	SetM_positionWorldOnA(arg2 BtVector3)
	GetM_positionWorldOnA() BtVector3
	SetM_normalWorldOnB(arg2 BtVector3)
	GetM_normalWorldOnB() BtVector3
	SetM_distance1(arg2 float32)
	GetM_distance1() float32
	SetM_combinedFriction(arg2 float32)
	GetM_combinedFriction() float32
	SetM_combinedRollingFriction(arg2 float32)
	GetM_combinedRollingFriction() float32
	SetM_combinedRestitution(arg2 float32)
	GetM_combinedRestitution() float32
	SetM_partId0(arg2 int)
	GetM_partId0() int
	SetM_partId1(arg2 int)
	GetM_partId1() int
	SetM_index0(arg2 int)
	GetM_index0() int
	SetM_index1(arg2 int)
	GetM_index1() int
	SetM_userPersistentData(arg2 uintptr)
	GetM_userPersistentData() uintptr
	SetM_lateralFrictionInitialized(arg2 bool)
	GetM_lateralFrictionInitialized() bool
	SetM_appliedImpulse(arg2 float32)
	GetM_appliedImpulse() float32
	SetM_appliedImpulseLateral1(arg2 float32)
	GetM_appliedImpulseLateral1() float32
	SetM_appliedImpulseLateral2(arg2 float32)
	GetM_appliedImpulseLateral2() float32
	SetM_contactMotion1(arg2 float32)
	GetM_contactMotion1() float32
	SetM_contactMotion2(arg2 float32)
	GetM_contactMotion2() float32
	SetM_contactCFM1(arg2 float32)
	GetM_contactCFM1() float32
	SetM_contactCFM2(arg2 float32)
	GetM_contactCFM2() float32
	SetM_lifeTime(arg2 int)
	GetM_lifeTime() int
	SetM_lateralFrictionDir1(arg2 BtVector3)
	GetM_lateralFrictionDir1() BtVector3
	SetM_lateralFrictionDir2(arg2 BtVector3)
	GetM_lateralFrictionDir2() BtVector3
	GetDistance() float32
	GetLifeTime() int
	GetPositionWorldOnA() BtVector3
	GetPositionWorldOnB() BtVector3
	SetDistance(arg2 float32)
	GetAppliedImpulse() float32
}

func _swig_wrap_gContactBreakingThreshold_set(float32)

func SetGContactBreakingThreshold(arg1 float32) {
	_swig_wrap_gContactBreakingThreshold_set(arg1)
}

func GetGContactBreakingThreshold() float32
func _swig_wrap_gContactDestroyedCallback_set(*_swig_fnptr)

func SetGContactDestroyedCallback(arg1 *_swig_fnptr) {
	_swig_wrap_gContactDestroyedCallback_set(arg1)
}

func GetGContactDestroyedCallback() *_swig_fnptr
func _swig_wrap_gContactProcessedCallback_set(*_swig_fnptr)

func SetGContactProcessedCallback(arg1 *_swig_fnptr) {
	_swig_wrap_gContactProcessedCallback_set(arg1)
}

func GetGContactProcessedCallback() *_swig_fnptr

type BtContactManifoldTypes int

func _swig_getMIN_CONTACT_MANIFOLD_TYPE() BtContactManifoldTypes

var MIN_CONTACT_MANIFOLD_TYPE BtContactManifoldTypes = _swig_getMIN_CONTACT_MANIFOLD_TYPE()

func _swig_getBT_PERSISTENT_MANIFOLD_TYPE() BtContactManifoldTypes

var BT_PERSISTENT_MANIFOLD_TYPE BtContactManifoldTypes = _swig_getBT_PERSISTENT_MANIFOLD_TYPE()

const MANIFOLD_CACHE_SIZE int = 4

type SwigcptrBtPersistentManifold uintptr

func (p SwigcptrBtPersistentManifold) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtPersistentManifold) SwigIsBtPersistentManifold() {
}

func _swig_wrap_btPersistentManifold_m_companionIdA_set(SwigcptrBtPersistentManifold, int)

func (arg1 SwigcptrBtPersistentManifold) SetM_companionIdA(arg2 int) {
	_swig_wrap_btPersistentManifold_m_companionIdA_set(arg1, arg2)
}

func _swig_wrap_btPersistentManifold_m_companionIdA_get(SwigcptrBtPersistentManifold) int

func (arg1 SwigcptrBtPersistentManifold) GetM_companionIdA() int {
	return _swig_wrap_btPersistentManifold_m_companionIdA_get(arg1)
}

func _swig_wrap_btPersistentManifold_m_companionIdB_set(SwigcptrBtPersistentManifold, int)

func (arg1 SwigcptrBtPersistentManifold) SetM_companionIdB(arg2 int) {
	_swig_wrap_btPersistentManifold_m_companionIdB_set(arg1, arg2)
}

func _swig_wrap_btPersistentManifold_m_companionIdB_get(SwigcptrBtPersistentManifold) int

func (arg1 SwigcptrBtPersistentManifold) GetM_companionIdB() int {
	return _swig_wrap_btPersistentManifold_m_companionIdB_get(arg1)
}

func _swig_wrap_btPersistentManifold_m_index1a_set(SwigcptrBtPersistentManifold, int)

func (arg1 SwigcptrBtPersistentManifold) SetM_index1a(arg2 int) {
	_swig_wrap_btPersistentManifold_m_index1a_set(arg1, arg2)
}

func _swig_wrap_btPersistentManifold_m_index1a_get(SwigcptrBtPersistentManifold) int

func (arg1 SwigcptrBtPersistentManifold) GetM_index1a() int {
	return _swig_wrap_btPersistentManifold_m_index1a_get(arg1)
}

func _swig_wrap_new_btPersistentManifold__SWIG_0() SwigcptrBtPersistentManifold

func NewBtPersistentManifold__SWIG_0() BtPersistentManifold {
	return _swig_wrap_new_btPersistentManifold__SWIG_0()
}

func _swig_wrap_new_btPersistentManifold__SWIG_1(uintptr, uintptr, int, float32, float32) SwigcptrBtPersistentManifold

func NewBtPersistentManifold__SWIG_1(arg1 BtCollisionObject, arg2 BtCollisionObject, arg3 int, arg4 float32, arg5 float32) BtPersistentManifold {
	return _swig_wrap_new_btPersistentManifold__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4, arg5)
}

func NewBtPersistentManifold(a ...interface{}) BtPersistentManifold {
	argc := len(a)
	if argc == 0 {
		return NewBtPersistentManifold__SWIG_0()
	}
	if argc == 5 {
		return NewBtPersistentManifold__SWIG_1(a[0].(BtCollisionObject), a[1].(BtCollisionObject), a[2].(int), a[3].(float32), a[4].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPersistentManifold_getBody0(SwigcptrBtPersistentManifold) SwigcptrBtCollisionObject

func (arg1 SwigcptrBtPersistentManifold) GetBody0() BtCollisionObject {
	return _swig_wrap_btPersistentManifold_getBody0(arg1)
}

func _swig_wrap_btPersistentManifold_getBody1(SwigcptrBtPersistentManifold) SwigcptrBtCollisionObject

func (arg1 SwigcptrBtPersistentManifold) GetBody1() BtCollisionObject {
	return _swig_wrap_btPersistentManifold_getBody1(arg1)
}

func _swig_wrap_btPersistentManifold_setBodies(SwigcptrBtPersistentManifold, uintptr, uintptr)

func (arg1 SwigcptrBtPersistentManifold) SetBodies(arg2 BtCollisionObject, arg3 BtCollisionObject) {
	_swig_wrap_btPersistentManifold_setBodies(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btPersistentManifold_clearUserCache(SwigcptrBtPersistentManifold, uintptr)

func (arg1 SwigcptrBtPersistentManifold) ClearUserCache(arg2 BtManifoldPoint) {
	_swig_wrap_btPersistentManifold_clearUserCache(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPersistentManifold_getNumContacts(SwigcptrBtPersistentManifold) int

func (arg1 SwigcptrBtPersistentManifold) GetNumContacts() int {
	return _swig_wrap_btPersistentManifold_getNumContacts(arg1)
}

func _swig_wrap_btPersistentManifold_setNumContacts(SwigcptrBtPersistentManifold, int)

func (arg1 SwigcptrBtPersistentManifold) SetNumContacts(arg2 int) {
	_swig_wrap_btPersistentManifold_setNumContacts(arg1, arg2)
}

func _swig_wrap_btPersistentManifold_getContactPoint__SWIG_0(SwigcptrBtPersistentManifold, int) SwigcptrBtManifoldPoint

func (arg1 SwigcptrBtPersistentManifold) GetContactPoint__SWIG_0(arg2 int) BtManifoldPoint {
	return _swig_wrap_btPersistentManifold_getContactPoint__SWIG_0(arg1, arg2)
}

func _swig_wrap_btPersistentManifold_getContactPoint__SWIG_1(SwigcptrBtPersistentManifold, int) SwigcptrBtManifoldPoint

func (arg1 SwigcptrBtPersistentManifold) GetContactPoint__SWIG_1(arg2 int) BtManifoldPoint {
	return _swig_wrap_btPersistentManifold_getContactPoint__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtPersistentManifold) GetContactPoint(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.GetContactPoint__SWIG_0(a[0].(int))
	}
	if argc == 1 {
		return p.GetContactPoint__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPersistentManifold_getContactBreakingThreshold(SwigcptrBtPersistentManifold) float32

func (arg1 SwigcptrBtPersistentManifold) GetContactBreakingThreshold() float32 {
	return _swig_wrap_btPersistentManifold_getContactBreakingThreshold(arg1)
}

func _swig_wrap_btPersistentManifold_getContactProcessingThreshold(SwigcptrBtPersistentManifold) float32

func (arg1 SwigcptrBtPersistentManifold) GetContactProcessingThreshold() float32 {
	return _swig_wrap_btPersistentManifold_getContactProcessingThreshold(arg1)
}

func _swig_wrap_btPersistentManifold_setContactBreakingThreshold(SwigcptrBtPersistentManifold, float32)

func (arg1 SwigcptrBtPersistentManifold) SetContactBreakingThreshold(arg2 float32) {
	_swig_wrap_btPersistentManifold_setContactBreakingThreshold(arg1, arg2)
}

func _swig_wrap_btPersistentManifold_setContactProcessingThreshold(SwigcptrBtPersistentManifold, float32)

func (arg1 SwigcptrBtPersistentManifold) SetContactProcessingThreshold(arg2 float32) {
	_swig_wrap_btPersistentManifold_setContactProcessingThreshold(arg1, arg2)
}

func _swig_wrap_btPersistentManifold_getCacheEntry(SwigcptrBtPersistentManifold, uintptr) int

func (arg1 SwigcptrBtPersistentManifold) GetCacheEntry(arg2 BtManifoldPoint) int {
	return _swig_wrap_btPersistentManifold_getCacheEntry(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPersistentManifold_addManifoldPoint__SWIG_0(SwigcptrBtPersistentManifold, uintptr, bool) int

func (arg1 SwigcptrBtPersistentManifold) AddManifoldPoint__SWIG_0(arg2 BtManifoldPoint, arg3 bool) int {
	return _swig_wrap_btPersistentManifold_addManifoldPoint__SWIG_0(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btPersistentManifold_addManifoldPoint__SWIG_1(SwigcptrBtPersistentManifold, uintptr) int

func (arg1 SwigcptrBtPersistentManifold) AddManifoldPoint__SWIG_1(arg2 BtManifoldPoint) int {
	return _swig_wrap_btPersistentManifold_addManifoldPoint__SWIG_1(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtPersistentManifold) AddManifoldPoint(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.AddManifoldPoint__SWIG_1(a[0].(BtManifoldPoint))
	}
	if argc == 2 {
		return p.AddManifoldPoint__SWIG_0(a[0].(BtManifoldPoint), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPersistentManifold_removeContactPoint(SwigcptrBtPersistentManifold, int)

func (arg1 SwigcptrBtPersistentManifold) RemoveContactPoint(arg2 int) {
	_swig_wrap_btPersistentManifold_removeContactPoint(arg1, arg2)
}

func _swig_wrap_btPersistentManifold_replaceContactPoint(SwigcptrBtPersistentManifold, uintptr, int)

func (arg1 SwigcptrBtPersistentManifold) ReplaceContactPoint(arg2 BtManifoldPoint, arg3 int) {
	_swig_wrap_btPersistentManifold_replaceContactPoint(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btPersistentManifold_validContactDistance(SwigcptrBtPersistentManifold, uintptr) bool

func (arg1 SwigcptrBtPersistentManifold) ValidContactDistance(arg2 BtManifoldPoint) bool {
	return _swig_wrap_btPersistentManifold_validContactDistance(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPersistentManifold_refreshContactPoints(SwigcptrBtPersistentManifold, uintptr, uintptr)

func (arg1 SwigcptrBtPersistentManifold) RefreshContactPoints(arg2 BtTransform, arg3 BtTransform) {
	_swig_wrap_btPersistentManifold_refreshContactPoints(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btPersistentManifold_clearManifold(SwigcptrBtPersistentManifold)

func (arg1 SwigcptrBtPersistentManifold) ClearManifold() {
	_swig_wrap_btPersistentManifold_clearManifold(arg1)
}

func _swig_wrap_delete_btPersistentManifold(uintptr)

func DeleteBtPersistentManifold(arg1 BtPersistentManifold) {
	_swig_wrap_delete_btPersistentManifold(arg1.Swigcptr())
}

func _swig_wrap_SetbtPersistentManifold_M_objectType(SwigcptrBtPersistentManifold, int)

func (_swig_base SwigcptrBtPersistentManifold) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtPersistentManifold_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtPersistentManifold_M_objectType(SwigcptrBtPersistentManifold) int

func (_swig_base SwigcptrBtPersistentManifold) GetM_objectType() int {
	return _swig_wrap_GetbtPersistentManifold_M_objectType(_swig_base)
}

func _swig_wrap_btPersistentManifold_getObjectType(SwigcptrBtPersistentManifold) int

func (_swig_base SwigcptrBtPersistentManifold) GetObjectType() int {
	return _swig_wrap_btPersistentManifold_getObjectType(_swig_base)
}

func (p SwigcptrBtPersistentManifold) SwigIsBtTypedObject() {
}

func (p SwigcptrBtPersistentManifold) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtPersistentManifold interface {
	Swigcptr() uintptr
	SwigIsBtPersistentManifold()
	SetM_companionIdA(arg2 int)
	GetM_companionIdA() int
	SetM_companionIdB(arg2 int)
	GetM_companionIdB() int
	SetM_index1a(arg2 int)
	GetM_index1a() int
	GetBody0() BtCollisionObject
	GetBody1() BtCollisionObject
	SetBodies(arg2 BtCollisionObject, arg3 BtCollisionObject)
	ClearUserCache(arg2 BtManifoldPoint)
	GetNumContacts() int
	SetNumContacts(arg2 int)
	GetContactPoint(a ...interface{}) interface{}
	GetContactBreakingThreshold() float32
	GetContactProcessingThreshold() float32
	SetContactBreakingThreshold(arg2 float32)
	SetContactProcessingThreshold(arg2 float32)
	GetCacheEntry(arg2 BtManifoldPoint) int
	AddManifoldPoint(a ...interface{}) int
	RemoveContactPoint(arg2 int)
	ReplaceContactPoint(arg2 BtManifoldPoint, arg3 int)
	ValidContactDistance(arg2 BtManifoldPoint) bool
	RefreshContactPoints(arg2 BtTransform, arg3 BtTransform)
	ClearManifold()
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

type SwigcptrBtCollisionObjectWrapper uintptr

func (p SwigcptrBtCollisionObjectWrapper) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionObjectWrapper) SwigIsBtCollisionObjectWrapper() {
}

func _swig_wrap_btCollisionObjectWrapper_m_parent_set(SwigcptrBtCollisionObjectWrapper, uintptr)

func (arg1 SwigcptrBtCollisionObjectWrapper) SetM_parent(arg2 BtCollisionObjectWrapper) {
	_swig_wrap_btCollisionObjectWrapper_m_parent_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectWrapper_m_parent_get(SwigcptrBtCollisionObjectWrapper) SwigcptrBtCollisionObjectWrapper

func (arg1 SwigcptrBtCollisionObjectWrapper) GetM_parent() BtCollisionObjectWrapper {
	return _swig_wrap_btCollisionObjectWrapper_m_parent_get(arg1)
}

func _swig_wrap_btCollisionObjectWrapper_m_shape_set(SwigcptrBtCollisionObjectWrapper, uintptr)

func (arg1 SwigcptrBtCollisionObjectWrapper) SetM_shape(arg2 BtCollisionShape) {
	_swig_wrap_btCollisionObjectWrapper_m_shape_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectWrapper_m_shape_get(SwigcptrBtCollisionObjectWrapper) SwigcptrBtCollisionShape

func (arg1 SwigcptrBtCollisionObjectWrapper) GetM_shape() BtCollisionShape {
	return _swig_wrap_btCollisionObjectWrapper_m_shape_get(arg1)
}

func _swig_wrap_btCollisionObjectWrapper_m_collisionObject_set(SwigcptrBtCollisionObjectWrapper, uintptr)

func (arg1 SwigcptrBtCollisionObjectWrapper) SetM_collisionObject(arg2 BtCollisionObject) {
	_swig_wrap_btCollisionObjectWrapper_m_collisionObject_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionObjectWrapper_m_collisionObject_get(SwigcptrBtCollisionObjectWrapper) SwigcptrBtCollisionObject

func (arg1 SwigcptrBtCollisionObjectWrapper) GetM_collisionObject() BtCollisionObject {
	return _swig_wrap_btCollisionObjectWrapper_m_collisionObject_get(arg1)
}

func _swig_wrap_btCollisionObjectWrapper_m_worldTransform_get(SwigcptrBtCollisionObjectWrapper) SwigcptrBtTransform

func (arg1 SwigcptrBtCollisionObjectWrapper) GetM_worldTransform() BtTransform {
	return _swig_wrap_btCollisionObjectWrapper_m_worldTransform_get(arg1)
}

func _swig_wrap_btCollisionObjectWrapper_m_partId_set(SwigcptrBtCollisionObjectWrapper, int)

func (arg1 SwigcptrBtCollisionObjectWrapper) SetM_partId(arg2 int) {
	_swig_wrap_btCollisionObjectWrapper_m_partId_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectWrapper_m_partId_get(SwigcptrBtCollisionObjectWrapper) int

func (arg1 SwigcptrBtCollisionObjectWrapper) GetM_partId() int {
	return _swig_wrap_btCollisionObjectWrapper_m_partId_get(arg1)
}

func _swig_wrap_btCollisionObjectWrapper_m_index_set(SwigcptrBtCollisionObjectWrapper, int)

func (arg1 SwigcptrBtCollisionObjectWrapper) SetM_index(arg2 int) {
	_swig_wrap_btCollisionObjectWrapper_m_index_set(arg1, arg2)
}

func _swig_wrap_btCollisionObjectWrapper_m_index_get(SwigcptrBtCollisionObjectWrapper) int

func (arg1 SwigcptrBtCollisionObjectWrapper) GetM_index() int {
	return _swig_wrap_btCollisionObjectWrapper_m_index_get(arg1)
}

func _swig_wrap_btCollisionObjectWrapper_getWorldTransform(SwigcptrBtCollisionObjectWrapper) SwigcptrBtTransform

func (arg1 SwigcptrBtCollisionObjectWrapper) GetWorldTransform() BtTransform {
	return _swig_wrap_btCollisionObjectWrapper_getWorldTransform(arg1)
}

func _swig_wrap_btCollisionObjectWrapper_getCollisionObject(SwigcptrBtCollisionObjectWrapper) SwigcptrBtCollisionObject

func (arg1 SwigcptrBtCollisionObjectWrapper) GetCollisionObject() BtCollisionObject {
	return _swig_wrap_btCollisionObjectWrapper_getCollisionObject(arg1)
}

func _swig_wrap_btCollisionObjectWrapper_getCollisionShape(SwigcptrBtCollisionObjectWrapper) SwigcptrBtCollisionShape

func (arg1 SwigcptrBtCollisionObjectWrapper) GetCollisionShape() BtCollisionShape {
	return _swig_wrap_btCollisionObjectWrapper_getCollisionShape(arg1)
}

func _swig_wrap_delete_btCollisionObjectWrapper(uintptr)

func DeleteBtCollisionObjectWrapper(arg1 BtCollisionObjectWrapper) {
	_swig_wrap_delete_btCollisionObjectWrapper(arg1.Swigcptr())
}

type BtCollisionObjectWrapper interface {
	Swigcptr() uintptr
	SwigIsBtCollisionObjectWrapper()
	SetM_parent(arg2 BtCollisionObjectWrapper)
	GetM_parent() BtCollisionObjectWrapper
	SetM_shape(arg2 BtCollisionShape)
	GetM_shape() BtCollisionShape
	SetM_collisionObject(arg2 BtCollisionObject)
	GetM_collisionObject() BtCollisionObject
	GetM_worldTransform() BtTransform
	SetM_partId(arg2 int)
	GetM_partId() int
	SetM_index(arg2 int)
	GetM_index() int
	GetWorldTransform() BtTransform
	GetCollisionObject() BtCollisionObject
	GetCollisionShape() BtCollisionShape
}

func _swig_wrap_gContactAddedCallback_set(*_swig_fnptr)

func SetGContactAddedCallback(arg1 *_swig_fnptr) {
	_swig_wrap_gContactAddedCallback_set(arg1)
}

func GetGContactAddedCallback() *_swig_fnptr

type SwigcptrBtManifoldResult uintptr

func (p SwigcptrBtManifoldResult) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtManifoldResult) SwigIsBtManifoldResult() {
}

func _swig_wrap_new_btManifoldResult__SWIG_0() SwigcptrBtManifoldResult

func NewBtManifoldResult__SWIG_0() BtManifoldResult {
	return _swig_wrap_new_btManifoldResult__SWIG_0()
}

func _swig_wrap_new_btManifoldResult__SWIG_1(uintptr, uintptr) SwigcptrBtManifoldResult

func NewBtManifoldResult__SWIG_1(arg1 BtCollisionObjectWrapper, arg2 BtCollisionObjectWrapper) BtManifoldResult {
	return _swig_wrap_new_btManifoldResult__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr())
}

func NewBtManifoldResult(a ...interface{}) BtManifoldResult {
	argc := len(a)
	if argc == 0 {
		return NewBtManifoldResult__SWIG_0()
	}
	if argc == 2 {
		return NewBtManifoldResult__SWIG_1(a[0].(BtCollisionObjectWrapper), a[1].(BtCollisionObjectWrapper))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_btManifoldResult(uintptr)

func DeleteBtManifoldResult(arg1 BtManifoldResult) {
	_swig_wrap_delete_btManifoldResult(arg1.Swigcptr())
}

func _swig_wrap_btManifoldResult_setPersistentManifold(SwigcptrBtManifoldResult, uintptr)

func (arg1 SwigcptrBtManifoldResult) SetPersistentManifold(arg2 BtPersistentManifold) {
	_swig_wrap_btManifoldResult_setPersistentManifold(arg1, arg2.Swigcptr())
}

func _swig_wrap_btManifoldResult_getPersistentManifold__SWIG_0(SwigcptrBtManifoldResult) SwigcptrBtPersistentManifold

func (arg1 SwigcptrBtManifoldResult) GetPersistentManifold__SWIG_0() BtPersistentManifold {
	return _swig_wrap_btManifoldResult_getPersistentManifold__SWIG_0(arg1)
}

func _swig_wrap_btManifoldResult_getPersistentManifold__SWIG_1(SwigcptrBtManifoldResult) SwigcptrBtPersistentManifold

func (arg1 SwigcptrBtManifoldResult) GetPersistentManifold__SWIG_1() BtPersistentManifold {
	return _swig_wrap_btManifoldResult_getPersistentManifold__SWIG_1(arg1)
}

func (p SwigcptrBtManifoldResult) GetPersistentManifold(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetPersistentManifold__SWIG_0()
	}
	if argc == 0 {
		return p.GetPersistentManifold__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btManifoldResult_setShapeIdentifiersA(SwigcptrBtManifoldResult, int, int)

func (arg1 SwigcptrBtManifoldResult) SetShapeIdentifiersA(arg2 int, arg3 int) {
	_swig_wrap_btManifoldResult_setShapeIdentifiersA(arg1, arg2, arg3)
}

func _swig_wrap_btManifoldResult_setShapeIdentifiersB(SwigcptrBtManifoldResult, int, int)

func (arg1 SwigcptrBtManifoldResult) SetShapeIdentifiersB(arg2 int, arg3 int) {
	_swig_wrap_btManifoldResult_setShapeIdentifiersB(arg1, arg2, arg3)
}

func _swig_wrap_btManifoldResult_addContactPoint(SwigcptrBtManifoldResult, uintptr, uintptr, float32)

func (arg1 SwigcptrBtManifoldResult) AddContactPoint(arg2 BtVector3, arg3 BtVector3, arg4 float32) {
	_swig_wrap_btManifoldResult_addContactPoint(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btManifoldResult_refreshContactPoints(SwigcptrBtManifoldResult)

func (arg1 SwigcptrBtManifoldResult) RefreshContactPoints() {
	_swig_wrap_btManifoldResult_refreshContactPoints(arg1)
}

func _swig_wrap_btManifoldResult_getBody0Wrap(SwigcptrBtManifoldResult) SwigcptrBtCollisionObjectWrapper

func (arg1 SwigcptrBtManifoldResult) GetBody0Wrap() BtCollisionObjectWrapper {
	return _swig_wrap_btManifoldResult_getBody0Wrap(arg1)
}

func _swig_wrap_btManifoldResult_getBody1Wrap(SwigcptrBtManifoldResult) SwigcptrBtCollisionObjectWrapper

func (arg1 SwigcptrBtManifoldResult) GetBody1Wrap() BtCollisionObjectWrapper {
	return _swig_wrap_btManifoldResult_getBody1Wrap(arg1)
}

func _swig_wrap_btManifoldResult_setBody0Wrap(SwigcptrBtManifoldResult, uintptr)

func (arg1 SwigcptrBtManifoldResult) SetBody0Wrap(arg2 BtCollisionObjectWrapper) {
	_swig_wrap_btManifoldResult_setBody0Wrap(arg1, arg2.Swigcptr())
}

func _swig_wrap_btManifoldResult_setBody1Wrap(SwigcptrBtManifoldResult, uintptr)

func (arg1 SwigcptrBtManifoldResult) SetBody1Wrap(arg2 BtCollisionObjectWrapper) {
	_swig_wrap_btManifoldResult_setBody1Wrap(arg1, arg2.Swigcptr())
}

func _swig_wrap_btManifoldResult_getBody0Internal(SwigcptrBtManifoldResult) SwigcptrBtCollisionObject

func (arg1 SwigcptrBtManifoldResult) GetBody0Internal() BtCollisionObject {
	return _swig_wrap_btManifoldResult_getBody0Internal(arg1)
}

func _swig_wrap_btManifoldResult_getBody1Internal(SwigcptrBtManifoldResult) SwigcptrBtCollisionObject

func (arg1 SwigcptrBtManifoldResult) GetBody1Internal() BtCollisionObject {
	return _swig_wrap_btManifoldResult_getBody1Internal(arg1)
}

func _swig_wrap_btManifoldResult_calculateCombinedRestitution(uintptr, uintptr) float32

func BtManifoldResultCalculateCombinedRestitution(arg1 BtCollisionObject, arg2 BtCollisionObject) float32 {
	return _swig_wrap_btManifoldResult_calculateCombinedRestitution(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btManifoldResult_calculateCombinedFriction(uintptr, uintptr) float32

func BtManifoldResultCalculateCombinedFriction(arg1 BtCollisionObject, arg2 BtCollisionObject) float32 {
	return _swig_wrap_btManifoldResult_calculateCombinedFriction(arg1.Swigcptr(), arg2.Swigcptr())
}

type BtManifoldResult interface {
	Swigcptr() uintptr
	SwigIsBtManifoldResult()
	SetPersistentManifold(arg2 BtPersistentManifold)
	GetPersistentManifold(a ...interface{}) interface{}
	SetShapeIdentifiersA(arg2 int, arg3 int)
	SetShapeIdentifiersB(arg2 int, arg3 int)
	AddContactPoint(arg2 BtVector3, arg3 BtVector3, arg4 float32)
	RefreshContactPoints()
	GetBody0Wrap() BtCollisionObjectWrapper
	GetBody1Wrap() BtCollisionObjectWrapper
	SetBody0Wrap(arg2 BtCollisionObjectWrapper)
	SetBody1Wrap(arg2 BtCollisionObjectWrapper)
	GetBody0Internal() BtCollisionObject
	GetBody1Internal() BtCollisionObject
}

type BroadphaseNativeTypes int

func _swig_getBOX_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var BOX_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getBOX_SHAPE_PROXYTYPE()

func _swig_getTRIANGLE_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var TRIANGLE_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getTRIANGLE_SHAPE_PROXYTYPE()

func _swig_getTETRAHEDRAL_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var TETRAHEDRAL_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getTETRAHEDRAL_SHAPE_PROXYTYPE()

func _swig_getCONVEX_TRIANGLEMESH_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var CONVEX_TRIANGLEMESH_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getCONVEX_TRIANGLEMESH_SHAPE_PROXYTYPE()

func _swig_getCONVEX_HULL_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var CONVEX_HULL_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getCONVEX_HULL_SHAPE_PROXYTYPE()

func _swig_getCONVEX_POINT_CLOUD_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var CONVEX_POINT_CLOUD_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getCONVEX_POINT_CLOUD_SHAPE_PROXYTYPE()

func _swig_getCUSTOM_POLYHEDRAL_SHAPE_TYPE() BroadphaseNativeTypes

var CUSTOM_POLYHEDRAL_SHAPE_TYPE BroadphaseNativeTypes = _swig_getCUSTOM_POLYHEDRAL_SHAPE_TYPE()

func _swig_getIMPLICIT_CONVEX_SHAPES_START_HERE() BroadphaseNativeTypes

var IMPLICIT_CONVEX_SHAPES_START_HERE BroadphaseNativeTypes = _swig_getIMPLICIT_CONVEX_SHAPES_START_HERE()

func _swig_getSPHERE_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var SPHERE_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getSPHERE_SHAPE_PROXYTYPE()

func _swig_getMULTI_SPHERE_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var MULTI_SPHERE_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getMULTI_SPHERE_SHAPE_PROXYTYPE()

func _swig_getCAPSULE_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var CAPSULE_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getCAPSULE_SHAPE_PROXYTYPE()

func _swig_getCONE_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var CONE_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getCONE_SHAPE_PROXYTYPE()

func _swig_getCONVEX_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var CONVEX_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getCONVEX_SHAPE_PROXYTYPE()

func _swig_getCYLINDER_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var CYLINDER_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getCYLINDER_SHAPE_PROXYTYPE()

func _swig_getUNIFORM_SCALING_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var UNIFORM_SCALING_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getUNIFORM_SCALING_SHAPE_PROXYTYPE()

func _swig_getMINKOWSKI_SUM_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var MINKOWSKI_SUM_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getMINKOWSKI_SUM_SHAPE_PROXYTYPE()

func _swig_getMINKOWSKI_DIFFERENCE_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var MINKOWSKI_DIFFERENCE_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getMINKOWSKI_DIFFERENCE_SHAPE_PROXYTYPE()

func _swig_getBOX_2D_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var BOX_2D_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getBOX_2D_SHAPE_PROXYTYPE()

func _swig_getCONVEX_2D_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var CONVEX_2D_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getCONVEX_2D_SHAPE_PROXYTYPE()

func _swig_getCUSTOM_CONVEX_SHAPE_TYPE() BroadphaseNativeTypes

var CUSTOM_CONVEX_SHAPE_TYPE BroadphaseNativeTypes = _swig_getCUSTOM_CONVEX_SHAPE_TYPE()

func _swig_getCONCAVE_SHAPES_START_HERE() BroadphaseNativeTypes

var CONCAVE_SHAPES_START_HERE BroadphaseNativeTypes = _swig_getCONCAVE_SHAPES_START_HERE()

func _swig_getTRIANGLE_MESH_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var TRIANGLE_MESH_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getTRIANGLE_MESH_SHAPE_PROXYTYPE()

func _swig_getSCALED_TRIANGLE_MESH_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var SCALED_TRIANGLE_MESH_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getSCALED_TRIANGLE_MESH_SHAPE_PROXYTYPE()

func _swig_getFAST_CONCAVE_MESH_PROXYTYPE() BroadphaseNativeTypes

var FAST_CONCAVE_MESH_PROXYTYPE BroadphaseNativeTypes = _swig_getFAST_CONCAVE_MESH_PROXYTYPE()

func _swig_getTERRAIN_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var TERRAIN_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getTERRAIN_SHAPE_PROXYTYPE()

func _swig_getGIMPACT_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var GIMPACT_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getGIMPACT_SHAPE_PROXYTYPE()

func _swig_getMULTIMATERIAL_TRIANGLE_MESH_PROXYTYPE() BroadphaseNativeTypes

var MULTIMATERIAL_TRIANGLE_MESH_PROXYTYPE BroadphaseNativeTypes = _swig_getMULTIMATERIAL_TRIANGLE_MESH_PROXYTYPE()

func _swig_getEMPTY_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var EMPTY_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getEMPTY_SHAPE_PROXYTYPE()

func _swig_getSTATIC_PLANE_PROXYTYPE() BroadphaseNativeTypes

var STATIC_PLANE_PROXYTYPE BroadphaseNativeTypes = _swig_getSTATIC_PLANE_PROXYTYPE()

func _swig_getCUSTOM_CONCAVE_SHAPE_TYPE() BroadphaseNativeTypes

var CUSTOM_CONCAVE_SHAPE_TYPE BroadphaseNativeTypes = _swig_getCUSTOM_CONCAVE_SHAPE_TYPE()

func _swig_getCONCAVE_SHAPES_END_HERE() BroadphaseNativeTypes

var CONCAVE_SHAPES_END_HERE BroadphaseNativeTypes = _swig_getCONCAVE_SHAPES_END_HERE()

func _swig_getCOMPOUND_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var COMPOUND_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getCOMPOUND_SHAPE_PROXYTYPE()

func _swig_getSOFTBODY_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var SOFTBODY_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getSOFTBODY_SHAPE_PROXYTYPE()

func _swig_getHFFLUID_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var HFFLUID_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getHFFLUID_SHAPE_PROXYTYPE()

func _swig_getHFFLUID_BUOYANT_CONVEX_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var HFFLUID_BUOYANT_CONVEX_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getHFFLUID_BUOYANT_CONVEX_SHAPE_PROXYTYPE()

func _swig_getINVALID_SHAPE_PROXYTYPE() BroadphaseNativeTypes

var INVALID_SHAPE_PROXYTYPE BroadphaseNativeTypes = _swig_getINVALID_SHAPE_PROXYTYPE()

func _swig_getMAX_BROADPHASE_COLLISION_TYPES() BroadphaseNativeTypes

var MAX_BROADPHASE_COLLISION_TYPES BroadphaseNativeTypes = _swig_getMAX_BROADPHASE_COLLISION_TYPES()

type SwigcptrBtBroadphaseProxy uintptr

func (p SwigcptrBtBroadphaseProxy) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtBroadphaseProxy) SwigIsBtBroadphaseProxy() {
}

type BtBroadphaseProxyCollisionFilterGroups int

func _swig_getbtBroadphaseProxy_DefaultFilter_btBroadphaseProxy() BtBroadphaseProxyCollisionFilterGroups

var BtBroadphaseProxyDefaultFilter BtBroadphaseProxyCollisionFilterGroups = _swig_getbtBroadphaseProxy_DefaultFilter_btBroadphaseProxy()

func _swig_getbtBroadphaseProxy_StaticFilter_btBroadphaseProxy() BtBroadphaseProxyCollisionFilterGroups

var BtBroadphaseProxyStaticFilter BtBroadphaseProxyCollisionFilterGroups = _swig_getbtBroadphaseProxy_StaticFilter_btBroadphaseProxy()

func _swig_getbtBroadphaseProxy_KinematicFilter_btBroadphaseProxy() BtBroadphaseProxyCollisionFilterGroups

var BtBroadphaseProxyKinematicFilter BtBroadphaseProxyCollisionFilterGroups = _swig_getbtBroadphaseProxy_KinematicFilter_btBroadphaseProxy()

func _swig_getbtBroadphaseProxy_DebrisFilter_btBroadphaseProxy() BtBroadphaseProxyCollisionFilterGroups

var BtBroadphaseProxyDebrisFilter BtBroadphaseProxyCollisionFilterGroups = _swig_getbtBroadphaseProxy_DebrisFilter_btBroadphaseProxy()

func _swig_getbtBroadphaseProxy_SensorTrigger_btBroadphaseProxy() BtBroadphaseProxyCollisionFilterGroups

var BtBroadphaseProxySensorTrigger BtBroadphaseProxyCollisionFilterGroups = _swig_getbtBroadphaseProxy_SensorTrigger_btBroadphaseProxy()

func _swig_getbtBroadphaseProxy_CharacterFilter_btBroadphaseProxy() BtBroadphaseProxyCollisionFilterGroups

var BtBroadphaseProxyCharacterFilter BtBroadphaseProxyCollisionFilterGroups = _swig_getbtBroadphaseProxy_CharacterFilter_btBroadphaseProxy()

func _swig_getbtBroadphaseProxy_AllFilter_btBroadphaseProxy() BtBroadphaseProxyCollisionFilterGroups

var BtBroadphaseProxyAllFilter BtBroadphaseProxyCollisionFilterGroups = _swig_getbtBroadphaseProxy_AllFilter_btBroadphaseProxy()

func _swig_wrap_btBroadphaseProxy_m_clientObject_set(SwigcptrBtBroadphaseProxy, uintptr)

func (arg1 SwigcptrBtBroadphaseProxy) SetM_clientObject(arg2 uintptr) {
	_swig_wrap_btBroadphaseProxy_m_clientObject_set(arg1, arg2)
}

func _swig_wrap_btBroadphaseProxy_m_clientObject_get(SwigcptrBtBroadphaseProxy) uintptr

func (arg1 SwigcptrBtBroadphaseProxy) GetM_clientObject() uintptr {
	return _swig_wrap_btBroadphaseProxy_m_clientObject_get(arg1)
}

func _swig_wrap_btBroadphaseProxy_m_collisionFilterGroup_set(SwigcptrBtBroadphaseProxy, int16)

func (arg1 SwigcptrBtBroadphaseProxy) SetM_collisionFilterGroup(arg2 int16) {
	_swig_wrap_btBroadphaseProxy_m_collisionFilterGroup_set(arg1, arg2)
}

func _swig_wrap_btBroadphaseProxy_m_collisionFilterGroup_get(SwigcptrBtBroadphaseProxy) int16

func (arg1 SwigcptrBtBroadphaseProxy) GetM_collisionFilterGroup() int16 {
	return _swig_wrap_btBroadphaseProxy_m_collisionFilterGroup_get(arg1)
}

func _swig_wrap_btBroadphaseProxy_m_collisionFilterMask_set(SwigcptrBtBroadphaseProxy, int16)

func (arg1 SwigcptrBtBroadphaseProxy) SetM_collisionFilterMask(arg2 int16) {
	_swig_wrap_btBroadphaseProxy_m_collisionFilterMask_set(arg1, arg2)
}

func _swig_wrap_btBroadphaseProxy_m_collisionFilterMask_get(SwigcptrBtBroadphaseProxy) int16

func (arg1 SwigcptrBtBroadphaseProxy) GetM_collisionFilterMask() int16 {
	return _swig_wrap_btBroadphaseProxy_m_collisionFilterMask_get(arg1)
}

func _swig_wrap_btBroadphaseProxy_m_multiSapParentProxy_set(SwigcptrBtBroadphaseProxy, uintptr)

func (arg1 SwigcptrBtBroadphaseProxy) SetM_multiSapParentProxy(arg2 uintptr) {
	_swig_wrap_btBroadphaseProxy_m_multiSapParentProxy_set(arg1, arg2)
}

func _swig_wrap_btBroadphaseProxy_m_multiSapParentProxy_get(SwigcptrBtBroadphaseProxy) uintptr

func (arg1 SwigcptrBtBroadphaseProxy) GetM_multiSapParentProxy() uintptr {
	return _swig_wrap_btBroadphaseProxy_m_multiSapParentProxy_get(arg1)
}

func _swig_wrap_btBroadphaseProxy_m_uniqueId_set(SwigcptrBtBroadphaseProxy, int)

func (arg1 SwigcptrBtBroadphaseProxy) SetM_uniqueId(arg2 int) {
	_swig_wrap_btBroadphaseProxy_m_uniqueId_set(arg1, arg2)
}

func _swig_wrap_btBroadphaseProxy_m_uniqueId_get(SwigcptrBtBroadphaseProxy) int

func (arg1 SwigcptrBtBroadphaseProxy) GetM_uniqueId() int {
	return _swig_wrap_btBroadphaseProxy_m_uniqueId_get(arg1)
}

func _swig_wrap_btBroadphaseProxy_m_aabbMin_set(SwigcptrBtBroadphaseProxy, uintptr)

func (arg1 SwigcptrBtBroadphaseProxy) SetM_aabbMin(arg2 BtVector3) {
	_swig_wrap_btBroadphaseProxy_m_aabbMin_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBroadphaseProxy_m_aabbMin_get(SwigcptrBtBroadphaseProxy) SwigcptrBtVector3

func (arg1 SwigcptrBtBroadphaseProxy) GetM_aabbMin() BtVector3 {
	return _swig_wrap_btBroadphaseProxy_m_aabbMin_get(arg1)
}

func _swig_wrap_btBroadphaseProxy_m_aabbMax_set(SwigcptrBtBroadphaseProxy, uintptr)

func (arg1 SwigcptrBtBroadphaseProxy) SetM_aabbMax(arg2 BtVector3) {
	_swig_wrap_btBroadphaseProxy_m_aabbMax_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBroadphaseProxy_m_aabbMax_get(SwigcptrBtBroadphaseProxy) SwigcptrBtVector3

func (arg1 SwigcptrBtBroadphaseProxy) GetM_aabbMax() BtVector3 {
	return _swig_wrap_btBroadphaseProxy_m_aabbMax_get(arg1)
}

func _swig_wrap_btBroadphaseProxy_getUid(SwigcptrBtBroadphaseProxy) int

func (arg1 SwigcptrBtBroadphaseProxy) GetUid() int {
	return _swig_wrap_btBroadphaseProxy_getUid(arg1)
}

func _swig_wrap_new_btBroadphaseProxy__SWIG_0() SwigcptrBtBroadphaseProxy

func NewBtBroadphaseProxy__SWIG_0() BtBroadphaseProxy {
	return _swig_wrap_new_btBroadphaseProxy__SWIG_0()
}

func _swig_wrap_new_btBroadphaseProxy__SWIG_1(uintptr, uintptr, uintptr, int16, int16, uintptr) SwigcptrBtBroadphaseProxy

func NewBtBroadphaseProxy__SWIG_1(arg1 BtVector3, arg2 BtVector3, arg3 uintptr, arg4 int16, arg5 int16, arg6 uintptr) BtBroadphaseProxy {
	return _swig_wrap_new_btBroadphaseProxy__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4, arg5, arg6)
}

func _swig_wrap_new_btBroadphaseProxy__SWIG_2(uintptr, uintptr, uintptr, int16, int16) SwigcptrBtBroadphaseProxy

func NewBtBroadphaseProxy__SWIG_2(arg1 BtVector3, arg2 BtVector3, arg3 uintptr, arg4 int16, arg5 int16) BtBroadphaseProxy {
	return _swig_wrap_new_btBroadphaseProxy__SWIG_2(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4, arg5)
}

func NewBtBroadphaseProxy(a ...interface{}) BtBroadphaseProxy {
	argc := len(a)
	if argc == 0 {
		return NewBtBroadphaseProxy__SWIG_0()
	}
	if argc == 5 {
		return NewBtBroadphaseProxy__SWIG_2(a[0].(BtVector3), a[1].(BtVector3), a[2].(uintptr), a[3].(int16), a[4].(int16))
	}
	if argc == 6 {
		return NewBtBroadphaseProxy__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(uintptr), a[3].(int16), a[4].(int16), a[5].(uintptr))
	}
	panic("No match for overloaded function call")
}

func BtBroadphaseProxyIsPolyhedral(int) bool
func BtBroadphaseProxyIsConvex(int) bool
func BtBroadphaseProxyIsNonMoving(int) bool
func BtBroadphaseProxyIsConcave(int) bool
func BtBroadphaseProxyIsCompound(int) bool
func BtBroadphaseProxyIsSoftBody(int) bool
func BtBroadphaseProxyIsInfinite(int) bool
func BtBroadphaseProxyIsConvex2d(int) bool
func _swig_wrap_delete_btBroadphaseProxy(uintptr)

func DeleteBtBroadphaseProxy(arg1 BtBroadphaseProxy) {
	_swig_wrap_delete_btBroadphaseProxy(arg1.Swigcptr())
}

type BtBroadphaseProxy interface {
	Swigcptr() uintptr
	SwigIsBtBroadphaseProxy()
	SetM_clientObject(arg2 uintptr)
	GetM_clientObject() uintptr
	SetM_collisionFilterGroup(arg2 int16)
	GetM_collisionFilterGroup() int16
	SetM_collisionFilterMask(arg2 int16)
	GetM_collisionFilterMask() int16
	SetM_multiSapParentProxy(arg2 uintptr)
	GetM_multiSapParentProxy() uintptr
	SetM_uniqueId(arg2 int)
	GetM_uniqueId() int
	SetM_aabbMin(arg2 BtVector3)
	GetM_aabbMin() BtVector3
	SetM_aabbMax(arg2 BtVector3)
	GetM_aabbMax() BtVector3
	GetUid() int
}

type SwigcptrBtBroadphasePair uintptr

func (p SwigcptrBtBroadphasePair) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtBroadphasePair) SwigIsBtBroadphasePair() {
}

func _swig_wrap_new_btBroadphasePair__SWIG_0() SwigcptrBtBroadphasePair

func NewBtBroadphasePair__SWIG_0() BtBroadphasePair {
	return _swig_wrap_new_btBroadphasePair__SWIG_0()
}

func _swig_wrap_new_btBroadphasePair__SWIG_1(uintptr) SwigcptrBtBroadphasePair

func NewBtBroadphasePair__SWIG_1(arg1 BtBroadphasePair) BtBroadphasePair {
	return _swig_wrap_new_btBroadphasePair__SWIG_1(arg1.Swigcptr())
}

func _swig_wrap_new_btBroadphasePair__SWIG_2(uintptr, uintptr) SwigcptrBtBroadphasePair

func NewBtBroadphasePair__SWIG_2(arg1 BtBroadphaseProxy, arg2 BtBroadphaseProxy) BtBroadphasePair {
	return _swig_wrap_new_btBroadphasePair__SWIG_2(arg1.Swigcptr(), arg2.Swigcptr())
}

func NewBtBroadphasePair(a ...interface{}) BtBroadphasePair {
	argc := len(a)
	if argc == 0 {
		return NewBtBroadphasePair__SWIG_0()
	}
	if argc == 1 {
		return NewBtBroadphasePair__SWIG_1(a[0].(BtBroadphasePair))
	}
	if argc == 2 {
		return NewBtBroadphasePair__SWIG_2(a[0].(BtBroadphaseProxy), a[1].(BtBroadphaseProxy))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btBroadphasePair_m_pProxy0_set(SwigcptrBtBroadphasePair, uintptr)

func (arg1 SwigcptrBtBroadphasePair) SetM_pProxy0(arg2 BtBroadphaseProxy) {
	_swig_wrap_btBroadphasePair_m_pProxy0_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBroadphasePair_m_pProxy0_get(SwigcptrBtBroadphasePair) SwigcptrBtBroadphaseProxy

func (arg1 SwigcptrBtBroadphasePair) GetM_pProxy0() BtBroadphaseProxy {
	return _swig_wrap_btBroadphasePair_m_pProxy0_get(arg1)
}

func _swig_wrap_btBroadphasePair_m_pProxy1_set(SwigcptrBtBroadphasePair, uintptr)

func (arg1 SwigcptrBtBroadphasePair) SetM_pProxy1(arg2 BtBroadphaseProxy) {
	_swig_wrap_btBroadphasePair_m_pProxy1_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBroadphasePair_m_pProxy1_get(SwigcptrBtBroadphasePair) SwigcptrBtBroadphaseProxy

func (arg1 SwigcptrBtBroadphasePair) GetM_pProxy1() BtBroadphaseProxy {
	return _swig_wrap_btBroadphasePair_m_pProxy1_get(arg1)
}

func _swig_wrap_btBroadphasePair_m_algorithm_set(SwigcptrBtBroadphasePair, uintptr)

func (arg1 SwigcptrBtBroadphasePair) SetM_algorithm(arg2 BtCollisionAlgorithm) {
	_swig_wrap_btBroadphasePair_m_algorithm_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBroadphasePair_m_algorithm_get(SwigcptrBtBroadphasePair) SwigcptrBtCollisionAlgorithm

func (arg1 SwigcptrBtBroadphasePair) GetM_algorithm() BtCollisionAlgorithm {
	return _swig_wrap_btBroadphasePair_m_algorithm_get(arg1)
}

func _swig_wrap_delete_btBroadphasePair(uintptr)

func DeleteBtBroadphasePair(arg1 BtBroadphasePair) {
	_swig_wrap_delete_btBroadphasePair(arg1.Swigcptr())
}

type BtBroadphasePair interface {
	Swigcptr() uintptr
	SwigIsBtBroadphasePair()
	SetM_pProxy0(arg2 BtBroadphaseProxy)
	GetM_pProxy0() BtBroadphaseProxy
	SetM_pProxy1(arg2 BtBroadphaseProxy)
	GetM_pProxy1() BtBroadphaseProxy
	SetM_algorithm(arg2 BtCollisionAlgorithm)
	GetM_algorithm() BtCollisionAlgorithm
}

type SwigcptrBtBroadphasePairSortPredicate uintptr

func (p SwigcptrBtBroadphasePairSortPredicate) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtBroadphasePairSortPredicate) SwigIsBtBroadphasePairSortPredicate() {
}

func _swig_wrap_new_btBroadphasePairSortPredicate() SwigcptrBtBroadphasePairSortPredicate

func NewBtBroadphasePairSortPredicate() BtBroadphasePairSortPredicate {
	return _swig_wrap_new_btBroadphasePairSortPredicate()
}

func _swig_wrap_delete_btBroadphasePairSortPredicate(uintptr)

func DeleteBtBroadphasePairSortPredicate(arg1 BtBroadphasePairSortPredicate) {
	_swig_wrap_delete_btBroadphasePairSortPredicate(arg1.Swigcptr())
}

type BtBroadphasePairSortPredicate interface {
	Swigcptr() uintptr
	SwigIsBtBroadphasePairSortPredicate()
}

type SwigcptrBtCollisionAlgorithmCreateFunc uintptr

func (p SwigcptrBtCollisionAlgorithmCreateFunc) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionAlgorithmCreateFunc) SwigIsBtCollisionAlgorithmCreateFunc() {
}

func _swig_wrap_btCollisionAlgorithmCreateFunc_m_swapped_set(SwigcptrBtCollisionAlgorithmCreateFunc, bool)

func (arg1 SwigcptrBtCollisionAlgorithmCreateFunc) SetM_swapped(arg2 bool) {
	_swig_wrap_btCollisionAlgorithmCreateFunc_m_swapped_set(arg1, arg2)
}

func _swig_wrap_btCollisionAlgorithmCreateFunc_m_swapped_get(SwigcptrBtCollisionAlgorithmCreateFunc) bool

func (arg1 SwigcptrBtCollisionAlgorithmCreateFunc) GetM_swapped() bool {
	return _swig_wrap_btCollisionAlgorithmCreateFunc_m_swapped_get(arg1)
}

func _swig_wrap_new_btCollisionAlgorithmCreateFunc() SwigcptrBtCollisionAlgorithmCreateFunc

func NewBtCollisionAlgorithmCreateFunc() BtCollisionAlgorithmCreateFunc {
	return _swig_wrap_new_btCollisionAlgorithmCreateFunc()
}

func _swig_wrap_delete_btCollisionAlgorithmCreateFunc(uintptr)

func DeleteBtCollisionAlgorithmCreateFunc(arg1 BtCollisionAlgorithmCreateFunc) {
	_swig_wrap_delete_btCollisionAlgorithmCreateFunc(arg1.Swigcptr())
}

func _swig_wrap_btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(SwigcptrBtCollisionAlgorithmCreateFunc, uintptr, uintptr, uintptr) SwigcptrBtCollisionAlgorithm

func (arg1 SwigcptrBtCollisionAlgorithmCreateFunc) CreateCollisionAlgorithm(arg2 BtCollisionAlgorithmConstructionInfo, arg3 BtCollisionObjectWrapper, arg4 BtCollisionObjectWrapper) BtCollisionAlgorithm {
	return _swig_wrap_btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

type BtCollisionAlgorithmCreateFunc interface {
	Swigcptr() uintptr
	SwigIsBtCollisionAlgorithmCreateFunc()
	SetM_swapped(arg2 bool)
	GetM_swapped() bool
	CreateCollisionAlgorithm(arg2 BtCollisionAlgorithmConstructionInfo, arg3 BtCollisionObjectWrapper, arg4 BtCollisionObjectWrapper) BtCollisionAlgorithm
}

const USE_DISPATCH_REGISTRY_ARRAY int = 1

type SwigcptrBtCollisionDispatcher uintptr

func (p SwigcptrBtCollisionDispatcher) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionDispatcher) SwigIsBtCollisionDispatcher() {
}

type BtCollisionDispatcherDispatcherFlags int

func _swig_getbtCollisionDispatcher_CD_STATIC_STATIC_REPORTED_btCollisionDispatcher() BtCollisionDispatcherDispatcherFlags

var BtCollisionDispatcherCD_STATIC_STATIC_REPORTED BtCollisionDispatcherDispatcherFlags = _swig_getbtCollisionDispatcher_CD_STATIC_STATIC_REPORTED_btCollisionDispatcher()

func _swig_getbtCollisionDispatcher_CD_USE_RELATIVE_CONTACT_BREAKING_THRESHOLD_btCollisionDispatcher() BtCollisionDispatcherDispatcherFlags

var BtCollisionDispatcherCD_USE_RELATIVE_CONTACT_BREAKING_THRESHOLD BtCollisionDispatcherDispatcherFlags = _swig_getbtCollisionDispatcher_CD_USE_RELATIVE_CONTACT_BREAKING_THRESHOLD_btCollisionDispatcher()

func _swig_getbtCollisionDispatcher_CD_DISABLE_CONTACTPOOL_DYNAMIC_ALLOCATION_btCollisionDispatcher() BtCollisionDispatcherDispatcherFlags

var BtCollisionDispatcherCD_DISABLE_CONTACTPOOL_DYNAMIC_ALLOCATION BtCollisionDispatcherDispatcherFlags = _swig_getbtCollisionDispatcher_CD_DISABLE_CONTACTPOOL_DYNAMIC_ALLOCATION_btCollisionDispatcher()

func _swig_wrap_btCollisionDispatcher_getDispatcherFlags(SwigcptrBtCollisionDispatcher) int

func (arg1 SwigcptrBtCollisionDispatcher) GetDispatcherFlags() int {
	return _swig_wrap_btCollisionDispatcher_getDispatcherFlags(arg1)
}

func _swig_wrap_btCollisionDispatcher_setDispatcherFlags(SwigcptrBtCollisionDispatcher, int)

func (arg1 SwigcptrBtCollisionDispatcher) SetDispatcherFlags(arg2 int) {
	_swig_wrap_btCollisionDispatcher_setDispatcherFlags(arg1, arg2)
}

func _swig_wrap_btCollisionDispatcher_registerCollisionCreateFunc(SwigcptrBtCollisionDispatcher, int, int, uintptr)

func (arg1 SwigcptrBtCollisionDispatcher) RegisterCollisionCreateFunc(arg2 int, arg3 int, arg4 BtCollisionAlgorithmCreateFunc) {
	_swig_wrap_btCollisionDispatcher_registerCollisionCreateFunc(arg1, arg2, arg3, arg4.Swigcptr())
}

func _swig_wrap_btCollisionDispatcher_getNumManifolds(SwigcptrBtCollisionDispatcher) int

func (arg1 SwigcptrBtCollisionDispatcher) GetNumManifolds() int {
	return _swig_wrap_btCollisionDispatcher_getNumManifolds(arg1)
}

func _swig_wrap_btCollisionDispatcher_getInternalManifoldPointer(SwigcptrBtCollisionDispatcher) SwigcptrBtPersistentManifold

func (arg1 SwigcptrBtCollisionDispatcher) GetInternalManifoldPointer() BtPersistentManifold {
	return _swig_wrap_btCollisionDispatcher_getInternalManifoldPointer(arg1)
}

func _swig_wrap_btCollisionDispatcher_getManifoldByIndexInternal__SWIG_0(SwigcptrBtCollisionDispatcher, int) SwigcptrBtPersistentManifold

func (arg1 SwigcptrBtCollisionDispatcher) GetManifoldByIndexInternal__SWIG_0(arg2 int) BtPersistentManifold {
	return _swig_wrap_btCollisionDispatcher_getManifoldByIndexInternal__SWIG_0(arg1, arg2)
}

func _swig_wrap_btCollisionDispatcher_getManifoldByIndexInternal__SWIG_1(SwigcptrBtCollisionDispatcher, int) SwigcptrBtPersistentManifold

func (arg1 SwigcptrBtCollisionDispatcher) GetManifoldByIndexInternal__SWIG_1(arg2 int) BtPersistentManifold {
	return _swig_wrap_btCollisionDispatcher_getManifoldByIndexInternal__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtCollisionDispatcher) GetManifoldByIndexInternal(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.GetManifoldByIndexInternal__SWIG_0(a[0].(int))
	}
	if argc == 1 {
		return p.GetManifoldByIndexInternal__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_new_btCollisionDispatcher(uintptr) SwigcptrBtCollisionDispatcher

func NewBtCollisionDispatcher(arg1 BtCollisionConfiguration) BtCollisionDispatcher {
	return _swig_wrap_new_btCollisionDispatcher(arg1.Swigcptr())
}

func _swig_wrap_delete_btCollisionDispatcher(uintptr)

func DeleteBtCollisionDispatcher(arg1 BtCollisionDispatcher) {
	_swig_wrap_delete_btCollisionDispatcher(arg1.Swigcptr())
}

func _swig_wrap_btCollisionDispatcher_getNewManifold(SwigcptrBtCollisionDispatcher, uintptr, uintptr) SwigcptrBtPersistentManifold

func (arg1 SwigcptrBtCollisionDispatcher) GetNewManifold(arg2 BtCollisionObject, arg3 BtCollisionObject) BtPersistentManifold {
	return _swig_wrap_btCollisionDispatcher_getNewManifold(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCollisionDispatcher_releaseManifold(SwigcptrBtCollisionDispatcher, uintptr)

func (arg1 SwigcptrBtCollisionDispatcher) ReleaseManifold(arg2 BtPersistentManifold) {
	_swig_wrap_btCollisionDispatcher_releaseManifold(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionDispatcher_clearManifold(SwigcptrBtCollisionDispatcher, uintptr)

func (arg1 SwigcptrBtCollisionDispatcher) ClearManifold(arg2 BtPersistentManifold) {
	_swig_wrap_btCollisionDispatcher_clearManifold(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionDispatcher_findAlgorithm__SWIG_0(SwigcptrBtCollisionDispatcher, uintptr, uintptr, uintptr) SwigcptrBtCollisionAlgorithm

func (arg1 SwigcptrBtCollisionDispatcher) FindAlgorithm__SWIG_0(arg2 BtCollisionObjectWrapper, arg3 BtCollisionObjectWrapper, arg4 BtPersistentManifold) BtCollisionAlgorithm {
	return _swig_wrap_btCollisionDispatcher_findAlgorithm__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btCollisionDispatcher_findAlgorithm__SWIG_1(SwigcptrBtCollisionDispatcher, uintptr, uintptr) SwigcptrBtCollisionAlgorithm

func (arg1 SwigcptrBtCollisionDispatcher) FindAlgorithm__SWIG_1(arg2 BtCollisionObjectWrapper, arg3 BtCollisionObjectWrapper) BtCollisionAlgorithm {
	return _swig_wrap_btCollisionDispatcher_findAlgorithm__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func (p SwigcptrBtCollisionDispatcher) FindAlgorithm(a ...interface{}) BtCollisionAlgorithm {
	argc := len(a)
	if argc == 2 {
		return p.FindAlgorithm__SWIG_1(a[0].(BtCollisionObjectWrapper), a[1].(BtCollisionObjectWrapper))
	}
	if argc == 3 {
		return p.FindAlgorithm__SWIG_0(a[0].(BtCollisionObjectWrapper), a[1].(BtCollisionObjectWrapper), a[2].(BtPersistentManifold))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionDispatcher_needsCollision(SwigcptrBtCollisionDispatcher, uintptr, uintptr) bool

func (arg1 SwigcptrBtCollisionDispatcher) NeedsCollision(arg2 BtCollisionObject, arg3 BtCollisionObject) bool {
	return _swig_wrap_btCollisionDispatcher_needsCollision(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCollisionDispatcher_needsResponse(SwigcptrBtCollisionDispatcher, uintptr, uintptr) bool

func (arg1 SwigcptrBtCollisionDispatcher) NeedsResponse(arg2 BtCollisionObject, arg3 BtCollisionObject) bool {
	return _swig_wrap_btCollisionDispatcher_needsResponse(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCollisionDispatcher_dispatchAllCollisionPairs(SwigcptrBtCollisionDispatcher, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtCollisionDispatcher) DispatchAllCollisionPairs(arg2 BtOverlappingPairCache, arg3 BtDispatcherInfo, arg4 BtDispatcher) {
	_swig_wrap_btCollisionDispatcher_dispatchAllCollisionPairs(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btCollisionDispatcher_setNearCallback(SwigcptrBtCollisionDispatcher, *_swig_fnptr)

func (arg1 SwigcptrBtCollisionDispatcher) SetNearCallback(arg2 *_swig_fnptr) {
	_swig_wrap_btCollisionDispatcher_setNearCallback(arg1, arg2)
}

func _swig_wrap_btCollisionDispatcher_getNearCallback(SwigcptrBtCollisionDispatcher) *_swig_fnptr

func (arg1 SwigcptrBtCollisionDispatcher) GetNearCallback() *_swig_fnptr {
	return _swig_wrap_btCollisionDispatcher_getNearCallback(arg1)
}

func _swig_wrap_btCollisionDispatcher_defaultNearCallback(uintptr, uintptr, uintptr)

func BtCollisionDispatcherDefaultNearCallback(arg1 BtBroadphasePair, arg2 BtCollisionDispatcher, arg3 BtDispatcherInfo) {
	_swig_wrap_btCollisionDispatcher_defaultNearCallback(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCollisionDispatcher_allocateCollisionAlgorithm(SwigcptrBtCollisionDispatcher, int) uintptr

func (arg1 SwigcptrBtCollisionDispatcher) AllocateCollisionAlgorithm(arg2 int) uintptr {
	return _swig_wrap_btCollisionDispatcher_allocateCollisionAlgorithm(arg1, arg2)
}

func _swig_wrap_btCollisionDispatcher_freeCollisionAlgorithm(SwigcptrBtCollisionDispatcher, uintptr)

func (arg1 SwigcptrBtCollisionDispatcher) FreeCollisionAlgorithm(arg2 uintptr) {
	_swig_wrap_btCollisionDispatcher_freeCollisionAlgorithm(arg1, arg2)
}

func _swig_wrap_btCollisionDispatcher_getCollisionConfiguration__SWIG_0(SwigcptrBtCollisionDispatcher) SwigcptrBtCollisionConfiguration

func (arg1 SwigcptrBtCollisionDispatcher) GetCollisionConfiguration__SWIG_0() BtCollisionConfiguration {
	return _swig_wrap_btCollisionDispatcher_getCollisionConfiguration__SWIG_0(arg1)
}

func _swig_wrap_btCollisionDispatcher_getCollisionConfiguration__SWIG_1(SwigcptrBtCollisionDispatcher) SwigcptrBtCollisionConfiguration

func (arg1 SwigcptrBtCollisionDispatcher) GetCollisionConfiguration__SWIG_1() BtCollisionConfiguration {
	return _swig_wrap_btCollisionDispatcher_getCollisionConfiguration__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionDispatcher) GetCollisionConfiguration(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetCollisionConfiguration__SWIG_0()
	}
	if argc == 0 {
		return p.GetCollisionConfiguration__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionDispatcher_setCollisionConfiguration(SwigcptrBtCollisionDispatcher, uintptr)

func (arg1 SwigcptrBtCollisionDispatcher) SetCollisionConfiguration(arg2 BtCollisionConfiguration) {
	_swig_wrap_btCollisionDispatcher_setCollisionConfiguration(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionDispatcher_getInternalManifoldPool__SWIG_0(SwigcptrBtCollisionDispatcher) SwigcptrBtPoolAllocator

func (arg1 SwigcptrBtCollisionDispatcher) GetInternalManifoldPool__SWIG_0() BtPoolAllocator {
	return _swig_wrap_btCollisionDispatcher_getInternalManifoldPool__SWIG_0(arg1)
}

func _swig_wrap_btCollisionDispatcher_getInternalManifoldPool__SWIG_1(SwigcptrBtCollisionDispatcher) SwigcptrBtPoolAllocator

func (arg1 SwigcptrBtCollisionDispatcher) GetInternalManifoldPool__SWIG_1() BtPoolAllocator {
	return _swig_wrap_btCollisionDispatcher_getInternalManifoldPool__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionDispatcher) GetInternalManifoldPool(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetInternalManifoldPool__SWIG_0()
	}
	if argc == 0 {
		return p.GetInternalManifoldPool__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func (p SwigcptrBtCollisionDispatcher) SwigIsBtDispatcher() {
}

func (p SwigcptrBtCollisionDispatcher) SwigGetBtDispatcher() BtDispatcher {
	return SwigcptrBtDispatcher(p.Swigcptr())
}

type BtCollisionDispatcher interface {
	Swigcptr() uintptr
	SwigIsBtCollisionDispatcher()
	GetDispatcherFlags() int
	SetDispatcherFlags(arg2 int)
	RegisterCollisionCreateFunc(arg2 int, arg3 int, arg4 BtCollisionAlgorithmCreateFunc)
	GetNumManifolds() int
	GetInternalManifoldPointer() BtPersistentManifold
	GetManifoldByIndexInternal(a ...interface{}) interface{}
	GetNewManifold(arg2 BtCollisionObject, arg3 BtCollisionObject) BtPersistentManifold
	ReleaseManifold(arg2 BtPersistentManifold)
	ClearManifold(arg2 BtPersistentManifold)
	FindAlgorithm(a ...interface{}) BtCollisionAlgorithm
	NeedsCollision(arg2 BtCollisionObject, arg3 BtCollisionObject) bool
	NeedsResponse(arg2 BtCollisionObject, arg3 BtCollisionObject) bool
	DispatchAllCollisionPairs(arg2 BtOverlappingPairCache, arg3 BtDispatcherInfo, arg4 BtDispatcher)
	SetNearCallback(arg2 *_swig_fnptr)
	GetNearCallback() *_swig_fnptr
	AllocateCollisionAlgorithm(arg2 int) uintptr
	FreeCollisionAlgorithm(arg2 uintptr)
	GetCollisionConfiguration(a ...interface{}) interface{}
	SetCollisionConfiguration(arg2 BtCollisionConfiguration)
	GetInternalManifoldPool(a ...interface{}) interface{}
	SwigIsBtDispatcher()
	SwigGetBtDispatcher() BtDispatcher
}

type SwigcptrBtBroadphaseAabbCallback uintptr

func (p SwigcptrBtBroadphaseAabbCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtBroadphaseAabbCallback) SwigIsBtBroadphaseAabbCallback() {
}

func _swig_wrap_delete_btBroadphaseAabbCallback(uintptr)

func DeleteBtBroadphaseAabbCallback(arg1 BtBroadphaseAabbCallback) {
	_swig_wrap_delete_btBroadphaseAabbCallback(arg1.Swigcptr())
}

func _swig_wrap_btBroadphaseAabbCallback_process(SwigcptrBtBroadphaseAabbCallback, uintptr) bool

func (arg1 SwigcptrBtBroadphaseAabbCallback) Process(arg2 BtBroadphaseProxy) bool {
	return _swig_wrap_btBroadphaseAabbCallback_process(arg1, arg2.Swigcptr())
}

type BtBroadphaseAabbCallback interface {
	Swigcptr() uintptr
	SwigIsBtBroadphaseAabbCallback()
	Process(arg2 BtBroadphaseProxy) bool
}

type SwigcptrBtBroadphaseRayCallback uintptr

func (p SwigcptrBtBroadphaseRayCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtBroadphaseRayCallback) SwigIsBtBroadphaseRayCallback() {
}

func _swig_wrap_btBroadphaseRayCallback_m_rayDirectionInverse_set(SwigcptrBtBroadphaseRayCallback, uintptr)

func (arg1 SwigcptrBtBroadphaseRayCallback) SetM_rayDirectionInverse(arg2 BtVector3) {
	_swig_wrap_btBroadphaseRayCallback_m_rayDirectionInverse_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBroadphaseRayCallback_m_rayDirectionInverse_get(SwigcptrBtBroadphaseRayCallback) SwigcptrBtVector3

func (arg1 SwigcptrBtBroadphaseRayCallback) GetM_rayDirectionInverse() BtVector3 {
	return _swig_wrap_btBroadphaseRayCallback_m_rayDirectionInverse_get(arg1)
}

func _swig_wrap_btBroadphaseRayCallback_m_signs_set(SwigcptrBtBroadphaseRayCallback, *uint)

func (arg1 SwigcptrBtBroadphaseRayCallback) SetM_signs(arg2 *uint) {
	_swig_wrap_btBroadphaseRayCallback_m_signs_set(arg1, arg2)
}

func _swig_wrap_btBroadphaseRayCallback_m_signs_get(SwigcptrBtBroadphaseRayCallback) *uint

func (arg1 SwigcptrBtBroadphaseRayCallback) GetM_signs() *uint {
	return _swig_wrap_btBroadphaseRayCallback_m_signs_get(arg1)
}

func _swig_wrap_btBroadphaseRayCallback_m_lambda_max_set(SwigcptrBtBroadphaseRayCallback, float32)

func (arg1 SwigcptrBtBroadphaseRayCallback) SetM_lambda_max(arg2 float32) {
	_swig_wrap_btBroadphaseRayCallback_m_lambda_max_set(arg1, arg2)
}

func _swig_wrap_btBroadphaseRayCallback_m_lambda_max_get(SwigcptrBtBroadphaseRayCallback) float32

func (arg1 SwigcptrBtBroadphaseRayCallback) GetM_lambda_max() float32 {
	return _swig_wrap_btBroadphaseRayCallback_m_lambda_max_get(arg1)
}

func _swig_wrap_delete_btBroadphaseRayCallback(uintptr)

func DeleteBtBroadphaseRayCallback(arg1 BtBroadphaseRayCallback) {
	_swig_wrap_delete_btBroadphaseRayCallback(arg1.Swigcptr())
}

func _swig_wrap_btBroadphaseRayCallback_process(SwigcptrBtBroadphaseRayCallback, uintptr) bool

func (_swig_base SwigcptrBtBroadphaseRayCallback) Process(arg1 BtBroadphaseProxy) bool {
	return _swig_wrap_btBroadphaseRayCallback_process(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtBroadphaseRayCallback) SwigIsBtBroadphaseAabbCallback() {
}

func (p SwigcptrBtBroadphaseRayCallback) SwigGetBtBroadphaseAabbCallback() BtBroadphaseAabbCallback {
	return SwigcptrBtBroadphaseAabbCallback(p.Swigcptr())
}

type BtBroadphaseRayCallback interface {
	Swigcptr() uintptr
	SwigIsBtBroadphaseRayCallback()
	SetM_rayDirectionInverse(arg2 BtVector3)
	GetM_rayDirectionInverse() BtVector3
	SetM_signs(arg2 *uint)
	GetM_signs() *uint
	SetM_lambda_max(arg2 float32)
	GetM_lambda_max() float32
	Process(arg1 BtBroadphaseProxy) bool
	SwigIsBtBroadphaseAabbCallback()
	SwigGetBtBroadphaseAabbCallback() BtBroadphaseAabbCallback
}

type SwigcptrBtBroadphaseInterface uintptr

func (p SwigcptrBtBroadphaseInterface) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtBroadphaseInterface) SwigIsBtBroadphaseInterface() {
}

func _swig_wrap_delete_btBroadphaseInterface(uintptr)

func DeleteBtBroadphaseInterface(arg1 BtBroadphaseInterface) {
	_swig_wrap_delete_btBroadphaseInterface(arg1.Swigcptr())
}

func _swig_wrap_btBroadphaseInterface_createProxy(SwigcptrBtBroadphaseInterface, uintptr, uintptr, int, uintptr, int16, int16, uintptr, uintptr) SwigcptrBtBroadphaseProxy

func (arg1 SwigcptrBtBroadphaseInterface) CreateProxy(arg2 BtVector3, arg3 BtVector3, arg4 int, arg5 uintptr, arg6 int16, arg7 int16, arg8 BtDispatcher, arg9 uintptr) BtBroadphaseProxy {
	return _swig_wrap_btBroadphaseInterface_createProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5, arg6, arg7, arg8.Swigcptr(), arg9)
}

func _swig_wrap_btBroadphaseInterface_destroyProxy(SwigcptrBtBroadphaseInterface, uintptr, uintptr)

func (arg1 SwigcptrBtBroadphaseInterface) DestroyProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btBroadphaseInterface_destroyProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btBroadphaseInterface_setAabb(SwigcptrBtBroadphaseInterface, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtBroadphaseInterface) SetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3, arg5 BtDispatcher) {
	_swig_wrap_btBroadphaseInterface_setAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btBroadphaseInterface_getAabb(SwigcptrBtBroadphaseInterface, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtBroadphaseInterface) GetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btBroadphaseInterface_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btBroadphaseInterface_rayTest__SWIG_0(SwigcptrBtBroadphaseInterface, uintptr, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtBroadphaseInterface) RayTest__SWIG_0(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btBroadphaseInterface_rayTest__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btBroadphaseInterface_rayTest__SWIG_1(SwigcptrBtBroadphaseInterface, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtBroadphaseInterface) RayTest__SWIG_1(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback, arg5 BtVector3) {
	_swig_wrap_btBroadphaseInterface_rayTest__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btBroadphaseInterface_rayTest__SWIG_2(SwigcptrBtBroadphaseInterface, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtBroadphaseInterface) RayTest__SWIG_2(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback) {
	_swig_wrap_btBroadphaseInterface_rayTest__SWIG_2(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func (p SwigcptrBtBroadphaseInterface) RayTest(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.RayTest__SWIG_2(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback))
		return
	}
	if argc == 4 {
		p.RayTest__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback), a[3].(BtVector3))
		return
	}
	if argc == 5 {
		p.RayTest__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback), a[3].(BtVector3), a[4].(BtVector3))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btBroadphaseInterface_aabbTest(SwigcptrBtBroadphaseInterface, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtBroadphaseInterface) AabbTest(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseAabbCallback) {
	_swig_wrap_btBroadphaseInterface_aabbTest(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btBroadphaseInterface_calculateOverlappingPairs(SwigcptrBtBroadphaseInterface, uintptr)

func (arg1 SwigcptrBtBroadphaseInterface) CalculateOverlappingPairs(arg2 BtDispatcher) {
	_swig_wrap_btBroadphaseInterface_calculateOverlappingPairs(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBroadphaseInterface_getOverlappingPairCache__SWIG_0(SwigcptrBtBroadphaseInterface) SwigcptrBtOverlappingPairCache

func (arg1 SwigcptrBtBroadphaseInterface) GetOverlappingPairCache__SWIG_0() BtOverlappingPairCache {
	return _swig_wrap_btBroadphaseInterface_getOverlappingPairCache__SWIG_0(arg1)
}

func _swig_wrap_btBroadphaseInterface_getOverlappingPairCache__SWIG_1(SwigcptrBtBroadphaseInterface) SwigcptrBtOverlappingPairCache

func (arg1 SwigcptrBtBroadphaseInterface) GetOverlappingPairCache__SWIG_1() BtOverlappingPairCache {
	return _swig_wrap_btBroadphaseInterface_getOverlappingPairCache__SWIG_1(arg1)
}

func (p SwigcptrBtBroadphaseInterface) GetOverlappingPairCache(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetOverlappingPairCache__SWIG_0()
	}
	if argc == 0 {
		return p.GetOverlappingPairCache__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btBroadphaseInterface_getBroadphaseAabb(SwigcptrBtBroadphaseInterface, uintptr, uintptr)

func (arg1 SwigcptrBtBroadphaseInterface) GetBroadphaseAabb(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btBroadphaseInterface_getBroadphaseAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btBroadphaseInterface_resetPool(SwigcptrBtBroadphaseInterface, uintptr)

func (arg1 SwigcptrBtBroadphaseInterface) ResetPool(arg2 BtDispatcher) {
	_swig_wrap_btBroadphaseInterface_resetPool(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBroadphaseInterface_printStats(SwigcptrBtBroadphaseInterface)

func (arg1 SwigcptrBtBroadphaseInterface) PrintStats() {
	_swig_wrap_btBroadphaseInterface_printStats(arg1)
}

type BtBroadphaseInterface interface {
	Swigcptr() uintptr
	SwigIsBtBroadphaseInterface()
	CreateProxy(arg2 BtVector3, arg3 BtVector3, arg4 int, arg5 uintptr, arg6 int16, arg7 int16, arg8 BtDispatcher, arg9 uintptr) BtBroadphaseProxy
	DestroyProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
	SetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3, arg5 BtDispatcher)
	GetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3)
	RayTest(a ...interface{})
	AabbTest(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseAabbCallback)
	CalculateOverlappingPairs(arg2 BtDispatcher)
	GetOverlappingPairCache(a ...interface{}) interface{}
	GetBroadphaseAabb(arg2 BtVector3, arg3 BtVector3)
	ResetPool(arg2 BtDispatcher)
	PrintStats()
}

type SwigcptrBtOverlappingPairCallback uintptr

func (p SwigcptrBtOverlappingPairCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtOverlappingPairCallback) SwigIsBtOverlappingPairCallback() {
}

func _swig_wrap_delete_btOverlappingPairCallback(uintptr)

func DeleteBtOverlappingPairCallback(arg1 BtOverlappingPairCallback) {
	_swig_wrap_delete_btOverlappingPairCallback(arg1.Swigcptr())
}

func _swig_wrap_btOverlappingPairCallback_addOverlappingPair(SwigcptrBtOverlappingPairCallback, uintptr, uintptr) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtOverlappingPairCallback) AddOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair {
	return _swig_wrap_btOverlappingPairCallback_addOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btOverlappingPairCallback_removeOverlappingPair(SwigcptrBtOverlappingPairCallback, uintptr, uintptr, uintptr) uintptr

func (arg1 SwigcptrBtOverlappingPairCallback) RemoveOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy, arg4 BtDispatcher) uintptr {
	return _swig_wrap_btOverlappingPairCallback_removeOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btOverlappingPairCallback_removeOverlappingPairsContainingProxy(SwigcptrBtOverlappingPairCallback, uintptr, uintptr)

func (arg1 SwigcptrBtOverlappingPairCallback) RemoveOverlappingPairsContainingProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btOverlappingPairCallback_removeOverlappingPairsContainingProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

type BtOverlappingPairCallback interface {
	Swigcptr() uintptr
	SwigIsBtOverlappingPairCallback()
	AddOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair
	RemoveOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy, arg4 BtDispatcher) uintptr
	RemoveOverlappingPairsContainingProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
}

type SwigcptrBtOverlapCallback uintptr

func (p SwigcptrBtOverlapCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtOverlapCallback) SwigIsBtOverlapCallback() {
}

func _swig_wrap_delete_btOverlapCallback(uintptr)

func DeleteBtOverlapCallback(arg1 BtOverlapCallback) {
	_swig_wrap_delete_btOverlapCallback(arg1.Swigcptr())
}

func _swig_wrap_btOverlapCallback_processOverlap(SwigcptrBtOverlapCallback, uintptr) bool

func (arg1 SwigcptrBtOverlapCallback) ProcessOverlap(arg2 BtBroadphasePair) bool {
	return _swig_wrap_btOverlapCallback_processOverlap(arg1, arg2.Swigcptr())
}

type BtOverlapCallback interface {
	Swigcptr() uintptr
	SwigIsBtOverlapCallback()
	ProcessOverlap(arg2 BtBroadphasePair) bool
}

type SwigcptrBtOverlapFilterCallback uintptr

func (p SwigcptrBtOverlapFilterCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtOverlapFilterCallback) SwigIsBtOverlapFilterCallback() {
}

func _swig_wrap_delete_btOverlapFilterCallback(uintptr)

func DeleteBtOverlapFilterCallback(arg1 BtOverlapFilterCallback) {
	_swig_wrap_delete_btOverlapFilterCallback(arg1.Swigcptr())
}

func _swig_wrap_btOverlapFilterCallback_needBroadphaseCollision(SwigcptrBtOverlapFilterCallback, uintptr, uintptr) bool

func (arg1 SwigcptrBtOverlapFilterCallback) NeedBroadphaseCollision(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) bool {
	return _swig_wrap_btOverlapFilterCallback_needBroadphaseCollision(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

type BtOverlapFilterCallback interface {
	Swigcptr() uintptr
	SwigIsBtOverlapFilterCallback()
	NeedBroadphaseCollision(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) bool
}

func _swig_wrap_gRemovePairs_set(int)

func SetGRemovePairs(arg1 int) {
	_swig_wrap_gRemovePairs_set(arg1)
}

func GetGRemovePairs() int
func _swig_wrap_gAddedPairs_set(int)

func SetGAddedPairs(arg1 int) {
	_swig_wrap_gAddedPairs_set(arg1)
}

func GetGAddedPairs() int
func _swig_wrap_gFindPairs_set(int)

func SetGFindPairs(arg1 int) {
	_swig_wrap_gFindPairs_set(arg1)
}

func GetGFindPairs() int
func GetBT_NULL_PAIR() int

type SwigcptrBtOverlappingPairCache uintptr

func (p SwigcptrBtOverlappingPairCache) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtOverlappingPairCache) SwigIsBtOverlappingPairCache() {
}

func _swig_wrap_delete_btOverlappingPairCache(uintptr)

func DeleteBtOverlappingPairCache(arg1 BtOverlappingPairCache) {
	_swig_wrap_delete_btOverlappingPairCache(arg1.Swigcptr())
}

func _swig_wrap_btOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(SwigcptrBtOverlappingPairCache) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtOverlappingPairCache) GetOverlappingPairArrayPtr__SWIG_0() BtBroadphasePair {
	return _swig_wrap_btOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(arg1)
}

func _swig_wrap_btOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_1(SwigcptrBtOverlappingPairCache) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtOverlappingPairCache) GetOverlappingPairArrayPtr__SWIG_1() BtBroadphasePair {
	return _swig_wrap_btOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_1(arg1)
}

func (p SwigcptrBtOverlappingPairCache) GetOverlappingPairArrayPtr(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetOverlappingPairArrayPtr__SWIG_0()
	}
	if argc == 0 {
		return p.GetOverlappingPairArrayPtr__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btOverlappingPairCache_getOverlappingPairArray(SwigcptrBtOverlappingPairCache) SwigcptrBtAlignedObjectArray_Sl_btBroadphasePair_Sg_

func (arg1 SwigcptrBtOverlappingPairCache) GetOverlappingPairArray() BtAlignedObjectArray_Sl_btBroadphasePair_Sg_ {
	return _swig_wrap_btOverlappingPairCache_getOverlappingPairArray(arg1)
}

func _swig_wrap_btOverlappingPairCache_cleanOverlappingPair(SwigcptrBtOverlappingPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtOverlappingPairCache) CleanOverlappingPair(arg2 BtBroadphasePair, arg3 BtDispatcher) {
	_swig_wrap_btOverlappingPairCache_cleanOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btOverlappingPairCache_getNumOverlappingPairs(SwigcptrBtOverlappingPairCache) int

func (arg1 SwigcptrBtOverlappingPairCache) GetNumOverlappingPairs() int {
	return _swig_wrap_btOverlappingPairCache_getNumOverlappingPairs(arg1)
}

func _swig_wrap_btOverlappingPairCache_cleanProxyFromPairs(SwigcptrBtOverlappingPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtOverlappingPairCache) CleanProxyFromPairs(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btOverlappingPairCache_cleanProxyFromPairs(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btOverlappingPairCache_setOverlapFilterCallback(SwigcptrBtOverlappingPairCache, uintptr)

func (arg1 SwigcptrBtOverlappingPairCache) SetOverlapFilterCallback(arg2 BtOverlapFilterCallback) {
	_swig_wrap_btOverlappingPairCache_setOverlapFilterCallback(arg1, arg2.Swigcptr())
}

func _swig_wrap_btOverlappingPairCache_processAllOverlappingPairs(SwigcptrBtOverlappingPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtOverlappingPairCache) ProcessAllOverlappingPairs(arg2 BtOverlapCallback, arg3 BtDispatcher) {
	_swig_wrap_btOverlappingPairCache_processAllOverlappingPairs(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btOverlappingPairCache_findPair(SwigcptrBtOverlappingPairCache, uintptr, uintptr) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtOverlappingPairCache) FindPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair {
	return _swig_wrap_btOverlappingPairCache_findPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btOverlappingPairCache_hasDeferredRemoval(SwigcptrBtOverlappingPairCache) bool

func (arg1 SwigcptrBtOverlappingPairCache) HasDeferredRemoval() bool {
	return _swig_wrap_btOverlappingPairCache_hasDeferredRemoval(arg1)
}

func _swig_wrap_btOverlappingPairCache_setInternalGhostPairCallback(SwigcptrBtOverlappingPairCache, uintptr)

func (arg1 SwigcptrBtOverlappingPairCache) SetInternalGhostPairCallback(arg2 BtOverlappingPairCallback) {
	_swig_wrap_btOverlappingPairCache_setInternalGhostPairCallback(arg1, arg2.Swigcptr())
}

func _swig_wrap_btOverlappingPairCache_sortOverlappingPairs(SwigcptrBtOverlappingPairCache, uintptr)

func (arg1 SwigcptrBtOverlappingPairCache) SortOverlappingPairs(arg2 BtDispatcher) {
	_swig_wrap_btOverlappingPairCache_sortOverlappingPairs(arg1, arg2.Swigcptr())
}

func _swig_wrap_btOverlappingPairCache_addOverlappingPair(SwigcptrBtOverlappingPairCache, uintptr, uintptr) SwigcptrBtBroadphasePair

func (_swig_base SwigcptrBtOverlappingPairCache) AddOverlappingPair(arg1 BtBroadphaseProxy, arg2 BtBroadphaseProxy) BtBroadphasePair {
	return _swig_wrap_btOverlappingPairCache_addOverlappingPair(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btOverlappingPairCache_removeOverlappingPair(SwigcptrBtOverlappingPairCache, uintptr, uintptr, uintptr) uintptr

func (_swig_base SwigcptrBtOverlappingPairCache) RemoveOverlappingPair(arg1 BtBroadphaseProxy, arg2 BtBroadphaseProxy, arg3 BtDispatcher) uintptr {
	return _swig_wrap_btOverlappingPairCache_removeOverlappingPair(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btOverlappingPairCache_removeOverlappingPairsContainingProxy(SwigcptrBtOverlappingPairCache, uintptr, uintptr)

func (_swig_base SwigcptrBtOverlappingPairCache) RemoveOverlappingPairsContainingProxy(arg1 BtBroadphaseProxy, arg2 BtDispatcher) {
	_swig_wrap_btOverlappingPairCache_removeOverlappingPairsContainingProxy(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func (p SwigcptrBtOverlappingPairCache) SwigIsBtOverlappingPairCallback() {
}

func (p SwigcptrBtOverlappingPairCache) SwigGetBtOverlappingPairCallback() BtOverlappingPairCallback {
	return SwigcptrBtOverlappingPairCallback(p.Swigcptr())
}

type BtOverlappingPairCache interface {
	Swigcptr() uintptr
	SwigIsBtOverlappingPairCache()
	GetOverlappingPairArrayPtr(a ...interface{}) interface{}
	GetOverlappingPairArray() BtAlignedObjectArray_Sl_btBroadphasePair_Sg_
	CleanOverlappingPair(arg2 BtBroadphasePair, arg3 BtDispatcher)
	GetNumOverlappingPairs() int
	CleanProxyFromPairs(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
	SetOverlapFilterCallback(arg2 BtOverlapFilterCallback)
	ProcessAllOverlappingPairs(arg2 BtOverlapCallback, arg3 BtDispatcher)
	FindPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair
	HasDeferredRemoval() bool
	SetInternalGhostPairCallback(arg2 BtOverlappingPairCallback)
	SortOverlappingPairs(arg2 BtDispatcher)
	AddOverlappingPair(arg1 BtBroadphaseProxy, arg2 BtBroadphaseProxy) BtBroadphasePair
	RemoveOverlappingPair(arg1 BtBroadphaseProxy, arg2 BtBroadphaseProxy, arg3 BtDispatcher) uintptr
	RemoveOverlappingPairsContainingProxy(arg1 BtBroadphaseProxy, arg2 BtDispatcher)
	SwigIsBtOverlappingPairCallback()
	SwigGetBtOverlappingPairCallback() BtOverlappingPairCallback
}

type SwigcptrBtHashedOverlappingPairCache uintptr

func (p SwigcptrBtHashedOverlappingPairCache) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtHashedOverlappingPairCache) SwigIsBtHashedOverlappingPairCache() {
}

func _swig_wrap_new_btHashedOverlappingPairCache() SwigcptrBtHashedOverlappingPairCache

func NewBtHashedOverlappingPairCache() BtHashedOverlappingPairCache {
	return _swig_wrap_new_btHashedOverlappingPairCache()
}

func _swig_wrap_delete_btHashedOverlappingPairCache(uintptr)

func DeleteBtHashedOverlappingPairCache(arg1 BtHashedOverlappingPairCache) {
	_swig_wrap_delete_btHashedOverlappingPairCache(arg1.Swigcptr())
}

func _swig_wrap_btHashedOverlappingPairCache_removeOverlappingPairsContainingProxy(SwigcptrBtHashedOverlappingPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtHashedOverlappingPairCache) RemoveOverlappingPairsContainingProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btHashedOverlappingPairCache_removeOverlappingPairsContainingProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btHashedOverlappingPairCache_removeOverlappingPair(SwigcptrBtHashedOverlappingPairCache, uintptr, uintptr, uintptr) uintptr

func (arg1 SwigcptrBtHashedOverlappingPairCache) RemoveOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy, arg4 BtDispatcher) uintptr {
	return _swig_wrap_btHashedOverlappingPairCache_removeOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btHashedOverlappingPairCache_needsBroadphaseCollision(SwigcptrBtHashedOverlappingPairCache, uintptr, uintptr) bool

func (arg1 SwigcptrBtHashedOverlappingPairCache) NeedsBroadphaseCollision(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) bool {
	return _swig_wrap_btHashedOverlappingPairCache_needsBroadphaseCollision(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btHashedOverlappingPairCache_addOverlappingPair(SwigcptrBtHashedOverlappingPairCache, uintptr, uintptr) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtHashedOverlappingPairCache) AddOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair {
	return _swig_wrap_btHashedOverlappingPairCache_addOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btHashedOverlappingPairCache_cleanProxyFromPairs(SwigcptrBtHashedOverlappingPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtHashedOverlappingPairCache) CleanProxyFromPairs(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btHashedOverlappingPairCache_cleanProxyFromPairs(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btHashedOverlappingPairCache_processAllOverlappingPairs(SwigcptrBtHashedOverlappingPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtHashedOverlappingPairCache) ProcessAllOverlappingPairs(arg2 BtOverlapCallback, arg3 BtDispatcher) {
	_swig_wrap_btHashedOverlappingPairCache_processAllOverlappingPairs(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btHashedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(SwigcptrBtHashedOverlappingPairCache) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtHashedOverlappingPairCache) GetOverlappingPairArrayPtr__SWIG_0() BtBroadphasePair {
	return _swig_wrap_btHashedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(arg1)
}

func _swig_wrap_btHashedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_1(SwigcptrBtHashedOverlappingPairCache) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtHashedOverlappingPairCache) GetOverlappingPairArrayPtr__SWIG_1() BtBroadphasePair {
	return _swig_wrap_btHashedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_1(arg1)
}

func (p SwigcptrBtHashedOverlappingPairCache) GetOverlappingPairArrayPtr(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetOverlappingPairArrayPtr__SWIG_0()
	}
	if argc == 0 {
		return p.GetOverlappingPairArrayPtr__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_0(SwigcptrBtHashedOverlappingPairCache) SwigcptrBtAlignedObjectArray_Sl_btBroadphasePair_Sg_

func (arg1 SwigcptrBtHashedOverlappingPairCache) GetOverlappingPairArray__SWIG_0() BtAlignedObjectArray_Sl_btBroadphasePair_Sg_ {
	return _swig_wrap_btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_0(arg1)
}

func _swig_wrap_btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_1(SwigcptrBtHashedOverlappingPairCache) SwigcptrBtAlignedObjectArray_Sl_btBroadphasePair_Sg_

func (arg1 SwigcptrBtHashedOverlappingPairCache) GetOverlappingPairArray__SWIG_1() BtAlignedObjectArray_Sl_btBroadphasePair_Sg_ {
	return _swig_wrap_btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_1(arg1)
}

func (p SwigcptrBtHashedOverlappingPairCache) GetOverlappingPairArray(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetOverlappingPairArray__SWIG_0()
	}
	if argc == 0 {
		return p.GetOverlappingPairArray__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHashedOverlappingPairCache_cleanOverlappingPair(SwigcptrBtHashedOverlappingPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtHashedOverlappingPairCache) CleanOverlappingPair(arg2 BtBroadphasePair, arg3 BtDispatcher) {
	_swig_wrap_btHashedOverlappingPairCache_cleanOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btHashedOverlappingPairCache_findPair(SwigcptrBtHashedOverlappingPairCache, uintptr, uintptr) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtHashedOverlappingPairCache) FindPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair {
	return _swig_wrap_btHashedOverlappingPairCache_findPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btHashedOverlappingPairCache_GetCount(SwigcptrBtHashedOverlappingPairCache) int

func (arg1 SwigcptrBtHashedOverlappingPairCache) GetCount() int {
	return _swig_wrap_btHashedOverlappingPairCache_GetCount(arg1)
}

func _swig_wrap_btHashedOverlappingPairCache_getOverlapFilterCallback(SwigcptrBtHashedOverlappingPairCache) SwigcptrBtOverlapFilterCallback

func (arg1 SwigcptrBtHashedOverlappingPairCache) GetOverlapFilterCallback() BtOverlapFilterCallback {
	return _swig_wrap_btHashedOverlappingPairCache_getOverlapFilterCallback(arg1)
}

func _swig_wrap_btHashedOverlappingPairCache_setOverlapFilterCallback(SwigcptrBtHashedOverlappingPairCache, uintptr)

func (arg1 SwigcptrBtHashedOverlappingPairCache) SetOverlapFilterCallback(arg2 BtOverlapFilterCallback) {
	_swig_wrap_btHashedOverlappingPairCache_setOverlapFilterCallback(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHashedOverlappingPairCache_getNumOverlappingPairs(SwigcptrBtHashedOverlappingPairCache) int

func (arg1 SwigcptrBtHashedOverlappingPairCache) GetNumOverlappingPairs() int {
	return _swig_wrap_btHashedOverlappingPairCache_getNumOverlappingPairs(arg1)
}

func _swig_wrap_btHashedOverlappingPairCache_hasDeferredRemoval(SwigcptrBtHashedOverlappingPairCache) bool

func (_swig_base SwigcptrBtHashedOverlappingPairCache) HasDeferredRemoval() bool {
	return _swig_wrap_btHashedOverlappingPairCache_hasDeferredRemoval(_swig_base)
}

func _swig_wrap_btHashedOverlappingPairCache_setInternalGhostPairCallback(SwigcptrBtHashedOverlappingPairCache, uintptr)

func (_swig_base SwigcptrBtHashedOverlappingPairCache) SetInternalGhostPairCallback(arg1 BtOverlappingPairCallback) {
	_swig_wrap_btHashedOverlappingPairCache_setInternalGhostPairCallback(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHashedOverlappingPairCache_sortOverlappingPairs(SwigcptrBtHashedOverlappingPairCache, uintptr)

func (_swig_base SwigcptrBtHashedOverlappingPairCache) SortOverlappingPairs(arg1 BtDispatcher) {
	_swig_wrap_btHashedOverlappingPairCache_sortOverlappingPairs(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtHashedOverlappingPairCache) SwigIsBtOverlappingPairCache() {
}

func (p SwigcptrBtHashedOverlappingPairCache) SwigGetBtOverlappingPairCache() BtOverlappingPairCache {
	return SwigcptrBtOverlappingPairCache(p.Swigcptr())
}

func (p SwigcptrBtHashedOverlappingPairCache) SwigIsBtOverlappingPairCallback() {
}

func (p SwigcptrBtHashedOverlappingPairCache) SwigGetBtOverlappingPairCallback() BtOverlappingPairCallback {
	return SwigcptrBtOverlappingPairCallback(p.Swigcptr())
}

type BtHashedOverlappingPairCache interface {
	Swigcptr() uintptr
	SwigIsBtHashedOverlappingPairCache()
	RemoveOverlappingPairsContainingProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
	RemoveOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy, arg4 BtDispatcher) uintptr
	NeedsBroadphaseCollision(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) bool
	AddOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair
	CleanProxyFromPairs(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
	ProcessAllOverlappingPairs(arg2 BtOverlapCallback, arg3 BtDispatcher)
	GetOverlappingPairArrayPtr(a ...interface{}) interface{}
	GetOverlappingPairArray(a ...interface{}) interface{}
	CleanOverlappingPair(arg2 BtBroadphasePair, arg3 BtDispatcher)
	FindPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair
	GetCount() int
	GetOverlapFilterCallback() BtOverlapFilterCallback
	SetOverlapFilterCallback(arg2 BtOverlapFilterCallback)
	GetNumOverlappingPairs() int
	HasDeferredRemoval() bool
	SetInternalGhostPairCallback(arg1 BtOverlappingPairCallback)
	SortOverlappingPairs(arg1 BtDispatcher)
	SwigIsBtOverlappingPairCache()
	SwigGetBtOverlappingPairCache() BtOverlappingPairCache
	SwigIsBtOverlappingPairCallback()
	SwigGetBtOverlappingPairCallback() BtOverlappingPairCallback
}

type SwigcptrBtSortedOverlappingPairCache uintptr

func (p SwigcptrBtSortedOverlappingPairCache) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSortedOverlappingPairCache) SwigIsBtSortedOverlappingPairCache() {
}

func _swig_wrap_new_btSortedOverlappingPairCache() SwigcptrBtSortedOverlappingPairCache

func NewBtSortedOverlappingPairCache() BtSortedOverlappingPairCache {
	return _swig_wrap_new_btSortedOverlappingPairCache()
}

func _swig_wrap_delete_btSortedOverlappingPairCache(uintptr)

func DeleteBtSortedOverlappingPairCache(arg1 BtSortedOverlappingPairCache) {
	_swig_wrap_delete_btSortedOverlappingPairCache(arg1.Swigcptr())
}

func _swig_wrap_btSortedOverlappingPairCache_processAllOverlappingPairs(SwigcptrBtSortedOverlappingPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtSortedOverlappingPairCache) ProcessAllOverlappingPairs(arg2 BtOverlapCallback, arg3 BtDispatcher) {
	_swig_wrap_btSortedOverlappingPairCache_processAllOverlappingPairs(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSortedOverlappingPairCache_removeOverlappingPair(SwigcptrBtSortedOverlappingPairCache, uintptr, uintptr, uintptr) uintptr

func (arg1 SwigcptrBtSortedOverlappingPairCache) RemoveOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy, arg4 BtDispatcher) uintptr {
	return _swig_wrap_btSortedOverlappingPairCache_removeOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btSortedOverlappingPairCache_cleanOverlappingPair(SwigcptrBtSortedOverlappingPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtSortedOverlappingPairCache) CleanOverlappingPair(arg2 BtBroadphasePair, arg3 BtDispatcher) {
	_swig_wrap_btSortedOverlappingPairCache_cleanOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSortedOverlappingPairCache_addOverlappingPair(SwigcptrBtSortedOverlappingPairCache, uintptr, uintptr) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtSortedOverlappingPairCache) AddOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair {
	return _swig_wrap_btSortedOverlappingPairCache_addOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSortedOverlappingPairCache_findPair(SwigcptrBtSortedOverlappingPairCache, uintptr, uintptr) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtSortedOverlappingPairCache) FindPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair {
	return _swig_wrap_btSortedOverlappingPairCache_findPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSortedOverlappingPairCache_cleanProxyFromPairs(SwigcptrBtSortedOverlappingPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtSortedOverlappingPairCache) CleanProxyFromPairs(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btSortedOverlappingPairCache_cleanProxyFromPairs(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSortedOverlappingPairCache_removeOverlappingPairsContainingProxy(SwigcptrBtSortedOverlappingPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtSortedOverlappingPairCache) RemoveOverlappingPairsContainingProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btSortedOverlappingPairCache_removeOverlappingPairsContainingProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSortedOverlappingPairCache_needsBroadphaseCollision(SwigcptrBtSortedOverlappingPairCache, uintptr, uintptr) bool

func (arg1 SwigcptrBtSortedOverlappingPairCache) NeedsBroadphaseCollision(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) bool {
	return _swig_wrap_btSortedOverlappingPairCache_needsBroadphaseCollision(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_0(SwigcptrBtSortedOverlappingPairCache) SwigcptrBtAlignedObjectArray_Sl_btBroadphasePair_Sg_

func (arg1 SwigcptrBtSortedOverlappingPairCache) GetOverlappingPairArray__SWIG_0() BtAlignedObjectArray_Sl_btBroadphasePair_Sg_ {
	return _swig_wrap_btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_0(arg1)
}

func _swig_wrap_btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_1(SwigcptrBtSortedOverlappingPairCache) SwigcptrBtAlignedObjectArray_Sl_btBroadphasePair_Sg_

func (arg1 SwigcptrBtSortedOverlappingPairCache) GetOverlappingPairArray__SWIG_1() BtAlignedObjectArray_Sl_btBroadphasePair_Sg_ {
	return _swig_wrap_btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_1(arg1)
}

func (p SwigcptrBtSortedOverlappingPairCache) GetOverlappingPairArray(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetOverlappingPairArray__SWIG_0()
	}
	if argc == 0 {
		return p.GetOverlappingPairArray__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(SwigcptrBtSortedOverlappingPairCache) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtSortedOverlappingPairCache) GetOverlappingPairArrayPtr__SWIG_0() BtBroadphasePair {
	return _swig_wrap_btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(arg1)
}

func _swig_wrap_btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_1(SwigcptrBtSortedOverlappingPairCache) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtSortedOverlappingPairCache) GetOverlappingPairArrayPtr__SWIG_1() BtBroadphasePair {
	return _swig_wrap_btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_1(arg1)
}

func (p SwigcptrBtSortedOverlappingPairCache) GetOverlappingPairArrayPtr(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetOverlappingPairArrayPtr__SWIG_0()
	}
	if argc == 0 {
		return p.GetOverlappingPairArrayPtr__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSortedOverlappingPairCache_getNumOverlappingPairs(SwigcptrBtSortedOverlappingPairCache) int

func (arg1 SwigcptrBtSortedOverlappingPairCache) GetNumOverlappingPairs() int {
	return _swig_wrap_btSortedOverlappingPairCache_getNumOverlappingPairs(arg1)
}

func _swig_wrap_btSortedOverlappingPairCache_getOverlapFilterCallback(SwigcptrBtSortedOverlappingPairCache) SwigcptrBtOverlapFilterCallback

func (arg1 SwigcptrBtSortedOverlappingPairCache) GetOverlapFilterCallback() BtOverlapFilterCallback {
	return _swig_wrap_btSortedOverlappingPairCache_getOverlapFilterCallback(arg1)
}

func _swig_wrap_btSortedOverlappingPairCache_setOverlapFilterCallback(SwigcptrBtSortedOverlappingPairCache, uintptr)

func (arg1 SwigcptrBtSortedOverlappingPairCache) SetOverlapFilterCallback(arg2 BtOverlapFilterCallback) {
	_swig_wrap_btSortedOverlappingPairCache_setOverlapFilterCallback(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSortedOverlappingPairCache_hasDeferredRemoval(SwigcptrBtSortedOverlappingPairCache) bool

func (arg1 SwigcptrBtSortedOverlappingPairCache) HasDeferredRemoval() bool {
	return _swig_wrap_btSortedOverlappingPairCache_hasDeferredRemoval(arg1)
}

func _swig_wrap_btSortedOverlappingPairCache_setInternalGhostPairCallback(SwigcptrBtSortedOverlappingPairCache, uintptr)

func (arg1 SwigcptrBtSortedOverlappingPairCache) SetInternalGhostPairCallback(arg2 BtOverlappingPairCallback) {
	_swig_wrap_btSortedOverlappingPairCache_setInternalGhostPairCallback(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSortedOverlappingPairCache_sortOverlappingPairs(SwigcptrBtSortedOverlappingPairCache, uintptr)

func (arg1 SwigcptrBtSortedOverlappingPairCache) SortOverlappingPairs(arg2 BtDispatcher) {
	_swig_wrap_btSortedOverlappingPairCache_sortOverlappingPairs(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtSortedOverlappingPairCache) SwigIsBtOverlappingPairCache() {
}

func (p SwigcptrBtSortedOverlappingPairCache) SwigGetBtOverlappingPairCache() BtOverlappingPairCache {
	return SwigcptrBtOverlappingPairCache(p.Swigcptr())
}

func (p SwigcptrBtSortedOverlappingPairCache) SwigIsBtOverlappingPairCallback() {
}

func (p SwigcptrBtSortedOverlappingPairCache) SwigGetBtOverlappingPairCallback() BtOverlappingPairCallback {
	return SwigcptrBtOverlappingPairCallback(p.Swigcptr())
}

type BtSortedOverlappingPairCache interface {
	Swigcptr() uintptr
	SwigIsBtSortedOverlappingPairCache()
	ProcessAllOverlappingPairs(arg2 BtOverlapCallback, arg3 BtDispatcher)
	RemoveOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy, arg4 BtDispatcher) uintptr
	CleanOverlappingPair(arg2 BtBroadphasePair, arg3 BtDispatcher)
	AddOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair
	FindPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair
	CleanProxyFromPairs(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
	RemoveOverlappingPairsContainingProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
	NeedsBroadphaseCollision(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) bool
	GetOverlappingPairArray(a ...interface{}) interface{}
	GetOverlappingPairArrayPtr(a ...interface{}) interface{}
	GetNumOverlappingPairs() int
	GetOverlapFilterCallback() BtOverlapFilterCallback
	SetOverlapFilterCallback(arg2 BtOverlapFilterCallback)
	HasDeferredRemoval() bool
	SetInternalGhostPairCallback(arg2 BtOverlappingPairCallback)
	SortOverlappingPairs(arg2 BtDispatcher)
	SwigIsBtOverlappingPairCache()
	SwigGetBtOverlappingPairCache() BtOverlappingPairCache
	SwigIsBtOverlappingPairCallback()
	SwigGetBtOverlappingPairCallback() BtOverlappingPairCallback
}

type SwigcptrBtNullPairCache uintptr

func (p SwigcptrBtNullPairCache) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtNullPairCache) SwigIsBtNullPairCache() {
}

func _swig_wrap_btNullPairCache_getOverlappingPairArrayPtr__SWIG_0(SwigcptrBtNullPairCache) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtNullPairCache) GetOverlappingPairArrayPtr__SWIG_0() BtBroadphasePair {
	return _swig_wrap_btNullPairCache_getOverlappingPairArrayPtr__SWIG_0(arg1)
}

func _swig_wrap_btNullPairCache_getOverlappingPairArrayPtr__SWIG_1(SwigcptrBtNullPairCache) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtNullPairCache) GetOverlappingPairArrayPtr__SWIG_1() BtBroadphasePair {
	return _swig_wrap_btNullPairCache_getOverlappingPairArrayPtr__SWIG_1(arg1)
}

func (p SwigcptrBtNullPairCache) GetOverlappingPairArrayPtr(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetOverlappingPairArrayPtr__SWIG_0()
	}
	if argc == 0 {
		return p.GetOverlappingPairArrayPtr__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btNullPairCache_getOverlappingPairArray(SwigcptrBtNullPairCache) SwigcptrBtAlignedObjectArray_Sl_btBroadphasePair_Sg_

func (arg1 SwigcptrBtNullPairCache) GetOverlappingPairArray() BtAlignedObjectArray_Sl_btBroadphasePair_Sg_ {
	return _swig_wrap_btNullPairCache_getOverlappingPairArray(arg1)
}

func _swig_wrap_btNullPairCache_cleanOverlappingPair(SwigcptrBtNullPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtNullPairCache) CleanOverlappingPair(arg2 BtBroadphasePair, arg3 BtDispatcher) {
	_swig_wrap_btNullPairCache_cleanOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btNullPairCache_getNumOverlappingPairs(SwigcptrBtNullPairCache) int

func (arg1 SwigcptrBtNullPairCache) GetNumOverlappingPairs() int {
	return _swig_wrap_btNullPairCache_getNumOverlappingPairs(arg1)
}

func _swig_wrap_btNullPairCache_cleanProxyFromPairs(SwigcptrBtNullPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtNullPairCache) CleanProxyFromPairs(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btNullPairCache_cleanProxyFromPairs(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btNullPairCache_setOverlapFilterCallback(SwigcptrBtNullPairCache, uintptr)

func (arg1 SwigcptrBtNullPairCache) SetOverlapFilterCallback(arg2 BtOverlapFilterCallback) {
	_swig_wrap_btNullPairCache_setOverlapFilterCallback(arg1, arg2.Swigcptr())
}

func _swig_wrap_btNullPairCache_processAllOverlappingPairs(SwigcptrBtNullPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtNullPairCache) ProcessAllOverlappingPairs(arg2 BtOverlapCallback, arg3 BtDispatcher) {
	_swig_wrap_btNullPairCache_processAllOverlappingPairs(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btNullPairCache_findPair(SwigcptrBtNullPairCache, uintptr, uintptr) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtNullPairCache) FindPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair {
	return _swig_wrap_btNullPairCache_findPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btNullPairCache_hasDeferredRemoval(SwigcptrBtNullPairCache) bool

func (arg1 SwigcptrBtNullPairCache) HasDeferredRemoval() bool {
	return _swig_wrap_btNullPairCache_hasDeferredRemoval(arg1)
}

func _swig_wrap_btNullPairCache_setInternalGhostPairCallback(SwigcptrBtNullPairCache, uintptr)

func (arg1 SwigcptrBtNullPairCache) SetInternalGhostPairCallback(arg2 BtOverlappingPairCallback) {
	_swig_wrap_btNullPairCache_setInternalGhostPairCallback(arg1, arg2.Swigcptr())
}

func _swig_wrap_btNullPairCache_addOverlappingPair(SwigcptrBtNullPairCache, uintptr, uintptr) SwigcptrBtBroadphasePair

func (arg1 SwigcptrBtNullPairCache) AddOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair {
	return _swig_wrap_btNullPairCache_addOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btNullPairCache_removeOverlappingPair(SwigcptrBtNullPairCache, uintptr, uintptr, uintptr) uintptr

func (arg1 SwigcptrBtNullPairCache) RemoveOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy, arg4 BtDispatcher) uintptr {
	return _swig_wrap_btNullPairCache_removeOverlappingPair(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btNullPairCache_removeOverlappingPairsContainingProxy(SwigcptrBtNullPairCache, uintptr, uintptr)

func (arg1 SwigcptrBtNullPairCache) RemoveOverlappingPairsContainingProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btNullPairCache_removeOverlappingPairsContainingProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btNullPairCache_sortOverlappingPairs(SwigcptrBtNullPairCache, uintptr)

func (arg1 SwigcptrBtNullPairCache) SortOverlappingPairs(arg2 BtDispatcher) {
	_swig_wrap_btNullPairCache_sortOverlappingPairs(arg1, arg2.Swigcptr())
}

func _swig_wrap_new_btNullPairCache() SwigcptrBtNullPairCache

func NewBtNullPairCache() BtNullPairCache {
	return _swig_wrap_new_btNullPairCache()
}

func _swig_wrap_delete_btNullPairCache(uintptr)

func DeleteBtNullPairCache(arg1 BtNullPairCache) {
	_swig_wrap_delete_btNullPairCache(arg1.Swigcptr())
}

func (p SwigcptrBtNullPairCache) SwigIsBtOverlappingPairCache() {
}

func (p SwigcptrBtNullPairCache) SwigGetBtOverlappingPairCache() BtOverlappingPairCache {
	return SwigcptrBtOverlappingPairCache(p.Swigcptr())
}

func (p SwigcptrBtNullPairCache) SwigIsBtOverlappingPairCallback() {
}

func (p SwigcptrBtNullPairCache) SwigGetBtOverlappingPairCallback() BtOverlappingPairCallback {
	return SwigcptrBtOverlappingPairCallback(p.Swigcptr())
}

type BtNullPairCache interface {
	Swigcptr() uintptr
	SwigIsBtNullPairCache()
	GetOverlappingPairArrayPtr(a ...interface{}) interface{}
	GetOverlappingPairArray() BtAlignedObjectArray_Sl_btBroadphasePair_Sg_
	CleanOverlappingPair(arg2 BtBroadphasePair, arg3 BtDispatcher)
	GetNumOverlappingPairs() int
	CleanProxyFromPairs(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
	SetOverlapFilterCallback(arg2 BtOverlapFilterCallback)
	ProcessAllOverlappingPairs(arg2 BtOverlapCallback, arg3 BtDispatcher)
	FindPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair
	HasDeferredRemoval() bool
	SetInternalGhostPairCallback(arg2 BtOverlappingPairCallback)
	AddOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) BtBroadphasePair
	RemoveOverlappingPair(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy, arg4 BtDispatcher) uintptr
	RemoveOverlappingPairsContainingProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
	SortOverlappingPairs(arg2 BtDispatcher)
	SwigIsBtOverlappingPairCache()
	SwigGetBtOverlappingPairCache() BtOverlappingPairCache
	SwigIsBtOverlappingPairCallback()
	SwigGetBtOverlappingPairCallback() BtOverlappingPairCallback
}

type SwigcptrBtCollisionWorld uintptr

func (p SwigcptrBtCollisionWorld) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionWorld) SwigIsBtCollisionWorld() {
}

func _swig_wrap_new_btCollisionWorld(uintptr, uintptr, uintptr) SwigcptrBtCollisionWorld

func NewBtCollisionWorld(arg1 BtDispatcher, arg2 BtBroadphaseInterface, arg3 BtCollisionConfiguration) BtCollisionWorld {
	return _swig_wrap_new_btCollisionWorld(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_delete_btCollisionWorld(uintptr)

func DeleteBtCollisionWorld(arg1 BtCollisionWorld) {
	_swig_wrap_delete_btCollisionWorld(arg1.Swigcptr())
}

func _swig_wrap_btCollisionWorld_setBroadphase(SwigcptrBtCollisionWorld, uintptr)

func (arg1 SwigcptrBtCollisionWorld) SetBroadphase(arg2 BtBroadphaseInterface) {
	_swig_wrap_btCollisionWorld_setBroadphase(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionWorld_getBroadphase__SWIG_0(SwigcptrBtCollisionWorld) SwigcptrBtBroadphaseInterface

func (arg1 SwigcptrBtCollisionWorld) GetBroadphase__SWIG_0() BtBroadphaseInterface {
	return _swig_wrap_btCollisionWorld_getBroadphase__SWIG_0(arg1)
}

func _swig_wrap_btCollisionWorld_getBroadphase__SWIG_1(SwigcptrBtCollisionWorld) SwigcptrBtBroadphaseInterface

func (arg1 SwigcptrBtCollisionWorld) GetBroadphase__SWIG_1() BtBroadphaseInterface {
	return _swig_wrap_btCollisionWorld_getBroadphase__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionWorld) GetBroadphase(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetBroadphase__SWIG_0()
	}
	if argc == 0 {
		return p.GetBroadphase__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionWorld_getPairCache(SwigcptrBtCollisionWorld) SwigcptrBtOverlappingPairCache

func (arg1 SwigcptrBtCollisionWorld) GetPairCache() BtOverlappingPairCache {
	return _swig_wrap_btCollisionWorld_getPairCache(arg1)
}

func _swig_wrap_btCollisionWorld_getDispatcher__SWIG_0(SwigcptrBtCollisionWorld) SwigcptrBtDispatcher

func (arg1 SwigcptrBtCollisionWorld) GetDispatcher__SWIG_0() BtDispatcher {
	return _swig_wrap_btCollisionWorld_getDispatcher__SWIG_0(arg1)
}

func _swig_wrap_btCollisionWorld_getDispatcher__SWIG_1(SwigcptrBtCollisionWorld) SwigcptrBtDispatcher

func (arg1 SwigcptrBtCollisionWorld) GetDispatcher__SWIG_1() BtDispatcher {
	return _swig_wrap_btCollisionWorld_getDispatcher__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionWorld) GetDispatcher(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetDispatcher__SWIG_0()
	}
	if argc == 0 {
		return p.GetDispatcher__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionWorld_updateSingleAabb(SwigcptrBtCollisionWorld, uintptr)

func (arg1 SwigcptrBtCollisionWorld) UpdateSingleAabb(arg2 BtCollisionObject) {
	_swig_wrap_btCollisionWorld_updateSingleAabb(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionWorld_updateAabbs(SwigcptrBtCollisionWorld)

func (arg1 SwigcptrBtCollisionWorld) UpdateAabbs() {
	_swig_wrap_btCollisionWorld_updateAabbs(arg1)
}

func _swig_wrap_btCollisionWorld_computeOverlappingPairs(SwigcptrBtCollisionWorld)

func (arg1 SwigcptrBtCollisionWorld) ComputeOverlappingPairs() {
	_swig_wrap_btCollisionWorld_computeOverlappingPairs(arg1)
}

func _swig_wrap_btCollisionWorld_setDebugDrawer(SwigcptrBtCollisionWorld, uintptr)

func (arg1 SwigcptrBtCollisionWorld) SetDebugDrawer(arg2 BtIDebugDraw) {
	_swig_wrap_btCollisionWorld_setDebugDrawer(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionWorld_getDebugDrawer(SwigcptrBtCollisionWorld) SwigcptrBtIDebugDraw

func (arg1 SwigcptrBtCollisionWorld) GetDebugDrawer() BtIDebugDraw {
	return _swig_wrap_btCollisionWorld_getDebugDrawer(arg1)
}

func _swig_wrap_btCollisionWorld_debugDrawWorld(SwigcptrBtCollisionWorld)

func (arg1 SwigcptrBtCollisionWorld) DebugDrawWorld() {
	_swig_wrap_btCollisionWorld_debugDrawWorld(arg1)
}

func _swig_wrap_btCollisionWorld_debugDrawObject(SwigcptrBtCollisionWorld, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtCollisionWorld) DebugDrawObject(arg2 BtTransform, arg3 BtCollisionShape, arg4 BtVector3) {
	_swig_wrap_btCollisionWorld_debugDrawObject(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btCollisionWorld_getNumCollisionObjects(SwigcptrBtCollisionWorld) int

func (arg1 SwigcptrBtCollisionWorld) GetNumCollisionObjects() int {
	return _swig_wrap_btCollisionWorld_getNumCollisionObjects(arg1)
}

func _swig_wrap_btCollisionWorld_rayTest(SwigcptrBtCollisionWorld, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtCollisionWorld) RayTest(arg2 BtVector3, arg3 BtVector3, arg4 RayResultCallback) {
	_swig_wrap_btCollisionWorld_rayTest(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btCollisionWorld_convexSweepTest__SWIG_0(SwigcptrBtCollisionWorld, uintptr, uintptr, uintptr, uintptr, float32)

func (arg1 SwigcptrBtCollisionWorld) ConvexSweepTest__SWIG_0(arg2 BtConvexShape, arg3 BtTransform, arg4 BtTransform, arg5 ConvexResultCallback, arg6 float32) {
	_swig_wrap_btCollisionWorld_convexSweepTest__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6)
}

func _swig_wrap_btCollisionWorld_convexSweepTest__SWIG_1(SwigcptrBtCollisionWorld, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtCollisionWorld) ConvexSweepTest__SWIG_1(arg2 BtConvexShape, arg3 BtTransform, arg4 BtTransform, arg5 ConvexResultCallback) {
	_swig_wrap_btCollisionWorld_convexSweepTest__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func (p SwigcptrBtCollisionWorld) ConvexSweepTest(a ...interface{}) {
	argc := len(a)
	if argc == 4 {
		p.ConvexSweepTest__SWIG_1(a[0].(BtConvexShape), a[1].(BtTransform), a[2].(BtTransform), a[3].(ConvexResultCallback))
		return
	}
	if argc == 5 {
		p.ConvexSweepTest__SWIG_0(a[0].(BtConvexShape), a[1].(BtTransform), a[2].(BtTransform), a[3].(ConvexResultCallback), a[4].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionWorld_contactTest(SwigcptrBtCollisionWorld, uintptr, uintptr)

func (arg1 SwigcptrBtCollisionWorld) ContactTest(arg2 BtCollisionObject, arg3 ContactResultCallback) {
	_swig_wrap_btCollisionWorld_contactTest(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCollisionWorld_contactPairTest(SwigcptrBtCollisionWorld, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtCollisionWorld) ContactPairTest(arg2 BtCollisionObject, arg3 BtCollisionObject, arg4 ContactResultCallback) {
	_swig_wrap_btCollisionWorld_contactPairTest(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btCollisionWorld_rayTestSingle(uintptr, uintptr, uintptr, uintptr, uintptr, uintptr)

func BtCollisionWorldRayTestSingle(arg1 BtTransform, arg2 BtTransform, arg3 BtCollisionObject, arg4 BtCollisionShape, arg5 BtTransform, arg6 RayResultCallback) {
	_swig_wrap_btCollisionWorld_rayTestSingle(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btCollisionWorld_rayTestSingleInternal(uintptr, uintptr, uintptr, uintptr)

func BtCollisionWorldRayTestSingleInternal(arg1 BtTransform, arg2 BtTransform, arg3 BtCollisionObjectWrapper, arg4 RayResultCallback) {
	_swig_wrap_btCollisionWorld_rayTestSingleInternal(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btCollisionWorld_objectQuerySingle(uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, float32)

func BtCollisionWorldObjectQuerySingle(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 BtCollisionObject, arg5 BtCollisionShape, arg6 BtTransform, arg7 ConvexResultCallback, arg8 float32) {
	_swig_wrap_btCollisionWorld_objectQuerySingle(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7.Swigcptr(), arg8)
}

func _swig_wrap_btCollisionWorld_objectQuerySingleInternal(uintptr, uintptr, uintptr, uintptr, uintptr, float32)

func BtCollisionWorldObjectQuerySingleInternal(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 BtCollisionObjectWrapper, arg5 ConvexResultCallback, arg6 float32) {
	_swig_wrap_btCollisionWorld_objectQuerySingleInternal(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6)
}

func _swig_wrap_btCollisionWorld_addCollisionObject__SWIG_0(SwigcptrBtCollisionWorld, uintptr, int16, int16)

func (arg1 SwigcptrBtCollisionWorld) AddCollisionObject__SWIG_0(arg2 BtCollisionObject, arg3 int16, arg4 int16) {
	_swig_wrap_btCollisionWorld_addCollisionObject__SWIG_0(arg1, arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btCollisionWorld_addCollisionObject__SWIG_1(SwigcptrBtCollisionWorld, uintptr, int16)

func (arg1 SwigcptrBtCollisionWorld) AddCollisionObject__SWIG_1(arg2 BtCollisionObject, arg3 int16) {
	_swig_wrap_btCollisionWorld_addCollisionObject__SWIG_1(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btCollisionWorld_addCollisionObject__SWIG_2(SwigcptrBtCollisionWorld, uintptr)

func (arg1 SwigcptrBtCollisionWorld) AddCollisionObject__SWIG_2(arg2 BtCollisionObject) {
	_swig_wrap_btCollisionWorld_addCollisionObject__SWIG_2(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtCollisionWorld) AddCollisionObject(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddCollisionObject__SWIG_2(a[0].(BtCollisionObject))
		return
	}
	if argc == 2 {
		p.AddCollisionObject__SWIG_1(a[0].(BtCollisionObject), a[1].(int16))
		return
	}
	if argc == 3 {
		p.AddCollisionObject__SWIG_0(a[0].(BtCollisionObject), a[1].(int16), a[2].(int16))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionWorld_getCollisionObjectArray__SWIG_0(SwigcptrBtCollisionWorld) SwigcptrBtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_

func (arg1 SwigcptrBtCollisionWorld) GetCollisionObjectArray__SWIG_0() BtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_ {
	return _swig_wrap_btCollisionWorld_getCollisionObjectArray__SWIG_0(arg1)
}

func _swig_wrap_btCollisionWorld_getCollisionObjectArray__SWIG_1(SwigcptrBtCollisionWorld) SwigcptrBtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_

func (arg1 SwigcptrBtCollisionWorld) GetCollisionObjectArray__SWIG_1() BtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_ {
	return _swig_wrap_btCollisionWorld_getCollisionObjectArray__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionWorld) GetCollisionObjectArray(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetCollisionObjectArray__SWIG_0()
	}
	if argc == 0 {
		return p.GetCollisionObjectArray__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionWorld_removeCollisionObject(SwigcptrBtCollisionWorld, uintptr)

func (arg1 SwigcptrBtCollisionWorld) RemoveCollisionObject(arg2 BtCollisionObject) {
	_swig_wrap_btCollisionWorld_removeCollisionObject(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionWorld_performDiscreteCollisionDetection(SwigcptrBtCollisionWorld)

func (arg1 SwigcptrBtCollisionWorld) PerformDiscreteCollisionDetection() {
	_swig_wrap_btCollisionWorld_performDiscreteCollisionDetection(arg1)
}

func _swig_wrap_btCollisionWorld_getDispatchInfo__SWIG_0(SwigcptrBtCollisionWorld) SwigcptrBtDispatcherInfo

func (arg1 SwigcptrBtCollisionWorld) GetDispatchInfo__SWIG_0() BtDispatcherInfo {
	return _swig_wrap_btCollisionWorld_getDispatchInfo__SWIG_0(arg1)
}

func _swig_wrap_btCollisionWorld_getDispatchInfo__SWIG_1(SwigcptrBtCollisionWorld) SwigcptrBtDispatcherInfo

func (arg1 SwigcptrBtCollisionWorld) GetDispatchInfo__SWIG_1() BtDispatcherInfo {
	return _swig_wrap_btCollisionWorld_getDispatchInfo__SWIG_1(arg1)
}

func (p SwigcptrBtCollisionWorld) GetDispatchInfo(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetDispatchInfo__SWIG_0()
	}
	if argc == 0 {
		return p.GetDispatchInfo__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionWorld_getForceUpdateAllAabbs(SwigcptrBtCollisionWorld) bool

func (arg1 SwigcptrBtCollisionWorld) GetForceUpdateAllAabbs() bool {
	return _swig_wrap_btCollisionWorld_getForceUpdateAllAabbs(arg1)
}

func _swig_wrap_btCollisionWorld_setForceUpdateAllAabbs(SwigcptrBtCollisionWorld, bool)

func (arg1 SwigcptrBtCollisionWorld) SetForceUpdateAllAabbs(arg2 bool) {
	_swig_wrap_btCollisionWorld_setForceUpdateAllAabbs(arg1, arg2)
}

func _swig_wrap_btCollisionWorld_serialize(SwigcptrBtCollisionWorld, uintptr)

func (arg1 SwigcptrBtCollisionWorld) Serialize(arg2 BtSerializer) {
	_swig_wrap_btCollisionWorld_serialize(arg1, arg2.Swigcptr())
}

type BtCollisionWorld interface {
	Swigcptr() uintptr
	SwigIsBtCollisionWorld()
	SetBroadphase(arg2 BtBroadphaseInterface)
	GetBroadphase(a ...interface{}) interface{}
	GetPairCache() BtOverlappingPairCache
	GetDispatcher(a ...interface{}) interface{}
	UpdateSingleAabb(arg2 BtCollisionObject)
	UpdateAabbs()
	ComputeOverlappingPairs()
	SetDebugDrawer(arg2 BtIDebugDraw)
	GetDebugDrawer() BtIDebugDraw
	DebugDrawWorld()
	DebugDrawObject(arg2 BtTransform, arg3 BtCollisionShape, arg4 BtVector3)
	GetNumCollisionObjects() int
	RayTest(arg2 BtVector3, arg3 BtVector3, arg4 RayResultCallback)
	ConvexSweepTest(a ...interface{})
	ContactTest(arg2 BtCollisionObject, arg3 ContactResultCallback)
	ContactPairTest(arg2 BtCollisionObject, arg3 BtCollisionObject, arg4 ContactResultCallback)
	AddCollisionObject(a ...interface{})
	GetCollisionObjectArray(a ...interface{}) interface{}
	RemoveCollisionObject(arg2 BtCollisionObject)
	PerformDiscreteCollisionDetection()
	GetDispatchInfo(a ...interface{}) interface{}
	GetForceUpdateAllAabbs() bool
	SetForceUpdateAllAabbs(arg2 bool)
	Serialize(arg2 BtSerializer)
}

type SwigcptrBtCollisionShape uintptr

func (p SwigcptrBtCollisionShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionShape) SwigIsBtCollisionShape() {
}

func _swig_wrap_delete_btCollisionShape(uintptr)

func DeleteBtCollisionShape(arg1 BtCollisionShape) {
	_swig_wrap_delete_btCollisionShape(arg1.Swigcptr())
}

func _swig_wrap_btCollisionShape_getAabb(SwigcptrBtCollisionShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtCollisionShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btCollisionShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btCollisionShape_getBoundingSphere(SwigcptrBtCollisionShape, uintptr, *float32)

func (arg1 SwigcptrBtCollisionShape) GetBoundingSphere(arg2 BtVector3, arg3 *float32) {
	_swig_wrap_btCollisionShape_getBoundingSphere(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btCollisionShape_getAngularMotionDisc(SwigcptrBtCollisionShape) float32

func (arg1 SwigcptrBtCollisionShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btCollisionShape_getAngularMotionDisc(arg1)
}

func _swig_wrap_btCollisionShape_getContactBreakingThreshold(SwigcptrBtCollisionShape, float32) float32

func (arg1 SwigcptrBtCollisionShape) GetContactBreakingThreshold(arg2 float32) float32 {
	return _swig_wrap_btCollisionShape_getContactBreakingThreshold(arg1, arg2)
}

func _swig_wrap_btCollisionShape_calculateTemporalAabb(SwigcptrBtCollisionShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (arg1 SwigcptrBtCollisionShape) CalculateTemporalAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3, arg5 float32, arg6 BtVector3, arg7 BtVector3) {
	_swig_wrap_btCollisionShape_calculateTemporalAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5, arg6.Swigcptr(), arg7.Swigcptr())
}

func _swig_wrap_btCollisionShape_isPolyhedral(SwigcptrBtCollisionShape) bool

func (arg1 SwigcptrBtCollisionShape) IsPolyhedral() bool {
	return _swig_wrap_btCollisionShape_isPolyhedral(arg1)
}

func _swig_wrap_btCollisionShape_isConvex2d(SwigcptrBtCollisionShape) bool

func (arg1 SwigcptrBtCollisionShape) IsConvex2d() bool {
	return _swig_wrap_btCollisionShape_isConvex2d(arg1)
}

func _swig_wrap_btCollisionShape_isConvex(SwigcptrBtCollisionShape) bool

func (arg1 SwigcptrBtCollisionShape) IsConvex() bool {
	return _swig_wrap_btCollisionShape_isConvex(arg1)
}

func _swig_wrap_btCollisionShape_isNonMoving(SwigcptrBtCollisionShape) bool

func (arg1 SwigcptrBtCollisionShape) IsNonMoving() bool {
	return _swig_wrap_btCollisionShape_isNonMoving(arg1)
}

func _swig_wrap_btCollisionShape_isConcave(SwigcptrBtCollisionShape) bool

func (arg1 SwigcptrBtCollisionShape) IsConcave() bool {
	return _swig_wrap_btCollisionShape_isConcave(arg1)
}

func _swig_wrap_btCollisionShape_isCompound(SwigcptrBtCollisionShape) bool

func (arg1 SwigcptrBtCollisionShape) IsCompound() bool {
	return _swig_wrap_btCollisionShape_isCompound(arg1)
}

func _swig_wrap_btCollisionShape_isSoftBody(SwigcptrBtCollisionShape) bool

func (arg1 SwigcptrBtCollisionShape) IsSoftBody() bool {
	return _swig_wrap_btCollisionShape_isSoftBody(arg1)
}

func _swig_wrap_btCollisionShape_isInfinite(SwigcptrBtCollisionShape) bool

func (arg1 SwigcptrBtCollisionShape) IsInfinite() bool {
	return _swig_wrap_btCollisionShape_isInfinite(arg1)
}

func _swig_wrap_btCollisionShape_setLocalScaling(SwigcptrBtCollisionShape, uintptr)

func (arg1 SwigcptrBtCollisionShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btCollisionShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionShape_getLocalScaling(SwigcptrBtCollisionShape) SwigcptrBtVector3

func (arg1 SwigcptrBtCollisionShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btCollisionShape_getLocalScaling(arg1)
}

func _swig_wrap_btCollisionShape_calculateLocalInertia(SwigcptrBtCollisionShape, float32, uintptr)

func (arg1 SwigcptrBtCollisionShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btCollisionShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btCollisionShape_getName(SwigcptrBtCollisionShape) string

func (arg1 SwigcptrBtCollisionShape) GetName() string {
	return _swig_wrap_btCollisionShape_getName(arg1)
}

func _swig_wrap_btCollisionShape_getShapeType(SwigcptrBtCollisionShape) int

func (arg1 SwigcptrBtCollisionShape) GetShapeType() int {
	return _swig_wrap_btCollisionShape_getShapeType(arg1)
}

func _swig_wrap_btCollisionShape_getAnisotropicRollingFrictionDirection(SwigcptrBtCollisionShape) SwigcptrBtVector3

func (arg1 SwigcptrBtCollisionShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btCollisionShape_getAnisotropicRollingFrictionDirection(arg1)
}

func _swig_wrap_btCollisionShape_setMargin(SwigcptrBtCollisionShape, float32)

func (arg1 SwigcptrBtCollisionShape) SetMargin(arg2 float32) {
	_swig_wrap_btCollisionShape_setMargin(arg1, arg2)
}

func _swig_wrap_btCollisionShape_getMargin(SwigcptrBtCollisionShape) float32

func (arg1 SwigcptrBtCollisionShape) GetMargin() float32 {
	return _swig_wrap_btCollisionShape_getMargin(arg1)
}

func _swig_wrap_btCollisionShape_setUserPointer(SwigcptrBtCollisionShape, uintptr)

func (arg1 SwigcptrBtCollisionShape) SetUserPointer(arg2 uintptr) {
	_swig_wrap_btCollisionShape_setUserPointer(arg1, arg2)
}

func _swig_wrap_btCollisionShape_getUserPointer(SwigcptrBtCollisionShape) uintptr

func (arg1 SwigcptrBtCollisionShape) GetUserPointer() uintptr {
	return _swig_wrap_btCollisionShape_getUserPointer(arg1)
}

func _swig_wrap_btCollisionShape_calculateSerializeBufferSize(SwigcptrBtCollisionShape) int

func (arg1 SwigcptrBtCollisionShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btCollisionShape_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btCollisionShape_serialize(SwigcptrBtCollisionShape, uintptr, uintptr) string

func (arg1 SwigcptrBtCollisionShape) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btCollisionShape_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btCollisionShape_serializeSingleShape(SwigcptrBtCollisionShape, uintptr)

func (arg1 SwigcptrBtCollisionShape) SerializeSingleShape(arg2 BtSerializer) {
	_swig_wrap_btCollisionShape_serializeSingleShape(arg1, arg2.Swigcptr())
}

type BtCollisionShape interface {
	Swigcptr() uintptr
	SwigIsBtCollisionShape()
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	GetBoundingSphere(arg2 BtVector3, arg3 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg2 float32) float32
	CalculateTemporalAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3, arg5 float32, arg6 BtVector3, arg7 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	SetLocalScaling(arg2 BtVector3)
	GetLocalScaling() BtVector3
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	GetName() string
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetMargin(arg2 float32)
	GetMargin() float32
	SetUserPointer(arg2 uintptr)
	GetUserPointer() uintptr
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	SerializeSingleShape(arg2 BtSerializer)
}

type SwigcptrBtCollisionShapeData uintptr

func (p SwigcptrBtCollisionShapeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionShapeData) SwigIsBtCollisionShapeData() {
}

func _swig_wrap_btCollisionShapeData_m_name_set(SwigcptrBtCollisionShapeData, string)

func (arg1 SwigcptrBtCollisionShapeData) SetM_name(arg2 string) {
	_swig_wrap_btCollisionShapeData_m_name_set(arg1, arg2)
}

func _swig_wrap_btCollisionShapeData_m_name_get(SwigcptrBtCollisionShapeData) string

func (arg1 SwigcptrBtCollisionShapeData) GetM_name() string {
	return _swig_wrap_btCollisionShapeData_m_name_get(arg1)
}

func _swig_wrap_btCollisionShapeData_m_shapeType_set(SwigcptrBtCollisionShapeData, int)

func (arg1 SwigcptrBtCollisionShapeData) SetM_shapeType(arg2 int) {
	_swig_wrap_btCollisionShapeData_m_shapeType_set(arg1, arg2)
}

func _swig_wrap_btCollisionShapeData_m_shapeType_get(SwigcptrBtCollisionShapeData) int

func (arg1 SwigcptrBtCollisionShapeData) GetM_shapeType() int {
	return _swig_wrap_btCollisionShapeData_m_shapeType_get(arg1)
}

func _swig_wrap_btCollisionShapeData_m_padding_set(SwigcptrBtCollisionShapeData, string)

func (arg1 SwigcptrBtCollisionShapeData) SetM_padding(arg2 string) {
	_swig_wrap_btCollisionShapeData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btCollisionShapeData_m_padding_get(SwigcptrBtCollisionShapeData) string

func (arg1 SwigcptrBtCollisionShapeData) GetM_padding() string {
	return _swig_wrap_btCollisionShapeData_m_padding_get(arg1)
}

func _swig_wrap_new_btCollisionShapeData() SwigcptrBtCollisionShapeData

func NewBtCollisionShapeData() BtCollisionShapeData {
	return _swig_wrap_new_btCollisionShapeData()
}

func _swig_wrap_delete_btCollisionShapeData(uintptr)

func DeleteBtCollisionShapeData(arg1 BtCollisionShapeData) {
	_swig_wrap_delete_btCollisionShapeData(arg1.Swigcptr())
}

type BtCollisionShapeData interface {
	Swigcptr() uintptr
	SwigIsBtCollisionShapeData()
	SetM_name(arg2 string)
	GetM_name() string
	SetM_shapeType(arg2 int)
	GetM_shapeType() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

const MAX_PREFERRED_PENETRATION_DIRECTIONS int = 10

type SwigcptrBtConvexShape uintptr

func (p SwigcptrBtConvexShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConvexShape) SwigIsBtConvexShape() {
}

func _swig_wrap_delete_btConvexShape(uintptr)

func DeleteBtConvexShape(arg1 BtConvexShape) {
	_swig_wrap_delete_btConvexShape(arg1.Swigcptr())
}

func _swig_wrap_btConvexShape_localGetSupportingVertex(SwigcptrBtConvexShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexShape) LocalGetSupportingVertex(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btConvexShape_localGetSupportingVertex(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexShape_localGetSupportingVertexWithoutMargin(SwigcptrBtConvexShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btConvexShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtConvexShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btConvexShape_localGetSupportVertexWithoutMarginNonVirtual(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexShape_localGetSupportVertexNonVirtual(SwigcptrBtConvexShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexShape) LocalGetSupportVertexNonVirtual(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btConvexShape_localGetSupportVertexNonVirtual(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexShape_getMarginNonVirtual(SwigcptrBtConvexShape) float32

func (arg1 SwigcptrBtConvexShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btConvexShape_getMarginNonVirtual(arg1)
}

func _swig_wrap_btConvexShape_getAabbNonVirtual(SwigcptrBtConvexShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtConvexShape) GetAabbNonVirtual(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btConvexShape_getAabbNonVirtual(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btConvexShape_project(SwigcptrBtConvexShape, uintptr, uintptr, *float32, *float32)

func (arg1 SwigcptrBtConvexShape) Project(arg2 BtTransform, arg3 BtVector3, arg4 *float32, arg5 *float32) {
	_swig_wrap_btConvexShape_project(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5)
}

func _swig_wrap_btConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtConvexShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtConvexShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btConvexShape_getAabb(SwigcptrBtConvexShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtConvexShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btConvexShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btConvexShape_getAabbSlow(SwigcptrBtConvexShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtConvexShape) GetAabbSlow(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btConvexShape_getAabbSlow(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btConvexShape_setLocalScaling(SwigcptrBtConvexShape, uintptr)

func (arg1 SwigcptrBtConvexShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btConvexShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexShape_getLocalScaling(SwigcptrBtConvexShape) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btConvexShape_getLocalScaling(arg1)
}

func _swig_wrap_btConvexShape_setMargin(SwigcptrBtConvexShape, float32)

func (arg1 SwigcptrBtConvexShape) SetMargin(arg2 float32) {
	_swig_wrap_btConvexShape_setMargin(arg1, arg2)
}

func _swig_wrap_btConvexShape_getMargin(SwigcptrBtConvexShape) float32

func (arg1 SwigcptrBtConvexShape) GetMargin() float32 {
	return _swig_wrap_btConvexShape_getMargin(arg1)
}

func _swig_wrap_btConvexShape_getNumPreferredPenetrationDirections(SwigcptrBtConvexShape) int

func (arg1 SwigcptrBtConvexShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btConvexShape_getNumPreferredPenetrationDirections(arg1)
}

func _swig_wrap_btConvexShape_getPreferredPenetrationDirection(SwigcptrBtConvexShape, int, uintptr)

func (arg1 SwigcptrBtConvexShape) GetPreferredPenetrationDirection(arg2 int, arg3 BtVector3) {
	_swig_wrap_btConvexShape_getPreferredPenetrationDirection(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btConvexShape_getBoundingSphere(SwigcptrBtConvexShape, uintptr, *float32)

func (_swig_base SwigcptrBtConvexShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btConvexShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConvexShape_getAngularMotionDisc(SwigcptrBtConvexShape) float32

func (_swig_base SwigcptrBtConvexShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btConvexShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btConvexShape_getContactBreakingThreshold(SwigcptrBtConvexShape, float32) float32

func (_swig_base SwigcptrBtConvexShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btConvexShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btConvexShape_calculateTemporalAabb(SwigcptrBtConvexShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btConvexShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btConvexShape_isPolyhedral(SwigcptrBtConvexShape) bool

func (_swig_base SwigcptrBtConvexShape) IsPolyhedral() bool {
	return _swig_wrap_btConvexShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btConvexShape_isConvex2d(SwigcptrBtConvexShape) bool

func (_swig_base SwigcptrBtConvexShape) IsConvex2d() bool {
	return _swig_wrap_btConvexShape_isConvex2d(_swig_base)
}

func _swig_wrap_btConvexShape_isConvex(SwigcptrBtConvexShape) bool

func (_swig_base SwigcptrBtConvexShape) IsConvex() bool {
	return _swig_wrap_btConvexShape_isConvex(_swig_base)
}

func _swig_wrap_btConvexShape_isNonMoving(SwigcptrBtConvexShape) bool

func (_swig_base SwigcptrBtConvexShape) IsNonMoving() bool {
	return _swig_wrap_btConvexShape_isNonMoving(_swig_base)
}

func _swig_wrap_btConvexShape_isConcave(SwigcptrBtConvexShape) bool

func (_swig_base SwigcptrBtConvexShape) IsConcave() bool {
	return _swig_wrap_btConvexShape_isConcave(_swig_base)
}

func _swig_wrap_btConvexShape_isCompound(SwigcptrBtConvexShape) bool

func (_swig_base SwigcptrBtConvexShape) IsCompound() bool {
	return _swig_wrap_btConvexShape_isCompound(_swig_base)
}

func _swig_wrap_btConvexShape_isSoftBody(SwigcptrBtConvexShape) bool

func (_swig_base SwigcptrBtConvexShape) IsSoftBody() bool {
	return _swig_wrap_btConvexShape_isSoftBody(_swig_base)
}

func _swig_wrap_btConvexShape_isInfinite(SwigcptrBtConvexShape) bool

func (_swig_base SwigcptrBtConvexShape) IsInfinite() bool {
	return _swig_wrap_btConvexShape_isInfinite(_swig_base)
}

func _swig_wrap_btConvexShape_calculateLocalInertia(SwigcptrBtConvexShape, float32, uintptr)

func (_swig_base SwigcptrBtConvexShape) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btConvexShape_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexShape_getName(SwigcptrBtConvexShape) string

func (_swig_base SwigcptrBtConvexShape) GetName() string {
	return _swig_wrap_btConvexShape_getName(_swig_base)
}

func _swig_wrap_btConvexShape_getShapeType(SwigcptrBtConvexShape) int

func (_swig_base SwigcptrBtConvexShape) GetShapeType() int {
	return _swig_wrap_btConvexShape_getShapeType(_swig_base)
}

func _swig_wrap_btConvexShape_getAnisotropicRollingFrictionDirection(SwigcptrBtConvexShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btConvexShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btConvexShape_setUserPointer(SwigcptrBtConvexShape, uintptr)

func (_swig_base SwigcptrBtConvexShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btConvexShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btConvexShape_getUserPointer(SwigcptrBtConvexShape) uintptr

func (_swig_base SwigcptrBtConvexShape) GetUserPointer() uintptr {
	return _swig_wrap_btConvexShape_getUserPointer(_swig_base)
}

func _swig_wrap_btConvexShape_calculateSerializeBufferSize(SwigcptrBtConvexShape) int

func (_swig_base SwigcptrBtConvexShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btConvexShape_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btConvexShape_serialize(SwigcptrBtConvexShape, uintptr, uintptr) string

func (_swig_base SwigcptrBtConvexShape) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btConvexShape_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexShape_serializeSingleShape(SwigcptrBtConvexShape, uintptr)

func (_swig_base SwigcptrBtConvexShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btConvexShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConvexShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtConvexShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtConvexShape interface {
	Swigcptr() uintptr
	SwigIsBtConvexShape()
	LocalGetSupportingVertex(arg2 BtVector3) BtVector3
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	LocalGetSupportVertexWithoutMarginNonVirtual(arg2 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg2 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	Project(arg2 BtTransform, arg3 BtVector3, arg4 *float32, arg5 *float32)
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	GetAabbSlow(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	SetLocalScaling(arg2 BtVector3)
	GetLocalScaling() BtVector3
	SetMargin(arg2 float32)
	GetMargin() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg2 int, arg3 BtVector3)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	GetName() string
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

func _swig_wrap_AabbExpand(uintptr, uintptr, uintptr, uintptr)

func AabbExpand(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_AabbExpand(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_TestPointAgainstAabb2(uintptr, uintptr, uintptr) bool

func TestPointAgainstAabb2(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3) bool {
	return _swig_wrap_TestPointAgainstAabb2(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_TestAabbAgainstAabb2(uintptr, uintptr, uintptr, uintptr) bool

func TestAabbAgainstAabb2(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3, arg4 BtVector3) bool {
	return _swig_wrap_TestAabbAgainstAabb2(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_TestTriangleAgainstAabb2(uintptr, uintptr, uintptr) bool

func TestTriangleAgainstAabb2(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3) bool {
	return _swig_wrap_TestTriangleAgainstAabb2(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btOutcode(uintptr, uintptr) int

func BtOutcode(arg1 BtVector3, arg2 BtVector3) int {
	return _swig_wrap_btOutcode(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btRayAabb2(uintptr, uintptr, *uint, uintptr, *float32, float32, float32) bool

func BtRayAabb2(arg1 BtVector3, arg2 BtVector3, arg3 *uint, arg4 BtVector3, arg5 *float32, arg6 float32, arg7 float32) bool {
	return _swig_wrap_btRayAabb2(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5, arg6, arg7)
}

func _swig_wrap_btRayAabb(uintptr, uintptr, uintptr, uintptr, *float32, uintptr) bool

func BtRayAabb(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 *float32, arg6 BtVector3) bool {
	return _swig_wrap_btRayAabb(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5, arg6.Swigcptr())
}

func _swig_wrap_btTransformAabb__SWIG_0(uintptr, float32, uintptr, uintptr, uintptr)

func BtTransformAabb__SWIG_0(arg1 BtVector3, arg2 float32, arg3 BtTransform, arg4 BtVector3, arg5 BtVector3) {
	_swig_wrap_btTransformAabb__SWIG_0(arg1.Swigcptr(), arg2, arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btTransformAabb__SWIG_1(uintptr, uintptr, float32, uintptr, uintptr, uintptr)

func BtTransformAabb__SWIG_1(arg1 BtVector3, arg2 BtVector3, arg3 float32, arg4 BtTransform, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btTransformAabb__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func BtTransformAabb(a ...interface{}) {
	argc := len(a)
	if argc == 5 {
		BtTransformAabb__SWIG_0(a[0].(BtVector3), a[1].(float32), a[2].(BtTransform), a[3].(BtVector3), a[4].(BtVector3))
		return
	}
	if argc == 6 {
		BtTransformAabb__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(float32), a[3].(BtTransform), a[4].(BtVector3), a[5].(BtVector3))
		return
	}
	panic("No match for overloaded function call")
}

const USE_BANCHLESS int = 1

func TestQuantizedAabbAgainstQuantizedAabb(*uint16, *uint16, *uint16, *uint16) uint

type SwigcptrBtConvexInternalShape uintptr

func (p SwigcptrBtConvexInternalShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConvexInternalShape) SwigIsBtConvexInternalShape() {
}

func _swig_wrap_delete_btConvexInternalShape(uintptr)

func DeleteBtConvexInternalShape(arg1 BtConvexInternalShape) {
	_swig_wrap_delete_btConvexInternalShape(arg1.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_localGetSupportingVertex(SwigcptrBtConvexInternalShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexInternalShape) LocalGetSupportingVertex(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btConvexInternalShape_localGetSupportingVertex(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_getImplicitShapeDimensions(SwigcptrBtConvexInternalShape) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexInternalShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btConvexInternalShape_getImplicitShapeDimensions(arg1)
}

func _swig_wrap_btConvexInternalShape_setImplicitShapeDimensions(SwigcptrBtConvexInternalShape, uintptr)

func (arg1 SwigcptrBtConvexInternalShape) SetImplicitShapeDimensions(arg2 BtVector3) {
	_swig_wrap_btConvexInternalShape_setImplicitShapeDimensions(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_setSafeMargin__SWIG_0(SwigcptrBtConvexInternalShape, float32, float32)

func (arg1 SwigcptrBtConvexInternalShape) SetSafeMargin__SWIG_0(arg2 float32, arg3 float32) {
	_swig_wrap_btConvexInternalShape_setSafeMargin__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btConvexInternalShape_setSafeMargin__SWIG_1(SwigcptrBtConvexInternalShape, float32)

func (arg1 SwigcptrBtConvexInternalShape) SetSafeMargin__SWIG_1(arg2 float32) {
	_swig_wrap_btConvexInternalShape_setSafeMargin__SWIG_1(arg1, arg2)
}

func _swig_wrap_btConvexInternalShape_setSafeMargin__SWIG_2(SwigcptrBtConvexInternalShape, uintptr, float32)

func (arg1 SwigcptrBtConvexInternalShape) SetSafeMargin__SWIG_2(arg2 BtVector3, arg3 float32) {
	_swig_wrap_btConvexInternalShape_setSafeMargin__SWIG_2(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btConvexInternalShape_setSafeMargin__SWIG_3(SwigcptrBtConvexInternalShape, uintptr)

func (arg1 SwigcptrBtConvexInternalShape) SetSafeMargin__SWIG_3(arg2 BtVector3) {
	_swig_wrap_btConvexInternalShape_setSafeMargin__SWIG_3(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtConvexInternalShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConvexInternalShape_getAabb(SwigcptrBtConvexInternalShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtConvexInternalShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btConvexInternalShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_getAabbSlow(SwigcptrBtConvexInternalShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtConvexInternalShape) GetAabbSlow(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btConvexInternalShape_getAabbSlow(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_setLocalScaling(SwigcptrBtConvexInternalShape, uintptr)

func (arg1 SwigcptrBtConvexInternalShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btConvexInternalShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_getLocalScaling(SwigcptrBtConvexInternalShape) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexInternalShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btConvexInternalShape_getLocalScaling(arg1)
}

func _swig_wrap_btConvexInternalShape_getLocalScalingNV(SwigcptrBtConvexInternalShape) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexInternalShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btConvexInternalShape_getLocalScalingNV(arg1)
}

func _swig_wrap_btConvexInternalShape_setMargin(SwigcptrBtConvexInternalShape, float32)

func (arg1 SwigcptrBtConvexInternalShape) SetMargin(arg2 float32) {
	_swig_wrap_btConvexInternalShape_setMargin(arg1, arg2)
}

func _swig_wrap_btConvexInternalShape_getMargin(SwigcptrBtConvexInternalShape) float32

func (arg1 SwigcptrBtConvexInternalShape) GetMargin() float32 {
	return _swig_wrap_btConvexInternalShape_getMargin(arg1)
}

func _swig_wrap_btConvexInternalShape_getMarginNV(SwigcptrBtConvexInternalShape) float32

func (arg1 SwigcptrBtConvexInternalShape) GetMarginNV() float32 {
	return _swig_wrap_btConvexInternalShape_getMarginNV(arg1)
}

func _swig_wrap_btConvexInternalShape_getNumPreferredPenetrationDirections(SwigcptrBtConvexInternalShape) int

func (arg1 SwigcptrBtConvexInternalShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btConvexInternalShape_getNumPreferredPenetrationDirections(arg1)
}

func _swig_wrap_btConvexInternalShape_getPreferredPenetrationDirection(SwigcptrBtConvexInternalShape, int, uintptr)

func (arg1 SwigcptrBtConvexInternalShape) GetPreferredPenetrationDirection(arg2 int, arg3 BtVector3) {
	_swig_wrap_btConvexInternalShape_getPreferredPenetrationDirection(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_calculateSerializeBufferSize(SwigcptrBtConvexInternalShape) int

func (arg1 SwigcptrBtConvexInternalShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btConvexInternalShape_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btConvexInternalShape_serialize(SwigcptrBtConvexInternalShape, uintptr, uintptr) string

func (arg1 SwigcptrBtConvexInternalShape) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btConvexInternalShape_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_localGetSupportingVertexWithoutMargin(SwigcptrBtConvexInternalShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalShape) LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConvexInternalShape_localGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtConvexInternalShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConvexInternalShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_localGetSupportVertexNonVirtual(SwigcptrBtConvexInternalShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConvexInternalShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_getMarginNonVirtual(SwigcptrBtConvexInternalShape) float32

func (_swig_base SwigcptrBtConvexInternalShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btConvexInternalShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btConvexInternalShape_getAabbNonVirtual(SwigcptrBtConvexInternalShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexInternalShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConvexInternalShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_project(SwigcptrBtConvexInternalShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtConvexInternalShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btConvexInternalShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btConvexInternalShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtConvexInternalShape, uintptr, uintptr, int)

func (_swig_base SwigcptrBtConvexInternalShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int) {
	_swig_wrap_btConvexInternalShape_batchedUnitVectorGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btConvexInternalShape_getBoundingSphere(SwigcptrBtConvexInternalShape, uintptr, *float32)

func (_swig_base SwigcptrBtConvexInternalShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btConvexInternalShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConvexInternalShape_getAngularMotionDisc(SwigcptrBtConvexInternalShape) float32

func (_swig_base SwigcptrBtConvexInternalShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btConvexInternalShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btConvexInternalShape_getContactBreakingThreshold(SwigcptrBtConvexInternalShape, float32) float32

func (_swig_base SwigcptrBtConvexInternalShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btConvexInternalShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btConvexInternalShape_calculateTemporalAabb(SwigcptrBtConvexInternalShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexInternalShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btConvexInternalShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_isPolyhedral(SwigcptrBtConvexInternalShape) bool

func (_swig_base SwigcptrBtConvexInternalShape) IsPolyhedral() bool {
	return _swig_wrap_btConvexInternalShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btConvexInternalShape_isConvex2d(SwigcptrBtConvexInternalShape) bool

func (_swig_base SwigcptrBtConvexInternalShape) IsConvex2d() bool {
	return _swig_wrap_btConvexInternalShape_isConvex2d(_swig_base)
}

func _swig_wrap_btConvexInternalShape_isConvex(SwigcptrBtConvexInternalShape) bool

func (_swig_base SwigcptrBtConvexInternalShape) IsConvex() bool {
	return _swig_wrap_btConvexInternalShape_isConvex(_swig_base)
}

func _swig_wrap_btConvexInternalShape_isNonMoving(SwigcptrBtConvexInternalShape) bool

func (_swig_base SwigcptrBtConvexInternalShape) IsNonMoving() bool {
	return _swig_wrap_btConvexInternalShape_isNonMoving(_swig_base)
}

func _swig_wrap_btConvexInternalShape_isConcave(SwigcptrBtConvexInternalShape) bool

func (_swig_base SwigcptrBtConvexInternalShape) IsConcave() bool {
	return _swig_wrap_btConvexInternalShape_isConcave(_swig_base)
}

func _swig_wrap_btConvexInternalShape_isCompound(SwigcptrBtConvexInternalShape) bool

func (_swig_base SwigcptrBtConvexInternalShape) IsCompound() bool {
	return _swig_wrap_btConvexInternalShape_isCompound(_swig_base)
}

func _swig_wrap_btConvexInternalShape_isSoftBody(SwigcptrBtConvexInternalShape) bool

func (_swig_base SwigcptrBtConvexInternalShape) IsSoftBody() bool {
	return _swig_wrap_btConvexInternalShape_isSoftBody(_swig_base)
}

func _swig_wrap_btConvexInternalShape_isInfinite(SwigcptrBtConvexInternalShape) bool

func (_swig_base SwigcptrBtConvexInternalShape) IsInfinite() bool {
	return _swig_wrap_btConvexInternalShape_isInfinite(_swig_base)
}

func _swig_wrap_btConvexInternalShape_calculateLocalInertia(SwigcptrBtConvexInternalShape, float32, uintptr)

func (_swig_base SwigcptrBtConvexInternalShape) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btConvexInternalShape_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexInternalShape_getName(SwigcptrBtConvexInternalShape) string

func (_swig_base SwigcptrBtConvexInternalShape) GetName() string {
	return _swig_wrap_btConvexInternalShape_getName(_swig_base)
}

func _swig_wrap_btConvexInternalShape_getShapeType(SwigcptrBtConvexInternalShape) int

func (_swig_base SwigcptrBtConvexInternalShape) GetShapeType() int {
	return _swig_wrap_btConvexInternalShape_getShapeType(_swig_base)
}

func _swig_wrap_btConvexInternalShape_getAnisotropicRollingFrictionDirection(SwigcptrBtConvexInternalShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btConvexInternalShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btConvexInternalShape_setUserPointer(SwigcptrBtConvexInternalShape, uintptr)

func (_swig_base SwigcptrBtConvexInternalShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btConvexInternalShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btConvexInternalShape_getUserPointer(SwigcptrBtConvexInternalShape) uintptr

func (_swig_base SwigcptrBtConvexInternalShape) GetUserPointer() uintptr {
	return _swig_wrap_btConvexInternalShape_getUserPointer(_swig_base)
}

func _swig_wrap_btConvexInternalShape_serializeSingleShape(SwigcptrBtConvexInternalShape, uintptr)

func (_swig_base SwigcptrBtConvexInternalShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btConvexInternalShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConvexInternalShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtConvexInternalShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtConvexInternalShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtConvexInternalShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtConvexInternalShape interface {
	Swigcptr() uintptr
	SwigIsBtConvexInternalShape()
	LocalGetSupportingVertex(arg2 BtVector3) BtVector3
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg2 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	GetAabbSlow(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	SetLocalScaling(arg2 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	SetMargin(arg2 float32)
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg2 int, arg3 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	GetName() string
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtConvexInternalShapeData uintptr

func (p SwigcptrBtConvexInternalShapeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConvexInternalShapeData) SwigIsBtConvexInternalShapeData() {
}

func _swig_wrap_btConvexInternalShapeData_m_collisionShapeData_set(SwigcptrBtConvexInternalShapeData, uintptr)

func (arg1 SwigcptrBtConvexInternalShapeData) SetM_collisionShapeData(arg2 BtCollisionShapeData) {
	_swig_wrap_btConvexInternalShapeData_m_collisionShapeData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexInternalShapeData_m_collisionShapeData_get(SwigcptrBtConvexInternalShapeData) SwigcptrBtCollisionShapeData

func (arg1 SwigcptrBtConvexInternalShapeData) GetM_collisionShapeData() BtCollisionShapeData {
	return _swig_wrap_btConvexInternalShapeData_m_collisionShapeData_get(arg1)
}

func _swig_wrap_btConvexInternalShapeData_m_localScaling_set(SwigcptrBtConvexInternalShapeData, uintptr)

func (arg1 SwigcptrBtConvexInternalShapeData) SetM_localScaling(arg2 BtVector3FloatData) {
	_swig_wrap_btConvexInternalShapeData_m_localScaling_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexInternalShapeData_m_localScaling_get(SwigcptrBtConvexInternalShapeData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtConvexInternalShapeData) GetM_localScaling() BtVector3FloatData {
	return _swig_wrap_btConvexInternalShapeData_m_localScaling_get(arg1)
}

func _swig_wrap_btConvexInternalShapeData_m_implicitShapeDimensions_set(SwigcptrBtConvexInternalShapeData, uintptr)

func (arg1 SwigcptrBtConvexInternalShapeData) SetM_implicitShapeDimensions(arg2 BtVector3FloatData) {
	_swig_wrap_btConvexInternalShapeData_m_implicitShapeDimensions_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexInternalShapeData_m_implicitShapeDimensions_get(SwigcptrBtConvexInternalShapeData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtConvexInternalShapeData) GetM_implicitShapeDimensions() BtVector3FloatData {
	return _swig_wrap_btConvexInternalShapeData_m_implicitShapeDimensions_get(arg1)
}

func _swig_wrap_btConvexInternalShapeData_m_collisionMargin_set(SwigcptrBtConvexInternalShapeData, float32)

func (arg1 SwigcptrBtConvexInternalShapeData) SetM_collisionMargin(arg2 float32) {
	_swig_wrap_btConvexInternalShapeData_m_collisionMargin_set(arg1, arg2)
}

func _swig_wrap_btConvexInternalShapeData_m_collisionMargin_get(SwigcptrBtConvexInternalShapeData) float32

func (arg1 SwigcptrBtConvexInternalShapeData) GetM_collisionMargin() float32 {
	return _swig_wrap_btConvexInternalShapeData_m_collisionMargin_get(arg1)
}

func _swig_wrap_btConvexInternalShapeData_m_padding_set(SwigcptrBtConvexInternalShapeData, int)

func (arg1 SwigcptrBtConvexInternalShapeData) SetM_padding(arg2 int) {
	_swig_wrap_btConvexInternalShapeData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btConvexInternalShapeData_m_padding_get(SwigcptrBtConvexInternalShapeData) int

func (arg1 SwigcptrBtConvexInternalShapeData) GetM_padding() int {
	return _swig_wrap_btConvexInternalShapeData_m_padding_get(arg1)
}

func _swig_wrap_new_btConvexInternalShapeData() SwigcptrBtConvexInternalShapeData

func NewBtConvexInternalShapeData() BtConvexInternalShapeData {
	return _swig_wrap_new_btConvexInternalShapeData()
}

func _swig_wrap_delete_btConvexInternalShapeData(uintptr)

func DeleteBtConvexInternalShapeData(arg1 BtConvexInternalShapeData) {
	_swig_wrap_delete_btConvexInternalShapeData(arg1.Swigcptr())
}

type BtConvexInternalShapeData interface {
	Swigcptr() uintptr
	SwigIsBtConvexInternalShapeData()
	SetM_collisionShapeData(arg2 BtCollisionShapeData)
	GetM_collisionShapeData() BtCollisionShapeData
	SetM_localScaling(arg2 BtVector3FloatData)
	GetM_localScaling() BtVector3FloatData
	SetM_implicitShapeDimensions(arg2 BtVector3FloatData)
	GetM_implicitShapeDimensions() BtVector3FloatData
	SetM_collisionMargin(arg2 float32)
	GetM_collisionMargin() float32
	SetM_padding(arg2 int)
	GetM_padding() int
}

type SwigcptrBtConvexInternalAabbCachingShape uintptr

func (p SwigcptrBtConvexInternalAabbCachingShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConvexInternalAabbCachingShape) SwigIsBtConvexInternalAabbCachingShape() {
}

func _swig_wrap_btConvexInternalAabbCachingShape_setLocalScaling(SwigcptrBtConvexInternalAabbCachingShape, uintptr)

func (arg1 SwigcptrBtConvexInternalAabbCachingShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btConvexInternalAabbCachingShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_getAabb(SwigcptrBtConvexInternalAabbCachingShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtConvexInternalAabbCachingShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btConvexInternalAabbCachingShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_recalcLocalAabb(SwigcptrBtConvexInternalAabbCachingShape)

func (arg1 SwigcptrBtConvexInternalAabbCachingShape) RecalcLocalAabb() {
	_swig_wrap_btConvexInternalAabbCachingShape_recalcLocalAabb(arg1)
}

func _swig_wrap_delete_btConvexInternalAabbCachingShape(uintptr)

func DeleteBtConvexInternalAabbCachingShape(arg1 BtConvexInternalAabbCachingShape) {
	_swig_wrap_delete_btConvexInternalAabbCachingShape(arg1.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_localGetSupportingVertex(SwigcptrBtConvexInternalAabbCachingShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConvexInternalAabbCachingShape_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_getImplicitShapeDimensions(SwigcptrBtConvexInternalAabbCachingShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btConvexInternalAabbCachingShape_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_setImplicitShapeDimensions(SwigcptrBtConvexInternalAabbCachingShape, uintptr)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btConvexInternalAabbCachingShape_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_0(SwigcptrBtConvexInternalAabbCachingShape, float32, float32)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_1(SwigcptrBtConvexInternalAabbCachingShape, float32)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_2(SwigcptrBtConvexInternalAabbCachingShape, uintptr, float32)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_3(SwigcptrBtConvexInternalAabbCachingShape, uintptr)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btConvexInternalAabbCachingShape_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConvexInternalAabbCachingShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConvexInternalAabbCachingShape_getAabbSlow(SwigcptrBtConvexInternalAabbCachingShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConvexInternalAabbCachingShape_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_getLocalScaling(SwigcptrBtConvexInternalAabbCachingShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btConvexInternalAabbCachingShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getLocalScalingNV(SwigcptrBtConvexInternalAabbCachingShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btConvexInternalAabbCachingShape_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_setMargin(SwigcptrBtConvexInternalAabbCachingShape, float32)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) SetMargin(arg1 float32) {
	_swig_wrap_btConvexInternalAabbCachingShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getMargin(SwigcptrBtConvexInternalAabbCachingShape) float32

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetMargin() float32 {
	return _swig_wrap_btConvexInternalAabbCachingShape_getMargin(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getMarginNV(SwigcptrBtConvexInternalAabbCachingShape) float32

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetMarginNV() float32 {
	return _swig_wrap_btConvexInternalAabbCachingShape_getMarginNV(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getNumPreferredPenetrationDirections(SwigcptrBtConvexInternalAabbCachingShape) int

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btConvexInternalAabbCachingShape_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getPreferredPenetrationDirection(SwigcptrBtConvexInternalAabbCachingShape, int, uintptr)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btConvexInternalAabbCachingShape_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_calculateSerializeBufferSize(SwigcptrBtConvexInternalAabbCachingShape) int

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btConvexInternalAabbCachingShape_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_serialize(SwigcptrBtConvexInternalAabbCachingShape, uintptr, uintptr) string

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btConvexInternalAabbCachingShape_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_localGetSupportingVertexWithoutMargin(SwigcptrBtConvexInternalAabbCachingShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConvexInternalAabbCachingShape_localGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtConvexInternalAabbCachingShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConvexInternalAabbCachingShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_localGetSupportVertexNonVirtual(SwigcptrBtConvexInternalAabbCachingShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConvexInternalAabbCachingShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_getMarginNonVirtual(SwigcptrBtConvexInternalAabbCachingShape) float32

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btConvexInternalAabbCachingShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getAabbNonVirtual(SwigcptrBtConvexInternalAabbCachingShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConvexInternalAabbCachingShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_project(SwigcptrBtConvexInternalAabbCachingShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btConvexInternalAabbCachingShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btConvexInternalAabbCachingShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtConvexInternalAabbCachingShape, uintptr, uintptr, int)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int) {
	_swig_wrap_btConvexInternalAabbCachingShape_batchedUnitVectorGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getBoundingSphere(SwigcptrBtConvexInternalAabbCachingShape, uintptr, *float32)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btConvexInternalAabbCachingShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getAngularMotionDisc(SwigcptrBtConvexInternalAabbCachingShape) float32

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btConvexInternalAabbCachingShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getContactBreakingThreshold(SwigcptrBtConvexInternalAabbCachingShape, float32) float32

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btConvexInternalAabbCachingShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btConvexInternalAabbCachingShape_calculateTemporalAabb(SwigcptrBtConvexInternalAabbCachingShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btConvexInternalAabbCachingShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_isPolyhedral(SwigcptrBtConvexInternalAabbCachingShape) bool

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) IsPolyhedral() bool {
	return _swig_wrap_btConvexInternalAabbCachingShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_isConvex2d(SwigcptrBtConvexInternalAabbCachingShape) bool

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) IsConvex2d() bool {
	return _swig_wrap_btConvexInternalAabbCachingShape_isConvex2d(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_isConvex(SwigcptrBtConvexInternalAabbCachingShape) bool

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) IsConvex() bool {
	return _swig_wrap_btConvexInternalAabbCachingShape_isConvex(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_isNonMoving(SwigcptrBtConvexInternalAabbCachingShape) bool

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) IsNonMoving() bool {
	return _swig_wrap_btConvexInternalAabbCachingShape_isNonMoving(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_isConcave(SwigcptrBtConvexInternalAabbCachingShape) bool

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) IsConcave() bool {
	return _swig_wrap_btConvexInternalAabbCachingShape_isConcave(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_isCompound(SwigcptrBtConvexInternalAabbCachingShape) bool

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) IsCompound() bool {
	return _swig_wrap_btConvexInternalAabbCachingShape_isCompound(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_isSoftBody(SwigcptrBtConvexInternalAabbCachingShape) bool

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) IsSoftBody() bool {
	return _swig_wrap_btConvexInternalAabbCachingShape_isSoftBody(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_isInfinite(SwigcptrBtConvexInternalAabbCachingShape) bool

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) IsInfinite() bool {
	return _swig_wrap_btConvexInternalAabbCachingShape_isInfinite(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_calculateLocalInertia(SwigcptrBtConvexInternalAabbCachingShape, float32, uintptr)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btConvexInternalAabbCachingShape_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexInternalAabbCachingShape_getName(SwigcptrBtConvexInternalAabbCachingShape) string

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetName() string {
	return _swig_wrap_btConvexInternalAabbCachingShape_getName(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getShapeType(SwigcptrBtConvexInternalAabbCachingShape) int

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetShapeType() int {
	return _swig_wrap_btConvexInternalAabbCachingShape_getShapeType(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getAnisotropicRollingFrictionDirection(SwigcptrBtConvexInternalAabbCachingShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btConvexInternalAabbCachingShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_setUserPointer(SwigcptrBtConvexInternalAabbCachingShape, uintptr)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btConvexInternalAabbCachingShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btConvexInternalAabbCachingShape_getUserPointer(SwigcptrBtConvexInternalAabbCachingShape) uintptr

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) GetUserPointer() uintptr {
	return _swig_wrap_btConvexInternalAabbCachingShape_getUserPointer(_swig_base)
}

func _swig_wrap_btConvexInternalAabbCachingShape_serializeSingleShape(SwigcptrBtConvexInternalAabbCachingShape, uintptr)

func (_swig_base SwigcptrBtConvexInternalAabbCachingShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btConvexInternalAabbCachingShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConvexInternalAabbCachingShape) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtConvexInternalAabbCachingShape) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtConvexInternalAabbCachingShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtConvexInternalAabbCachingShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtConvexInternalAabbCachingShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtConvexInternalAabbCachingShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtConvexInternalAabbCachingShape interface {
	Swigcptr() uintptr
	SwigIsBtConvexInternalAabbCachingShape()
	SetLocalScaling(arg2 BtVector3)
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	RecalcLocalAabb()
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	SetMargin(arg1 float32)
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	GetName() string
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtPolyhedralConvexShape uintptr

func (p SwigcptrBtPolyhedralConvexShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtPolyhedralConvexShape) SwigIsBtPolyhedralConvexShape() {
}

func _swig_wrap_delete_btPolyhedralConvexShape(uintptr)

func DeleteBtPolyhedralConvexShape(arg1 BtPolyhedralConvexShape) {
	_swig_wrap_delete_btPolyhedralConvexShape(arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_0(SwigcptrBtPolyhedralConvexShape, int) bool

func (arg1 SwigcptrBtPolyhedralConvexShape) InitializePolyhedralFeatures__SWIG_0(arg2 int) bool {
	return _swig_wrap_btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_0(arg1, arg2)
}

func _swig_wrap_btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_1(SwigcptrBtPolyhedralConvexShape) bool

func (arg1 SwigcptrBtPolyhedralConvexShape) InitializePolyhedralFeatures__SWIG_1() bool {
	return _swig_wrap_btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_1(arg1)
}

func (p SwigcptrBtPolyhedralConvexShape) InitializePolyhedralFeatures(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.InitializePolyhedralFeatures__SWIG_1()
	}
	if argc == 1 {
		return p.InitializePolyhedralFeatures__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPolyhedralConvexShape_getConvexPolyhedron(SwigcptrBtPolyhedralConvexShape) SwigcptrBtConvexPolyhedron

func (arg1 SwigcptrBtPolyhedralConvexShape) GetConvexPolyhedron() BtConvexPolyhedron {
	return _swig_wrap_btPolyhedralConvexShape_getConvexPolyhedron(arg1)
}

func _swig_wrap_btPolyhedralConvexShape_localGetSupportingVertexWithoutMargin(SwigcptrBtPolyhedralConvexShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtPolyhedralConvexShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btPolyhedralConvexShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtPolyhedralConvexShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtPolyhedralConvexShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btPolyhedralConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btPolyhedralConvexShape_calculateLocalInertia(SwigcptrBtPolyhedralConvexShape, float32, uintptr)

func (arg1 SwigcptrBtPolyhedralConvexShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btPolyhedralConvexShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_getNumVertices(SwigcptrBtPolyhedralConvexShape) int

func (arg1 SwigcptrBtPolyhedralConvexShape) GetNumVertices() int {
	return _swig_wrap_btPolyhedralConvexShape_getNumVertices(arg1)
}

func _swig_wrap_btPolyhedralConvexShape_getNumEdges(SwigcptrBtPolyhedralConvexShape) int

func (arg1 SwigcptrBtPolyhedralConvexShape) GetNumEdges() int {
	return _swig_wrap_btPolyhedralConvexShape_getNumEdges(arg1)
}

func _swig_wrap_btPolyhedralConvexShape_getEdge(SwigcptrBtPolyhedralConvexShape, int, uintptr, uintptr)

func (arg1 SwigcptrBtPolyhedralConvexShape) GetEdge(arg2 int, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btPolyhedralConvexShape_getEdge(arg1, arg2, arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_getVertex(SwigcptrBtPolyhedralConvexShape, int, uintptr)

func (arg1 SwigcptrBtPolyhedralConvexShape) GetVertex(arg2 int, arg3 BtVector3) {
	_swig_wrap_btPolyhedralConvexShape_getVertex(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_getNumPlanes(SwigcptrBtPolyhedralConvexShape) int

func (arg1 SwigcptrBtPolyhedralConvexShape) GetNumPlanes() int {
	return _swig_wrap_btPolyhedralConvexShape_getNumPlanes(arg1)
}

func _swig_wrap_btPolyhedralConvexShape_getPlane(SwigcptrBtPolyhedralConvexShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtPolyhedralConvexShape) GetPlane(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btPolyhedralConvexShape_getPlane(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btPolyhedralConvexShape_isInside(SwigcptrBtPolyhedralConvexShape, uintptr, float32) bool

func (arg1 SwigcptrBtPolyhedralConvexShape) IsInside(arg2 BtVector3, arg3 float32) bool {
	return _swig_wrap_btPolyhedralConvexShape_isInside(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btPolyhedralConvexShape_localGetSupportingVertex(SwigcptrBtPolyhedralConvexShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexShape) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btPolyhedralConvexShape_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_getImplicitShapeDimensions(SwigcptrBtPolyhedralConvexShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btPolyhedralConvexShape_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_setImplicitShapeDimensions(SwigcptrBtPolyhedralConvexShape, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexShape) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btPolyhedralConvexShape_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_0(SwigcptrBtPolyhedralConvexShape, float32, float32)

func (_swig_base SwigcptrBtPolyhedralConvexShape) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_1(SwigcptrBtPolyhedralConvexShape, float32)

func (_swig_base SwigcptrBtPolyhedralConvexShape) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_2(SwigcptrBtPolyhedralConvexShape, uintptr, float32)

func (_swig_base SwigcptrBtPolyhedralConvexShape) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_3(SwigcptrBtPolyhedralConvexShape, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexShape) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btPolyhedralConvexShape_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtPolyhedralConvexShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPolyhedralConvexShape_getAabb(SwigcptrBtPolyhedralConvexShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btPolyhedralConvexShape_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_getAabbSlow(SwigcptrBtPolyhedralConvexShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btPolyhedralConvexShape_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_setLocalScaling(SwigcptrBtPolyhedralConvexShape, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexShape) SetLocalScaling(arg1 BtVector3) {
	_swig_wrap_btPolyhedralConvexShape_setLocalScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_getLocalScaling(SwigcptrBtPolyhedralConvexShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btPolyhedralConvexShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_getLocalScalingNV(SwigcptrBtPolyhedralConvexShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btPolyhedralConvexShape_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_setMargin(SwigcptrBtPolyhedralConvexShape, float32)

func (_swig_base SwigcptrBtPolyhedralConvexShape) SetMargin(arg1 float32) {
	_swig_wrap_btPolyhedralConvexShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btPolyhedralConvexShape_getMargin(SwigcptrBtPolyhedralConvexShape) float32

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetMargin() float32 {
	return _swig_wrap_btPolyhedralConvexShape_getMargin(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_getMarginNV(SwigcptrBtPolyhedralConvexShape) float32

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetMarginNV() float32 {
	return _swig_wrap_btPolyhedralConvexShape_getMarginNV(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_getNumPreferredPenetrationDirections(SwigcptrBtPolyhedralConvexShape) int

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btPolyhedralConvexShape_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_getPreferredPenetrationDirection(SwigcptrBtPolyhedralConvexShape, int, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btPolyhedralConvexShape_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_calculateSerializeBufferSize(SwigcptrBtPolyhedralConvexShape) int

func (_swig_base SwigcptrBtPolyhedralConvexShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btPolyhedralConvexShape_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_serialize(SwigcptrBtPolyhedralConvexShape, uintptr, uintptr) string

func (_swig_base SwigcptrBtPolyhedralConvexShape) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btPolyhedralConvexShape_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtPolyhedralConvexShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btPolyhedralConvexShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_localGetSupportVertexNonVirtual(SwigcptrBtPolyhedralConvexShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btPolyhedralConvexShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_getMarginNonVirtual(SwigcptrBtPolyhedralConvexShape) float32

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btPolyhedralConvexShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_getAabbNonVirtual(SwigcptrBtPolyhedralConvexShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btPolyhedralConvexShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_project(SwigcptrBtPolyhedralConvexShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtPolyhedralConvexShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btPolyhedralConvexShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btPolyhedralConvexShape_getBoundingSphere(SwigcptrBtPolyhedralConvexShape, uintptr, *float32)

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btPolyhedralConvexShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btPolyhedralConvexShape_getAngularMotionDisc(SwigcptrBtPolyhedralConvexShape) float32

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btPolyhedralConvexShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_getContactBreakingThreshold(SwigcptrBtPolyhedralConvexShape, float32) float32

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btPolyhedralConvexShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btPolyhedralConvexShape_calculateTemporalAabb(SwigcptrBtPolyhedralConvexShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btPolyhedralConvexShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexShape_isPolyhedral(SwigcptrBtPolyhedralConvexShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexShape) IsPolyhedral() bool {
	return _swig_wrap_btPolyhedralConvexShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_isConvex2d(SwigcptrBtPolyhedralConvexShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexShape) IsConvex2d() bool {
	return _swig_wrap_btPolyhedralConvexShape_isConvex2d(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_isConvex(SwigcptrBtPolyhedralConvexShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexShape) IsConvex() bool {
	return _swig_wrap_btPolyhedralConvexShape_isConvex(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_isNonMoving(SwigcptrBtPolyhedralConvexShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexShape) IsNonMoving() bool {
	return _swig_wrap_btPolyhedralConvexShape_isNonMoving(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_isConcave(SwigcptrBtPolyhedralConvexShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexShape) IsConcave() bool {
	return _swig_wrap_btPolyhedralConvexShape_isConcave(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_isCompound(SwigcptrBtPolyhedralConvexShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexShape) IsCompound() bool {
	return _swig_wrap_btPolyhedralConvexShape_isCompound(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_isSoftBody(SwigcptrBtPolyhedralConvexShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexShape) IsSoftBody() bool {
	return _swig_wrap_btPolyhedralConvexShape_isSoftBody(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_isInfinite(SwigcptrBtPolyhedralConvexShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexShape) IsInfinite() bool {
	return _swig_wrap_btPolyhedralConvexShape_isInfinite(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_getName(SwigcptrBtPolyhedralConvexShape) string

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetName() string {
	return _swig_wrap_btPolyhedralConvexShape_getName(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_getShapeType(SwigcptrBtPolyhedralConvexShape) int

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetShapeType() int {
	return _swig_wrap_btPolyhedralConvexShape_getShapeType(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_getAnisotropicRollingFrictionDirection(SwigcptrBtPolyhedralConvexShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btPolyhedralConvexShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_setUserPointer(SwigcptrBtPolyhedralConvexShape, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btPolyhedralConvexShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btPolyhedralConvexShape_getUserPointer(SwigcptrBtPolyhedralConvexShape) uintptr

func (_swig_base SwigcptrBtPolyhedralConvexShape) GetUserPointer() uintptr {
	return _swig_wrap_btPolyhedralConvexShape_getUserPointer(_swig_base)
}

func _swig_wrap_btPolyhedralConvexShape_serializeSingleShape(SwigcptrBtPolyhedralConvexShape, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btPolyhedralConvexShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtPolyhedralConvexShape) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtPolyhedralConvexShape) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtPolyhedralConvexShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtPolyhedralConvexShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtPolyhedralConvexShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtPolyhedralConvexShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtPolyhedralConvexShape interface {
	Swigcptr() uintptr
	SwigIsBtPolyhedralConvexShape()
	InitializePolyhedralFeatures(a ...interface{}) bool
	GetConvexPolyhedron() BtConvexPolyhedron
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	GetNumVertices() int
	GetNumEdges() int
	GetEdge(arg2 int, arg3 BtVector3, arg4 BtVector3)
	GetVertex(arg2 int, arg3 BtVector3)
	GetNumPlanes() int
	GetPlane(arg2 BtVector3, arg3 BtVector3, arg4 int)
	IsInside(arg2 BtVector3, arg3 float32) bool
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	SetLocalScaling(arg1 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	SetMargin(arg1 float32)
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetName() string
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtPolyhedralConvexAabbCachingShape uintptr

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) SwigIsBtPolyhedralConvexAabbCachingShape() {
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getNonvirtualAabb(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, uintptr, uintptr, float32)

func (arg1 SwigcptrBtPolyhedralConvexAabbCachingShape) GetNonvirtualAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3, arg5 float32) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_getNonvirtualAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_setLocalScaling(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr)

func (arg1 SwigcptrBtPolyhedralConvexAabbCachingShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getAabb(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtPolyhedralConvexAabbCachingShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_recalcLocalAabb(SwigcptrBtPolyhedralConvexAabbCachingShape)

func (arg1 SwigcptrBtPolyhedralConvexAabbCachingShape) RecalcLocalAabb() {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_recalcLocalAabb(arg1)
}

func _swig_wrap_delete_btPolyhedralConvexAabbCachingShape(uintptr)

func DeleteBtPolyhedralConvexAabbCachingShape(arg1 BtPolyhedralConvexAabbCachingShape) {
	_swig_wrap_delete_btPolyhedralConvexAabbCachingShape(arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_initializePolyhedralFeatures__SWIG_0(SwigcptrBtPolyhedralConvexAabbCachingShape, int) bool

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) InitializePolyhedralFeatures__SWIG_0(arg1 int) bool {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_initializePolyhedralFeatures__SWIG_0(_swig_base, arg1)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_initializePolyhedralFeatures__SWIG_1(SwigcptrBtPolyhedralConvexAabbCachingShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) InitializePolyhedralFeatures__SWIG_1() bool {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_initializePolyhedralFeatures__SWIG_1(_swig_base)
}

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) InitializePolyhedralFeatures(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.InitializePolyhedralFeatures__SWIG_1()
	}
	if argc == 1 {
		return p.InitializePolyhedralFeatures__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getConvexPolyhedron(SwigcptrBtPolyhedralConvexAabbCachingShape) SwigcptrBtConvexPolyhedron

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetConvexPolyhedron() BtConvexPolyhedron {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getConvexPolyhedron(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportingVertexWithoutMargin(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, uintptr, int)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_batchedUnitVectorGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_calculateLocalInertia(SwigcptrBtPolyhedralConvexAabbCachingShape, float32, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getNumVertices(SwigcptrBtPolyhedralConvexAabbCachingShape) int

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetNumVertices() int {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getNumVertices(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getNumEdges(SwigcptrBtPolyhedralConvexAabbCachingShape) int

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetNumEdges() int {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getNumEdges(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getEdge(SwigcptrBtPolyhedralConvexAabbCachingShape, int, uintptr, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetEdge(arg1 int, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_getEdge(_swig_base, arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getVertex(SwigcptrBtPolyhedralConvexAabbCachingShape, int, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetVertex(arg1 int, arg2 BtVector3) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_getVertex(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getNumPlanes(SwigcptrBtPolyhedralConvexAabbCachingShape) int

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetNumPlanes() int {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getNumPlanes(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getPlane(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, uintptr, int)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetPlane(arg1 BtVector3, arg2 BtVector3, arg3 int) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_getPlane(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_isInside(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, float32) bool

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) IsInside(arg1 BtVector3, arg2 float32) bool {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_isInside(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportingVertex(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getImplicitShapeDimensions(SwigcptrBtPolyhedralConvexAabbCachingShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_setImplicitShapeDimensions(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_0(SwigcptrBtPolyhedralConvexAabbCachingShape, float32, float32)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_1(SwigcptrBtPolyhedralConvexAabbCachingShape, float32)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_2(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, float32)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_3(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getAabbSlow(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getLocalScaling(SwigcptrBtPolyhedralConvexAabbCachingShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getLocalScalingNV(SwigcptrBtPolyhedralConvexAabbCachingShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_setMargin(SwigcptrBtPolyhedralConvexAabbCachingShape, float32)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) SetMargin(arg1 float32) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getMargin(SwigcptrBtPolyhedralConvexAabbCachingShape) float32

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetMargin() float32 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getMargin(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getMarginNV(SwigcptrBtPolyhedralConvexAabbCachingShape) float32

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetMarginNV() float32 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getMarginNV(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getNumPreferredPenetrationDirections(SwigcptrBtPolyhedralConvexAabbCachingShape) int

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getPreferredPenetrationDirection(SwigcptrBtPolyhedralConvexAabbCachingShape, int, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_calculateSerializeBufferSize(SwigcptrBtPolyhedralConvexAabbCachingShape) int

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_serialize(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, uintptr) string

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportVertexNonVirtual(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getMarginNonVirtual(SwigcptrBtPolyhedralConvexAabbCachingShape) float32

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getAabbNonVirtual(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_project(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getBoundingSphere(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, *float32)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getAngularMotionDisc(SwigcptrBtPolyhedralConvexAabbCachingShape) float32

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getContactBreakingThreshold(SwigcptrBtPolyhedralConvexAabbCachingShape, float32) float32

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_calculateTemporalAabb(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_isPolyhedral(SwigcptrBtPolyhedralConvexAabbCachingShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) IsPolyhedral() bool {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_isConvex2d(SwigcptrBtPolyhedralConvexAabbCachingShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) IsConvex2d() bool {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_isConvex2d(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_isConvex(SwigcptrBtPolyhedralConvexAabbCachingShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) IsConvex() bool {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_isConvex(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_isNonMoving(SwigcptrBtPolyhedralConvexAabbCachingShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) IsNonMoving() bool {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_isNonMoving(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_isConcave(SwigcptrBtPolyhedralConvexAabbCachingShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) IsConcave() bool {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_isConcave(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_isCompound(SwigcptrBtPolyhedralConvexAabbCachingShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) IsCompound() bool {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_isCompound(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_isSoftBody(SwigcptrBtPolyhedralConvexAabbCachingShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) IsSoftBody() bool {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_isSoftBody(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_isInfinite(SwigcptrBtPolyhedralConvexAabbCachingShape) bool

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) IsInfinite() bool {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_isInfinite(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getName(SwigcptrBtPolyhedralConvexAabbCachingShape) string

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetName() string {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getName(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getShapeType(SwigcptrBtPolyhedralConvexAabbCachingShape) int

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetShapeType() int {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getShapeType(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getAnisotropicRollingFrictionDirection(SwigcptrBtPolyhedralConvexAabbCachingShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_setUserPointer(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_getUserPointer(SwigcptrBtPolyhedralConvexAabbCachingShape) uintptr

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) GetUserPointer() uintptr {
	return _swig_wrap_btPolyhedralConvexAabbCachingShape_getUserPointer(_swig_base)
}

func _swig_wrap_btPolyhedralConvexAabbCachingShape_serializeSingleShape(SwigcptrBtPolyhedralConvexAabbCachingShape, uintptr)

func (_swig_base SwigcptrBtPolyhedralConvexAabbCachingShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btPolyhedralConvexAabbCachingShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) SwigIsBtPolyhedralConvexShape() {
}

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) SwigGetBtPolyhedralConvexShape() BtPolyhedralConvexShape {
	return SwigcptrBtPolyhedralConvexShape(p.Swigcptr())
}

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtPolyhedralConvexAabbCachingShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtPolyhedralConvexAabbCachingShape interface {
	Swigcptr() uintptr
	SwigIsBtPolyhedralConvexAabbCachingShape()
	GetNonvirtualAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3, arg5 float32)
	SetLocalScaling(arg2 BtVector3)
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	RecalcLocalAabb()
	InitializePolyhedralFeatures(a ...interface{}) bool
	GetConvexPolyhedron() BtConvexPolyhedron
	LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int)
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	GetNumVertices() int
	GetNumEdges() int
	GetEdge(arg1 int, arg2 BtVector3, arg3 BtVector3)
	GetVertex(arg1 int, arg2 BtVector3)
	GetNumPlanes() int
	GetPlane(arg1 BtVector3, arg2 BtVector3, arg3 int)
	IsInside(arg1 BtVector3, arg2 float32) bool
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	SetMargin(arg1 float32)
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetName() string
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtPolyhedralConvexShape()
	SwigGetBtPolyhedralConvexShape() BtPolyhedralConvexShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtBoxShape uintptr

func (p SwigcptrBtBoxShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtBoxShape) SwigIsBtBoxShape() {
}

func _swig_wrap_btBoxShape_getHalfExtentsWithMargin(SwigcptrBtBoxShape) SwigcptrBtVector3

func (arg1 SwigcptrBtBoxShape) GetHalfExtentsWithMargin() BtVector3 {
	return _swig_wrap_btBoxShape_getHalfExtentsWithMargin(arg1)
}

func _swig_wrap_btBoxShape_getHalfExtentsWithoutMargin(SwigcptrBtBoxShape) SwigcptrBtVector3

func (arg1 SwigcptrBtBoxShape) GetHalfExtentsWithoutMargin() BtVector3 {
	return _swig_wrap_btBoxShape_getHalfExtentsWithoutMargin(arg1)
}

func _swig_wrap_btBoxShape_localGetSupportingVertex(SwigcptrBtBoxShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtBoxShape) LocalGetSupportingVertex(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btBoxShape_localGetSupportingVertex(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBoxShape_localGetSupportingVertexWithoutMargin(SwigcptrBtBoxShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtBoxShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btBoxShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBoxShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtBoxShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtBoxShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btBoxShape_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_new_btBoxShape(uintptr) SwigcptrBtBoxShape

func NewBtBoxShape(arg1 BtVector3) BtBoxShape {
	return _swig_wrap_new_btBoxShape(arg1.Swigcptr())
}

func _swig_wrap_btBoxShape_setMargin(SwigcptrBtBoxShape, float32)

func (arg1 SwigcptrBtBoxShape) SetMargin(arg2 float32) {
	_swig_wrap_btBoxShape_setMargin(arg1, arg2)
}

func _swig_wrap_btBoxShape_setLocalScaling(SwigcptrBtBoxShape, uintptr)

func (arg1 SwigcptrBtBoxShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btBoxShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBoxShape_getAabb(SwigcptrBtBoxShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtBoxShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btBoxShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btBoxShape_calculateLocalInertia(SwigcptrBtBoxShape, float32, uintptr)

func (arg1 SwigcptrBtBoxShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btBoxShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btBoxShape_getPlane(SwigcptrBtBoxShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtBoxShape) GetPlane(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btBoxShape_getPlane(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btBoxShape_getNumPlanes(SwigcptrBtBoxShape) int

func (arg1 SwigcptrBtBoxShape) GetNumPlanes() int {
	return _swig_wrap_btBoxShape_getNumPlanes(arg1)
}

func _swig_wrap_btBoxShape_getNumVertices(SwigcptrBtBoxShape) int

func (arg1 SwigcptrBtBoxShape) GetNumVertices() int {
	return _swig_wrap_btBoxShape_getNumVertices(arg1)
}

func _swig_wrap_btBoxShape_getNumEdges(SwigcptrBtBoxShape) int

func (arg1 SwigcptrBtBoxShape) GetNumEdges() int {
	return _swig_wrap_btBoxShape_getNumEdges(arg1)
}

func _swig_wrap_btBoxShape_getVertex(SwigcptrBtBoxShape, int, uintptr)

func (arg1 SwigcptrBtBoxShape) GetVertex(arg2 int, arg3 BtVector3) {
	_swig_wrap_btBoxShape_getVertex(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btBoxShape_getPlaneEquation(SwigcptrBtBoxShape, uintptr, int)

func (arg1 SwigcptrBtBoxShape) GetPlaneEquation(arg2 BtVector4, arg3 int) {
	_swig_wrap_btBoxShape_getPlaneEquation(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btBoxShape_getEdge(SwigcptrBtBoxShape, int, uintptr, uintptr)

func (arg1 SwigcptrBtBoxShape) GetEdge(arg2 int, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btBoxShape_getEdge(arg1, arg2, arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btBoxShape_isInside(SwigcptrBtBoxShape, uintptr, float32) bool

func (arg1 SwigcptrBtBoxShape) IsInside(arg2 BtVector3, arg3 float32) bool {
	return _swig_wrap_btBoxShape_isInside(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btBoxShape_getName(SwigcptrBtBoxShape) string

func (arg1 SwigcptrBtBoxShape) GetName() string {
	return _swig_wrap_btBoxShape_getName(arg1)
}

func _swig_wrap_btBoxShape_getNumPreferredPenetrationDirections(SwigcptrBtBoxShape) int

func (arg1 SwigcptrBtBoxShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btBoxShape_getNumPreferredPenetrationDirections(arg1)
}

func _swig_wrap_btBoxShape_getPreferredPenetrationDirection(SwigcptrBtBoxShape, int, uintptr)

func (arg1 SwigcptrBtBoxShape) GetPreferredPenetrationDirection(arg2 int, arg3 BtVector3) {
	_swig_wrap_btBoxShape_getPreferredPenetrationDirection(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btBoxShape(uintptr)

func DeleteBtBoxShape(arg1 BtBoxShape) {
	_swig_wrap_delete_btBoxShape(arg1.Swigcptr())
}

func _swig_wrap_btBoxShape_initializePolyhedralFeatures__SWIG_0(SwigcptrBtBoxShape, int) bool

func (_swig_base SwigcptrBtBoxShape) InitializePolyhedralFeatures__SWIG_0(arg1 int) bool {
	return _swig_wrap_btBoxShape_initializePolyhedralFeatures__SWIG_0(_swig_base, arg1)
}

func _swig_wrap_btBoxShape_initializePolyhedralFeatures__SWIG_1(SwigcptrBtBoxShape) bool

func (_swig_base SwigcptrBtBoxShape) InitializePolyhedralFeatures__SWIG_1() bool {
	return _swig_wrap_btBoxShape_initializePolyhedralFeatures__SWIG_1(_swig_base)
}

func (p SwigcptrBtBoxShape) InitializePolyhedralFeatures(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.InitializePolyhedralFeatures__SWIG_1()
	}
	if argc == 1 {
		return p.InitializePolyhedralFeatures__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btBoxShape_getConvexPolyhedron(SwigcptrBtBoxShape) SwigcptrBtConvexPolyhedron

func (_swig_base SwigcptrBtBoxShape) GetConvexPolyhedron() BtConvexPolyhedron {
	return _swig_wrap_btBoxShape_getConvexPolyhedron(_swig_base)
}

func _swig_wrap_btBoxShape_getImplicitShapeDimensions(SwigcptrBtBoxShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtBoxShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btBoxShape_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btBoxShape_setImplicitShapeDimensions(SwigcptrBtBoxShape, uintptr)

func (_swig_base SwigcptrBtBoxShape) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btBoxShape_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btBoxShape_setSafeMargin__SWIG_0(SwigcptrBtBoxShape, float32, float32)

func (_swig_base SwigcptrBtBoxShape) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btBoxShape_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btBoxShape_setSafeMargin__SWIG_1(SwigcptrBtBoxShape, float32)

func (_swig_base SwigcptrBtBoxShape) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btBoxShape_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btBoxShape_setSafeMargin__SWIG_2(SwigcptrBtBoxShape, uintptr, float32)

func (_swig_base SwigcptrBtBoxShape) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btBoxShape_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btBoxShape_setSafeMargin__SWIG_3(SwigcptrBtBoxShape, uintptr)

func (_swig_base SwigcptrBtBoxShape) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btBoxShape_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtBoxShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btBoxShape_getAabbSlow(SwigcptrBtBoxShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtBoxShape) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btBoxShape_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btBoxShape_getLocalScaling(SwigcptrBtBoxShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtBoxShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btBoxShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btBoxShape_getLocalScalingNV(SwigcptrBtBoxShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtBoxShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btBoxShape_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btBoxShape_getMargin(SwigcptrBtBoxShape) float32

func (_swig_base SwigcptrBtBoxShape) GetMargin() float32 {
	return _swig_wrap_btBoxShape_getMargin(_swig_base)
}

func _swig_wrap_btBoxShape_getMarginNV(SwigcptrBtBoxShape) float32

func (_swig_base SwigcptrBtBoxShape) GetMarginNV() float32 {
	return _swig_wrap_btBoxShape_getMarginNV(_swig_base)
}

func _swig_wrap_btBoxShape_calculateSerializeBufferSize(SwigcptrBtBoxShape) int

func (_swig_base SwigcptrBtBoxShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btBoxShape_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btBoxShape_serialize(SwigcptrBtBoxShape, uintptr, uintptr) string

func (_swig_base SwigcptrBtBoxShape) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btBoxShape_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btBoxShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtBoxShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtBoxShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btBoxShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btBoxShape_localGetSupportVertexNonVirtual(SwigcptrBtBoxShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtBoxShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btBoxShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btBoxShape_getMarginNonVirtual(SwigcptrBtBoxShape) float32

func (_swig_base SwigcptrBtBoxShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btBoxShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btBoxShape_getAabbNonVirtual(SwigcptrBtBoxShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtBoxShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btBoxShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btBoxShape_project(SwigcptrBtBoxShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtBoxShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btBoxShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btBoxShape_getBoundingSphere(SwigcptrBtBoxShape, uintptr, *float32)

func (_swig_base SwigcptrBtBoxShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btBoxShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btBoxShape_getAngularMotionDisc(SwigcptrBtBoxShape) float32

func (_swig_base SwigcptrBtBoxShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btBoxShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btBoxShape_getContactBreakingThreshold(SwigcptrBtBoxShape, float32) float32

func (_swig_base SwigcptrBtBoxShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btBoxShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btBoxShape_calculateTemporalAabb(SwigcptrBtBoxShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtBoxShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btBoxShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btBoxShape_isPolyhedral(SwigcptrBtBoxShape) bool

func (_swig_base SwigcptrBtBoxShape) IsPolyhedral() bool {
	return _swig_wrap_btBoxShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btBoxShape_isConvex2d(SwigcptrBtBoxShape) bool

func (_swig_base SwigcptrBtBoxShape) IsConvex2d() bool {
	return _swig_wrap_btBoxShape_isConvex2d(_swig_base)
}

func _swig_wrap_btBoxShape_isConvex(SwigcptrBtBoxShape) bool

func (_swig_base SwigcptrBtBoxShape) IsConvex() bool {
	return _swig_wrap_btBoxShape_isConvex(_swig_base)
}

func _swig_wrap_btBoxShape_isNonMoving(SwigcptrBtBoxShape) bool

func (_swig_base SwigcptrBtBoxShape) IsNonMoving() bool {
	return _swig_wrap_btBoxShape_isNonMoving(_swig_base)
}

func _swig_wrap_btBoxShape_isConcave(SwigcptrBtBoxShape) bool

func (_swig_base SwigcptrBtBoxShape) IsConcave() bool {
	return _swig_wrap_btBoxShape_isConcave(_swig_base)
}

func _swig_wrap_btBoxShape_isCompound(SwigcptrBtBoxShape) bool

func (_swig_base SwigcptrBtBoxShape) IsCompound() bool {
	return _swig_wrap_btBoxShape_isCompound(_swig_base)
}

func _swig_wrap_btBoxShape_isSoftBody(SwigcptrBtBoxShape) bool

func (_swig_base SwigcptrBtBoxShape) IsSoftBody() bool {
	return _swig_wrap_btBoxShape_isSoftBody(_swig_base)
}

func _swig_wrap_btBoxShape_isInfinite(SwigcptrBtBoxShape) bool

func (_swig_base SwigcptrBtBoxShape) IsInfinite() bool {
	return _swig_wrap_btBoxShape_isInfinite(_swig_base)
}

func _swig_wrap_btBoxShape_getShapeType(SwigcptrBtBoxShape) int

func (_swig_base SwigcptrBtBoxShape) GetShapeType() int {
	return _swig_wrap_btBoxShape_getShapeType(_swig_base)
}

func _swig_wrap_btBoxShape_getAnisotropicRollingFrictionDirection(SwigcptrBtBoxShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtBoxShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btBoxShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btBoxShape_setUserPointer(SwigcptrBtBoxShape, uintptr)

func (_swig_base SwigcptrBtBoxShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btBoxShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btBoxShape_getUserPointer(SwigcptrBtBoxShape) uintptr

func (_swig_base SwigcptrBtBoxShape) GetUserPointer() uintptr {
	return _swig_wrap_btBoxShape_getUserPointer(_swig_base)
}

func _swig_wrap_btBoxShape_serializeSingleShape(SwigcptrBtBoxShape, uintptr)

func (_swig_base SwigcptrBtBoxShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btBoxShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtBoxShape) SwigIsBtPolyhedralConvexShape() {
}

func (p SwigcptrBtBoxShape) SwigGetBtPolyhedralConvexShape() BtPolyhedralConvexShape {
	return SwigcptrBtPolyhedralConvexShape(p.Swigcptr())
}

func (p SwigcptrBtBoxShape) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtBoxShape) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtBoxShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtBoxShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtBoxShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtBoxShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtBoxShape interface {
	Swigcptr() uintptr
	SwigIsBtBoxShape()
	GetHalfExtentsWithMargin() BtVector3
	GetHalfExtentsWithoutMargin() BtVector3
	LocalGetSupportingVertex(arg2 BtVector3) BtVector3
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	SetMargin(arg2 float32)
	SetLocalScaling(arg2 BtVector3)
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	GetPlane(arg2 BtVector3, arg3 BtVector3, arg4 int)
	GetNumPlanes() int
	GetNumVertices() int
	GetNumEdges() int
	GetVertex(arg2 int, arg3 BtVector3)
	GetPlaneEquation(arg2 BtVector4, arg3 int)
	GetEdge(arg2 int, arg3 BtVector3, arg4 BtVector3)
	IsInside(arg2 BtVector3, arg3 float32) bool
	GetName() string
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg2 int, arg3 BtVector3)
	InitializePolyhedralFeatures(a ...interface{}) bool
	GetConvexPolyhedron() BtConvexPolyhedron
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	GetMargin() float32
	GetMarginNV() float32
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtPolyhedralConvexShape()
	SwigGetBtPolyhedralConvexShape() BtPolyhedralConvexShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtSphereShape uintptr

func (p SwigcptrBtSphereShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSphereShape) SwigIsBtSphereShape() {
}

func _swig_wrap_new_btSphereShape(float32) SwigcptrBtSphereShape

func NewBtSphereShape(arg1 float32) BtSphereShape {
	return _swig_wrap_new_btSphereShape(arg1)
}

func _swig_wrap_btSphereShape_localGetSupportingVertex(SwigcptrBtSphereShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtSphereShape) LocalGetSupportingVertex(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btSphereShape_localGetSupportingVertex(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSphereShape_localGetSupportingVertexWithoutMargin(SwigcptrBtSphereShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtSphereShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btSphereShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSphereShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtSphereShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtSphereShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btSphereShape_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btSphereShape_calculateLocalInertia(SwigcptrBtSphereShape, float32, uintptr)

func (arg1 SwigcptrBtSphereShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btSphereShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btSphereShape_getAabb(SwigcptrBtSphereShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtSphereShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btSphereShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btSphereShape_getRadius(SwigcptrBtSphereShape) float32

func (arg1 SwigcptrBtSphereShape) GetRadius() float32 {
	return _swig_wrap_btSphereShape_getRadius(arg1)
}

func _swig_wrap_btSphereShape_setUnscaledRadius(SwigcptrBtSphereShape, float32)

func (arg1 SwigcptrBtSphereShape) SetUnscaledRadius(arg2 float32) {
	_swig_wrap_btSphereShape_setUnscaledRadius(arg1, arg2)
}

func _swig_wrap_btSphereShape_getName(SwigcptrBtSphereShape) string

func (arg1 SwigcptrBtSphereShape) GetName() string {
	return _swig_wrap_btSphereShape_getName(arg1)
}

func _swig_wrap_btSphereShape_setMargin(SwigcptrBtSphereShape, float32)

func (arg1 SwigcptrBtSphereShape) SetMargin(arg2 float32) {
	_swig_wrap_btSphereShape_setMargin(arg1, arg2)
}

func _swig_wrap_btSphereShape_getMargin(SwigcptrBtSphereShape) float32

func (arg1 SwigcptrBtSphereShape) GetMargin() float32 {
	return _swig_wrap_btSphereShape_getMargin(arg1)
}

func _swig_wrap_delete_btSphereShape(uintptr)

func DeleteBtSphereShape(arg1 BtSphereShape) {
	_swig_wrap_delete_btSphereShape(arg1.Swigcptr())
}

func _swig_wrap_btSphereShape_getImplicitShapeDimensions(SwigcptrBtSphereShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtSphereShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btSphereShape_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btSphereShape_setImplicitShapeDimensions(SwigcptrBtSphereShape, uintptr)

func (_swig_base SwigcptrBtSphereShape) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btSphereShape_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSphereShape_setSafeMargin__SWIG_0(SwigcptrBtSphereShape, float32, float32)

func (_swig_base SwigcptrBtSphereShape) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btSphereShape_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btSphereShape_setSafeMargin__SWIG_1(SwigcptrBtSphereShape, float32)

func (_swig_base SwigcptrBtSphereShape) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btSphereShape_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btSphereShape_setSafeMargin__SWIG_2(SwigcptrBtSphereShape, uintptr, float32)

func (_swig_base SwigcptrBtSphereShape) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btSphereShape_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btSphereShape_setSafeMargin__SWIG_3(SwigcptrBtSphereShape, uintptr)

func (_swig_base SwigcptrBtSphereShape) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btSphereShape_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtSphereShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSphereShape_getAabbSlow(SwigcptrBtSphereShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtSphereShape) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btSphereShape_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSphereShape_setLocalScaling(SwigcptrBtSphereShape, uintptr)

func (_swig_base SwigcptrBtSphereShape) SetLocalScaling(arg1 BtVector3) {
	_swig_wrap_btSphereShape_setLocalScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSphereShape_getLocalScaling(SwigcptrBtSphereShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtSphereShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btSphereShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btSphereShape_getLocalScalingNV(SwigcptrBtSphereShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtSphereShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btSphereShape_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btSphereShape_getMarginNV(SwigcptrBtSphereShape) float32

func (_swig_base SwigcptrBtSphereShape) GetMarginNV() float32 {
	return _swig_wrap_btSphereShape_getMarginNV(_swig_base)
}

func _swig_wrap_btSphereShape_getNumPreferredPenetrationDirections(SwigcptrBtSphereShape) int

func (_swig_base SwigcptrBtSphereShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btSphereShape_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btSphereShape_getPreferredPenetrationDirection(SwigcptrBtSphereShape, int, uintptr)

func (_swig_base SwigcptrBtSphereShape) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btSphereShape_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btSphereShape_calculateSerializeBufferSize(SwigcptrBtSphereShape) int

func (_swig_base SwigcptrBtSphereShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btSphereShape_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btSphereShape_serialize(SwigcptrBtSphereShape, uintptr, uintptr) string

func (_swig_base SwigcptrBtSphereShape) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btSphereShape_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btSphereShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtSphereShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtSphereShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btSphereShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSphereShape_localGetSupportVertexNonVirtual(SwigcptrBtSphereShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtSphereShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btSphereShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSphereShape_getMarginNonVirtual(SwigcptrBtSphereShape) float32

func (_swig_base SwigcptrBtSphereShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btSphereShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btSphereShape_getAabbNonVirtual(SwigcptrBtSphereShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtSphereShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btSphereShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSphereShape_project(SwigcptrBtSphereShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtSphereShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btSphereShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btSphereShape_getBoundingSphere(SwigcptrBtSphereShape, uintptr, *float32)

func (_swig_base SwigcptrBtSphereShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btSphereShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btSphereShape_getAngularMotionDisc(SwigcptrBtSphereShape) float32

func (_swig_base SwigcptrBtSphereShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btSphereShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btSphereShape_getContactBreakingThreshold(SwigcptrBtSphereShape, float32) float32

func (_swig_base SwigcptrBtSphereShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btSphereShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btSphereShape_calculateTemporalAabb(SwigcptrBtSphereShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtSphereShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btSphereShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btSphereShape_isPolyhedral(SwigcptrBtSphereShape) bool

func (_swig_base SwigcptrBtSphereShape) IsPolyhedral() bool {
	return _swig_wrap_btSphereShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btSphereShape_isConvex2d(SwigcptrBtSphereShape) bool

func (_swig_base SwigcptrBtSphereShape) IsConvex2d() bool {
	return _swig_wrap_btSphereShape_isConvex2d(_swig_base)
}

func _swig_wrap_btSphereShape_isConvex(SwigcptrBtSphereShape) bool

func (_swig_base SwigcptrBtSphereShape) IsConvex() bool {
	return _swig_wrap_btSphereShape_isConvex(_swig_base)
}

func _swig_wrap_btSphereShape_isNonMoving(SwigcptrBtSphereShape) bool

func (_swig_base SwigcptrBtSphereShape) IsNonMoving() bool {
	return _swig_wrap_btSphereShape_isNonMoving(_swig_base)
}

func _swig_wrap_btSphereShape_isConcave(SwigcptrBtSphereShape) bool

func (_swig_base SwigcptrBtSphereShape) IsConcave() bool {
	return _swig_wrap_btSphereShape_isConcave(_swig_base)
}

func _swig_wrap_btSphereShape_isCompound(SwigcptrBtSphereShape) bool

func (_swig_base SwigcptrBtSphereShape) IsCompound() bool {
	return _swig_wrap_btSphereShape_isCompound(_swig_base)
}

func _swig_wrap_btSphereShape_isSoftBody(SwigcptrBtSphereShape) bool

func (_swig_base SwigcptrBtSphereShape) IsSoftBody() bool {
	return _swig_wrap_btSphereShape_isSoftBody(_swig_base)
}

func _swig_wrap_btSphereShape_isInfinite(SwigcptrBtSphereShape) bool

func (_swig_base SwigcptrBtSphereShape) IsInfinite() bool {
	return _swig_wrap_btSphereShape_isInfinite(_swig_base)
}

func _swig_wrap_btSphereShape_getShapeType(SwigcptrBtSphereShape) int

func (_swig_base SwigcptrBtSphereShape) GetShapeType() int {
	return _swig_wrap_btSphereShape_getShapeType(_swig_base)
}

func _swig_wrap_btSphereShape_getAnisotropicRollingFrictionDirection(SwigcptrBtSphereShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtSphereShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btSphereShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btSphereShape_setUserPointer(SwigcptrBtSphereShape, uintptr)

func (_swig_base SwigcptrBtSphereShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btSphereShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btSphereShape_getUserPointer(SwigcptrBtSphereShape) uintptr

func (_swig_base SwigcptrBtSphereShape) GetUserPointer() uintptr {
	return _swig_wrap_btSphereShape_getUserPointer(_swig_base)
}

func _swig_wrap_btSphereShape_serializeSingleShape(SwigcptrBtSphereShape, uintptr)

func (_swig_base SwigcptrBtSphereShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btSphereShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtSphereShape) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtSphereShape) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtSphereShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtSphereShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtSphereShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtSphereShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtSphereShape interface {
	Swigcptr() uintptr
	SwigIsBtSphereShape()
	LocalGetSupportingVertex(arg2 BtVector3) BtVector3
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	GetRadius() float32
	SetUnscaledRadius(arg2 float32)
	GetName() string
	SetMargin(arg2 float32)
	GetMargin() float32
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	SetLocalScaling(arg1 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtCapsuleShape uintptr

func (p SwigcptrBtCapsuleShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCapsuleShape) SwigIsBtCapsuleShape() {
}

func _swig_wrap_new_btCapsuleShape__SWIG_1(float32, float32) SwigcptrBtCapsuleShape

func NewBtCapsuleShape__SWIG_1(arg1 float32, arg2 float32) BtCapsuleShape {
	return _swig_wrap_new_btCapsuleShape__SWIG_1(arg1, arg2)
}

func NewBtCapsuleShape(a ...interface{}) BtCapsuleShape {
	argc := len(a)
	if argc == 2 {
		return NewBtCapsuleShape__SWIG_1(a[0].(float32), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCapsuleShape_calculateLocalInertia(SwigcptrBtCapsuleShape, float32, uintptr)

func (arg1 SwigcptrBtCapsuleShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btCapsuleShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btCapsuleShape_localGetSupportingVertexWithoutMargin(SwigcptrBtCapsuleShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtCapsuleShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCapsuleShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtCapsuleShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtCapsuleShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btCapsuleShape_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btCapsuleShape_setMargin(SwigcptrBtCapsuleShape, float32)

func (arg1 SwigcptrBtCapsuleShape) SetMargin(arg2 float32) {
	_swig_wrap_btCapsuleShape_setMargin(arg1, arg2)
}

func _swig_wrap_btCapsuleShape_getAabb(SwigcptrBtCapsuleShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtCapsuleShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btCapsuleShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btCapsuleShape_getName(SwigcptrBtCapsuleShape) string

func (arg1 SwigcptrBtCapsuleShape) GetName() string {
	return _swig_wrap_btCapsuleShape_getName(arg1)
}

func _swig_wrap_btCapsuleShape_getUpAxis(SwigcptrBtCapsuleShape) int

func (arg1 SwigcptrBtCapsuleShape) GetUpAxis() int {
	return _swig_wrap_btCapsuleShape_getUpAxis(arg1)
}

func _swig_wrap_btCapsuleShape_getRadius(SwigcptrBtCapsuleShape) float32

func (arg1 SwigcptrBtCapsuleShape) GetRadius() float32 {
	return _swig_wrap_btCapsuleShape_getRadius(arg1)
}

func _swig_wrap_btCapsuleShape_getHalfHeight(SwigcptrBtCapsuleShape) float32

func (arg1 SwigcptrBtCapsuleShape) GetHalfHeight() float32 {
	return _swig_wrap_btCapsuleShape_getHalfHeight(arg1)
}

func _swig_wrap_btCapsuleShape_setLocalScaling(SwigcptrBtCapsuleShape, uintptr)

func (arg1 SwigcptrBtCapsuleShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btCapsuleShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCapsuleShape_getAnisotropicRollingFrictionDirection(SwigcptrBtCapsuleShape) SwigcptrBtVector3

func (arg1 SwigcptrBtCapsuleShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btCapsuleShape_getAnisotropicRollingFrictionDirection(arg1)
}

func _swig_wrap_btCapsuleShape_calculateSerializeBufferSize(SwigcptrBtCapsuleShape) int

func (arg1 SwigcptrBtCapsuleShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btCapsuleShape_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btCapsuleShape_serialize(SwigcptrBtCapsuleShape, uintptr, uintptr) string

func (arg1 SwigcptrBtCapsuleShape) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btCapsuleShape_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btCapsuleShape(uintptr)

func DeleteBtCapsuleShape(arg1 BtCapsuleShape) {
	_swig_wrap_delete_btCapsuleShape(arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShape_localGetSupportingVertex(SwigcptrBtCapsuleShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShape) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShape_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShape_getImplicitShapeDimensions(SwigcptrBtCapsuleShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btCapsuleShape_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btCapsuleShape_setImplicitShapeDimensions(SwigcptrBtCapsuleShape, uintptr)

func (_swig_base SwigcptrBtCapsuleShape) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btCapsuleShape_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShape_setSafeMargin__SWIG_0(SwigcptrBtCapsuleShape, float32, float32)

func (_swig_base SwigcptrBtCapsuleShape) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btCapsuleShape_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btCapsuleShape_setSafeMargin__SWIG_1(SwigcptrBtCapsuleShape, float32)

func (_swig_base SwigcptrBtCapsuleShape) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btCapsuleShape_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btCapsuleShape_setSafeMargin__SWIG_2(SwigcptrBtCapsuleShape, uintptr, float32)

func (_swig_base SwigcptrBtCapsuleShape) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btCapsuleShape_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCapsuleShape_setSafeMargin__SWIG_3(SwigcptrBtCapsuleShape, uintptr)

func (_swig_base SwigcptrBtCapsuleShape) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btCapsuleShape_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCapsuleShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCapsuleShape_getAabbSlow(SwigcptrBtCapsuleShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCapsuleShape) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCapsuleShape_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCapsuleShape_getLocalScaling(SwigcptrBtCapsuleShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btCapsuleShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btCapsuleShape_getLocalScalingNV(SwigcptrBtCapsuleShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btCapsuleShape_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btCapsuleShape_getMargin(SwigcptrBtCapsuleShape) float32

func (_swig_base SwigcptrBtCapsuleShape) GetMargin() float32 {
	return _swig_wrap_btCapsuleShape_getMargin(_swig_base)
}

func _swig_wrap_btCapsuleShape_getMarginNV(SwigcptrBtCapsuleShape) float32

func (_swig_base SwigcptrBtCapsuleShape) GetMarginNV() float32 {
	return _swig_wrap_btCapsuleShape_getMarginNV(_swig_base)
}

func _swig_wrap_btCapsuleShape_getNumPreferredPenetrationDirections(SwigcptrBtCapsuleShape) int

func (_swig_base SwigcptrBtCapsuleShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btCapsuleShape_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btCapsuleShape_getPreferredPenetrationDirection(SwigcptrBtCapsuleShape, int, uintptr)

func (_swig_base SwigcptrBtCapsuleShape) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btCapsuleShape_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCapsuleShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtCapsuleShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShape_localGetSupportVertexNonVirtual(SwigcptrBtCapsuleShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShape_getMarginNonVirtual(SwigcptrBtCapsuleShape) float32

func (_swig_base SwigcptrBtCapsuleShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btCapsuleShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btCapsuleShape_getAabbNonVirtual(SwigcptrBtCapsuleShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCapsuleShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCapsuleShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCapsuleShape_project(SwigcptrBtCapsuleShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtCapsuleShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btCapsuleShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btCapsuleShape_getBoundingSphere(SwigcptrBtCapsuleShape, uintptr, *float32)

func (_swig_base SwigcptrBtCapsuleShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btCapsuleShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCapsuleShape_getAngularMotionDisc(SwigcptrBtCapsuleShape) float32

func (_swig_base SwigcptrBtCapsuleShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btCapsuleShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btCapsuleShape_getContactBreakingThreshold(SwigcptrBtCapsuleShape, float32) float32

func (_swig_base SwigcptrBtCapsuleShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btCapsuleShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btCapsuleShape_calculateTemporalAabb(SwigcptrBtCapsuleShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtCapsuleShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btCapsuleShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btCapsuleShape_isPolyhedral(SwigcptrBtCapsuleShape) bool

func (_swig_base SwigcptrBtCapsuleShape) IsPolyhedral() bool {
	return _swig_wrap_btCapsuleShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btCapsuleShape_isConvex2d(SwigcptrBtCapsuleShape) bool

func (_swig_base SwigcptrBtCapsuleShape) IsConvex2d() bool {
	return _swig_wrap_btCapsuleShape_isConvex2d(_swig_base)
}

func _swig_wrap_btCapsuleShape_isConvex(SwigcptrBtCapsuleShape) bool

func (_swig_base SwigcptrBtCapsuleShape) IsConvex() bool {
	return _swig_wrap_btCapsuleShape_isConvex(_swig_base)
}

func _swig_wrap_btCapsuleShape_isNonMoving(SwigcptrBtCapsuleShape) bool

func (_swig_base SwigcptrBtCapsuleShape) IsNonMoving() bool {
	return _swig_wrap_btCapsuleShape_isNonMoving(_swig_base)
}

func _swig_wrap_btCapsuleShape_isConcave(SwigcptrBtCapsuleShape) bool

func (_swig_base SwigcptrBtCapsuleShape) IsConcave() bool {
	return _swig_wrap_btCapsuleShape_isConcave(_swig_base)
}

func _swig_wrap_btCapsuleShape_isCompound(SwigcptrBtCapsuleShape) bool

func (_swig_base SwigcptrBtCapsuleShape) IsCompound() bool {
	return _swig_wrap_btCapsuleShape_isCompound(_swig_base)
}

func _swig_wrap_btCapsuleShape_isSoftBody(SwigcptrBtCapsuleShape) bool

func (_swig_base SwigcptrBtCapsuleShape) IsSoftBody() bool {
	return _swig_wrap_btCapsuleShape_isSoftBody(_swig_base)
}

func _swig_wrap_btCapsuleShape_isInfinite(SwigcptrBtCapsuleShape) bool

func (_swig_base SwigcptrBtCapsuleShape) IsInfinite() bool {
	return _swig_wrap_btCapsuleShape_isInfinite(_swig_base)
}

func _swig_wrap_btCapsuleShape_getShapeType(SwigcptrBtCapsuleShape) int

func (_swig_base SwigcptrBtCapsuleShape) GetShapeType() int {
	return _swig_wrap_btCapsuleShape_getShapeType(_swig_base)
}

func _swig_wrap_btCapsuleShape_setUserPointer(SwigcptrBtCapsuleShape, uintptr)

func (_swig_base SwigcptrBtCapsuleShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btCapsuleShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btCapsuleShape_getUserPointer(SwigcptrBtCapsuleShape) uintptr

func (_swig_base SwigcptrBtCapsuleShape) GetUserPointer() uintptr {
	return _swig_wrap_btCapsuleShape_getUserPointer(_swig_base)
}

func _swig_wrap_btCapsuleShape_serializeSingleShape(SwigcptrBtCapsuleShape, uintptr)

func (_swig_base SwigcptrBtCapsuleShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btCapsuleShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCapsuleShape) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtCapsuleShape) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtCapsuleShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtCapsuleShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtCapsuleShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtCapsuleShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtCapsuleShape interface {
	Swigcptr() uintptr
	SwigIsBtCapsuleShape()
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	SetMargin(arg2 float32)
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	GetName() string
	GetUpAxis() int
	GetRadius() float32
	GetHalfHeight() float32
	SetLocalScaling(arg2 BtVector3)
	GetAnisotropicRollingFrictionDirection() BtVector3
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtCapsuleShapeX uintptr

func (p SwigcptrBtCapsuleShapeX) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCapsuleShapeX) SwigIsBtCapsuleShapeX() {
}

func _swig_wrap_new_btCapsuleShapeX(float32, float32) SwigcptrBtCapsuleShapeX

func NewBtCapsuleShapeX(arg1 float32, arg2 float32) BtCapsuleShapeX {
	return _swig_wrap_new_btCapsuleShapeX(arg1, arg2)
}

func _swig_wrap_btCapsuleShapeX_getName(SwigcptrBtCapsuleShapeX) string

func (arg1 SwigcptrBtCapsuleShapeX) GetName() string {
	return _swig_wrap_btCapsuleShapeX_getName(arg1)
}

func _swig_wrap_delete_btCapsuleShapeX(uintptr)

func DeleteBtCapsuleShapeX(arg1 BtCapsuleShapeX) {
	_swig_wrap_delete_btCapsuleShapeX(arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_calculateLocalInertia(SwigcptrBtCapsuleShapeX, float32, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeX) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btCapsuleShapeX_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_localGetSupportingVertexWithoutMargin(SwigcptrBtCapsuleShapeX, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeX) LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShapeX_localGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtCapsuleShapeX, uintptr, uintptr, int)

func (_swig_base SwigcptrBtCapsuleShapeX) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int) {
	_swig_wrap_btCapsuleShapeX_batchedUnitVectorGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btCapsuleShapeX_setMargin(SwigcptrBtCapsuleShapeX, float32)

func (_swig_base SwigcptrBtCapsuleShapeX) SetMargin(arg1 float32) {
	_swig_wrap_btCapsuleShapeX_setMargin(_swig_base, arg1)
}

func _swig_wrap_btCapsuleShapeX_getAabb(SwigcptrBtCapsuleShapeX, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeX) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCapsuleShapeX_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_getUpAxis(SwigcptrBtCapsuleShapeX) int

func (_swig_base SwigcptrBtCapsuleShapeX) GetUpAxis() int {
	return _swig_wrap_btCapsuleShapeX_getUpAxis(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_getRadius(SwigcptrBtCapsuleShapeX) float32

func (_swig_base SwigcptrBtCapsuleShapeX) GetRadius() float32 {
	return _swig_wrap_btCapsuleShapeX_getRadius(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_getHalfHeight(SwigcptrBtCapsuleShapeX) float32

func (_swig_base SwigcptrBtCapsuleShapeX) GetHalfHeight() float32 {
	return _swig_wrap_btCapsuleShapeX_getHalfHeight(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_setLocalScaling(SwigcptrBtCapsuleShapeX, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeX) SetLocalScaling(arg1 BtVector3) {
	_swig_wrap_btCapsuleShapeX_setLocalScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_getAnisotropicRollingFrictionDirection(SwigcptrBtCapsuleShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeX) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btCapsuleShapeX_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_calculateSerializeBufferSize(SwigcptrBtCapsuleShapeX) int

func (_swig_base SwigcptrBtCapsuleShapeX) CalculateSerializeBufferSize() int {
	return _swig_wrap_btCapsuleShapeX_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_serialize(SwigcptrBtCapsuleShapeX, uintptr, uintptr) string

func (_swig_base SwigcptrBtCapsuleShapeX) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btCapsuleShapeX_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_localGetSupportingVertex(SwigcptrBtCapsuleShapeX, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeX) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShapeX_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_getImplicitShapeDimensions(SwigcptrBtCapsuleShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeX) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btCapsuleShapeX_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_setImplicitShapeDimensions(SwigcptrBtCapsuleShapeX, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeX) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btCapsuleShapeX_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_setSafeMargin__SWIG_0(SwigcptrBtCapsuleShapeX, float32, float32)

func (_swig_base SwigcptrBtCapsuleShapeX) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btCapsuleShapeX_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btCapsuleShapeX_setSafeMargin__SWIG_1(SwigcptrBtCapsuleShapeX, float32)

func (_swig_base SwigcptrBtCapsuleShapeX) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btCapsuleShapeX_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btCapsuleShapeX_setSafeMargin__SWIG_2(SwigcptrBtCapsuleShapeX, uintptr, float32)

func (_swig_base SwigcptrBtCapsuleShapeX) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btCapsuleShapeX_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCapsuleShapeX_setSafeMargin__SWIG_3(SwigcptrBtCapsuleShapeX, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeX) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btCapsuleShapeX_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCapsuleShapeX) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCapsuleShapeX_getAabbSlow(SwigcptrBtCapsuleShapeX, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeX) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCapsuleShapeX_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_getLocalScaling(SwigcptrBtCapsuleShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeX) GetLocalScaling() BtVector3 {
	return _swig_wrap_btCapsuleShapeX_getLocalScaling(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_getLocalScalingNV(SwigcptrBtCapsuleShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeX) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btCapsuleShapeX_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_getMargin(SwigcptrBtCapsuleShapeX) float32

func (_swig_base SwigcptrBtCapsuleShapeX) GetMargin() float32 {
	return _swig_wrap_btCapsuleShapeX_getMargin(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_getMarginNV(SwigcptrBtCapsuleShapeX) float32

func (_swig_base SwigcptrBtCapsuleShapeX) GetMarginNV() float32 {
	return _swig_wrap_btCapsuleShapeX_getMarginNV(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_getNumPreferredPenetrationDirections(SwigcptrBtCapsuleShapeX) int

func (_swig_base SwigcptrBtCapsuleShapeX) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btCapsuleShapeX_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_getPreferredPenetrationDirection(SwigcptrBtCapsuleShapeX, int, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeX) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btCapsuleShapeX_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtCapsuleShapeX, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeX) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShapeX_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_localGetSupportVertexNonVirtual(SwigcptrBtCapsuleShapeX, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeX) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShapeX_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_getMarginNonVirtual(SwigcptrBtCapsuleShapeX) float32

func (_swig_base SwigcptrBtCapsuleShapeX) GetMarginNonVirtual() float32 {
	return _swig_wrap_btCapsuleShapeX_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_getAabbNonVirtual(SwigcptrBtCapsuleShapeX, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeX) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCapsuleShapeX_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_project(SwigcptrBtCapsuleShapeX, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtCapsuleShapeX) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btCapsuleShapeX_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btCapsuleShapeX_getBoundingSphere(SwigcptrBtCapsuleShapeX, uintptr, *float32)

func (_swig_base SwigcptrBtCapsuleShapeX) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btCapsuleShapeX_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCapsuleShapeX_getAngularMotionDisc(SwigcptrBtCapsuleShapeX) float32

func (_swig_base SwigcptrBtCapsuleShapeX) GetAngularMotionDisc() float32 {
	return _swig_wrap_btCapsuleShapeX_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_getContactBreakingThreshold(SwigcptrBtCapsuleShapeX, float32) float32

func (_swig_base SwigcptrBtCapsuleShapeX) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btCapsuleShapeX_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btCapsuleShapeX_calculateTemporalAabb(SwigcptrBtCapsuleShapeX, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeX) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btCapsuleShapeX_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btCapsuleShapeX_isPolyhedral(SwigcptrBtCapsuleShapeX) bool

func (_swig_base SwigcptrBtCapsuleShapeX) IsPolyhedral() bool {
	return _swig_wrap_btCapsuleShapeX_isPolyhedral(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_isConvex2d(SwigcptrBtCapsuleShapeX) bool

func (_swig_base SwigcptrBtCapsuleShapeX) IsConvex2d() bool {
	return _swig_wrap_btCapsuleShapeX_isConvex2d(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_isConvex(SwigcptrBtCapsuleShapeX) bool

func (_swig_base SwigcptrBtCapsuleShapeX) IsConvex() bool {
	return _swig_wrap_btCapsuleShapeX_isConvex(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_isNonMoving(SwigcptrBtCapsuleShapeX) bool

func (_swig_base SwigcptrBtCapsuleShapeX) IsNonMoving() bool {
	return _swig_wrap_btCapsuleShapeX_isNonMoving(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_isConcave(SwigcptrBtCapsuleShapeX) bool

func (_swig_base SwigcptrBtCapsuleShapeX) IsConcave() bool {
	return _swig_wrap_btCapsuleShapeX_isConcave(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_isCompound(SwigcptrBtCapsuleShapeX) bool

func (_swig_base SwigcptrBtCapsuleShapeX) IsCompound() bool {
	return _swig_wrap_btCapsuleShapeX_isCompound(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_isSoftBody(SwigcptrBtCapsuleShapeX) bool

func (_swig_base SwigcptrBtCapsuleShapeX) IsSoftBody() bool {
	return _swig_wrap_btCapsuleShapeX_isSoftBody(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_isInfinite(SwigcptrBtCapsuleShapeX) bool

func (_swig_base SwigcptrBtCapsuleShapeX) IsInfinite() bool {
	return _swig_wrap_btCapsuleShapeX_isInfinite(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_getShapeType(SwigcptrBtCapsuleShapeX) int

func (_swig_base SwigcptrBtCapsuleShapeX) GetShapeType() int {
	return _swig_wrap_btCapsuleShapeX_getShapeType(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_setUserPointer(SwigcptrBtCapsuleShapeX, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeX) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btCapsuleShapeX_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btCapsuleShapeX_getUserPointer(SwigcptrBtCapsuleShapeX) uintptr

func (_swig_base SwigcptrBtCapsuleShapeX) GetUserPointer() uintptr {
	return _swig_wrap_btCapsuleShapeX_getUserPointer(_swig_base)
}

func _swig_wrap_btCapsuleShapeX_serializeSingleShape(SwigcptrBtCapsuleShapeX, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeX) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btCapsuleShapeX_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCapsuleShapeX) SwigIsBtCapsuleShape() {
}

func (p SwigcptrBtCapsuleShapeX) SwigGetBtCapsuleShape() BtCapsuleShape {
	return SwigcptrBtCapsuleShape(p.Swigcptr())
}

func (p SwigcptrBtCapsuleShapeX) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtCapsuleShapeX) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtCapsuleShapeX) SwigIsBtConvexShape() {
}

func (p SwigcptrBtCapsuleShapeX) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtCapsuleShapeX) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtCapsuleShapeX) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtCapsuleShapeX interface {
	Swigcptr() uintptr
	SwigIsBtCapsuleShapeX()
	GetName() string
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int)
	SetMargin(arg1 float32)
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetUpAxis() int
	GetRadius() float32
	GetHalfHeight() float32
	SetLocalScaling(arg1 BtVector3)
	GetAnisotropicRollingFrictionDirection() BtVector3
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtCapsuleShape()
	SwigGetBtCapsuleShape() BtCapsuleShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtCapsuleShapeZ uintptr

func (p SwigcptrBtCapsuleShapeZ) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCapsuleShapeZ) SwigIsBtCapsuleShapeZ() {
}

func _swig_wrap_new_btCapsuleShapeZ(float32, float32) SwigcptrBtCapsuleShapeZ

func NewBtCapsuleShapeZ(arg1 float32, arg2 float32) BtCapsuleShapeZ {
	return _swig_wrap_new_btCapsuleShapeZ(arg1, arg2)
}

func _swig_wrap_btCapsuleShapeZ_getName(SwigcptrBtCapsuleShapeZ) string

func (arg1 SwigcptrBtCapsuleShapeZ) GetName() string {
	return _swig_wrap_btCapsuleShapeZ_getName(arg1)
}

func _swig_wrap_delete_btCapsuleShapeZ(uintptr)

func DeleteBtCapsuleShapeZ(arg1 BtCapsuleShapeZ) {
	_swig_wrap_delete_btCapsuleShapeZ(arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_calculateLocalInertia(SwigcptrBtCapsuleShapeZ, float32, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeZ) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btCapsuleShapeZ_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_localGetSupportingVertexWithoutMargin(SwigcptrBtCapsuleShapeZ, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeZ) LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShapeZ_localGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtCapsuleShapeZ, uintptr, uintptr, int)

func (_swig_base SwigcptrBtCapsuleShapeZ) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int) {
	_swig_wrap_btCapsuleShapeZ_batchedUnitVectorGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btCapsuleShapeZ_setMargin(SwigcptrBtCapsuleShapeZ, float32)

func (_swig_base SwigcptrBtCapsuleShapeZ) SetMargin(arg1 float32) {
	_swig_wrap_btCapsuleShapeZ_setMargin(_swig_base, arg1)
}

func _swig_wrap_btCapsuleShapeZ_getAabb(SwigcptrBtCapsuleShapeZ, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeZ) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCapsuleShapeZ_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_getUpAxis(SwigcptrBtCapsuleShapeZ) int

func (_swig_base SwigcptrBtCapsuleShapeZ) GetUpAxis() int {
	return _swig_wrap_btCapsuleShapeZ_getUpAxis(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_getRadius(SwigcptrBtCapsuleShapeZ) float32

func (_swig_base SwigcptrBtCapsuleShapeZ) GetRadius() float32 {
	return _swig_wrap_btCapsuleShapeZ_getRadius(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_getHalfHeight(SwigcptrBtCapsuleShapeZ) float32

func (_swig_base SwigcptrBtCapsuleShapeZ) GetHalfHeight() float32 {
	return _swig_wrap_btCapsuleShapeZ_getHalfHeight(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_setLocalScaling(SwigcptrBtCapsuleShapeZ, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeZ) SetLocalScaling(arg1 BtVector3) {
	_swig_wrap_btCapsuleShapeZ_setLocalScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_getAnisotropicRollingFrictionDirection(SwigcptrBtCapsuleShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeZ) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btCapsuleShapeZ_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_calculateSerializeBufferSize(SwigcptrBtCapsuleShapeZ) int

func (_swig_base SwigcptrBtCapsuleShapeZ) CalculateSerializeBufferSize() int {
	return _swig_wrap_btCapsuleShapeZ_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_serialize(SwigcptrBtCapsuleShapeZ, uintptr, uintptr) string

func (_swig_base SwigcptrBtCapsuleShapeZ) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btCapsuleShapeZ_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_localGetSupportingVertex(SwigcptrBtCapsuleShapeZ, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeZ) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShapeZ_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_getImplicitShapeDimensions(SwigcptrBtCapsuleShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeZ) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btCapsuleShapeZ_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_setImplicitShapeDimensions(SwigcptrBtCapsuleShapeZ, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeZ) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btCapsuleShapeZ_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_setSafeMargin__SWIG_0(SwigcptrBtCapsuleShapeZ, float32, float32)

func (_swig_base SwigcptrBtCapsuleShapeZ) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btCapsuleShapeZ_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btCapsuleShapeZ_setSafeMargin__SWIG_1(SwigcptrBtCapsuleShapeZ, float32)

func (_swig_base SwigcptrBtCapsuleShapeZ) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btCapsuleShapeZ_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btCapsuleShapeZ_setSafeMargin__SWIG_2(SwigcptrBtCapsuleShapeZ, uintptr, float32)

func (_swig_base SwigcptrBtCapsuleShapeZ) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btCapsuleShapeZ_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCapsuleShapeZ_setSafeMargin__SWIG_3(SwigcptrBtCapsuleShapeZ, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeZ) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btCapsuleShapeZ_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCapsuleShapeZ) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCapsuleShapeZ_getAabbSlow(SwigcptrBtCapsuleShapeZ, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeZ) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCapsuleShapeZ_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_getLocalScaling(SwigcptrBtCapsuleShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeZ) GetLocalScaling() BtVector3 {
	return _swig_wrap_btCapsuleShapeZ_getLocalScaling(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_getLocalScalingNV(SwigcptrBtCapsuleShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeZ) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btCapsuleShapeZ_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_getMargin(SwigcptrBtCapsuleShapeZ) float32

func (_swig_base SwigcptrBtCapsuleShapeZ) GetMargin() float32 {
	return _swig_wrap_btCapsuleShapeZ_getMargin(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_getMarginNV(SwigcptrBtCapsuleShapeZ) float32

func (_swig_base SwigcptrBtCapsuleShapeZ) GetMarginNV() float32 {
	return _swig_wrap_btCapsuleShapeZ_getMarginNV(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_getNumPreferredPenetrationDirections(SwigcptrBtCapsuleShapeZ) int

func (_swig_base SwigcptrBtCapsuleShapeZ) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btCapsuleShapeZ_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_getPreferredPenetrationDirection(SwigcptrBtCapsuleShapeZ, int, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeZ) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btCapsuleShapeZ_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtCapsuleShapeZ, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeZ) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShapeZ_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_localGetSupportVertexNonVirtual(SwigcptrBtCapsuleShapeZ, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCapsuleShapeZ) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCapsuleShapeZ_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_getMarginNonVirtual(SwigcptrBtCapsuleShapeZ) float32

func (_swig_base SwigcptrBtCapsuleShapeZ) GetMarginNonVirtual() float32 {
	return _swig_wrap_btCapsuleShapeZ_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_getAabbNonVirtual(SwigcptrBtCapsuleShapeZ, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeZ) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCapsuleShapeZ_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_project(SwigcptrBtCapsuleShapeZ, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtCapsuleShapeZ) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btCapsuleShapeZ_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btCapsuleShapeZ_getBoundingSphere(SwigcptrBtCapsuleShapeZ, uintptr, *float32)

func (_swig_base SwigcptrBtCapsuleShapeZ) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btCapsuleShapeZ_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCapsuleShapeZ_getAngularMotionDisc(SwigcptrBtCapsuleShapeZ) float32

func (_swig_base SwigcptrBtCapsuleShapeZ) GetAngularMotionDisc() float32 {
	return _swig_wrap_btCapsuleShapeZ_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_getContactBreakingThreshold(SwigcptrBtCapsuleShapeZ, float32) float32

func (_swig_base SwigcptrBtCapsuleShapeZ) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btCapsuleShapeZ_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btCapsuleShapeZ_calculateTemporalAabb(SwigcptrBtCapsuleShapeZ, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeZ) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btCapsuleShapeZ_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btCapsuleShapeZ_isPolyhedral(SwigcptrBtCapsuleShapeZ) bool

func (_swig_base SwigcptrBtCapsuleShapeZ) IsPolyhedral() bool {
	return _swig_wrap_btCapsuleShapeZ_isPolyhedral(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_isConvex2d(SwigcptrBtCapsuleShapeZ) bool

func (_swig_base SwigcptrBtCapsuleShapeZ) IsConvex2d() bool {
	return _swig_wrap_btCapsuleShapeZ_isConvex2d(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_isConvex(SwigcptrBtCapsuleShapeZ) bool

func (_swig_base SwigcptrBtCapsuleShapeZ) IsConvex() bool {
	return _swig_wrap_btCapsuleShapeZ_isConvex(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_isNonMoving(SwigcptrBtCapsuleShapeZ) bool

func (_swig_base SwigcptrBtCapsuleShapeZ) IsNonMoving() bool {
	return _swig_wrap_btCapsuleShapeZ_isNonMoving(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_isConcave(SwigcptrBtCapsuleShapeZ) bool

func (_swig_base SwigcptrBtCapsuleShapeZ) IsConcave() bool {
	return _swig_wrap_btCapsuleShapeZ_isConcave(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_isCompound(SwigcptrBtCapsuleShapeZ) bool

func (_swig_base SwigcptrBtCapsuleShapeZ) IsCompound() bool {
	return _swig_wrap_btCapsuleShapeZ_isCompound(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_isSoftBody(SwigcptrBtCapsuleShapeZ) bool

func (_swig_base SwigcptrBtCapsuleShapeZ) IsSoftBody() bool {
	return _swig_wrap_btCapsuleShapeZ_isSoftBody(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_isInfinite(SwigcptrBtCapsuleShapeZ) bool

func (_swig_base SwigcptrBtCapsuleShapeZ) IsInfinite() bool {
	return _swig_wrap_btCapsuleShapeZ_isInfinite(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_getShapeType(SwigcptrBtCapsuleShapeZ) int

func (_swig_base SwigcptrBtCapsuleShapeZ) GetShapeType() int {
	return _swig_wrap_btCapsuleShapeZ_getShapeType(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_setUserPointer(SwigcptrBtCapsuleShapeZ, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeZ) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btCapsuleShapeZ_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btCapsuleShapeZ_getUserPointer(SwigcptrBtCapsuleShapeZ) uintptr

func (_swig_base SwigcptrBtCapsuleShapeZ) GetUserPointer() uintptr {
	return _swig_wrap_btCapsuleShapeZ_getUserPointer(_swig_base)
}

func _swig_wrap_btCapsuleShapeZ_serializeSingleShape(SwigcptrBtCapsuleShapeZ, uintptr)

func (_swig_base SwigcptrBtCapsuleShapeZ) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btCapsuleShapeZ_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCapsuleShapeZ) SwigIsBtCapsuleShape() {
}

func (p SwigcptrBtCapsuleShapeZ) SwigGetBtCapsuleShape() BtCapsuleShape {
	return SwigcptrBtCapsuleShape(p.Swigcptr())
}

func (p SwigcptrBtCapsuleShapeZ) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtCapsuleShapeZ) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtCapsuleShapeZ) SwigIsBtConvexShape() {
}

func (p SwigcptrBtCapsuleShapeZ) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtCapsuleShapeZ) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtCapsuleShapeZ) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtCapsuleShapeZ interface {
	Swigcptr() uintptr
	SwigIsBtCapsuleShapeZ()
	GetName() string
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int)
	SetMargin(arg1 float32)
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetUpAxis() int
	GetRadius() float32
	GetHalfHeight() float32
	SetLocalScaling(arg1 BtVector3)
	GetAnisotropicRollingFrictionDirection() BtVector3
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtCapsuleShape()
	SwigGetBtCapsuleShape() BtCapsuleShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtCapsuleShapeData uintptr

func (p SwigcptrBtCapsuleShapeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCapsuleShapeData) SwigIsBtCapsuleShapeData() {
}

func _swig_wrap_btCapsuleShapeData_m_convexInternalShapeData_set(SwigcptrBtCapsuleShapeData, uintptr)

func (arg1 SwigcptrBtCapsuleShapeData) SetM_convexInternalShapeData(arg2 BtConvexInternalShapeData) {
	_swig_wrap_btCapsuleShapeData_m_convexInternalShapeData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCapsuleShapeData_m_convexInternalShapeData_get(SwigcptrBtCapsuleShapeData) SwigcptrBtConvexInternalShapeData

func (arg1 SwigcptrBtCapsuleShapeData) GetM_convexInternalShapeData() BtConvexInternalShapeData {
	return _swig_wrap_btCapsuleShapeData_m_convexInternalShapeData_get(arg1)
}

func _swig_wrap_btCapsuleShapeData_m_upAxis_set(SwigcptrBtCapsuleShapeData, int)

func (arg1 SwigcptrBtCapsuleShapeData) SetM_upAxis(arg2 int) {
	_swig_wrap_btCapsuleShapeData_m_upAxis_set(arg1, arg2)
}

func _swig_wrap_btCapsuleShapeData_m_upAxis_get(SwigcptrBtCapsuleShapeData) int

func (arg1 SwigcptrBtCapsuleShapeData) GetM_upAxis() int {
	return _swig_wrap_btCapsuleShapeData_m_upAxis_get(arg1)
}

func _swig_wrap_btCapsuleShapeData_m_padding_set(SwigcptrBtCapsuleShapeData, string)

func (arg1 SwigcptrBtCapsuleShapeData) SetM_padding(arg2 string) {
	_swig_wrap_btCapsuleShapeData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btCapsuleShapeData_m_padding_get(SwigcptrBtCapsuleShapeData) string

func (arg1 SwigcptrBtCapsuleShapeData) GetM_padding() string {
	return _swig_wrap_btCapsuleShapeData_m_padding_get(arg1)
}

func _swig_wrap_new_btCapsuleShapeData() SwigcptrBtCapsuleShapeData

func NewBtCapsuleShapeData() BtCapsuleShapeData {
	return _swig_wrap_new_btCapsuleShapeData()
}

func _swig_wrap_delete_btCapsuleShapeData(uintptr)

func DeleteBtCapsuleShapeData(arg1 BtCapsuleShapeData) {
	_swig_wrap_delete_btCapsuleShapeData(arg1.Swigcptr())
}

type BtCapsuleShapeData interface {
	Swigcptr() uintptr
	SwigIsBtCapsuleShapeData()
	SetM_convexInternalShapeData(arg2 BtConvexInternalShapeData)
	GetM_convexInternalShapeData() BtConvexInternalShapeData
	SetM_upAxis(arg2 int)
	GetM_upAxis() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtCylinderShape uintptr

func (p SwigcptrBtCylinderShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCylinderShape) SwigIsBtCylinderShape() {
}

func _swig_wrap_btCylinderShape_getHalfExtentsWithMargin(SwigcptrBtCylinderShape) SwigcptrBtVector3

func (arg1 SwigcptrBtCylinderShape) GetHalfExtentsWithMargin() BtVector3 {
	return _swig_wrap_btCylinderShape_getHalfExtentsWithMargin(arg1)
}

func _swig_wrap_btCylinderShape_getHalfExtentsWithoutMargin(SwigcptrBtCylinderShape) SwigcptrBtVector3

func (arg1 SwigcptrBtCylinderShape) GetHalfExtentsWithoutMargin() BtVector3 {
	return _swig_wrap_btCylinderShape_getHalfExtentsWithoutMargin(arg1)
}

func _swig_wrap_new_btCylinderShape(uintptr) SwigcptrBtCylinderShape

func NewBtCylinderShape(arg1 BtVector3) BtCylinderShape {
	return _swig_wrap_new_btCylinderShape(arg1.Swigcptr())
}

func _swig_wrap_btCylinderShape_getAabb(SwigcptrBtCylinderShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtCylinderShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btCylinderShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btCylinderShape_calculateLocalInertia(SwigcptrBtCylinderShape, float32, uintptr)

func (arg1 SwigcptrBtCylinderShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btCylinderShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btCylinderShape_localGetSupportingVertexWithoutMargin(SwigcptrBtCylinderShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtCylinderShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtCylinderShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtCylinderShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btCylinderShape_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btCylinderShape_setMargin(SwigcptrBtCylinderShape, float32)

func (arg1 SwigcptrBtCylinderShape) SetMargin(arg2 float32) {
	_swig_wrap_btCylinderShape_setMargin(arg1, arg2)
}

func _swig_wrap_btCylinderShape_localGetSupportingVertex(SwigcptrBtCylinderShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtCylinderShape) LocalGetSupportingVertex(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShape_localGetSupportingVertex(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShape_getUpAxis(SwigcptrBtCylinderShape) int

func (arg1 SwigcptrBtCylinderShape) GetUpAxis() int {
	return _swig_wrap_btCylinderShape_getUpAxis(arg1)
}

func _swig_wrap_btCylinderShape_getAnisotropicRollingFrictionDirection(SwigcptrBtCylinderShape) SwigcptrBtVector3

func (arg1 SwigcptrBtCylinderShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btCylinderShape_getAnisotropicRollingFrictionDirection(arg1)
}

func _swig_wrap_btCylinderShape_getRadius(SwigcptrBtCylinderShape) float32

func (arg1 SwigcptrBtCylinderShape) GetRadius() float32 {
	return _swig_wrap_btCylinderShape_getRadius(arg1)
}

func _swig_wrap_btCylinderShape_setLocalScaling(SwigcptrBtCylinderShape, uintptr)

func (arg1 SwigcptrBtCylinderShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btCylinderShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShape_getName(SwigcptrBtCylinderShape) string

func (arg1 SwigcptrBtCylinderShape) GetName() string {
	return _swig_wrap_btCylinderShape_getName(arg1)
}

func _swig_wrap_btCylinderShape_calculateSerializeBufferSize(SwigcptrBtCylinderShape) int

func (arg1 SwigcptrBtCylinderShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btCylinderShape_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btCylinderShape_serialize(SwigcptrBtCylinderShape, uintptr, uintptr) string

func (arg1 SwigcptrBtCylinderShape) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btCylinderShape_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btCylinderShape(uintptr)

func DeleteBtCylinderShape(arg1 BtCylinderShape) {
	_swig_wrap_delete_btCylinderShape(arg1.Swigcptr())
}

func _swig_wrap_btCylinderShape_getImplicitShapeDimensions(SwigcptrBtCylinderShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btCylinderShape_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btCylinderShape_setImplicitShapeDimensions(SwigcptrBtCylinderShape, uintptr)

func (_swig_base SwigcptrBtCylinderShape) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btCylinderShape_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShape_setSafeMargin__SWIG_0(SwigcptrBtCylinderShape, float32, float32)

func (_swig_base SwigcptrBtCylinderShape) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btCylinderShape_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btCylinderShape_setSafeMargin__SWIG_1(SwigcptrBtCylinderShape, float32)

func (_swig_base SwigcptrBtCylinderShape) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btCylinderShape_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btCylinderShape_setSafeMargin__SWIG_2(SwigcptrBtCylinderShape, uintptr, float32)

func (_swig_base SwigcptrBtCylinderShape) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btCylinderShape_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCylinderShape_setSafeMargin__SWIG_3(SwigcptrBtCylinderShape, uintptr)

func (_swig_base SwigcptrBtCylinderShape) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btCylinderShape_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCylinderShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCylinderShape_getAabbSlow(SwigcptrBtCylinderShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCylinderShape) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCylinderShape_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCylinderShape_getLocalScaling(SwigcptrBtCylinderShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btCylinderShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btCylinderShape_getLocalScalingNV(SwigcptrBtCylinderShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btCylinderShape_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btCylinderShape_getMargin(SwigcptrBtCylinderShape) float32

func (_swig_base SwigcptrBtCylinderShape) GetMargin() float32 {
	return _swig_wrap_btCylinderShape_getMargin(_swig_base)
}

func _swig_wrap_btCylinderShape_getMarginNV(SwigcptrBtCylinderShape) float32

func (_swig_base SwigcptrBtCylinderShape) GetMarginNV() float32 {
	return _swig_wrap_btCylinderShape_getMarginNV(_swig_base)
}

func _swig_wrap_btCylinderShape_getNumPreferredPenetrationDirections(SwigcptrBtCylinderShape) int

func (_swig_base SwigcptrBtCylinderShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btCylinderShape_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btCylinderShape_getPreferredPenetrationDirection(SwigcptrBtCylinderShape, int, uintptr)

func (_swig_base SwigcptrBtCylinderShape) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btCylinderShape_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtCylinderShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShape_localGetSupportVertexNonVirtual(SwigcptrBtCylinderShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShape_getMarginNonVirtual(SwigcptrBtCylinderShape) float32

func (_swig_base SwigcptrBtCylinderShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btCylinderShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btCylinderShape_getAabbNonVirtual(SwigcptrBtCylinderShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCylinderShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCylinderShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCylinderShape_project(SwigcptrBtCylinderShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtCylinderShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btCylinderShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btCylinderShape_getBoundingSphere(SwigcptrBtCylinderShape, uintptr, *float32)

func (_swig_base SwigcptrBtCylinderShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btCylinderShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCylinderShape_getAngularMotionDisc(SwigcptrBtCylinderShape) float32

func (_swig_base SwigcptrBtCylinderShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btCylinderShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btCylinderShape_getContactBreakingThreshold(SwigcptrBtCylinderShape, float32) float32

func (_swig_base SwigcptrBtCylinderShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btCylinderShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btCylinderShape_calculateTemporalAabb(SwigcptrBtCylinderShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtCylinderShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btCylinderShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btCylinderShape_isPolyhedral(SwigcptrBtCylinderShape) bool

func (_swig_base SwigcptrBtCylinderShape) IsPolyhedral() bool {
	return _swig_wrap_btCylinderShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btCylinderShape_isConvex2d(SwigcptrBtCylinderShape) bool

func (_swig_base SwigcptrBtCylinderShape) IsConvex2d() bool {
	return _swig_wrap_btCylinderShape_isConvex2d(_swig_base)
}

func _swig_wrap_btCylinderShape_isConvex(SwigcptrBtCylinderShape) bool

func (_swig_base SwigcptrBtCylinderShape) IsConvex() bool {
	return _swig_wrap_btCylinderShape_isConvex(_swig_base)
}

func _swig_wrap_btCylinderShape_isNonMoving(SwigcptrBtCylinderShape) bool

func (_swig_base SwigcptrBtCylinderShape) IsNonMoving() bool {
	return _swig_wrap_btCylinderShape_isNonMoving(_swig_base)
}

func _swig_wrap_btCylinderShape_isConcave(SwigcptrBtCylinderShape) bool

func (_swig_base SwigcptrBtCylinderShape) IsConcave() bool {
	return _swig_wrap_btCylinderShape_isConcave(_swig_base)
}

func _swig_wrap_btCylinderShape_isCompound(SwigcptrBtCylinderShape) bool

func (_swig_base SwigcptrBtCylinderShape) IsCompound() bool {
	return _swig_wrap_btCylinderShape_isCompound(_swig_base)
}

func _swig_wrap_btCylinderShape_isSoftBody(SwigcptrBtCylinderShape) bool

func (_swig_base SwigcptrBtCylinderShape) IsSoftBody() bool {
	return _swig_wrap_btCylinderShape_isSoftBody(_swig_base)
}

func _swig_wrap_btCylinderShape_isInfinite(SwigcptrBtCylinderShape) bool

func (_swig_base SwigcptrBtCylinderShape) IsInfinite() bool {
	return _swig_wrap_btCylinderShape_isInfinite(_swig_base)
}

func _swig_wrap_btCylinderShape_getShapeType(SwigcptrBtCylinderShape) int

func (_swig_base SwigcptrBtCylinderShape) GetShapeType() int {
	return _swig_wrap_btCylinderShape_getShapeType(_swig_base)
}

func _swig_wrap_btCylinderShape_setUserPointer(SwigcptrBtCylinderShape, uintptr)

func (_swig_base SwigcptrBtCylinderShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btCylinderShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btCylinderShape_getUserPointer(SwigcptrBtCylinderShape) uintptr

func (_swig_base SwigcptrBtCylinderShape) GetUserPointer() uintptr {
	return _swig_wrap_btCylinderShape_getUserPointer(_swig_base)
}

func _swig_wrap_btCylinderShape_serializeSingleShape(SwigcptrBtCylinderShape, uintptr)

func (_swig_base SwigcptrBtCylinderShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btCylinderShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCylinderShape) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtCylinderShape) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtCylinderShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtCylinderShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtCylinderShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtCylinderShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtCylinderShape interface {
	Swigcptr() uintptr
	SwigIsBtCylinderShape()
	GetHalfExtentsWithMargin() BtVector3
	GetHalfExtentsWithoutMargin() BtVector3
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	SetMargin(arg2 float32)
	LocalGetSupportingVertex(arg2 BtVector3) BtVector3
	GetUpAxis() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	GetRadius() float32
	SetLocalScaling(arg2 BtVector3)
	GetName() string
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtCylinderShapeX uintptr

func (p SwigcptrBtCylinderShapeX) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCylinderShapeX) SwigIsBtCylinderShapeX() {
}

func _swig_wrap_new_btCylinderShapeX(uintptr) SwigcptrBtCylinderShapeX

func NewBtCylinderShapeX(arg1 BtVector3) BtCylinderShapeX {
	return _swig_wrap_new_btCylinderShapeX(arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_localGetSupportingVertexWithoutMargin(SwigcptrBtCylinderShapeX, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtCylinderShapeX) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShapeX_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtCylinderShapeX, uintptr, uintptr, int)

func (arg1 SwigcptrBtCylinderShapeX) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btCylinderShapeX_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btCylinderShapeX_getName(SwigcptrBtCylinderShapeX) string

func (arg1 SwigcptrBtCylinderShapeX) GetName() string {
	return _swig_wrap_btCylinderShapeX_getName(arg1)
}

func _swig_wrap_btCylinderShapeX_getRadius(SwigcptrBtCylinderShapeX) float32

func (arg1 SwigcptrBtCylinderShapeX) GetRadius() float32 {
	return _swig_wrap_btCylinderShapeX_getRadius(arg1)
}

func _swig_wrap_delete_btCylinderShapeX(uintptr)

func DeleteBtCylinderShapeX(arg1 BtCylinderShapeX) {
	_swig_wrap_delete_btCylinderShapeX(arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_getHalfExtentsWithMargin(SwigcptrBtCylinderShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeX) GetHalfExtentsWithMargin() BtVector3 {
	return _swig_wrap_btCylinderShapeX_getHalfExtentsWithMargin(_swig_base)
}

func _swig_wrap_btCylinderShapeX_getHalfExtentsWithoutMargin(SwigcptrBtCylinderShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeX) GetHalfExtentsWithoutMargin() BtVector3 {
	return _swig_wrap_btCylinderShapeX_getHalfExtentsWithoutMargin(_swig_base)
}

func _swig_wrap_btCylinderShapeX_getAabb(SwigcptrBtCylinderShapeX, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCylinderShapeX) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCylinderShapeX_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_calculateLocalInertia(SwigcptrBtCylinderShapeX, float32, uintptr)

func (_swig_base SwigcptrBtCylinderShapeX) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btCylinderShapeX_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_setMargin(SwigcptrBtCylinderShapeX, float32)

func (_swig_base SwigcptrBtCylinderShapeX) SetMargin(arg1 float32) {
	_swig_wrap_btCylinderShapeX_setMargin(_swig_base, arg1)
}

func _swig_wrap_btCylinderShapeX_localGetSupportingVertex(SwigcptrBtCylinderShapeX, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeX) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShapeX_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_getUpAxis(SwigcptrBtCylinderShapeX) int

func (_swig_base SwigcptrBtCylinderShapeX) GetUpAxis() int {
	return _swig_wrap_btCylinderShapeX_getUpAxis(_swig_base)
}

func _swig_wrap_btCylinderShapeX_getAnisotropicRollingFrictionDirection(SwigcptrBtCylinderShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeX) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btCylinderShapeX_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btCylinderShapeX_setLocalScaling(SwigcptrBtCylinderShapeX, uintptr)

func (_swig_base SwigcptrBtCylinderShapeX) SetLocalScaling(arg1 BtVector3) {
	_swig_wrap_btCylinderShapeX_setLocalScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_calculateSerializeBufferSize(SwigcptrBtCylinderShapeX) int

func (_swig_base SwigcptrBtCylinderShapeX) CalculateSerializeBufferSize() int {
	return _swig_wrap_btCylinderShapeX_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btCylinderShapeX_serialize(SwigcptrBtCylinderShapeX, uintptr, uintptr) string

func (_swig_base SwigcptrBtCylinderShapeX) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btCylinderShapeX_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_getImplicitShapeDimensions(SwigcptrBtCylinderShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeX) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btCylinderShapeX_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btCylinderShapeX_setImplicitShapeDimensions(SwigcptrBtCylinderShapeX, uintptr)

func (_swig_base SwigcptrBtCylinderShapeX) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btCylinderShapeX_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_setSafeMargin__SWIG_0(SwigcptrBtCylinderShapeX, float32, float32)

func (_swig_base SwigcptrBtCylinderShapeX) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btCylinderShapeX_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btCylinderShapeX_setSafeMargin__SWIG_1(SwigcptrBtCylinderShapeX, float32)

func (_swig_base SwigcptrBtCylinderShapeX) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btCylinderShapeX_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btCylinderShapeX_setSafeMargin__SWIG_2(SwigcptrBtCylinderShapeX, uintptr, float32)

func (_swig_base SwigcptrBtCylinderShapeX) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btCylinderShapeX_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCylinderShapeX_setSafeMargin__SWIG_3(SwigcptrBtCylinderShapeX, uintptr)

func (_swig_base SwigcptrBtCylinderShapeX) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btCylinderShapeX_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCylinderShapeX) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCylinderShapeX_getAabbSlow(SwigcptrBtCylinderShapeX, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCylinderShapeX) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCylinderShapeX_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_getLocalScaling(SwigcptrBtCylinderShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeX) GetLocalScaling() BtVector3 {
	return _swig_wrap_btCylinderShapeX_getLocalScaling(_swig_base)
}

func _swig_wrap_btCylinderShapeX_getLocalScalingNV(SwigcptrBtCylinderShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeX) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btCylinderShapeX_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btCylinderShapeX_getMargin(SwigcptrBtCylinderShapeX) float32

func (_swig_base SwigcptrBtCylinderShapeX) GetMargin() float32 {
	return _swig_wrap_btCylinderShapeX_getMargin(_swig_base)
}

func _swig_wrap_btCylinderShapeX_getMarginNV(SwigcptrBtCylinderShapeX) float32

func (_swig_base SwigcptrBtCylinderShapeX) GetMarginNV() float32 {
	return _swig_wrap_btCylinderShapeX_getMarginNV(_swig_base)
}

func _swig_wrap_btCylinderShapeX_getNumPreferredPenetrationDirections(SwigcptrBtCylinderShapeX) int

func (_swig_base SwigcptrBtCylinderShapeX) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btCylinderShapeX_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btCylinderShapeX_getPreferredPenetrationDirection(SwigcptrBtCylinderShapeX, int, uintptr)

func (_swig_base SwigcptrBtCylinderShapeX) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btCylinderShapeX_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtCylinderShapeX, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeX) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShapeX_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_localGetSupportVertexNonVirtual(SwigcptrBtCylinderShapeX, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeX) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShapeX_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_getMarginNonVirtual(SwigcptrBtCylinderShapeX) float32

func (_swig_base SwigcptrBtCylinderShapeX) GetMarginNonVirtual() float32 {
	return _swig_wrap_btCylinderShapeX_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btCylinderShapeX_getAabbNonVirtual(SwigcptrBtCylinderShapeX, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCylinderShapeX) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCylinderShapeX_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_project(SwigcptrBtCylinderShapeX, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtCylinderShapeX) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btCylinderShapeX_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btCylinderShapeX_getBoundingSphere(SwigcptrBtCylinderShapeX, uintptr, *float32)

func (_swig_base SwigcptrBtCylinderShapeX) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btCylinderShapeX_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCylinderShapeX_getAngularMotionDisc(SwigcptrBtCylinderShapeX) float32

func (_swig_base SwigcptrBtCylinderShapeX) GetAngularMotionDisc() float32 {
	return _swig_wrap_btCylinderShapeX_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btCylinderShapeX_getContactBreakingThreshold(SwigcptrBtCylinderShapeX, float32) float32

func (_swig_base SwigcptrBtCylinderShapeX) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btCylinderShapeX_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btCylinderShapeX_calculateTemporalAabb(SwigcptrBtCylinderShapeX, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtCylinderShapeX) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btCylinderShapeX_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btCylinderShapeX_isPolyhedral(SwigcptrBtCylinderShapeX) bool

func (_swig_base SwigcptrBtCylinderShapeX) IsPolyhedral() bool {
	return _swig_wrap_btCylinderShapeX_isPolyhedral(_swig_base)
}

func _swig_wrap_btCylinderShapeX_isConvex2d(SwigcptrBtCylinderShapeX) bool

func (_swig_base SwigcptrBtCylinderShapeX) IsConvex2d() bool {
	return _swig_wrap_btCylinderShapeX_isConvex2d(_swig_base)
}

func _swig_wrap_btCylinderShapeX_isConvex(SwigcptrBtCylinderShapeX) bool

func (_swig_base SwigcptrBtCylinderShapeX) IsConvex() bool {
	return _swig_wrap_btCylinderShapeX_isConvex(_swig_base)
}

func _swig_wrap_btCylinderShapeX_isNonMoving(SwigcptrBtCylinderShapeX) bool

func (_swig_base SwigcptrBtCylinderShapeX) IsNonMoving() bool {
	return _swig_wrap_btCylinderShapeX_isNonMoving(_swig_base)
}

func _swig_wrap_btCylinderShapeX_isConcave(SwigcptrBtCylinderShapeX) bool

func (_swig_base SwigcptrBtCylinderShapeX) IsConcave() bool {
	return _swig_wrap_btCylinderShapeX_isConcave(_swig_base)
}

func _swig_wrap_btCylinderShapeX_isCompound(SwigcptrBtCylinderShapeX) bool

func (_swig_base SwigcptrBtCylinderShapeX) IsCompound() bool {
	return _swig_wrap_btCylinderShapeX_isCompound(_swig_base)
}

func _swig_wrap_btCylinderShapeX_isSoftBody(SwigcptrBtCylinderShapeX) bool

func (_swig_base SwigcptrBtCylinderShapeX) IsSoftBody() bool {
	return _swig_wrap_btCylinderShapeX_isSoftBody(_swig_base)
}

func _swig_wrap_btCylinderShapeX_isInfinite(SwigcptrBtCylinderShapeX) bool

func (_swig_base SwigcptrBtCylinderShapeX) IsInfinite() bool {
	return _swig_wrap_btCylinderShapeX_isInfinite(_swig_base)
}

func _swig_wrap_btCylinderShapeX_getShapeType(SwigcptrBtCylinderShapeX) int

func (_swig_base SwigcptrBtCylinderShapeX) GetShapeType() int {
	return _swig_wrap_btCylinderShapeX_getShapeType(_swig_base)
}

func _swig_wrap_btCylinderShapeX_setUserPointer(SwigcptrBtCylinderShapeX, uintptr)

func (_swig_base SwigcptrBtCylinderShapeX) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btCylinderShapeX_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btCylinderShapeX_getUserPointer(SwigcptrBtCylinderShapeX) uintptr

func (_swig_base SwigcptrBtCylinderShapeX) GetUserPointer() uintptr {
	return _swig_wrap_btCylinderShapeX_getUserPointer(_swig_base)
}

func _swig_wrap_btCylinderShapeX_serializeSingleShape(SwigcptrBtCylinderShapeX, uintptr)

func (_swig_base SwigcptrBtCylinderShapeX) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btCylinderShapeX_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCylinderShapeX) SwigIsBtCylinderShape() {
}

func (p SwigcptrBtCylinderShapeX) SwigGetBtCylinderShape() BtCylinderShape {
	return SwigcptrBtCylinderShape(p.Swigcptr())
}

func (p SwigcptrBtCylinderShapeX) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtCylinderShapeX) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtCylinderShapeX) SwigIsBtConvexShape() {
}

func (p SwigcptrBtCylinderShapeX) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtCylinderShapeX) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtCylinderShapeX) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtCylinderShapeX interface {
	Swigcptr() uintptr
	SwigIsBtCylinderShapeX()
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	GetName() string
	GetRadius() float32
	GetHalfExtentsWithMargin() BtVector3
	GetHalfExtentsWithoutMargin() BtVector3
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	SetMargin(arg1 float32)
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	GetUpAxis() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetLocalScaling(arg1 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtCylinderShape()
	SwigGetBtCylinderShape() BtCylinderShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtCylinderShapeZ uintptr

func (p SwigcptrBtCylinderShapeZ) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCylinderShapeZ) SwigIsBtCylinderShapeZ() {
}

func _swig_wrap_new_btCylinderShapeZ(uintptr) SwigcptrBtCylinderShapeZ

func NewBtCylinderShapeZ(arg1 BtVector3) BtCylinderShapeZ {
	return _swig_wrap_new_btCylinderShapeZ(arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_localGetSupportingVertexWithoutMargin(SwigcptrBtCylinderShapeZ, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtCylinderShapeZ) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShapeZ_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtCylinderShapeZ, uintptr, uintptr, int)

func (arg1 SwigcptrBtCylinderShapeZ) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btCylinderShapeZ_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btCylinderShapeZ_getName(SwigcptrBtCylinderShapeZ) string

func (arg1 SwigcptrBtCylinderShapeZ) GetName() string {
	return _swig_wrap_btCylinderShapeZ_getName(arg1)
}

func _swig_wrap_btCylinderShapeZ_getRadius(SwigcptrBtCylinderShapeZ) float32

func (arg1 SwigcptrBtCylinderShapeZ) GetRadius() float32 {
	return _swig_wrap_btCylinderShapeZ_getRadius(arg1)
}

func _swig_wrap_delete_btCylinderShapeZ(uintptr)

func DeleteBtCylinderShapeZ(arg1 BtCylinderShapeZ) {
	_swig_wrap_delete_btCylinderShapeZ(arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_getHalfExtentsWithMargin(SwigcptrBtCylinderShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeZ) GetHalfExtentsWithMargin() BtVector3 {
	return _swig_wrap_btCylinderShapeZ_getHalfExtentsWithMargin(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_getHalfExtentsWithoutMargin(SwigcptrBtCylinderShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeZ) GetHalfExtentsWithoutMargin() BtVector3 {
	return _swig_wrap_btCylinderShapeZ_getHalfExtentsWithoutMargin(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_getAabb(SwigcptrBtCylinderShapeZ, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCylinderShapeZ) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCylinderShapeZ_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_calculateLocalInertia(SwigcptrBtCylinderShapeZ, float32, uintptr)

func (_swig_base SwigcptrBtCylinderShapeZ) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btCylinderShapeZ_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_setMargin(SwigcptrBtCylinderShapeZ, float32)

func (_swig_base SwigcptrBtCylinderShapeZ) SetMargin(arg1 float32) {
	_swig_wrap_btCylinderShapeZ_setMargin(_swig_base, arg1)
}

func _swig_wrap_btCylinderShapeZ_localGetSupportingVertex(SwigcptrBtCylinderShapeZ, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeZ) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShapeZ_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_getUpAxis(SwigcptrBtCylinderShapeZ) int

func (_swig_base SwigcptrBtCylinderShapeZ) GetUpAxis() int {
	return _swig_wrap_btCylinderShapeZ_getUpAxis(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_getAnisotropicRollingFrictionDirection(SwigcptrBtCylinderShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeZ) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btCylinderShapeZ_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_setLocalScaling(SwigcptrBtCylinderShapeZ, uintptr)

func (_swig_base SwigcptrBtCylinderShapeZ) SetLocalScaling(arg1 BtVector3) {
	_swig_wrap_btCylinderShapeZ_setLocalScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_calculateSerializeBufferSize(SwigcptrBtCylinderShapeZ) int

func (_swig_base SwigcptrBtCylinderShapeZ) CalculateSerializeBufferSize() int {
	return _swig_wrap_btCylinderShapeZ_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_serialize(SwigcptrBtCylinderShapeZ, uintptr, uintptr) string

func (_swig_base SwigcptrBtCylinderShapeZ) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btCylinderShapeZ_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_getImplicitShapeDimensions(SwigcptrBtCylinderShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeZ) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btCylinderShapeZ_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_setImplicitShapeDimensions(SwigcptrBtCylinderShapeZ, uintptr)

func (_swig_base SwigcptrBtCylinderShapeZ) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btCylinderShapeZ_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_setSafeMargin__SWIG_0(SwigcptrBtCylinderShapeZ, float32, float32)

func (_swig_base SwigcptrBtCylinderShapeZ) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btCylinderShapeZ_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btCylinderShapeZ_setSafeMargin__SWIG_1(SwigcptrBtCylinderShapeZ, float32)

func (_swig_base SwigcptrBtCylinderShapeZ) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btCylinderShapeZ_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btCylinderShapeZ_setSafeMargin__SWIG_2(SwigcptrBtCylinderShapeZ, uintptr, float32)

func (_swig_base SwigcptrBtCylinderShapeZ) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btCylinderShapeZ_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCylinderShapeZ_setSafeMargin__SWIG_3(SwigcptrBtCylinderShapeZ, uintptr)

func (_swig_base SwigcptrBtCylinderShapeZ) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btCylinderShapeZ_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCylinderShapeZ) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCylinderShapeZ_getAabbSlow(SwigcptrBtCylinderShapeZ, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCylinderShapeZ) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCylinderShapeZ_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_getLocalScaling(SwigcptrBtCylinderShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeZ) GetLocalScaling() BtVector3 {
	return _swig_wrap_btCylinderShapeZ_getLocalScaling(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_getLocalScalingNV(SwigcptrBtCylinderShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeZ) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btCylinderShapeZ_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_getMargin(SwigcptrBtCylinderShapeZ) float32

func (_swig_base SwigcptrBtCylinderShapeZ) GetMargin() float32 {
	return _swig_wrap_btCylinderShapeZ_getMargin(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_getMarginNV(SwigcptrBtCylinderShapeZ) float32

func (_swig_base SwigcptrBtCylinderShapeZ) GetMarginNV() float32 {
	return _swig_wrap_btCylinderShapeZ_getMarginNV(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_getNumPreferredPenetrationDirections(SwigcptrBtCylinderShapeZ) int

func (_swig_base SwigcptrBtCylinderShapeZ) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btCylinderShapeZ_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_getPreferredPenetrationDirection(SwigcptrBtCylinderShapeZ, int, uintptr)

func (_swig_base SwigcptrBtCylinderShapeZ) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btCylinderShapeZ_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtCylinderShapeZ, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeZ) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShapeZ_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_localGetSupportVertexNonVirtual(SwigcptrBtCylinderShapeZ, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtCylinderShapeZ) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btCylinderShapeZ_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_getMarginNonVirtual(SwigcptrBtCylinderShapeZ) float32

func (_swig_base SwigcptrBtCylinderShapeZ) GetMarginNonVirtual() float32 {
	return _swig_wrap_btCylinderShapeZ_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_getAabbNonVirtual(SwigcptrBtCylinderShapeZ, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtCylinderShapeZ) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btCylinderShapeZ_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_project(SwigcptrBtCylinderShapeZ, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtCylinderShapeZ) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btCylinderShapeZ_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btCylinderShapeZ_getBoundingSphere(SwigcptrBtCylinderShapeZ, uintptr, *float32)

func (_swig_base SwigcptrBtCylinderShapeZ) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btCylinderShapeZ_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCylinderShapeZ_getAngularMotionDisc(SwigcptrBtCylinderShapeZ) float32

func (_swig_base SwigcptrBtCylinderShapeZ) GetAngularMotionDisc() float32 {
	return _swig_wrap_btCylinderShapeZ_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_getContactBreakingThreshold(SwigcptrBtCylinderShapeZ, float32) float32

func (_swig_base SwigcptrBtCylinderShapeZ) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btCylinderShapeZ_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btCylinderShapeZ_calculateTemporalAabb(SwigcptrBtCylinderShapeZ, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtCylinderShapeZ) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btCylinderShapeZ_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btCylinderShapeZ_isPolyhedral(SwigcptrBtCylinderShapeZ) bool

func (_swig_base SwigcptrBtCylinderShapeZ) IsPolyhedral() bool {
	return _swig_wrap_btCylinderShapeZ_isPolyhedral(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_isConvex2d(SwigcptrBtCylinderShapeZ) bool

func (_swig_base SwigcptrBtCylinderShapeZ) IsConvex2d() bool {
	return _swig_wrap_btCylinderShapeZ_isConvex2d(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_isConvex(SwigcptrBtCylinderShapeZ) bool

func (_swig_base SwigcptrBtCylinderShapeZ) IsConvex() bool {
	return _swig_wrap_btCylinderShapeZ_isConvex(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_isNonMoving(SwigcptrBtCylinderShapeZ) bool

func (_swig_base SwigcptrBtCylinderShapeZ) IsNonMoving() bool {
	return _swig_wrap_btCylinderShapeZ_isNonMoving(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_isConcave(SwigcptrBtCylinderShapeZ) bool

func (_swig_base SwigcptrBtCylinderShapeZ) IsConcave() bool {
	return _swig_wrap_btCylinderShapeZ_isConcave(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_isCompound(SwigcptrBtCylinderShapeZ) bool

func (_swig_base SwigcptrBtCylinderShapeZ) IsCompound() bool {
	return _swig_wrap_btCylinderShapeZ_isCompound(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_isSoftBody(SwigcptrBtCylinderShapeZ) bool

func (_swig_base SwigcptrBtCylinderShapeZ) IsSoftBody() bool {
	return _swig_wrap_btCylinderShapeZ_isSoftBody(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_isInfinite(SwigcptrBtCylinderShapeZ) bool

func (_swig_base SwigcptrBtCylinderShapeZ) IsInfinite() bool {
	return _swig_wrap_btCylinderShapeZ_isInfinite(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_getShapeType(SwigcptrBtCylinderShapeZ) int

func (_swig_base SwigcptrBtCylinderShapeZ) GetShapeType() int {
	return _swig_wrap_btCylinderShapeZ_getShapeType(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_setUserPointer(SwigcptrBtCylinderShapeZ, uintptr)

func (_swig_base SwigcptrBtCylinderShapeZ) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btCylinderShapeZ_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btCylinderShapeZ_getUserPointer(SwigcptrBtCylinderShapeZ) uintptr

func (_swig_base SwigcptrBtCylinderShapeZ) GetUserPointer() uintptr {
	return _swig_wrap_btCylinderShapeZ_getUserPointer(_swig_base)
}

func _swig_wrap_btCylinderShapeZ_serializeSingleShape(SwigcptrBtCylinderShapeZ, uintptr)

func (_swig_base SwigcptrBtCylinderShapeZ) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btCylinderShapeZ_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCylinderShapeZ) SwigIsBtCylinderShape() {
}

func (p SwigcptrBtCylinderShapeZ) SwigGetBtCylinderShape() BtCylinderShape {
	return SwigcptrBtCylinderShape(p.Swigcptr())
}

func (p SwigcptrBtCylinderShapeZ) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtCylinderShapeZ) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtCylinderShapeZ) SwigIsBtConvexShape() {
}

func (p SwigcptrBtCylinderShapeZ) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtCylinderShapeZ) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtCylinderShapeZ) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtCylinderShapeZ interface {
	Swigcptr() uintptr
	SwigIsBtCylinderShapeZ()
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	GetName() string
	GetRadius() float32
	GetHalfExtentsWithMargin() BtVector3
	GetHalfExtentsWithoutMargin() BtVector3
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	SetMargin(arg1 float32)
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	GetUpAxis() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetLocalScaling(arg1 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtCylinderShape()
	SwigGetBtCylinderShape() BtCylinderShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtCylinderShapeData uintptr

func (p SwigcptrBtCylinderShapeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCylinderShapeData) SwigIsBtCylinderShapeData() {
}

func _swig_wrap_btCylinderShapeData_m_convexInternalShapeData_set(SwigcptrBtCylinderShapeData, uintptr)

func (arg1 SwigcptrBtCylinderShapeData) SetM_convexInternalShapeData(arg2 BtConvexInternalShapeData) {
	_swig_wrap_btCylinderShapeData_m_convexInternalShapeData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCylinderShapeData_m_convexInternalShapeData_get(SwigcptrBtCylinderShapeData) SwigcptrBtConvexInternalShapeData

func (arg1 SwigcptrBtCylinderShapeData) GetM_convexInternalShapeData() BtConvexInternalShapeData {
	return _swig_wrap_btCylinderShapeData_m_convexInternalShapeData_get(arg1)
}

func _swig_wrap_btCylinderShapeData_m_upAxis_set(SwigcptrBtCylinderShapeData, int)

func (arg1 SwigcptrBtCylinderShapeData) SetM_upAxis(arg2 int) {
	_swig_wrap_btCylinderShapeData_m_upAxis_set(arg1, arg2)
}

func _swig_wrap_btCylinderShapeData_m_upAxis_get(SwigcptrBtCylinderShapeData) int

func (arg1 SwigcptrBtCylinderShapeData) GetM_upAxis() int {
	return _swig_wrap_btCylinderShapeData_m_upAxis_get(arg1)
}

func _swig_wrap_btCylinderShapeData_m_padding_set(SwigcptrBtCylinderShapeData, string)

func (arg1 SwigcptrBtCylinderShapeData) SetM_padding(arg2 string) {
	_swig_wrap_btCylinderShapeData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btCylinderShapeData_m_padding_get(SwigcptrBtCylinderShapeData) string

func (arg1 SwigcptrBtCylinderShapeData) GetM_padding() string {
	return _swig_wrap_btCylinderShapeData_m_padding_get(arg1)
}

func _swig_wrap_new_btCylinderShapeData() SwigcptrBtCylinderShapeData

func NewBtCylinderShapeData() BtCylinderShapeData {
	return _swig_wrap_new_btCylinderShapeData()
}

func _swig_wrap_delete_btCylinderShapeData(uintptr)

func DeleteBtCylinderShapeData(arg1 BtCylinderShapeData) {
	_swig_wrap_delete_btCylinderShapeData(arg1.Swigcptr())
}

type BtCylinderShapeData interface {
	Swigcptr() uintptr
	SwigIsBtCylinderShapeData()
	SetM_convexInternalShapeData(arg2 BtConvexInternalShapeData)
	GetM_convexInternalShapeData() BtConvexInternalShapeData
	SetM_upAxis(arg2 int)
	GetM_upAxis() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtConeShape uintptr

func (p SwigcptrBtConeShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConeShape) SwigIsBtConeShape() {
}

func _swig_wrap_new_btConeShape(float32, float32) SwigcptrBtConeShape

func NewBtConeShape(arg1 float32, arg2 float32) BtConeShape {
	return _swig_wrap_new_btConeShape(arg1, arg2)
}

func _swig_wrap_btConeShape_localGetSupportingVertex(SwigcptrBtConeShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtConeShape) LocalGetSupportingVertex(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btConeShape_localGetSupportingVertex(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeShape_localGetSupportingVertexWithoutMargin(SwigcptrBtConeShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtConeShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btConeShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtConeShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtConeShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btConeShape_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btConeShape_getRadius(SwigcptrBtConeShape) float32

func (arg1 SwigcptrBtConeShape) GetRadius() float32 {
	return _swig_wrap_btConeShape_getRadius(arg1)
}

func _swig_wrap_btConeShape_getHeight(SwigcptrBtConeShape) float32

func (arg1 SwigcptrBtConeShape) GetHeight() float32 {
	return _swig_wrap_btConeShape_getHeight(arg1)
}

func _swig_wrap_btConeShape_calculateLocalInertia(SwigcptrBtConeShape, float32, uintptr)

func (arg1 SwigcptrBtConeShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btConeShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btConeShape_getName(SwigcptrBtConeShape) string

func (arg1 SwigcptrBtConeShape) GetName() string {
	return _swig_wrap_btConeShape_getName(arg1)
}

func _swig_wrap_btConeShape_setConeUpIndex(SwigcptrBtConeShape, int)

func (arg1 SwigcptrBtConeShape) SetConeUpIndex(arg2 int) {
	_swig_wrap_btConeShape_setConeUpIndex(arg1, arg2)
}

func _swig_wrap_btConeShape_getConeUpIndex(SwigcptrBtConeShape) int

func (arg1 SwigcptrBtConeShape) GetConeUpIndex() int {
	return _swig_wrap_btConeShape_getConeUpIndex(arg1)
}

func _swig_wrap_btConeShape_getAnisotropicRollingFrictionDirection(SwigcptrBtConeShape) SwigcptrBtVector3

func (arg1 SwigcptrBtConeShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btConeShape_getAnisotropicRollingFrictionDirection(arg1)
}

func _swig_wrap_btConeShape_setLocalScaling(SwigcptrBtConeShape, uintptr)

func (arg1 SwigcptrBtConeShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btConeShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeShape_calculateSerializeBufferSize(SwigcptrBtConeShape) int

func (arg1 SwigcptrBtConeShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btConeShape_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btConeShape_serialize(SwigcptrBtConeShape, uintptr, uintptr) string

func (arg1 SwigcptrBtConeShape) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btConeShape_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btConeShape(uintptr)

func DeleteBtConeShape(arg1 BtConeShape) {
	_swig_wrap_delete_btConeShape(arg1.Swigcptr())
}

func _swig_wrap_btConeShape_getImplicitShapeDimensions(SwigcptrBtConeShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btConeShape_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btConeShape_setImplicitShapeDimensions(SwigcptrBtConeShape, uintptr)

func (_swig_base SwigcptrBtConeShape) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btConeShape_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShape_setSafeMargin__SWIG_0(SwigcptrBtConeShape, float32, float32)

func (_swig_base SwigcptrBtConeShape) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btConeShape_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btConeShape_setSafeMargin__SWIG_1(SwigcptrBtConeShape, float32)

func (_swig_base SwigcptrBtConeShape) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btConeShape_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btConeShape_setSafeMargin__SWIG_2(SwigcptrBtConeShape, uintptr, float32)

func (_swig_base SwigcptrBtConeShape) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btConeShape_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConeShape_setSafeMargin__SWIG_3(SwigcptrBtConeShape, uintptr)

func (_swig_base SwigcptrBtConeShape) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btConeShape_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConeShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConeShape_getAabb(SwigcptrBtConeShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShape) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConeShape_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConeShape_getAabbSlow(SwigcptrBtConeShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShape) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConeShape_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConeShape_getLocalScaling(SwigcptrBtConeShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btConeShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btConeShape_getLocalScalingNV(SwigcptrBtConeShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btConeShape_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btConeShape_setMargin(SwigcptrBtConeShape, float32)

func (_swig_base SwigcptrBtConeShape) SetMargin(arg1 float32) {
	_swig_wrap_btConeShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btConeShape_getMargin(SwigcptrBtConeShape) float32

func (_swig_base SwigcptrBtConeShape) GetMargin() float32 {
	return _swig_wrap_btConeShape_getMargin(_swig_base)
}

func _swig_wrap_btConeShape_getMarginNV(SwigcptrBtConeShape) float32

func (_swig_base SwigcptrBtConeShape) GetMarginNV() float32 {
	return _swig_wrap_btConeShape_getMarginNV(_swig_base)
}

func _swig_wrap_btConeShape_getNumPreferredPenetrationDirections(SwigcptrBtConeShape) int

func (_swig_base SwigcptrBtConeShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btConeShape_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btConeShape_getPreferredPenetrationDirection(SwigcptrBtConeShape, int, uintptr)

func (_swig_base SwigcptrBtConeShape) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btConeShape_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtConeShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConeShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShape_localGetSupportVertexNonVirtual(SwigcptrBtConeShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConeShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShape_getMarginNonVirtual(SwigcptrBtConeShape) float32

func (_swig_base SwigcptrBtConeShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btConeShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btConeShape_getAabbNonVirtual(SwigcptrBtConeShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConeShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConeShape_project(SwigcptrBtConeShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtConeShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btConeShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btConeShape_getBoundingSphere(SwigcptrBtConeShape, uintptr, *float32)

func (_swig_base SwigcptrBtConeShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btConeShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConeShape_getAngularMotionDisc(SwigcptrBtConeShape) float32

func (_swig_base SwigcptrBtConeShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btConeShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btConeShape_getContactBreakingThreshold(SwigcptrBtConeShape, float32) float32

func (_swig_base SwigcptrBtConeShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btConeShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btConeShape_calculateTemporalAabb(SwigcptrBtConeShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btConeShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btConeShape_isPolyhedral(SwigcptrBtConeShape) bool

func (_swig_base SwigcptrBtConeShape) IsPolyhedral() bool {
	return _swig_wrap_btConeShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btConeShape_isConvex2d(SwigcptrBtConeShape) bool

func (_swig_base SwigcptrBtConeShape) IsConvex2d() bool {
	return _swig_wrap_btConeShape_isConvex2d(_swig_base)
}

func _swig_wrap_btConeShape_isConvex(SwigcptrBtConeShape) bool

func (_swig_base SwigcptrBtConeShape) IsConvex() bool {
	return _swig_wrap_btConeShape_isConvex(_swig_base)
}

func _swig_wrap_btConeShape_isNonMoving(SwigcptrBtConeShape) bool

func (_swig_base SwigcptrBtConeShape) IsNonMoving() bool {
	return _swig_wrap_btConeShape_isNonMoving(_swig_base)
}

func _swig_wrap_btConeShape_isConcave(SwigcptrBtConeShape) bool

func (_swig_base SwigcptrBtConeShape) IsConcave() bool {
	return _swig_wrap_btConeShape_isConcave(_swig_base)
}

func _swig_wrap_btConeShape_isCompound(SwigcptrBtConeShape) bool

func (_swig_base SwigcptrBtConeShape) IsCompound() bool {
	return _swig_wrap_btConeShape_isCompound(_swig_base)
}

func _swig_wrap_btConeShape_isSoftBody(SwigcptrBtConeShape) bool

func (_swig_base SwigcptrBtConeShape) IsSoftBody() bool {
	return _swig_wrap_btConeShape_isSoftBody(_swig_base)
}

func _swig_wrap_btConeShape_isInfinite(SwigcptrBtConeShape) bool

func (_swig_base SwigcptrBtConeShape) IsInfinite() bool {
	return _swig_wrap_btConeShape_isInfinite(_swig_base)
}

func _swig_wrap_btConeShape_getShapeType(SwigcptrBtConeShape) int

func (_swig_base SwigcptrBtConeShape) GetShapeType() int {
	return _swig_wrap_btConeShape_getShapeType(_swig_base)
}

func _swig_wrap_btConeShape_setUserPointer(SwigcptrBtConeShape, uintptr)

func (_swig_base SwigcptrBtConeShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btConeShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btConeShape_getUserPointer(SwigcptrBtConeShape) uintptr

func (_swig_base SwigcptrBtConeShape) GetUserPointer() uintptr {
	return _swig_wrap_btConeShape_getUserPointer(_swig_base)
}

func _swig_wrap_btConeShape_serializeSingleShape(SwigcptrBtConeShape, uintptr)

func (_swig_base SwigcptrBtConeShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btConeShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConeShape) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtConeShape) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtConeShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtConeShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtConeShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtConeShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtConeShape interface {
	Swigcptr() uintptr
	SwigIsBtConeShape()
	LocalGetSupportingVertex(arg2 BtVector3) BtVector3
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	GetRadius() float32
	GetHeight() float32
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	GetName() string
	SetConeUpIndex(arg2 int)
	GetConeUpIndex() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetLocalScaling(arg2 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	SetMargin(arg1 float32)
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtConeShapeX uintptr

func (p SwigcptrBtConeShapeX) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConeShapeX) SwigIsBtConeShapeX() {
}

func _swig_wrap_new_btConeShapeX(float32, float32) SwigcptrBtConeShapeX

func NewBtConeShapeX(arg1 float32, arg2 float32) BtConeShapeX {
	return _swig_wrap_new_btConeShapeX(arg1, arg2)
}

func _swig_wrap_btConeShapeX_getAnisotropicRollingFrictionDirection(SwigcptrBtConeShapeX) SwigcptrBtVector3

func (arg1 SwigcptrBtConeShapeX) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btConeShapeX_getAnisotropicRollingFrictionDirection(arg1)
}

func _swig_wrap_btConeShapeX_getName(SwigcptrBtConeShapeX) string

func (arg1 SwigcptrBtConeShapeX) GetName() string {
	return _swig_wrap_btConeShapeX_getName(arg1)
}

func _swig_wrap_delete_btConeShapeX(uintptr)

func DeleteBtConeShapeX(arg1 BtConeShapeX) {
	_swig_wrap_delete_btConeShapeX(arg1.Swigcptr())
}

func _swig_wrap_btConeShapeX_localGetSupportingVertex(SwigcptrBtConeShapeX, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeX) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConeShapeX_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeX_localGetSupportingVertexWithoutMargin(SwigcptrBtConeShapeX, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeX) LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConeShapeX_localGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeX_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtConeShapeX, uintptr, uintptr, int)

func (_swig_base SwigcptrBtConeShapeX) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int) {
	_swig_wrap_btConeShapeX_batchedUnitVectorGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btConeShapeX_getRadius(SwigcptrBtConeShapeX) float32

func (_swig_base SwigcptrBtConeShapeX) GetRadius() float32 {
	return _swig_wrap_btConeShapeX_getRadius(_swig_base)
}

func _swig_wrap_btConeShapeX_getHeight(SwigcptrBtConeShapeX) float32

func (_swig_base SwigcptrBtConeShapeX) GetHeight() float32 {
	return _swig_wrap_btConeShapeX_getHeight(_swig_base)
}

func _swig_wrap_btConeShapeX_calculateLocalInertia(SwigcptrBtConeShapeX, float32, uintptr)

func (_swig_base SwigcptrBtConeShapeX) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btConeShapeX_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeShapeX_setConeUpIndex(SwigcptrBtConeShapeX, int)

func (_swig_base SwigcptrBtConeShapeX) SetConeUpIndex(arg1 int) {
	_swig_wrap_btConeShapeX_setConeUpIndex(_swig_base, arg1)
}

func _swig_wrap_btConeShapeX_getConeUpIndex(SwigcptrBtConeShapeX) int

func (_swig_base SwigcptrBtConeShapeX) GetConeUpIndex() int {
	return _swig_wrap_btConeShapeX_getConeUpIndex(_swig_base)
}

func _swig_wrap_btConeShapeX_setLocalScaling(SwigcptrBtConeShapeX, uintptr)

func (_swig_base SwigcptrBtConeShapeX) SetLocalScaling(arg1 BtVector3) {
	_swig_wrap_btConeShapeX_setLocalScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeX_calculateSerializeBufferSize(SwigcptrBtConeShapeX) int

func (_swig_base SwigcptrBtConeShapeX) CalculateSerializeBufferSize() int {
	return _swig_wrap_btConeShapeX_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btConeShapeX_serialize(SwigcptrBtConeShapeX, uintptr, uintptr) string

func (_swig_base SwigcptrBtConeShapeX) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btConeShapeX_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeShapeX_getImplicitShapeDimensions(SwigcptrBtConeShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeX) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btConeShapeX_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btConeShapeX_setImplicitShapeDimensions(SwigcptrBtConeShapeX, uintptr)

func (_swig_base SwigcptrBtConeShapeX) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btConeShapeX_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeX_setSafeMargin__SWIG_0(SwigcptrBtConeShapeX, float32, float32)

func (_swig_base SwigcptrBtConeShapeX) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btConeShapeX_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btConeShapeX_setSafeMargin__SWIG_1(SwigcptrBtConeShapeX, float32)

func (_swig_base SwigcptrBtConeShapeX) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btConeShapeX_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btConeShapeX_setSafeMargin__SWIG_2(SwigcptrBtConeShapeX, uintptr, float32)

func (_swig_base SwigcptrBtConeShapeX) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btConeShapeX_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConeShapeX_setSafeMargin__SWIG_3(SwigcptrBtConeShapeX, uintptr)

func (_swig_base SwigcptrBtConeShapeX) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btConeShapeX_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConeShapeX) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConeShapeX_getAabb(SwigcptrBtConeShapeX, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShapeX) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConeShapeX_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConeShapeX_getAabbSlow(SwigcptrBtConeShapeX, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShapeX) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConeShapeX_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConeShapeX_getLocalScaling(SwigcptrBtConeShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeX) GetLocalScaling() BtVector3 {
	return _swig_wrap_btConeShapeX_getLocalScaling(_swig_base)
}

func _swig_wrap_btConeShapeX_getLocalScalingNV(SwigcptrBtConeShapeX) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeX) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btConeShapeX_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btConeShapeX_setMargin(SwigcptrBtConeShapeX, float32)

func (_swig_base SwigcptrBtConeShapeX) SetMargin(arg1 float32) {
	_swig_wrap_btConeShapeX_setMargin(_swig_base, arg1)
}

func _swig_wrap_btConeShapeX_getMargin(SwigcptrBtConeShapeX) float32

func (_swig_base SwigcptrBtConeShapeX) GetMargin() float32 {
	return _swig_wrap_btConeShapeX_getMargin(_swig_base)
}

func _swig_wrap_btConeShapeX_getMarginNV(SwigcptrBtConeShapeX) float32

func (_swig_base SwigcptrBtConeShapeX) GetMarginNV() float32 {
	return _swig_wrap_btConeShapeX_getMarginNV(_swig_base)
}

func _swig_wrap_btConeShapeX_getNumPreferredPenetrationDirections(SwigcptrBtConeShapeX) int

func (_swig_base SwigcptrBtConeShapeX) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btConeShapeX_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btConeShapeX_getPreferredPenetrationDirection(SwigcptrBtConeShapeX, int, uintptr)

func (_swig_base SwigcptrBtConeShapeX) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btConeShapeX_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeShapeX_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtConeShapeX, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeX) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConeShapeX_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeX_localGetSupportVertexNonVirtual(SwigcptrBtConeShapeX, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeX) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConeShapeX_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeX_getMarginNonVirtual(SwigcptrBtConeShapeX) float32

func (_swig_base SwigcptrBtConeShapeX) GetMarginNonVirtual() float32 {
	return _swig_wrap_btConeShapeX_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btConeShapeX_getAabbNonVirtual(SwigcptrBtConeShapeX, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShapeX) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConeShapeX_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConeShapeX_project(SwigcptrBtConeShapeX, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtConeShapeX) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btConeShapeX_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btConeShapeX_getBoundingSphere(SwigcptrBtConeShapeX, uintptr, *float32)

func (_swig_base SwigcptrBtConeShapeX) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btConeShapeX_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConeShapeX_getAngularMotionDisc(SwigcptrBtConeShapeX) float32

func (_swig_base SwigcptrBtConeShapeX) GetAngularMotionDisc() float32 {
	return _swig_wrap_btConeShapeX_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btConeShapeX_getContactBreakingThreshold(SwigcptrBtConeShapeX, float32) float32

func (_swig_base SwigcptrBtConeShapeX) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btConeShapeX_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btConeShapeX_calculateTemporalAabb(SwigcptrBtConeShapeX, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShapeX) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btConeShapeX_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btConeShapeX_isPolyhedral(SwigcptrBtConeShapeX) bool

func (_swig_base SwigcptrBtConeShapeX) IsPolyhedral() bool {
	return _swig_wrap_btConeShapeX_isPolyhedral(_swig_base)
}

func _swig_wrap_btConeShapeX_isConvex2d(SwigcptrBtConeShapeX) bool

func (_swig_base SwigcptrBtConeShapeX) IsConvex2d() bool {
	return _swig_wrap_btConeShapeX_isConvex2d(_swig_base)
}

func _swig_wrap_btConeShapeX_isConvex(SwigcptrBtConeShapeX) bool

func (_swig_base SwigcptrBtConeShapeX) IsConvex() bool {
	return _swig_wrap_btConeShapeX_isConvex(_swig_base)
}

func _swig_wrap_btConeShapeX_isNonMoving(SwigcptrBtConeShapeX) bool

func (_swig_base SwigcptrBtConeShapeX) IsNonMoving() bool {
	return _swig_wrap_btConeShapeX_isNonMoving(_swig_base)
}

func _swig_wrap_btConeShapeX_isConcave(SwigcptrBtConeShapeX) bool

func (_swig_base SwigcptrBtConeShapeX) IsConcave() bool {
	return _swig_wrap_btConeShapeX_isConcave(_swig_base)
}

func _swig_wrap_btConeShapeX_isCompound(SwigcptrBtConeShapeX) bool

func (_swig_base SwigcptrBtConeShapeX) IsCompound() bool {
	return _swig_wrap_btConeShapeX_isCompound(_swig_base)
}

func _swig_wrap_btConeShapeX_isSoftBody(SwigcptrBtConeShapeX) bool

func (_swig_base SwigcptrBtConeShapeX) IsSoftBody() bool {
	return _swig_wrap_btConeShapeX_isSoftBody(_swig_base)
}

func _swig_wrap_btConeShapeX_isInfinite(SwigcptrBtConeShapeX) bool

func (_swig_base SwigcptrBtConeShapeX) IsInfinite() bool {
	return _swig_wrap_btConeShapeX_isInfinite(_swig_base)
}

func _swig_wrap_btConeShapeX_getShapeType(SwigcptrBtConeShapeX) int

func (_swig_base SwigcptrBtConeShapeX) GetShapeType() int {
	return _swig_wrap_btConeShapeX_getShapeType(_swig_base)
}

func _swig_wrap_btConeShapeX_setUserPointer(SwigcptrBtConeShapeX, uintptr)

func (_swig_base SwigcptrBtConeShapeX) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btConeShapeX_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btConeShapeX_getUserPointer(SwigcptrBtConeShapeX) uintptr

func (_swig_base SwigcptrBtConeShapeX) GetUserPointer() uintptr {
	return _swig_wrap_btConeShapeX_getUserPointer(_swig_base)
}

func _swig_wrap_btConeShapeX_serializeSingleShape(SwigcptrBtConeShapeX, uintptr)

func (_swig_base SwigcptrBtConeShapeX) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btConeShapeX_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConeShapeX) SwigIsBtConeShape() {
}

func (p SwigcptrBtConeShapeX) SwigGetBtConeShape() BtConeShape {
	return SwigcptrBtConeShape(p.Swigcptr())
}

func (p SwigcptrBtConeShapeX) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtConeShapeX) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtConeShapeX) SwigIsBtConvexShape() {
}

func (p SwigcptrBtConeShapeX) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtConeShapeX) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtConeShapeX) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtConeShapeX interface {
	Swigcptr() uintptr
	SwigIsBtConeShapeX()
	GetAnisotropicRollingFrictionDirection() BtVector3
	GetName() string
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int)
	GetRadius() float32
	GetHeight() float32
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	SetConeUpIndex(arg1 int)
	GetConeUpIndex() int
	SetLocalScaling(arg1 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	SetMargin(arg1 float32)
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConeShape()
	SwigGetBtConeShape() BtConeShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtConeShapeZ uintptr

func (p SwigcptrBtConeShapeZ) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConeShapeZ) SwigIsBtConeShapeZ() {
}

func _swig_wrap_new_btConeShapeZ(float32, float32) SwigcptrBtConeShapeZ

func NewBtConeShapeZ(arg1 float32, arg2 float32) BtConeShapeZ {
	return _swig_wrap_new_btConeShapeZ(arg1, arg2)
}

func _swig_wrap_btConeShapeZ_getAnisotropicRollingFrictionDirection(SwigcptrBtConeShapeZ) SwigcptrBtVector3

func (arg1 SwigcptrBtConeShapeZ) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btConeShapeZ_getAnisotropicRollingFrictionDirection(arg1)
}

func _swig_wrap_btConeShapeZ_getName(SwigcptrBtConeShapeZ) string

func (arg1 SwigcptrBtConeShapeZ) GetName() string {
	return _swig_wrap_btConeShapeZ_getName(arg1)
}

func _swig_wrap_delete_btConeShapeZ(uintptr)

func DeleteBtConeShapeZ(arg1 BtConeShapeZ) {
	_swig_wrap_delete_btConeShapeZ(arg1.Swigcptr())
}

func _swig_wrap_btConeShapeZ_localGetSupportingVertex(SwigcptrBtConeShapeZ, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeZ) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConeShapeZ_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeZ_localGetSupportingVertexWithoutMargin(SwigcptrBtConeShapeZ, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeZ) LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConeShapeZ_localGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeZ_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtConeShapeZ, uintptr, uintptr, int)

func (_swig_base SwigcptrBtConeShapeZ) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int) {
	_swig_wrap_btConeShapeZ_batchedUnitVectorGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btConeShapeZ_getRadius(SwigcptrBtConeShapeZ) float32

func (_swig_base SwigcptrBtConeShapeZ) GetRadius() float32 {
	return _swig_wrap_btConeShapeZ_getRadius(_swig_base)
}

func _swig_wrap_btConeShapeZ_getHeight(SwigcptrBtConeShapeZ) float32

func (_swig_base SwigcptrBtConeShapeZ) GetHeight() float32 {
	return _swig_wrap_btConeShapeZ_getHeight(_swig_base)
}

func _swig_wrap_btConeShapeZ_calculateLocalInertia(SwigcptrBtConeShapeZ, float32, uintptr)

func (_swig_base SwigcptrBtConeShapeZ) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btConeShapeZ_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeShapeZ_setConeUpIndex(SwigcptrBtConeShapeZ, int)

func (_swig_base SwigcptrBtConeShapeZ) SetConeUpIndex(arg1 int) {
	_swig_wrap_btConeShapeZ_setConeUpIndex(_swig_base, arg1)
}

func _swig_wrap_btConeShapeZ_getConeUpIndex(SwigcptrBtConeShapeZ) int

func (_swig_base SwigcptrBtConeShapeZ) GetConeUpIndex() int {
	return _swig_wrap_btConeShapeZ_getConeUpIndex(_swig_base)
}

func _swig_wrap_btConeShapeZ_setLocalScaling(SwigcptrBtConeShapeZ, uintptr)

func (_swig_base SwigcptrBtConeShapeZ) SetLocalScaling(arg1 BtVector3) {
	_swig_wrap_btConeShapeZ_setLocalScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeZ_calculateSerializeBufferSize(SwigcptrBtConeShapeZ) int

func (_swig_base SwigcptrBtConeShapeZ) CalculateSerializeBufferSize() int {
	return _swig_wrap_btConeShapeZ_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btConeShapeZ_serialize(SwigcptrBtConeShapeZ, uintptr, uintptr) string

func (_swig_base SwigcptrBtConeShapeZ) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btConeShapeZ_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeShapeZ_getImplicitShapeDimensions(SwigcptrBtConeShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeZ) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btConeShapeZ_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btConeShapeZ_setImplicitShapeDimensions(SwigcptrBtConeShapeZ, uintptr)

func (_swig_base SwigcptrBtConeShapeZ) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btConeShapeZ_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeZ_setSafeMargin__SWIG_0(SwigcptrBtConeShapeZ, float32, float32)

func (_swig_base SwigcptrBtConeShapeZ) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btConeShapeZ_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btConeShapeZ_setSafeMargin__SWIG_1(SwigcptrBtConeShapeZ, float32)

func (_swig_base SwigcptrBtConeShapeZ) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btConeShapeZ_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btConeShapeZ_setSafeMargin__SWIG_2(SwigcptrBtConeShapeZ, uintptr, float32)

func (_swig_base SwigcptrBtConeShapeZ) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btConeShapeZ_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConeShapeZ_setSafeMargin__SWIG_3(SwigcptrBtConeShapeZ, uintptr)

func (_swig_base SwigcptrBtConeShapeZ) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btConeShapeZ_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConeShapeZ) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConeShapeZ_getAabb(SwigcptrBtConeShapeZ, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShapeZ) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConeShapeZ_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConeShapeZ_getAabbSlow(SwigcptrBtConeShapeZ, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShapeZ) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConeShapeZ_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConeShapeZ_getLocalScaling(SwigcptrBtConeShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeZ) GetLocalScaling() BtVector3 {
	return _swig_wrap_btConeShapeZ_getLocalScaling(_swig_base)
}

func _swig_wrap_btConeShapeZ_getLocalScalingNV(SwigcptrBtConeShapeZ) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeZ) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btConeShapeZ_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btConeShapeZ_setMargin(SwigcptrBtConeShapeZ, float32)

func (_swig_base SwigcptrBtConeShapeZ) SetMargin(arg1 float32) {
	_swig_wrap_btConeShapeZ_setMargin(_swig_base, arg1)
}

func _swig_wrap_btConeShapeZ_getMargin(SwigcptrBtConeShapeZ) float32

func (_swig_base SwigcptrBtConeShapeZ) GetMargin() float32 {
	return _swig_wrap_btConeShapeZ_getMargin(_swig_base)
}

func _swig_wrap_btConeShapeZ_getMarginNV(SwigcptrBtConeShapeZ) float32

func (_swig_base SwigcptrBtConeShapeZ) GetMarginNV() float32 {
	return _swig_wrap_btConeShapeZ_getMarginNV(_swig_base)
}

func _swig_wrap_btConeShapeZ_getNumPreferredPenetrationDirections(SwigcptrBtConeShapeZ) int

func (_swig_base SwigcptrBtConeShapeZ) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btConeShapeZ_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btConeShapeZ_getPreferredPenetrationDirection(SwigcptrBtConeShapeZ, int, uintptr)

func (_swig_base SwigcptrBtConeShapeZ) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btConeShapeZ_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeShapeZ_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtConeShapeZ, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeZ) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConeShapeZ_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeZ_localGetSupportVertexNonVirtual(SwigcptrBtConeShapeZ, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConeShapeZ) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConeShapeZ_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeShapeZ_getMarginNonVirtual(SwigcptrBtConeShapeZ) float32

func (_swig_base SwigcptrBtConeShapeZ) GetMarginNonVirtual() float32 {
	return _swig_wrap_btConeShapeZ_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btConeShapeZ_getAabbNonVirtual(SwigcptrBtConeShapeZ, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShapeZ) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConeShapeZ_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConeShapeZ_project(SwigcptrBtConeShapeZ, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtConeShapeZ) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btConeShapeZ_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btConeShapeZ_getBoundingSphere(SwigcptrBtConeShapeZ, uintptr, *float32)

func (_swig_base SwigcptrBtConeShapeZ) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btConeShapeZ_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConeShapeZ_getAngularMotionDisc(SwigcptrBtConeShapeZ) float32

func (_swig_base SwigcptrBtConeShapeZ) GetAngularMotionDisc() float32 {
	return _swig_wrap_btConeShapeZ_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btConeShapeZ_getContactBreakingThreshold(SwigcptrBtConeShapeZ, float32) float32

func (_swig_base SwigcptrBtConeShapeZ) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btConeShapeZ_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btConeShapeZ_calculateTemporalAabb(SwigcptrBtConeShapeZ, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtConeShapeZ) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btConeShapeZ_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btConeShapeZ_isPolyhedral(SwigcptrBtConeShapeZ) bool

func (_swig_base SwigcptrBtConeShapeZ) IsPolyhedral() bool {
	return _swig_wrap_btConeShapeZ_isPolyhedral(_swig_base)
}

func _swig_wrap_btConeShapeZ_isConvex2d(SwigcptrBtConeShapeZ) bool

func (_swig_base SwigcptrBtConeShapeZ) IsConvex2d() bool {
	return _swig_wrap_btConeShapeZ_isConvex2d(_swig_base)
}

func _swig_wrap_btConeShapeZ_isConvex(SwigcptrBtConeShapeZ) bool

func (_swig_base SwigcptrBtConeShapeZ) IsConvex() bool {
	return _swig_wrap_btConeShapeZ_isConvex(_swig_base)
}

func _swig_wrap_btConeShapeZ_isNonMoving(SwigcptrBtConeShapeZ) bool

func (_swig_base SwigcptrBtConeShapeZ) IsNonMoving() bool {
	return _swig_wrap_btConeShapeZ_isNonMoving(_swig_base)
}

func _swig_wrap_btConeShapeZ_isConcave(SwigcptrBtConeShapeZ) bool

func (_swig_base SwigcptrBtConeShapeZ) IsConcave() bool {
	return _swig_wrap_btConeShapeZ_isConcave(_swig_base)
}

func _swig_wrap_btConeShapeZ_isCompound(SwigcptrBtConeShapeZ) bool

func (_swig_base SwigcptrBtConeShapeZ) IsCompound() bool {
	return _swig_wrap_btConeShapeZ_isCompound(_swig_base)
}

func _swig_wrap_btConeShapeZ_isSoftBody(SwigcptrBtConeShapeZ) bool

func (_swig_base SwigcptrBtConeShapeZ) IsSoftBody() bool {
	return _swig_wrap_btConeShapeZ_isSoftBody(_swig_base)
}

func _swig_wrap_btConeShapeZ_isInfinite(SwigcptrBtConeShapeZ) bool

func (_swig_base SwigcptrBtConeShapeZ) IsInfinite() bool {
	return _swig_wrap_btConeShapeZ_isInfinite(_swig_base)
}

func _swig_wrap_btConeShapeZ_getShapeType(SwigcptrBtConeShapeZ) int

func (_swig_base SwigcptrBtConeShapeZ) GetShapeType() int {
	return _swig_wrap_btConeShapeZ_getShapeType(_swig_base)
}

func _swig_wrap_btConeShapeZ_setUserPointer(SwigcptrBtConeShapeZ, uintptr)

func (_swig_base SwigcptrBtConeShapeZ) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btConeShapeZ_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btConeShapeZ_getUserPointer(SwigcptrBtConeShapeZ) uintptr

func (_swig_base SwigcptrBtConeShapeZ) GetUserPointer() uintptr {
	return _swig_wrap_btConeShapeZ_getUserPointer(_swig_base)
}

func _swig_wrap_btConeShapeZ_serializeSingleShape(SwigcptrBtConeShapeZ, uintptr)

func (_swig_base SwigcptrBtConeShapeZ) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btConeShapeZ_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConeShapeZ) SwigIsBtConeShape() {
}

func (p SwigcptrBtConeShapeZ) SwigGetBtConeShape() BtConeShape {
	return SwigcptrBtConeShape(p.Swigcptr())
}

func (p SwigcptrBtConeShapeZ) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtConeShapeZ) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtConeShapeZ) SwigIsBtConvexShape() {
}

func (p SwigcptrBtConeShapeZ) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtConeShapeZ) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtConeShapeZ) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtConeShapeZ interface {
	Swigcptr() uintptr
	SwigIsBtConeShapeZ()
	GetAnisotropicRollingFrictionDirection() BtVector3
	GetName() string
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int)
	GetRadius() float32
	GetHeight() float32
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	SetConeUpIndex(arg1 int)
	GetConeUpIndex() int
	SetLocalScaling(arg1 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	SetMargin(arg1 float32)
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConeShape()
	SwigGetBtConeShape() BtConeShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtConeShapeData uintptr

func (p SwigcptrBtConeShapeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConeShapeData) SwigIsBtConeShapeData() {
}

func _swig_wrap_btConeShapeData_m_convexInternalShapeData_set(SwigcptrBtConeShapeData, uintptr)

func (arg1 SwigcptrBtConeShapeData) SetM_convexInternalShapeData(arg2 BtConvexInternalShapeData) {
	_swig_wrap_btConeShapeData_m_convexInternalShapeData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeShapeData_m_convexInternalShapeData_get(SwigcptrBtConeShapeData) SwigcptrBtConvexInternalShapeData

func (arg1 SwigcptrBtConeShapeData) GetM_convexInternalShapeData() BtConvexInternalShapeData {
	return _swig_wrap_btConeShapeData_m_convexInternalShapeData_get(arg1)
}

func _swig_wrap_btConeShapeData_m_upIndex_set(SwigcptrBtConeShapeData, int)

func (arg1 SwigcptrBtConeShapeData) SetM_upIndex(arg2 int) {
	_swig_wrap_btConeShapeData_m_upIndex_set(arg1, arg2)
}

func _swig_wrap_btConeShapeData_m_upIndex_get(SwigcptrBtConeShapeData) int

func (arg1 SwigcptrBtConeShapeData) GetM_upIndex() int {
	return _swig_wrap_btConeShapeData_m_upIndex_get(arg1)
}

func _swig_wrap_btConeShapeData_m_padding_set(SwigcptrBtConeShapeData, string)

func (arg1 SwigcptrBtConeShapeData) SetM_padding(arg2 string) {
	_swig_wrap_btConeShapeData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btConeShapeData_m_padding_get(SwigcptrBtConeShapeData) string

func (arg1 SwigcptrBtConeShapeData) GetM_padding() string {
	return _swig_wrap_btConeShapeData_m_padding_get(arg1)
}

func _swig_wrap_new_btConeShapeData() SwigcptrBtConeShapeData

func NewBtConeShapeData() BtConeShapeData {
	return _swig_wrap_new_btConeShapeData()
}

func _swig_wrap_delete_btConeShapeData(uintptr)

func DeleteBtConeShapeData(arg1 BtConeShapeData) {
	_swig_wrap_delete_btConeShapeData(arg1.Swigcptr())
}

type BtConeShapeData interface {
	Swigcptr() uintptr
	SwigIsBtConeShapeData()
	SetM_convexInternalShapeData(arg2 BtConvexInternalShapeData)
	GetM_convexInternalShapeData() BtConvexInternalShapeData
	SetM_upIndex(arg2 int)
	GetM_upIndex() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtTriangleCallback uintptr

func (p SwigcptrBtTriangleCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTriangleCallback) SwigIsBtTriangleCallback() {
}

func _swig_wrap_delete_btTriangleCallback(uintptr)

func DeleteBtTriangleCallback(arg1 BtTriangleCallback) {
	_swig_wrap_delete_btTriangleCallback(arg1.Swigcptr())
}

func _swig_wrap_btTriangleCallback_processTriangle(SwigcptrBtTriangleCallback, uintptr, int, int)

func (arg1 SwigcptrBtTriangleCallback) ProcessTriangle(arg2 BtVector3, arg3 int, arg4 int) {
	_swig_wrap_btTriangleCallback_processTriangle(arg1, arg2.Swigcptr(), arg3, arg4)
}

type BtTriangleCallback interface {
	Swigcptr() uintptr
	SwigIsBtTriangleCallback()
	ProcessTriangle(arg2 BtVector3, arg3 int, arg4 int)
}

type SwigcptrBtInternalTriangleIndexCallback uintptr

func (p SwigcptrBtInternalTriangleIndexCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtInternalTriangleIndexCallback) SwigIsBtInternalTriangleIndexCallback() {
}

func _swig_wrap_delete_btInternalTriangleIndexCallback(uintptr)

func DeleteBtInternalTriangleIndexCallback(arg1 BtInternalTriangleIndexCallback) {
	_swig_wrap_delete_btInternalTriangleIndexCallback(arg1.Swigcptr())
}

func _swig_wrap_btInternalTriangleIndexCallback_internalProcessTriangleIndex(SwigcptrBtInternalTriangleIndexCallback, uintptr, int, int)

func (arg1 SwigcptrBtInternalTriangleIndexCallback) InternalProcessTriangleIndex(arg2 BtVector3, arg3 int, arg4 int) {
	_swig_wrap_btInternalTriangleIndexCallback_internalProcessTriangleIndex(arg1, arg2.Swigcptr(), arg3, arg4)
}

type BtInternalTriangleIndexCallback interface {
	Swigcptr() uintptr
	SwigIsBtInternalTriangleIndexCallback()
	InternalProcessTriangleIndex(arg2 BtVector3, arg3 int, arg4 int)
}

type PHY_ScalarType int

func _swig_getPHY_FLOAT() PHY_ScalarType

var PHY_FLOAT PHY_ScalarType = _swig_getPHY_FLOAT()

func _swig_getPHY_DOUBLE() PHY_ScalarType

var PHY_DOUBLE PHY_ScalarType = _swig_getPHY_DOUBLE()

func _swig_getPHY_INTEGER() PHY_ScalarType

var PHY_INTEGER PHY_ScalarType = _swig_getPHY_INTEGER()

func _swig_getPHY_SHORT() PHY_ScalarType

var PHY_SHORT PHY_ScalarType = _swig_getPHY_SHORT()

func _swig_getPHY_FIXEDPOINT88() PHY_ScalarType

var PHY_FIXEDPOINT88 PHY_ScalarType = _swig_getPHY_FIXEDPOINT88()

func _swig_getPHY_UCHAR() PHY_ScalarType

var PHY_UCHAR PHY_ScalarType = _swig_getPHY_UCHAR()

type SwigcptrBtConcaveShape uintptr

func (p SwigcptrBtConcaveShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConcaveShape) SwigIsBtConcaveShape() {
}

func _swig_wrap_delete_btConcaveShape(uintptr)

func DeleteBtConcaveShape(arg1 BtConcaveShape) {
	_swig_wrap_delete_btConcaveShape(arg1.Swigcptr())
}

func _swig_wrap_btConcaveShape_processAllTriangles(SwigcptrBtConcaveShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtConcaveShape) ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btConcaveShape_processAllTriangles(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btConcaveShape_getMargin(SwigcptrBtConcaveShape) float32

func (arg1 SwigcptrBtConcaveShape) GetMargin() float32 {
	return _swig_wrap_btConcaveShape_getMargin(arg1)
}

func _swig_wrap_btConcaveShape_setMargin(SwigcptrBtConcaveShape, float32)

func (arg1 SwigcptrBtConcaveShape) SetMargin(arg2 float32) {
	_swig_wrap_btConcaveShape_setMargin(arg1, arg2)
}

func _swig_wrap_btConcaveShape_getAabb(SwigcptrBtConcaveShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConcaveShape) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConcaveShape_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConcaveShape_getBoundingSphere(SwigcptrBtConcaveShape, uintptr, *float32)

func (_swig_base SwigcptrBtConcaveShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btConcaveShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConcaveShape_getAngularMotionDisc(SwigcptrBtConcaveShape) float32

func (_swig_base SwigcptrBtConcaveShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btConcaveShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btConcaveShape_getContactBreakingThreshold(SwigcptrBtConcaveShape, float32) float32

func (_swig_base SwigcptrBtConcaveShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btConcaveShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btConcaveShape_calculateTemporalAabb(SwigcptrBtConcaveShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtConcaveShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btConcaveShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btConcaveShape_isPolyhedral(SwigcptrBtConcaveShape) bool

func (_swig_base SwigcptrBtConcaveShape) IsPolyhedral() bool {
	return _swig_wrap_btConcaveShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btConcaveShape_isConvex2d(SwigcptrBtConcaveShape) bool

func (_swig_base SwigcptrBtConcaveShape) IsConvex2d() bool {
	return _swig_wrap_btConcaveShape_isConvex2d(_swig_base)
}

func _swig_wrap_btConcaveShape_isConvex(SwigcptrBtConcaveShape) bool

func (_swig_base SwigcptrBtConcaveShape) IsConvex() bool {
	return _swig_wrap_btConcaveShape_isConvex(_swig_base)
}

func _swig_wrap_btConcaveShape_isNonMoving(SwigcptrBtConcaveShape) bool

func (_swig_base SwigcptrBtConcaveShape) IsNonMoving() bool {
	return _swig_wrap_btConcaveShape_isNonMoving(_swig_base)
}

func _swig_wrap_btConcaveShape_isConcave(SwigcptrBtConcaveShape) bool

func (_swig_base SwigcptrBtConcaveShape) IsConcave() bool {
	return _swig_wrap_btConcaveShape_isConcave(_swig_base)
}

func _swig_wrap_btConcaveShape_isCompound(SwigcptrBtConcaveShape) bool

func (_swig_base SwigcptrBtConcaveShape) IsCompound() bool {
	return _swig_wrap_btConcaveShape_isCompound(_swig_base)
}

func _swig_wrap_btConcaveShape_isSoftBody(SwigcptrBtConcaveShape) bool

func (_swig_base SwigcptrBtConcaveShape) IsSoftBody() bool {
	return _swig_wrap_btConcaveShape_isSoftBody(_swig_base)
}

func _swig_wrap_btConcaveShape_isInfinite(SwigcptrBtConcaveShape) bool

func (_swig_base SwigcptrBtConcaveShape) IsInfinite() bool {
	return _swig_wrap_btConcaveShape_isInfinite(_swig_base)
}

func _swig_wrap_btConcaveShape_setLocalScaling(SwigcptrBtConcaveShape, uintptr)

func (_swig_base SwigcptrBtConcaveShape) SetLocalScaling(arg1 BtVector3) {
	_swig_wrap_btConcaveShape_setLocalScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConcaveShape_getLocalScaling(SwigcptrBtConcaveShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConcaveShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btConcaveShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btConcaveShape_calculateLocalInertia(SwigcptrBtConcaveShape, float32, uintptr)

func (_swig_base SwigcptrBtConcaveShape) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btConcaveShape_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConcaveShape_getName(SwigcptrBtConcaveShape) string

func (_swig_base SwigcptrBtConcaveShape) GetName() string {
	return _swig_wrap_btConcaveShape_getName(_swig_base)
}

func _swig_wrap_btConcaveShape_getShapeType(SwigcptrBtConcaveShape) int

func (_swig_base SwigcptrBtConcaveShape) GetShapeType() int {
	return _swig_wrap_btConcaveShape_getShapeType(_swig_base)
}

func _swig_wrap_btConcaveShape_getAnisotropicRollingFrictionDirection(SwigcptrBtConcaveShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConcaveShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btConcaveShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btConcaveShape_setUserPointer(SwigcptrBtConcaveShape, uintptr)

func (_swig_base SwigcptrBtConcaveShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btConcaveShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btConcaveShape_getUserPointer(SwigcptrBtConcaveShape) uintptr

func (_swig_base SwigcptrBtConcaveShape) GetUserPointer() uintptr {
	return _swig_wrap_btConcaveShape_getUserPointer(_swig_base)
}

func _swig_wrap_btConcaveShape_calculateSerializeBufferSize(SwigcptrBtConcaveShape) int

func (_swig_base SwigcptrBtConcaveShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btConcaveShape_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btConcaveShape_serialize(SwigcptrBtConcaveShape, uintptr, uintptr) string

func (_swig_base SwigcptrBtConcaveShape) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btConcaveShape_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConcaveShape_serializeSingleShape(SwigcptrBtConcaveShape, uintptr)

func (_swig_base SwigcptrBtConcaveShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btConcaveShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConcaveShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtConcaveShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtConcaveShape interface {
	Swigcptr() uintptr
	SwigIsBtConcaveShape()
	ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3)
	GetMargin() float32
	SetMargin(arg2 float32)
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	SetLocalScaling(arg1 BtVector3)
	GetLocalScaling() BtVector3
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	GetName() string
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtStaticPlaneShape uintptr

func (p SwigcptrBtStaticPlaneShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtStaticPlaneShape) SwigIsBtStaticPlaneShape() {
}

func _swig_wrap_new_btStaticPlaneShape(uintptr, float32) SwigcptrBtStaticPlaneShape

func NewBtStaticPlaneShape(arg1 BtVector3, arg2 float32) BtStaticPlaneShape {
	return _swig_wrap_new_btStaticPlaneShape(arg1.Swigcptr(), arg2)
}

func _swig_wrap_delete_btStaticPlaneShape(uintptr)

func DeleteBtStaticPlaneShape(arg1 BtStaticPlaneShape) {
	_swig_wrap_delete_btStaticPlaneShape(arg1.Swigcptr())
}

func _swig_wrap_btStaticPlaneShape_getAabb(SwigcptrBtStaticPlaneShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtStaticPlaneShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btStaticPlaneShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btStaticPlaneShape_processAllTriangles(SwigcptrBtStaticPlaneShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtStaticPlaneShape) ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btStaticPlaneShape_processAllTriangles(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btStaticPlaneShape_calculateLocalInertia(SwigcptrBtStaticPlaneShape, float32, uintptr)

func (arg1 SwigcptrBtStaticPlaneShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btStaticPlaneShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btStaticPlaneShape_setLocalScaling(SwigcptrBtStaticPlaneShape, uintptr)

func (arg1 SwigcptrBtStaticPlaneShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btStaticPlaneShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btStaticPlaneShape_getLocalScaling(SwigcptrBtStaticPlaneShape) SwigcptrBtVector3

func (arg1 SwigcptrBtStaticPlaneShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btStaticPlaneShape_getLocalScaling(arg1)
}

func _swig_wrap_btStaticPlaneShape_getPlaneNormal(SwigcptrBtStaticPlaneShape) SwigcptrBtVector3

func (arg1 SwigcptrBtStaticPlaneShape) GetPlaneNormal() BtVector3 {
	return _swig_wrap_btStaticPlaneShape_getPlaneNormal(arg1)
}

func _swig_wrap_btStaticPlaneShape_getPlaneConstant(SwigcptrBtStaticPlaneShape) float32

func (arg1 SwigcptrBtStaticPlaneShape) GetPlaneConstant() float32 {
	return _swig_wrap_btStaticPlaneShape_getPlaneConstant(arg1)
}

func _swig_wrap_btStaticPlaneShape_getName(SwigcptrBtStaticPlaneShape) string

func (arg1 SwigcptrBtStaticPlaneShape) GetName() string {
	return _swig_wrap_btStaticPlaneShape_getName(arg1)
}

func _swig_wrap_btStaticPlaneShape_calculateSerializeBufferSize(SwigcptrBtStaticPlaneShape) int

func (arg1 SwigcptrBtStaticPlaneShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btStaticPlaneShape_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btStaticPlaneShape_serialize(SwigcptrBtStaticPlaneShape, uintptr, uintptr) string

func (arg1 SwigcptrBtStaticPlaneShape) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btStaticPlaneShape_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btStaticPlaneShape_getMargin(SwigcptrBtStaticPlaneShape) float32

func (_swig_base SwigcptrBtStaticPlaneShape) GetMargin() float32 {
	return _swig_wrap_btStaticPlaneShape_getMargin(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_setMargin(SwigcptrBtStaticPlaneShape, float32)

func (_swig_base SwigcptrBtStaticPlaneShape) SetMargin(arg1 float32) {
	_swig_wrap_btStaticPlaneShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btStaticPlaneShape_getBoundingSphere(SwigcptrBtStaticPlaneShape, uintptr, *float32)

func (_swig_base SwigcptrBtStaticPlaneShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btStaticPlaneShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btStaticPlaneShape_getAngularMotionDisc(SwigcptrBtStaticPlaneShape) float32

func (_swig_base SwigcptrBtStaticPlaneShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btStaticPlaneShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_getContactBreakingThreshold(SwigcptrBtStaticPlaneShape, float32) float32

func (_swig_base SwigcptrBtStaticPlaneShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btStaticPlaneShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btStaticPlaneShape_calculateTemporalAabb(SwigcptrBtStaticPlaneShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtStaticPlaneShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btStaticPlaneShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btStaticPlaneShape_isPolyhedral(SwigcptrBtStaticPlaneShape) bool

func (_swig_base SwigcptrBtStaticPlaneShape) IsPolyhedral() bool {
	return _swig_wrap_btStaticPlaneShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_isConvex2d(SwigcptrBtStaticPlaneShape) bool

func (_swig_base SwigcptrBtStaticPlaneShape) IsConvex2d() bool {
	return _swig_wrap_btStaticPlaneShape_isConvex2d(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_isConvex(SwigcptrBtStaticPlaneShape) bool

func (_swig_base SwigcptrBtStaticPlaneShape) IsConvex() bool {
	return _swig_wrap_btStaticPlaneShape_isConvex(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_isNonMoving(SwigcptrBtStaticPlaneShape) bool

func (_swig_base SwigcptrBtStaticPlaneShape) IsNonMoving() bool {
	return _swig_wrap_btStaticPlaneShape_isNonMoving(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_isConcave(SwigcptrBtStaticPlaneShape) bool

func (_swig_base SwigcptrBtStaticPlaneShape) IsConcave() bool {
	return _swig_wrap_btStaticPlaneShape_isConcave(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_isCompound(SwigcptrBtStaticPlaneShape) bool

func (_swig_base SwigcptrBtStaticPlaneShape) IsCompound() bool {
	return _swig_wrap_btStaticPlaneShape_isCompound(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_isSoftBody(SwigcptrBtStaticPlaneShape) bool

func (_swig_base SwigcptrBtStaticPlaneShape) IsSoftBody() bool {
	return _swig_wrap_btStaticPlaneShape_isSoftBody(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_isInfinite(SwigcptrBtStaticPlaneShape) bool

func (_swig_base SwigcptrBtStaticPlaneShape) IsInfinite() bool {
	return _swig_wrap_btStaticPlaneShape_isInfinite(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_getShapeType(SwigcptrBtStaticPlaneShape) int

func (_swig_base SwigcptrBtStaticPlaneShape) GetShapeType() int {
	return _swig_wrap_btStaticPlaneShape_getShapeType(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_getAnisotropicRollingFrictionDirection(SwigcptrBtStaticPlaneShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtStaticPlaneShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btStaticPlaneShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_setUserPointer(SwigcptrBtStaticPlaneShape, uintptr)

func (_swig_base SwigcptrBtStaticPlaneShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btStaticPlaneShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btStaticPlaneShape_getUserPointer(SwigcptrBtStaticPlaneShape) uintptr

func (_swig_base SwigcptrBtStaticPlaneShape) GetUserPointer() uintptr {
	return _swig_wrap_btStaticPlaneShape_getUserPointer(_swig_base)
}

func _swig_wrap_btStaticPlaneShape_serializeSingleShape(SwigcptrBtStaticPlaneShape, uintptr)

func (_swig_base SwigcptrBtStaticPlaneShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btStaticPlaneShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtStaticPlaneShape) SwigIsBtConcaveShape() {
}

func (p SwigcptrBtStaticPlaneShape) SwigGetBtConcaveShape() BtConcaveShape {
	return SwigcptrBtConcaveShape(p.Swigcptr())
}

func (p SwigcptrBtStaticPlaneShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtStaticPlaneShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtStaticPlaneShape interface {
	Swigcptr() uintptr
	SwigIsBtStaticPlaneShape()
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3)
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	SetLocalScaling(arg2 BtVector3)
	GetLocalScaling() BtVector3
	GetPlaneNormal() BtVector3
	GetPlaneConstant() float32
	GetName() string
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetMargin() float32
	SetMargin(arg1 float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConcaveShape()
	SwigGetBtConcaveShape() BtConcaveShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtStaticPlaneShapeData uintptr

func (p SwigcptrBtStaticPlaneShapeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtStaticPlaneShapeData) SwigIsBtStaticPlaneShapeData() {
}

func _swig_wrap_btStaticPlaneShapeData_m_collisionShapeData_set(SwigcptrBtStaticPlaneShapeData, uintptr)

func (arg1 SwigcptrBtStaticPlaneShapeData) SetM_collisionShapeData(arg2 BtCollisionShapeData) {
	_swig_wrap_btStaticPlaneShapeData_m_collisionShapeData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btStaticPlaneShapeData_m_collisionShapeData_get(SwigcptrBtStaticPlaneShapeData) SwigcptrBtCollisionShapeData

func (arg1 SwigcptrBtStaticPlaneShapeData) GetM_collisionShapeData() BtCollisionShapeData {
	return _swig_wrap_btStaticPlaneShapeData_m_collisionShapeData_get(arg1)
}

func _swig_wrap_btStaticPlaneShapeData_m_localScaling_set(SwigcptrBtStaticPlaneShapeData, uintptr)

func (arg1 SwigcptrBtStaticPlaneShapeData) SetM_localScaling(arg2 BtVector3FloatData) {
	_swig_wrap_btStaticPlaneShapeData_m_localScaling_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btStaticPlaneShapeData_m_localScaling_get(SwigcptrBtStaticPlaneShapeData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtStaticPlaneShapeData) GetM_localScaling() BtVector3FloatData {
	return _swig_wrap_btStaticPlaneShapeData_m_localScaling_get(arg1)
}

func _swig_wrap_btStaticPlaneShapeData_m_planeNormal_set(SwigcptrBtStaticPlaneShapeData, uintptr)

func (arg1 SwigcptrBtStaticPlaneShapeData) SetM_planeNormal(arg2 BtVector3FloatData) {
	_swig_wrap_btStaticPlaneShapeData_m_planeNormal_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btStaticPlaneShapeData_m_planeNormal_get(SwigcptrBtStaticPlaneShapeData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtStaticPlaneShapeData) GetM_planeNormal() BtVector3FloatData {
	return _swig_wrap_btStaticPlaneShapeData_m_planeNormal_get(arg1)
}

func _swig_wrap_btStaticPlaneShapeData_m_planeConstant_set(SwigcptrBtStaticPlaneShapeData, float32)

func (arg1 SwigcptrBtStaticPlaneShapeData) SetM_planeConstant(arg2 float32) {
	_swig_wrap_btStaticPlaneShapeData_m_planeConstant_set(arg1, arg2)
}

func _swig_wrap_btStaticPlaneShapeData_m_planeConstant_get(SwigcptrBtStaticPlaneShapeData) float32

func (arg1 SwigcptrBtStaticPlaneShapeData) GetM_planeConstant() float32 {
	return _swig_wrap_btStaticPlaneShapeData_m_planeConstant_get(arg1)
}

func _swig_wrap_btStaticPlaneShapeData_m_pad_set(SwigcptrBtStaticPlaneShapeData, string)

func (arg1 SwigcptrBtStaticPlaneShapeData) SetM_pad(arg2 string) {
	_swig_wrap_btStaticPlaneShapeData_m_pad_set(arg1, arg2)
}

func _swig_wrap_btStaticPlaneShapeData_m_pad_get(SwigcptrBtStaticPlaneShapeData) string

func (arg1 SwigcptrBtStaticPlaneShapeData) GetM_pad() string {
	return _swig_wrap_btStaticPlaneShapeData_m_pad_get(arg1)
}

func _swig_wrap_new_btStaticPlaneShapeData() SwigcptrBtStaticPlaneShapeData

func NewBtStaticPlaneShapeData() BtStaticPlaneShapeData {
	return _swig_wrap_new_btStaticPlaneShapeData()
}

func _swig_wrap_delete_btStaticPlaneShapeData(uintptr)

func DeleteBtStaticPlaneShapeData(arg1 BtStaticPlaneShapeData) {
	_swig_wrap_delete_btStaticPlaneShapeData(arg1.Swigcptr())
}

type BtStaticPlaneShapeData interface {
	Swigcptr() uintptr
	SwigIsBtStaticPlaneShapeData()
	SetM_collisionShapeData(arg2 BtCollisionShapeData)
	GetM_collisionShapeData() BtCollisionShapeData
	SetM_localScaling(arg2 BtVector3FloatData)
	GetM_localScaling() BtVector3FloatData
	SetM_planeNormal(arg2 BtVector3FloatData)
	GetM_planeNormal() BtVector3FloatData
	SetM_planeConstant(arg2 float32)
	GetM_planeConstant() float32
	SetM_pad(arg2 string)
	GetM_pad() string
}

type SwigcptrBtConvexHullShape uintptr

func (p SwigcptrBtConvexHullShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConvexHullShape) SwigIsBtConvexHullShape() {
}

func _swig_wrap_new_btConvexHullShape__SWIG_0(*float32, int, int) SwigcptrBtConvexHullShape

func NewBtConvexHullShape__SWIG_0(arg1 *float32, arg2 int, arg3 int) BtConvexHullShape {
	return _swig_wrap_new_btConvexHullShape__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_new_btConvexHullShape__SWIG_1(*float32, int) SwigcptrBtConvexHullShape

func NewBtConvexHullShape__SWIG_1(arg1 *float32, arg2 int) BtConvexHullShape {
	return _swig_wrap_new_btConvexHullShape__SWIG_1(arg1, arg2)
}

func _swig_wrap_new_btConvexHullShape__SWIG_2(*float32) SwigcptrBtConvexHullShape

func NewBtConvexHullShape__SWIG_2(arg1 *float32) BtConvexHullShape {
	return _swig_wrap_new_btConvexHullShape__SWIG_2(arg1)
}

func _swig_wrap_new_btConvexHullShape__SWIG_3() SwigcptrBtConvexHullShape

func NewBtConvexHullShape__SWIG_3() BtConvexHullShape {
	return _swig_wrap_new_btConvexHullShape__SWIG_3()
}

func NewBtConvexHullShape(a ...interface{}) BtConvexHullShape {
	argc := len(a)
	if argc == 0 {
		return NewBtConvexHullShape__SWIG_3()
	}
	if argc == 1 {
		return NewBtConvexHullShape__SWIG_2(a[0].(*float32))
	}
	if argc == 2 {
		return NewBtConvexHullShape__SWIG_1(a[0].(*float32), a[1].(int))
	}
	if argc == 3 {
		return NewBtConvexHullShape__SWIG_0(a[0].(*float32), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConvexHullShape_addPoint__SWIG_0(SwigcptrBtConvexHullShape, uintptr, bool)

func (arg1 SwigcptrBtConvexHullShape) AddPoint__SWIG_0(arg2 BtVector3, arg3 bool) {
	_swig_wrap_btConvexHullShape_addPoint__SWIG_0(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btConvexHullShape_addPoint__SWIG_1(SwigcptrBtConvexHullShape, uintptr)

func (arg1 SwigcptrBtConvexHullShape) AddPoint__SWIG_1(arg2 BtVector3) {
	_swig_wrap_btConvexHullShape_addPoint__SWIG_1(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtConvexHullShape) AddPoint(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddPoint__SWIG_1(a[0].(BtVector3))
		return
	}
	if argc == 2 {
		p.AddPoint__SWIG_0(a[0].(BtVector3), a[1].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConvexHullShape_getUnscaledPoints__SWIG_0(SwigcptrBtConvexHullShape) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexHullShape) GetUnscaledPoints__SWIG_0() BtVector3 {
	return _swig_wrap_btConvexHullShape_getUnscaledPoints__SWIG_0(arg1)
}

func _swig_wrap_btConvexHullShape_getUnscaledPoints__SWIG_1(SwigcptrBtConvexHullShape) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexHullShape) GetUnscaledPoints__SWIG_1() BtVector3 {
	return _swig_wrap_btConvexHullShape_getUnscaledPoints__SWIG_1(arg1)
}

func (p SwigcptrBtConvexHullShape) GetUnscaledPoints(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetUnscaledPoints__SWIG_0()
	}
	if argc == 0 {
		return p.GetUnscaledPoints__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConvexHullShape_getPoints(SwigcptrBtConvexHullShape) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexHullShape) GetPoints() BtVector3 {
	return _swig_wrap_btConvexHullShape_getPoints(arg1)
}

func _swig_wrap_btConvexHullShape_getScaledPoint(SwigcptrBtConvexHullShape, int) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexHullShape) GetScaledPoint(arg2 int) BtVector3 {
	return _swig_wrap_btConvexHullShape_getScaledPoint(arg1, arg2)
}

func _swig_wrap_btConvexHullShape_getNumPoints(SwigcptrBtConvexHullShape) int

func (arg1 SwigcptrBtConvexHullShape) GetNumPoints() int {
	return _swig_wrap_btConvexHullShape_getNumPoints(arg1)
}

func _swig_wrap_btConvexHullShape_localGetSupportingVertex(SwigcptrBtConvexHullShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexHullShape) LocalGetSupportingVertex(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btConvexHullShape_localGetSupportingVertex(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexHullShape_localGetSupportingVertexWithoutMargin(SwigcptrBtConvexHullShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexHullShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btConvexHullShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexHullShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtConvexHullShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtConvexHullShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btConvexHullShape_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btConvexHullShape_project(SwigcptrBtConvexHullShape, uintptr, uintptr, *float32, *float32, uintptr, uintptr)

func (arg1 SwigcptrBtConvexHullShape) Project(arg2 BtTransform, arg3 BtVector3, arg4 *float32, arg5 *float32, arg6 BtVector3, arg7 BtVector3) {
	_swig_wrap_btConvexHullShape_project(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5, arg6.Swigcptr(), arg7.Swigcptr())
}

func _swig_wrap_btConvexHullShape_getName(SwigcptrBtConvexHullShape) string

func (arg1 SwigcptrBtConvexHullShape) GetName() string {
	return _swig_wrap_btConvexHullShape_getName(arg1)
}

func _swig_wrap_btConvexHullShape_getNumVertices(SwigcptrBtConvexHullShape) int

func (arg1 SwigcptrBtConvexHullShape) GetNumVertices() int {
	return _swig_wrap_btConvexHullShape_getNumVertices(arg1)
}

func _swig_wrap_btConvexHullShape_getNumEdges(SwigcptrBtConvexHullShape) int

func (arg1 SwigcptrBtConvexHullShape) GetNumEdges() int {
	return _swig_wrap_btConvexHullShape_getNumEdges(arg1)
}

func _swig_wrap_btConvexHullShape_getEdge(SwigcptrBtConvexHullShape, int, uintptr, uintptr)

func (arg1 SwigcptrBtConvexHullShape) GetEdge(arg2 int, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btConvexHullShape_getEdge(arg1, arg2, arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btConvexHullShape_getVertex(SwigcptrBtConvexHullShape, int, uintptr)

func (arg1 SwigcptrBtConvexHullShape) GetVertex(arg2 int, arg3 BtVector3) {
	_swig_wrap_btConvexHullShape_getVertex(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btConvexHullShape_getNumPlanes(SwigcptrBtConvexHullShape) int

func (arg1 SwigcptrBtConvexHullShape) GetNumPlanes() int {
	return _swig_wrap_btConvexHullShape_getNumPlanes(arg1)
}

func _swig_wrap_btConvexHullShape_getPlane(SwigcptrBtConvexHullShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtConvexHullShape) GetPlane(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btConvexHullShape_getPlane(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btConvexHullShape_isInside(SwigcptrBtConvexHullShape, uintptr, float32) bool

func (arg1 SwigcptrBtConvexHullShape) IsInside(arg2 BtVector3, arg3 float32) bool {
	return _swig_wrap_btConvexHullShape_isInside(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btConvexHullShape_setLocalScaling(SwigcptrBtConvexHullShape, uintptr)

func (arg1 SwigcptrBtConvexHullShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btConvexHullShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexHullShape_calculateSerializeBufferSize(SwigcptrBtConvexHullShape) int

func (arg1 SwigcptrBtConvexHullShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btConvexHullShape_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btConvexHullShape_serialize(SwigcptrBtConvexHullShape, uintptr, uintptr) string

func (arg1 SwigcptrBtConvexHullShape) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btConvexHullShape_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btConvexHullShape(uintptr)

func DeleteBtConvexHullShape(arg1 BtConvexHullShape) {
	_swig_wrap_delete_btConvexHullShape(arg1.Swigcptr())
}

func _swig_wrap_btConvexHullShape_getNonvirtualAabb(SwigcptrBtConvexHullShape, uintptr, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtConvexHullShape) GetNonvirtualAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32) {
	_swig_wrap_btConvexHullShape_getNonvirtualAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btConvexHullShape_getAabb(SwigcptrBtConvexHullShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexHullShape) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConvexHullShape_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConvexHullShape_recalcLocalAabb(SwigcptrBtConvexHullShape)

func (_swig_base SwigcptrBtConvexHullShape) RecalcLocalAabb() {
	_swig_wrap_btConvexHullShape_recalcLocalAabb(_swig_base)
}

func _swig_wrap_btConvexHullShape_initializePolyhedralFeatures__SWIG_0(SwigcptrBtConvexHullShape, int) bool

func (_swig_base SwigcptrBtConvexHullShape) InitializePolyhedralFeatures__SWIG_0(arg1 int) bool {
	return _swig_wrap_btConvexHullShape_initializePolyhedralFeatures__SWIG_0(_swig_base, arg1)
}

func _swig_wrap_btConvexHullShape_initializePolyhedralFeatures__SWIG_1(SwigcptrBtConvexHullShape) bool

func (_swig_base SwigcptrBtConvexHullShape) InitializePolyhedralFeatures__SWIG_1() bool {
	return _swig_wrap_btConvexHullShape_initializePolyhedralFeatures__SWIG_1(_swig_base)
}

func (p SwigcptrBtConvexHullShape) InitializePolyhedralFeatures(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.InitializePolyhedralFeatures__SWIG_1()
	}
	if argc == 1 {
		return p.InitializePolyhedralFeatures__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConvexHullShape_getConvexPolyhedron(SwigcptrBtConvexHullShape) SwigcptrBtConvexPolyhedron

func (_swig_base SwigcptrBtConvexHullShape) GetConvexPolyhedron() BtConvexPolyhedron {
	return _swig_wrap_btConvexHullShape_getConvexPolyhedron(_swig_base)
}

func _swig_wrap_btConvexHullShape_calculateLocalInertia(SwigcptrBtConvexHullShape, float32, uintptr)

func (_swig_base SwigcptrBtConvexHullShape) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btConvexHullShape_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexHullShape_getImplicitShapeDimensions(SwigcptrBtConvexHullShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexHullShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btConvexHullShape_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btConvexHullShape_setImplicitShapeDimensions(SwigcptrBtConvexHullShape, uintptr)

func (_swig_base SwigcptrBtConvexHullShape) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btConvexHullShape_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexHullShape_setSafeMargin__SWIG_0(SwigcptrBtConvexHullShape, float32, float32)

func (_swig_base SwigcptrBtConvexHullShape) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btConvexHullShape_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btConvexHullShape_setSafeMargin__SWIG_1(SwigcptrBtConvexHullShape, float32)

func (_swig_base SwigcptrBtConvexHullShape) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btConvexHullShape_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btConvexHullShape_setSafeMargin__SWIG_2(SwigcptrBtConvexHullShape, uintptr, float32)

func (_swig_base SwigcptrBtConvexHullShape) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btConvexHullShape_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConvexHullShape_setSafeMargin__SWIG_3(SwigcptrBtConvexHullShape, uintptr)

func (_swig_base SwigcptrBtConvexHullShape) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btConvexHullShape_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConvexHullShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConvexHullShape_getAabbSlow(SwigcptrBtConvexHullShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexHullShape) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConvexHullShape_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConvexHullShape_getLocalScaling(SwigcptrBtConvexHullShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexHullShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btConvexHullShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btConvexHullShape_getLocalScalingNV(SwigcptrBtConvexHullShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexHullShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btConvexHullShape_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btConvexHullShape_setMargin(SwigcptrBtConvexHullShape, float32)

func (_swig_base SwigcptrBtConvexHullShape) SetMargin(arg1 float32) {
	_swig_wrap_btConvexHullShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btConvexHullShape_getMargin(SwigcptrBtConvexHullShape) float32

func (_swig_base SwigcptrBtConvexHullShape) GetMargin() float32 {
	return _swig_wrap_btConvexHullShape_getMargin(_swig_base)
}

func _swig_wrap_btConvexHullShape_getMarginNV(SwigcptrBtConvexHullShape) float32

func (_swig_base SwigcptrBtConvexHullShape) GetMarginNV() float32 {
	return _swig_wrap_btConvexHullShape_getMarginNV(_swig_base)
}

func _swig_wrap_btConvexHullShape_getNumPreferredPenetrationDirections(SwigcptrBtConvexHullShape) int

func (_swig_base SwigcptrBtConvexHullShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btConvexHullShape_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btConvexHullShape_getPreferredPenetrationDirection(SwigcptrBtConvexHullShape, int, uintptr)

func (_swig_base SwigcptrBtConvexHullShape) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btConvexHullShape_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexHullShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtConvexHullShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexHullShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConvexHullShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexHullShape_localGetSupportVertexNonVirtual(SwigcptrBtConvexHullShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexHullShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConvexHullShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexHullShape_getMarginNonVirtual(SwigcptrBtConvexHullShape) float32

func (_swig_base SwigcptrBtConvexHullShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btConvexHullShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btConvexHullShape_getAabbNonVirtual(SwigcptrBtConvexHullShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexHullShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConvexHullShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConvexHullShape_getBoundingSphere(SwigcptrBtConvexHullShape, uintptr, *float32)

func (_swig_base SwigcptrBtConvexHullShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btConvexHullShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConvexHullShape_getAngularMotionDisc(SwigcptrBtConvexHullShape) float32

func (_swig_base SwigcptrBtConvexHullShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btConvexHullShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btConvexHullShape_getContactBreakingThreshold(SwigcptrBtConvexHullShape, float32) float32

func (_swig_base SwigcptrBtConvexHullShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btConvexHullShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btConvexHullShape_calculateTemporalAabb(SwigcptrBtConvexHullShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexHullShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btConvexHullShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btConvexHullShape_isPolyhedral(SwigcptrBtConvexHullShape) bool

func (_swig_base SwigcptrBtConvexHullShape) IsPolyhedral() bool {
	return _swig_wrap_btConvexHullShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btConvexHullShape_isConvex2d(SwigcptrBtConvexHullShape) bool

func (_swig_base SwigcptrBtConvexHullShape) IsConvex2d() bool {
	return _swig_wrap_btConvexHullShape_isConvex2d(_swig_base)
}

func _swig_wrap_btConvexHullShape_isConvex(SwigcptrBtConvexHullShape) bool

func (_swig_base SwigcptrBtConvexHullShape) IsConvex() bool {
	return _swig_wrap_btConvexHullShape_isConvex(_swig_base)
}

func _swig_wrap_btConvexHullShape_isNonMoving(SwigcptrBtConvexHullShape) bool

func (_swig_base SwigcptrBtConvexHullShape) IsNonMoving() bool {
	return _swig_wrap_btConvexHullShape_isNonMoving(_swig_base)
}

func _swig_wrap_btConvexHullShape_isConcave(SwigcptrBtConvexHullShape) bool

func (_swig_base SwigcptrBtConvexHullShape) IsConcave() bool {
	return _swig_wrap_btConvexHullShape_isConcave(_swig_base)
}

func _swig_wrap_btConvexHullShape_isCompound(SwigcptrBtConvexHullShape) bool

func (_swig_base SwigcptrBtConvexHullShape) IsCompound() bool {
	return _swig_wrap_btConvexHullShape_isCompound(_swig_base)
}

func _swig_wrap_btConvexHullShape_isSoftBody(SwigcptrBtConvexHullShape) bool

func (_swig_base SwigcptrBtConvexHullShape) IsSoftBody() bool {
	return _swig_wrap_btConvexHullShape_isSoftBody(_swig_base)
}

func _swig_wrap_btConvexHullShape_isInfinite(SwigcptrBtConvexHullShape) bool

func (_swig_base SwigcptrBtConvexHullShape) IsInfinite() bool {
	return _swig_wrap_btConvexHullShape_isInfinite(_swig_base)
}

func _swig_wrap_btConvexHullShape_getShapeType(SwigcptrBtConvexHullShape) int

func (_swig_base SwigcptrBtConvexHullShape) GetShapeType() int {
	return _swig_wrap_btConvexHullShape_getShapeType(_swig_base)
}

func _swig_wrap_btConvexHullShape_getAnisotropicRollingFrictionDirection(SwigcptrBtConvexHullShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexHullShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btConvexHullShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btConvexHullShape_setUserPointer(SwigcptrBtConvexHullShape, uintptr)

func (_swig_base SwigcptrBtConvexHullShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btConvexHullShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btConvexHullShape_getUserPointer(SwigcptrBtConvexHullShape) uintptr

func (_swig_base SwigcptrBtConvexHullShape) GetUserPointer() uintptr {
	return _swig_wrap_btConvexHullShape_getUserPointer(_swig_base)
}

func _swig_wrap_btConvexHullShape_serializeSingleShape(SwigcptrBtConvexHullShape, uintptr)

func (_swig_base SwigcptrBtConvexHullShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btConvexHullShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConvexHullShape) SwigIsBtPolyhedralConvexAabbCachingShape() {
}

func (p SwigcptrBtConvexHullShape) SwigGetBtPolyhedralConvexAabbCachingShape() BtPolyhedralConvexAabbCachingShape {
	return SwigcptrBtPolyhedralConvexAabbCachingShape(p.Swigcptr())
}

func (p SwigcptrBtConvexHullShape) SwigIsBtPolyhedralConvexShape() {
}

func (p SwigcptrBtConvexHullShape) SwigGetBtPolyhedralConvexShape() BtPolyhedralConvexShape {
	return SwigcptrBtPolyhedralConvexShape(p.Swigcptr())
}

func (p SwigcptrBtConvexHullShape) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtConvexHullShape) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtConvexHullShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtConvexHullShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtConvexHullShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtConvexHullShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtConvexHullShape interface {
	Swigcptr() uintptr
	SwigIsBtConvexHullShape()
	AddPoint(a ...interface{})
	GetUnscaledPoints(a ...interface{}) interface{}
	GetPoints() BtVector3
	GetScaledPoint(arg2 int) BtVector3
	GetNumPoints() int
	LocalGetSupportingVertex(arg2 BtVector3) BtVector3
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	Project(arg2 BtTransform, arg3 BtVector3, arg4 *float32, arg5 *float32, arg6 BtVector3, arg7 BtVector3)
	GetName() string
	GetNumVertices() int
	GetNumEdges() int
	GetEdge(arg2 int, arg3 BtVector3, arg4 BtVector3)
	GetVertex(arg2 int, arg3 BtVector3)
	GetNumPlanes() int
	GetPlane(arg2 BtVector3, arg3 BtVector3, arg4 int)
	IsInside(arg2 BtVector3, arg3 float32) bool
	SetLocalScaling(arg2 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetNonvirtualAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32)
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	RecalcLocalAabb()
	InitializePolyhedralFeatures(a ...interface{}) bool
	GetConvexPolyhedron() BtConvexPolyhedron
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	SetMargin(arg1 float32)
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtPolyhedralConvexAabbCachingShape()
	SwigGetBtPolyhedralConvexAabbCachingShape() BtPolyhedralConvexAabbCachingShape
	SwigIsBtPolyhedralConvexShape()
	SwigGetBtPolyhedralConvexShape() BtPolyhedralConvexShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtConvexHullShapeData uintptr

func (p SwigcptrBtConvexHullShapeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConvexHullShapeData) SwigIsBtConvexHullShapeData() {
}

func _swig_wrap_btConvexHullShapeData_m_convexInternalShapeData_set(SwigcptrBtConvexHullShapeData, uintptr)

func (arg1 SwigcptrBtConvexHullShapeData) SetM_convexInternalShapeData(arg2 BtConvexInternalShapeData) {
	_swig_wrap_btConvexHullShapeData_m_convexInternalShapeData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexHullShapeData_m_convexInternalShapeData_get(SwigcptrBtConvexHullShapeData) SwigcptrBtConvexInternalShapeData

func (arg1 SwigcptrBtConvexHullShapeData) GetM_convexInternalShapeData() BtConvexInternalShapeData {
	return _swig_wrap_btConvexHullShapeData_m_convexInternalShapeData_get(arg1)
}

func _swig_wrap_btConvexHullShapeData_m_unscaledPointsFloatPtr_set(SwigcptrBtConvexHullShapeData, uintptr)

func (arg1 SwigcptrBtConvexHullShapeData) SetM_unscaledPointsFloatPtr(arg2 BtVector3FloatData) {
	_swig_wrap_btConvexHullShapeData_m_unscaledPointsFloatPtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexHullShapeData_m_unscaledPointsFloatPtr_get(SwigcptrBtConvexHullShapeData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtConvexHullShapeData) GetM_unscaledPointsFloatPtr() BtVector3FloatData {
	return _swig_wrap_btConvexHullShapeData_m_unscaledPointsFloatPtr_get(arg1)
}

func _swig_wrap_btConvexHullShapeData_m_unscaledPointsDoublePtr_set(SwigcptrBtConvexHullShapeData, uintptr)

func (arg1 SwigcptrBtConvexHullShapeData) SetM_unscaledPointsDoublePtr(arg2 BtVector3DoubleData) {
	_swig_wrap_btConvexHullShapeData_m_unscaledPointsDoublePtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexHullShapeData_m_unscaledPointsDoublePtr_get(SwigcptrBtConvexHullShapeData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtConvexHullShapeData) GetM_unscaledPointsDoublePtr() BtVector3DoubleData {
	return _swig_wrap_btConvexHullShapeData_m_unscaledPointsDoublePtr_get(arg1)
}

func _swig_wrap_btConvexHullShapeData_m_numUnscaledPoints_set(SwigcptrBtConvexHullShapeData, int)

func (arg1 SwigcptrBtConvexHullShapeData) SetM_numUnscaledPoints(arg2 int) {
	_swig_wrap_btConvexHullShapeData_m_numUnscaledPoints_set(arg1, arg2)
}

func _swig_wrap_btConvexHullShapeData_m_numUnscaledPoints_get(SwigcptrBtConvexHullShapeData) int

func (arg1 SwigcptrBtConvexHullShapeData) GetM_numUnscaledPoints() int {
	return _swig_wrap_btConvexHullShapeData_m_numUnscaledPoints_get(arg1)
}

func _swig_wrap_btConvexHullShapeData_m_padding3_set(SwigcptrBtConvexHullShapeData, string)

func (arg1 SwigcptrBtConvexHullShapeData) SetM_padding3(arg2 string) {
	_swig_wrap_btConvexHullShapeData_m_padding3_set(arg1, arg2)
}

func _swig_wrap_btConvexHullShapeData_m_padding3_get(SwigcptrBtConvexHullShapeData) string

func (arg1 SwigcptrBtConvexHullShapeData) GetM_padding3() string {
	return _swig_wrap_btConvexHullShapeData_m_padding3_get(arg1)
}

func _swig_wrap_new_btConvexHullShapeData() SwigcptrBtConvexHullShapeData

func NewBtConvexHullShapeData() BtConvexHullShapeData {
	return _swig_wrap_new_btConvexHullShapeData()
}

func _swig_wrap_delete_btConvexHullShapeData(uintptr)

func DeleteBtConvexHullShapeData(arg1 BtConvexHullShapeData) {
	_swig_wrap_delete_btConvexHullShapeData(arg1.Swigcptr())
}

type BtConvexHullShapeData interface {
	Swigcptr() uintptr
	SwigIsBtConvexHullShapeData()
	SetM_convexInternalShapeData(arg2 BtConvexInternalShapeData)
	GetM_convexInternalShapeData() BtConvexInternalShapeData
	SetM_unscaledPointsFloatPtr(arg2 BtVector3FloatData)
	GetM_unscaledPointsFloatPtr() BtVector3FloatData
	SetM_unscaledPointsDoublePtr(arg2 BtVector3DoubleData)
	GetM_unscaledPointsDoublePtr() BtVector3DoubleData
	SetM_numUnscaledPoints(arg2 int)
	GetM_numUnscaledPoints() int
	SetM_padding3(arg2 string)
	GetM_padding3() string
}

type SwigcptrBtStridingMeshInterface uintptr

func (p SwigcptrBtStridingMeshInterface) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtStridingMeshInterface) SwigIsBtStridingMeshInterface() {
}

func _swig_wrap_delete_btStridingMeshInterface(uintptr)

func DeleteBtStridingMeshInterface(arg1 BtStridingMeshInterface) {
	_swig_wrap_delete_btStridingMeshInterface(arg1.Swigcptr())
}

func _swig_wrap_btStridingMeshInterface_InternalProcessAllTriangles(SwigcptrBtStridingMeshInterface, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtStridingMeshInterface) InternalProcessAllTriangles(arg2 BtInternalTriangleIndexCallback, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btStridingMeshInterface_InternalProcessAllTriangles(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btStridingMeshInterface_calculateAabbBruteForce(SwigcptrBtStridingMeshInterface, uintptr, uintptr)

func (arg1 SwigcptrBtStridingMeshInterface) CalculateAabbBruteForce(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btStridingMeshInterface_calculateAabbBruteForce(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btStridingMeshInterface_unLockVertexBase(SwigcptrBtStridingMeshInterface, int)

func (arg1 SwigcptrBtStridingMeshInterface) UnLockVertexBase(arg2 int) {
	_swig_wrap_btStridingMeshInterface_unLockVertexBase(arg1, arg2)
}

func _swig_wrap_btStridingMeshInterface_unLockReadOnlyVertexBase(SwigcptrBtStridingMeshInterface, int)

func (arg1 SwigcptrBtStridingMeshInterface) UnLockReadOnlyVertexBase(arg2 int) {
	_swig_wrap_btStridingMeshInterface_unLockReadOnlyVertexBase(arg1, arg2)
}

func _swig_wrap_btStridingMeshInterface_getNumSubParts(SwigcptrBtStridingMeshInterface) int

func (arg1 SwigcptrBtStridingMeshInterface) GetNumSubParts() int {
	return _swig_wrap_btStridingMeshInterface_getNumSubParts(arg1)
}

func _swig_wrap_btStridingMeshInterface_preallocateVertices(SwigcptrBtStridingMeshInterface, int)

func (arg1 SwigcptrBtStridingMeshInterface) PreallocateVertices(arg2 int) {
	_swig_wrap_btStridingMeshInterface_preallocateVertices(arg1, arg2)
}

func _swig_wrap_btStridingMeshInterface_preallocateIndices(SwigcptrBtStridingMeshInterface, int)

func (arg1 SwigcptrBtStridingMeshInterface) PreallocateIndices(arg2 int) {
	_swig_wrap_btStridingMeshInterface_preallocateIndices(arg1, arg2)
}

func _swig_wrap_btStridingMeshInterface_hasPremadeAabb(SwigcptrBtStridingMeshInterface) bool

func (arg1 SwigcptrBtStridingMeshInterface) HasPremadeAabb() bool {
	return _swig_wrap_btStridingMeshInterface_hasPremadeAabb(arg1)
}

func _swig_wrap_btStridingMeshInterface_setPremadeAabb(SwigcptrBtStridingMeshInterface, uintptr, uintptr)

func (arg1 SwigcptrBtStridingMeshInterface) SetPremadeAabb(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btStridingMeshInterface_setPremadeAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btStridingMeshInterface_getPremadeAabb(SwigcptrBtStridingMeshInterface, uintptr, uintptr)

func (arg1 SwigcptrBtStridingMeshInterface) GetPremadeAabb(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btStridingMeshInterface_getPremadeAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btStridingMeshInterface_getScaling(SwigcptrBtStridingMeshInterface) SwigcptrBtVector3

func (arg1 SwigcptrBtStridingMeshInterface) GetScaling() BtVector3 {
	return _swig_wrap_btStridingMeshInterface_getScaling(arg1)
}

func _swig_wrap_btStridingMeshInterface_setScaling(SwigcptrBtStridingMeshInterface, uintptr)

func (arg1 SwigcptrBtStridingMeshInterface) SetScaling(arg2 BtVector3) {
	_swig_wrap_btStridingMeshInterface_setScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btStridingMeshInterface_calculateSerializeBufferSize(SwigcptrBtStridingMeshInterface) int

func (arg1 SwigcptrBtStridingMeshInterface) CalculateSerializeBufferSize() int {
	return _swig_wrap_btStridingMeshInterface_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btStridingMeshInterface_serialize(SwigcptrBtStridingMeshInterface, uintptr, uintptr) string

func (arg1 SwigcptrBtStridingMeshInterface) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btStridingMeshInterface_serialize(arg1, arg2, arg3.Swigcptr())
}

type BtStridingMeshInterface interface {
	Swigcptr() uintptr
	SwigIsBtStridingMeshInterface()
	InternalProcessAllTriangles(arg2 BtInternalTriangleIndexCallback, arg3 BtVector3, arg4 BtVector3)
	CalculateAabbBruteForce(arg2 BtVector3, arg3 BtVector3)
	UnLockVertexBase(arg2 int)
	UnLockReadOnlyVertexBase(arg2 int)
	GetNumSubParts() int
	PreallocateVertices(arg2 int)
	PreallocateIndices(arg2 int)
	HasPremadeAabb() bool
	SetPremadeAabb(arg2 BtVector3, arg3 BtVector3)
	GetPremadeAabb(arg2 BtVector3, arg3 BtVector3)
	GetScaling() BtVector3
	SetScaling(arg2 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
}

type SwigcptrBtIntIndexData uintptr

func (p SwigcptrBtIntIndexData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtIntIndexData) SwigIsBtIntIndexData() {
}

func _swig_wrap_btIntIndexData_m_value_set(SwigcptrBtIntIndexData, int)

func (arg1 SwigcptrBtIntIndexData) SetM_value(arg2 int) {
	_swig_wrap_btIntIndexData_m_value_set(arg1, arg2)
}

func _swig_wrap_btIntIndexData_m_value_get(SwigcptrBtIntIndexData) int

func (arg1 SwigcptrBtIntIndexData) GetM_value() int {
	return _swig_wrap_btIntIndexData_m_value_get(arg1)
}

func _swig_wrap_new_btIntIndexData() SwigcptrBtIntIndexData

func NewBtIntIndexData() BtIntIndexData {
	return _swig_wrap_new_btIntIndexData()
}

func _swig_wrap_delete_btIntIndexData(uintptr)

func DeleteBtIntIndexData(arg1 BtIntIndexData) {
	_swig_wrap_delete_btIntIndexData(arg1.Swigcptr())
}

type BtIntIndexData interface {
	Swigcptr() uintptr
	SwigIsBtIntIndexData()
	SetM_value(arg2 int)
	GetM_value() int
}

type SwigcptrBtShortIntIndexData uintptr

func (p SwigcptrBtShortIntIndexData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtShortIntIndexData) SwigIsBtShortIntIndexData() {
}

func _swig_wrap_btShortIntIndexData_m_value_set(SwigcptrBtShortIntIndexData, int16)

func (arg1 SwigcptrBtShortIntIndexData) SetM_value(arg2 int16) {
	_swig_wrap_btShortIntIndexData_m_value_set(arg1, arg2)
}

func _swig_wrap_btShortIntIndexData_m_value_get(SwigcptrBtShortIntIndexData) int16

func (arg1 SwigcptrBtShortIntIndexData) GetM_value() int16 {
	return _swig_wrap_btShortIntIndexData_m_value_get(arg1)
}

func _swig_wrap_btShortIntIndexData_m_pad_set(SwigcptrBtShortIntIndexData, string)

func (arg1 SwigcptrBtShortIntIndexData) SetM_pad(arg2 string) {
	_swig_wrap_btShortIntIndexData_m_pad_set(arg1, arg2)
}

func _swig_wrap_btShortIntIndexData_m_pad_get(SwigcptrBtShortIntIndexData) string

func (arg1 SwigcptrBtShortIntIndexData) GetM_pad() string {
	return _swig_wrap_btShortIntIndexData_m_pad_get(arg1)
}

func _swig_wrap_new_btShortIntIndexData() SwigcptrBtShortIntIndexData

func NewBtShortIntIndexData() BtShortIntIndexData {
	return _swig_wrap_new_btShortIntIndexData()
}

func _swig_wrap_delete_btShortIntIndexData(uintptr)

func DeleteBtShortIntIndexData(arg1 BtShortIntIndexData) {
	_swig_wrap_delete_btShortIntIndexData(arg1.Swigcptr())
}

type BtShortIntIndexData interface {
	Swigcptr() uintptr
	SwigIsBtShortIntIndexData()
	SetM_value(arg2 int16)
	GetM_value() int16
	SetM_pad(arg2 string)
	GetM_pad() string
}

type SwigcptrBtShortIntIndexTripletData uintptr

func (p SwigcptrBtShortIntIndexTripletData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtShortIntIndexTripletData) SwigIsBtShortIntIndexTripletData() {
}

func _swig_wrap_btShortIntIndexTripletData_m_values_set(SwigcptrBtShortIntIndexTripletData, *int16)

func (arg1 SwigcptrBtShortIntIndexTripletData) SetM_values(arg2 *int16) {
	_swig_wrap_btShortIntIndexTripletData_m_values_set(arg1, arg2)
}

func _swig_wrap_btShortIntIndexTripletData_m_values_get(SwigcptrBtShortIntIndexTripletData) *int16

func (arg1 SwigcptrBtShortIntIndexTripletData) GetM_values() *int16 {
	return _swig_wrap_btShortIntIndexTripletData_m_values_get(arg1)
}

func _swig_wrap_btShortIntIndexTripletData_m_pad_set(SwigcptrBtShortIntIndexTripletData, string)

func (arg1 SwigcptrBtShortIntIndexTripletData) SetM_pad(arg2 string) {
	_swig_wrap_btShortIntIndexTripletData_m_pad_set(arg1, arg2)
}

func _swig_wrap_btShortIntIndexTripletData_m_pad_get(SwigcptrBtShortIntIndexTripletData) string

func (arg1 SwigcptrBtShortIntIndexTripletData) GetM_pad() string {
	return _swig_wrap_btShortIntIndexTripletData_m_pad_get(arg1)
}

func _swig_wrap_new_btShortIntIndexTripletData() SwigcptrBtShortIntIndexTripletData

func NewBtShortIntIndexTripletData() BtShortIntIndexTripletData {
	return _swig_wrap_new_btShortIntIndexTripletData()
}

func _swig_wrap_delete_btShortIntIndexTripletData(uintptr)

func DeleteBtShortIntIndexTripletData(arg1 BtShortIntIndexTripletData) {
	_swig_wrap_delete_btShortIntIndexTripletData(arg1.Swigcptr())
}

type BtShortIntIndexTripletData interface {
	Swigcptr() uintptr
	SwigIsBtShortIntIndexTripletData()
	SetM_values(arg2 *int16)
	GetM_values() *int16
	SetM_pad(arg2 string)
	GetM_pad() string
}

type SwigcptrBtCharIndexTripletData uintptr

func (p SwigcptrBtCharIndexTripletData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCharIndexTripletData) SwigIsBtCharIndexTripletData() {
}

func _swig_wrap_btCharIndexTripletData_m_values_set(SwigcptrBtCharIndexTripletData, string)

func (arg1 SwigcptrBtCharIndexTripletData) SetM_values(arg2 string) {
	_swig_wrap_btCharIndexTripletData_m_values_set(arg1, arg2)
}

func _swig_wrap_btCharIndexTripletData_m_values_get(SwigcptrBtCharIndexTripletData) string

func (arg1 SwigcptrBtCharIndexTripletData) GetM_values() string {
	return _swig_wrap_btCharIndexTripletData_m_values_get(arg1)
}

func _swig_wrap_btCharIndexTripletData_m_pad_set(SwigcptrBtCharIndexTripletData, byte)

func (arg1 SwigcptrBtCharIndexTripletData) SetM_pad(arg2 byte) {
	_swig_wrap_btCharIndexTripletData_m_pad_set(arg1, arg2)
}

func _swig_wrap_btCharIndexTripletData_m_pad_get(SwigcptrBtCharIndexTripletData) byte

func (arg1 SwigcptrBtCharIndexTripletData) GetM_pad() byte {
	return _swig_wrap_btCharIndexTripletData_m_pad_get(arg1)
}

func _swig_wrap_new_btCharIndexTripletData() SwigcptrBtCharIndexTripletData

func NewBtCharIndexTripletData() BtCharIndexTripletData {
	return _swig_wrap_new_btCharIndexTripletData()
}

func _swig_wrap_delete_btCharIndexTripletData(uintptr)

func DeleteBtCharIndexTripletData(arg1 BtCharIndexTripletData) {
	_swig_wrap_delete_btCharIndexTripletData(arg1.Swigcptr())
}

type BtCharIndexTripletData interface {
	Swigcptr() uintptr
	SwigIsBtCharIndexTripletData()
	SetM_values(arg2 string)
	GetM_values() string
	SetM_pad(arg2 byte)
	GetM_pad() byte
}

type SwigcptrBtMeshPartData uintptr

func (p SwigcptrBtMeshPartData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtMeshPartData) SwigIsBtMeshPartData() {
}

func _swig_wrap_btMeshPartData_m_vertices3f_set(SwigcptrBtMeshPartData, uintptr)

func (arg1 SwigcptrBtMeshPartData) SetM_vertices3f(arg2 BtVector3FloatData) {
	_swig_wrap_btMeshPartData_m_vertices3f_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMeshPartData_m_vertices3f_get(SwigcptrBtMeshPartData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtMeshPartData) GetM_vertices3f() BtVector3FloatData {
	return _swig_wrap_btMeshPartData_m_vertices3f_get(arg1)
}

func _swig_wrap_btMeshPartData_m_vertices3d_set(SwigcptrBtMeshPartData, uintptr)

func (arg1 SwigcptrBtMeshPartData) SetM_vertices3d(arg2 BtVector3DoubleData) {
	_swig_wrap_btMeshPartData_m_vertices3d_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMeshPartData_m_vertices3d_get(SwigcptrBtMeshPartData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtMeshPartData) GetM_vertices3d() BtVector3DoubleData {
	return _swig_wrap_btMeshPartData_m_vertices3d_get(arg1)
}

func _swig_wrap_btMeshPartData_m_indices32_set(SwigcptrBtMeshPartData, uintptr)

func (arg1 SwigcptrBtMeshPartData) SetM_indices32(arg2 BtIntIndexData) {
	_swig_wrap_btMeshPartData_m_indices32_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMeshPartData_m_indices32_get(SwigcptrBtMeshPartData) SwigcptrBtIntIndexData

func (arg1 SwigcptrBtMeshPartData) GetM_indices32() BtIntIndexData {
	return _swig_wrap_btMeshPartData_m_indices32_get(arg1)
}

func _swig_wrap_btMeshPartData_m_3indices16_set(SwigcptrBtMeshPartData, uintptr)

func (arg1 SwigcptrBtMeshPartData) SetM_3indices16(arg2 BtShortIntIndexTripletData) {
	_swig_wrap_btMeshPartData_m_3indices16_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMeshPartData_m_3indices16_get(SwigcptrBtMeshPartData) SwigcptrBtShortIntIndexTripletData

func (arg1 SwigcptrBtMeshPartData) GetM_3indices16() BtShortIntIndexTripletData {
	return _swig_wrap_btMeshPartData_m_3indices16_get(arg1)
}

func _swig_wrap_btMeshPartData_m_3indices8_set(SwigcptrBtMeshPartData, uintptr)

func (arg1 SwigcptrBtMeshPartData) SetM_3indices8(arg2 BtCharIndexTripletData) {
	_swig_wrap_btMeshPartData_m_3indices8_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMeshPartData_m_3indices8_get(SwigcptrBtMeshPartData) SwigcptrBtCharIndexTripletData

func (arg1 SwigcptrBtMeshPartData) GetM_3indices8() BtCharIndexTripletData {
	return _swig_wrap_btMeshPartData_m_3indices8_get(arg1)
}

func _swig_wrap_btMeshPartData_m_indices16_set(SwigcptrBtMeshPartData, uintptr)

func (arg1 SwigcptrBtMeshPartData) SetM_indices16(arg2 BtShortIntIndexData) {
	_swig_wrap_btMeshPartData_m_indices16_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMeshPartData_m_indices16_get(SwigcptrBtMeshPartData) SwigcptrBtShortIntIndexData

func (arg1 SwigcptrBtMeshPartData) GetM_indices16() BtShortIntIndexData {
	return _swig_wrap_btMeshPartData_m_indices16_get(arg1)
}

func _swig_wrap_btMeshPartData_m_numTriangles_set(SwigcptrBtMeshPartData, int)

func (arg1 SwigcptrBtMeshPartData) SetM_numTriangles(arg2 int) {
	_swig_wrap_btMeshPartData_m_numTriangles_set(arg1, arg2)
}

func _swig_wrap_btMeshPartData_m_numTriangles_get(SwigcptrBtMeshPartData) int

func (arg1 SwigcptrBtMeshPartData) GetM_numTriangles() int {
	return _swig_wrap_btMeshPartData_m_numTriangles_get(arg1)
}

func _swig_wrap_btMeshPartData_m_numVertices_set(SwigcptrBtMeshPartData, int)

func (arg1 SwigcptrBtMeshPartData) SetM_numVertices(arg2 int) {
	_swig_wrap_btMeshPartData_m_numVertices_set(arg1, arg2)
}

func _swig_wrap_btMeshPartData_m_numVertices_get(SwigcptrBtMeshPartData) int

func (arg1 SwigcptrBtMeshPartData) GetM_numVertices() int {
	return _swig_wrap_btMeshPartData_m_numVertices_get(arg1)
}

func _swig_wrap_new_btMeshPartData() SwigcptrBtMeshPartData

func NewBtMeshPartData() BtMeshPartData {
	return _swig_wrap_new_btMeshPartData()
}

func _swig_wrap_delete_btMeshPartData(uintptr)

func DeleteBtMeshPartData(arg1 BtMeshPartData) {
	_swig_wrap_delete_btMeshPartData(arg1.Swigcptr())
}

type BtMeshPartData interface {
	Swigcptr() uintptr
	SwigIsBtMeshPartData()
	SetM_vertices3f(arg2 BtVector3FloatData)
	GetM_vertices3f() BtVector3FloatData
	SetM_vertices3d(arg2 BtVector3DoubleData)
	GetM_vertices3d() BtVector3DoubleData
	SetM_indices32(arg2 BtIntIndexData)
	GetM_indices32() BtIntIndexData
	SetM_3indices16(arg2 BtShortIntIndexTripletData)
	GetM_3indices16() BtShortIntIndexTripletData
	SetM_3indices8(arg2 BtCharIndexTripletData)
	GetM_3indices8() BtCharIndexTripletData
	SetM_indices16(arg2 BtShortIntIndexData)
	GetM_indices16() BtShortIntIndexData
	SetM_numTriangles(arg2 int)
	GetM_numTriangles() int
	SetM_numVertices(arg2 int)
	GetM_numVertices() int
}

type SwigcptrBtStridingMeshInterfaceData uintptr

func (p SwigcptrBtStridingMeshInterfaceData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtStridingMeshInterfaceData) SwigIsBtStridingMeshInterfaceData() {
}

func _swig_wrap_btStridingMeshInterfaceData_m_meshPartsPtr_set(SwigcptrBtStridingMeshInterfaceData, uintptr)

func (arg1 SwigcptrBtStridingMeshInterfaceData) SetM_meshPartsPtr(arg2 BtMeshPartData) {
	_swig_wrap_btStridingMeshInterfaceData_m_meshPartsPtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btStridingMeshInterfaceData_m_meshPartsPtr_get(SwigcptrBtStridingMeshInterfaceData) SwigcptrBtMeshPartData

func (arg1 SwigcptrBtStridingMeshInterfaceData) GetM_meshPartsPtr() BtMeshPartData {
	return _swig_wrap_btStridingMeshInterfaceData_m_meshPartsPtr_get(arg1)
}

func _swig_wrap_btStridingMeshInterfaceData_m_scaling_set(SwigcptrBtStridingMeshInterfaceData, uintptr)

func (arg1 SwigcptrBtStridingMeshInterfaceData) SetM_scaling(arg2 BtVector3FloatData) {
	_swig_wrap_btStridingMeshInterfaceData_m_scaling_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btStridingMeshInterfaceData_m_scaling_get(SwigcptrBtStridingMeshInterfaceData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtStridingMeshInterfaceData) GetM_scaling() BtVector3FloatData {
	return _swig_wrap_btStridingMeshInterfaceData_m_scaling_get(arg1)
}

func _swig_wrap_btStridingMeshInterfaceData_m_numMeshParts_set(SwigcptrBtStridingMeshInterfaceData, int)

func (arg1 SwigcptrBtStridingMeshInterfaceData) SetM_numMeshParts(arg2 int) {
	_swig_wrap_btStridingMeshInterfaceData_m_numMeshParts_set(arg1, arg2)
}

func _swig_wrap_btStridingMeshInterfaceData_m_numMeshParts_get(SwigcptrBtStridingMeshInterfaceData) int

func (arg1 SwigcptrBtStridingMeshInterfaceData) GetM_numMeshParts() int {
	return _swig_wrap_btStridingMeshInterfaceData_m_numMeshParts_get(arg1)
}

func _swig_wrap_btStridingMeshInterfaceData_m_padding_set(SwigcptrBtStridingMeshInterfaceData, string)

func (arg1 SwigcptrBtStridingMeshInterfaceData) SetM_padding(arg2 string) {
	_swig_wrap_btStridingMeshInterfaceData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btStridingMeshInterfaceData_m_padding_get(SwigcptrBtStridingMeshInterfaceData) string

func (arg1 SwigcptrBtStridingMeshInterfaceData) GetM_padding() string {
	return _swig_wrap_btStridingMeshInterfaceData_m_padding_get(arg1)
}

func _swig_wrap_new_btStridingMeshInterfaceData() SwigcptrBtStridingMeshInterfaceData

func NewBtStridingMeshInterfaceData() BtStridingMeshInterfaceData {
	return _swig_wrap_new_btStridingMeshInterfaceData()
}

func _swig_wrap_delete_btStridingMeshInterfaceData(uintptr)

func DeleteBtStridingMeshInterfaceData(arg1 BtStridingMeshInterfaceData) {
	_swig_wrap_delete_btStridingMeshInterfaceData(arg1.Swigcptr())
}

type BtStridingMeshInterfaceData interface {
	Swigcptr() uintptr
	SwigIsBtStridingMeshInterfaceData()
	SetM_meshPartsPtr(arg2 BtMeshPartData)
	GetM_meshPartsPtr() BtMeshPartData
	SetM_scaling(arg2 BtVector3FloatData)
	GetM_scaling() BtVector3FloatData
	SetM_numMeshParts(arg2 int)
	GetM_numMeshParts() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtIndexedMesh uintptr

func (p SwigcptrBtIndexedMesh) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtIndexedMesh) SwigIsBtIndexedMesh() {
}

func _swig_wrap_btIndexedMesh_m_numTriangles_set(SwigcptrBtIndexedMesh, int)

func (arg1 SwigcptrBtIndexedMesh) SetM_numTriangles(arg2 int) {
	_swig_wrap_btIndexedMesh_m_numTriangles_set(arg1, arg2)
}

func _swig_wrap_btIndexedMesh_m_numTriangles_get(SwigcptrBtIndexedMesh) int

func (arg1 SwigcptrBtIndexedMesh) GetM_numTriangles() int {
	return _swig_wrap_btIndexedMesh_m_numTriangles_get(arg1)
}

func _swig_wrap_btIndexedMesh_m_triangleIndexBase_set(SwigcptrBtIndexedMesh, string)

func (arg1 SwigcptrBtIndexedMesh) SetM_triangleIndexBase(arg2 string) {
	_swig_wrap_btIndexedMesh_m_triangleIndexBase_set(arg1, arg2)
}

func _swig_wrap_btIndexedMesh_m_triangleIndexBase_get(SwigcptrBtIndexedMesh) string

func (arg1 SwigcptrBtIndexedMesh) GetM_triangleIndexBase() string {
	return _swig_wrap_btIndexedMesh_m_triangleIndexBase_get(arg1)
}

func _swig_wrap_btIndexedMesh_m_triangleIndexStride_set(SwigcptrBtIndexedMesh, int)

func (arg1 SwigcptrBtIndexedMesh) SetM_triangleIndexStride(arg2 int) {
	_swig_wrap_btIndexedMesh_m_triangleIndexStride_set(arg1, arg2)
}

func _swig_wrap_btIndexedMesh_m_triangleIndexStride_get(SwigcptrBtIndexedMesh) int

func (arg1 SwigcptrBtIndexedMesh) GetM_triangleIndexStride() int {
	return _swig_wrap_btIndexedMesh_m_triangleIndexStride_get(arg1)
}

func _swig_wrap_btIndexedMesh_m_numVertices_set(SwigcptrBtIndexedMesh, int)

func (arg1 SwigcptrBtIndexedMesh) SetM_numVertices(arg2 int) {
	_swig_wrap_btIndexedMesh_m_numVertices_set(arg1, arg2)
}

func _swig_wrap_btIndexedMesh_m_numVertices_get(SwigcptrBtIndexedMesh) int

func (arg1 SwigcptrBtIndexedMesh) GetM_numVertices() int {
	return _swig_wrap_btIndexedMesh_m_numVertices_get(arg1)
}

func _swig_wrap_btIndexedMesh_m_vertexBase_set(SwigcptrBtIndexedMesh, string)

func (arg1 SwigcptrBtIndexedMesh) SetM_vertexBase(arg2 string) {
	_swig_wrap_btIndexedMesh_m_vertexBase_set(arg1, arg2)
}

func _swig_wrap_btIndexedMesh_m_vertexBase_get(SwigcptrBtIndexedMesh) string

func (arg1 SwigcptrBtIndexedMesh) GetM_vertexBase() string {
	return _swig_wrap_btIndexedMesh_m_vertexBase_get(arg1)
}

func _swig_wrap_btIndexedMesh_m_vertexStride_set(SwigcptrBtIndexedMesh, int)

func (arg1 SwigcptrBtIndexedMesh) SetM_vertexStride(arg2 int) {
	_swig_wrap_btIndexedMesh_m_vertexStride_set(arg1, arg2)
}

func _swig_wrap_btIndexedMesh_m_vertexStride_get(SwigcptrBtIndexedMesh) int

func (arg1 SwigcptrBtIndexedMesh) GetM_vertexStride() int {
	return _swig_wrap_btIndexedMesh_m_vertexStride_get(arg1)
}

func _swig_wrap_btIndexedMesh_m_indexType_set(SwigcptrBtIndexedMesh, PHY_ScalarType)

func (arg1 SwigcptrBtIndexedMesh) SetM_indexType(arg2 PHY_ScalarType) {
	_swig_wrap_btIndexedMesh_m_indexType_set(arg1, arg2)
}

func _swig_wrap_btIndexedMesh_m_indexType_get(SwigcptrBtIndexedMesh) PHY_ScalarType

func (arg1 SwigcptrBtIndexedMesh) GetM_indexType() PHY_ScalarType {
	return _swig_wrap_btIndexedMesh_m_indexType_get(arg1)
}

func _swig_wrap_btIndexedMesh_m_vertexType_set(SwigcptrBtIndexedMesh, PHY_ScalarType)

func (arg1 SwigcptrBtIndexedMesh) SetM_vertexType(arg2 PHY_ScalarType) {
	_swig_wrap_btIndexedMesh_m_vertexType_set(arg1, arg2)
}

func _swig_wrap_btIndexedMesh_m_vertexType_get(SwigcptrBtIndexedMesh) PHY_ScalarType

func (arg1 SwigcptrBtIndexedMesh) GetM_vertexType() PHY_ScalarType {
	return _swig_wrap_btIndexedMesh_m_vertexType_get(arg1)
}

func _swig_wrap_new_btIndexedMesh() SwigcptrBtIndexedMesh

func NewBtIndexedMesh() BtIndexedMesh {
	return _swig_wrap_new_btIndexedMesh()
}

func _swig_wrap_delete_btIndexedMesh(uintptr)

func DeleteBtIndexedMesh(arg1 BtIndexedMesh) {
	_swig_wrap_delete_btIndexedMesh(arg1.Swigcptr())
}

type BtIndexedMesh interface {
	Swigcptr() uintptr
	SwigIsBtIndexedMesh()
	SetM_numTriangles(arg2 int)
	GetM_numTriangles() int
	SetM_triangleIndexBase(arg2 string)
	GetM_triangleIndexBase() string
	SetM_triangleIndexStride(arg2 int)
	GetM_triangleIndexStride() int
	SetM_numVertices(arg2 int)
	GetM_numVertices() int
	SetM_vertexBase(arg2 string)
	GetM_vertexBase() string
	SetM_vertexStride(arg2 int)
	GetM_vertexStride() int
	SetM_indexType(arg2 PHY_ScalarType)
	GetM_indexType() PHY_ScalarType
	SetM_vertexType(arg2 PHY_ScalarType)
	GetM_vertexType() PHY_ScalarType
}

type SwigcptrBtTriangleIndexVertexArray uintptr

func (p SwigcptrBtTriangleIndexVertexArray) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTriangleIndexVertexArray) SwigIsBtTriangleIndexVertexArray() {
}

func _swig_wrap_new_btTriangleIndexVertexArray__SWIG_0() SwigcptrBtTriangleIndexVertexArray

func NewBtTriangleIndexVertexArray__SWIG_0() BtTriangleIndexVertexArray {
	return _swig_wrap_new_btTriangleIndexVertexArray__SWIG_0()
}

func _swig_wrap_delete_btTriangleIndexVertexArray(uintptr)

func DeleteBtTriangleIndexVertexArray(arg1 BtTriangleIndexVertexArray) {
	_swig_wrap_delete_btTriangleIndexVertexArray(arg1.Swigcptr())
}

func _swig_wrap_new_btTriangleIndexVertexArray__SWIG_1(int, *int, int, int, *float32, int) SwigcptrBtTriangleIndexVertexArray

func NewBtTriangleIndexVertexArray__SWIG_1(arg1 int, arg2 *int, arg3 int, arg4 int, arg5 *float32, arg6 int) BtTriangleIndexVertexArray {
	return _swig_wrap_new_btTriangleIndexVertexArray__SWIG_1(arg1, arg2, arg3, arg4, arg5, arg6)
}

func NewBtTriangleIndexVertexArray(a ...interface{}) BtTriangleIndexVertexArray {
	argc := len(a)
	if argc == 0 {
		return NewBtTriangleIndexVertexArray__SWIG_0()
	}
	if argc == 6 {
		return NewBtTriangleIndexVertexArray__SWIG_1(a[0].(int), a[1].(*int), a[2].(int), a[3].(int), a[4].(*float32), a[5].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTriangleIndexVertexArray_addIndexedMesh__SWIG_0(SwigcptrBtTriangleIndexVertexArray, uintptr, PHY_ScalarType)

func (arg1 SwigcptrBtTriangleIndexVertexArray) AddIndexedMesh__SWIG_0(arg2 BtIndexedMesh, arg3 PHY_ScalarType) {
	_swig_wrap_btTriangleIndexVertexArray_addIndexedMesh__SWIG_0(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btTriangleIndexVertexArray_addIndexedMesh__SWIG_1(SwigcptrBtTriangleIndexVertexArray, uintptr)

func (arg1 SwigcptrBtTriangleIndexVertexArray) AddIndexedMesh__SWIG_1(arg2 BtIndexedMesh) {
	_swig_wrap_btTriangleIndexVertexArray_addIndexedMesh__SWIG_1(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtTriangleIndexVertexArray) AddIndexedMesh(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddIndexedMesh__SWIG_1(a[0].(BtIndexedMesh))
		return
	}
	if argc == 2 {
		p.AddIndexedMesh__SWIG_0(a[0].(BtIndexedMesh), a[1].(PHY_ScalarType))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTriangleIndexVertexArray_unLockVertexBase(SwigcptrBtTriangleIndexVertexArray, int)

func (arg1 SwigcptrBtTriangleIndexVertexArray) UnLockVertexBase(arg2 int) {
	_swig_wrap_btTriangleIndexVertexArray_unLockVertexBase(arg1, arg2)
}

func _swig_wrap_btTriangleIndexVertexArray_unLockReadOnlyVertexBase(SwigcptrBtTriangleIndexVertexArray, int)

func (arg1 SwigcptrBtTriangleIndexVertexArray) UnLockReadOnlyVertexBase(arg2 int) {
	_swig_wrap_btTriangleIndexVertexArray_unLockReadOnlyVertexBase(arg1, arg2)
}

func _swig_wrap_btTriangleIndexVertexArray_getNumSubParts(SwigcptrBtTriangleIndexVertexArray) int

func (arg1 SwigcptrBtTriangleIndexVertexArray) GetNumSubParts() int {
	return _swig_wrap_btTriangleIndexVertexArray_getNumSubParts(arg1)
}

func _swig_wrap_btTriangleIndexVertexArray_getIndexedMeshArray__SWIG_0(SwigcptrBtTriangleIndexVertexArray) SwigcptrBtAlignedObjectArray_Sl_btIndexedMesh_Sg_

func (arg1 SwigcptrBtTriangleIndexVertexArray) GetIndexedMeshArray__SWIG_0() BtAlignedObjectArray_Sl_btIndexedMesh_Sg_ {
	return _swig_wrap_btTriangleIndexVertexArray_getIndexedMeshArray__SWIG_0(arg1)
}

func _swig_wrap_btTriangleIndexVertexArray_getIndexedMeshArray__SWIG_1(SwigcptrBtTriangleIndexVertexArray) SwigcptrBtAlignedObjectArray_Sl_btIndexedMesh_Sg_

func (arg1 SwigcptrBtTriangleIndexVertexArray) GetIndexedMeshArray__SWIG_1() BtAlignedObjectArray_Sl_btIndexedMesh_Sg_ {
	return _swig_wrap_btTriangleIndexVertexArray_getIndexedMeshArray__SWIG_1(arg1)
}

func (p SwigcptrBtTriangleIndexVertexArray) GetIndexedMeshArray(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetIndexedMeshArray__SWIG_0()
	}
	if argc == 0 {
		return p.GetIndexedMeshArray__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTriangleIndexVertexArray_preallocateVertices(SwigcptrBtTriangleIndexVertexArray, int)

func (arg1 SwigcptrBtTriangleIndexVertexArray) PreallocateVertices(arg2 int) {
	_swig_wrap_btTriangleIndexVertexArray_preallocateVertices(arg1, arg2)
}

func _swig_wrap_btTriangleIndexVertexArray_preallocateIndices(SwigcptrBtTriangleIndexVertexArray, int)

func (arg1 SwigcptrBtTriangleIndexVertexArray) PreallocateIndices(arg2 int) {
	_swig_wrap_btTriangleIndexVertexArray_preallocateIndices(arg1, arg2)
}

func _swig_wrap_btTriangleIndexVertexArray_hasPremadeAabb(SwigcptrBtTriangleIndexVertexArray) bool

func (arg1 SwigcptrBtTriangleIndexVertexArray) HasPremadeAabb() bool {
	return _swig_wrap_btTriangleIndexVertexArray_hasPremadeAabb(arg1)
}

func _swig_wrap_btTriangleIndexVertexArray_setPremadeAabb(SwigcptrBtTriangleIndexVertexArray, uintptr, uintptr)

func (arg1 SwigcptrBtTriangleIndexVertexArray) SetPremadeAabb(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btTriangleIndexVertexArray_setPremadeAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btTriangleIndexVertexArray_getPremadeAabb(SwigcptrBtTriangleIndexVertexArray, uintptr, uintptr)

func (arg1 SwigcptrBtTriangleIndexVertexArray) GetPremadeAabb(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btTriangleIndexVertexArray_getPremadeAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btTriangleIndexVertexArray_InternalProcessAllTriangles(SwigcptrBtTriangleIndexVertexArray, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtTriangleIndexVertexArray) InternalProcessAllTriangles(arg1 BtInternalTriangleIndexCallback, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btTriangleIndexVertexArray_InternalProcessAllTriangles(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btTriangleIndexVertexArray_calculateAabbBruteForce(SwigcptrBtTriangleIndexVertexArray, uintptr, uintptr)

func (_swig_base SwigcptrBtTriangleIndexVertexArray) CalculateAabbBruteForce(arg1 BtVector3, arg2 BtVector3) {
	_swig_wrap_btTriangleIndexVertexArray_calculateAabbBruteForce(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btTriangleIndexVertexArray_getScaling(SwigcptrBtTriangleIndexVertexArray) SwigcptrBtVector3

func (_swig_base SwigcptrBtTriangleIndexVertexArray) GetScaling() BtVector3 {
	return _swig_wrap_btTriangleIndexVertexArray_getScaling(_swig_base)
}

func _swig_wrap_btTriangleIndexVertexArray_setScaling(SwigcptrBtTriangleIndexVertexArray, uintptr)

func (_swig_base SwigcptrBtTriangleIndexVertexArray) SetScaling(arg1 BtVector3) {
	_swig_wrap_btTriangleIndexVertexArray_setScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btTriangleIndexVertexArray_calculateSerializeBufferSize(SwigcptrBtTriangleIndexVertexArray) int

func (_swig_base SwigcptrBtTriangleIndexVertexArray) CalculateSerializeBufferSize() int {
	return _swig_wrap_btTriangleIndexVertexArray_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btTriangleIndexVertexArray_serialize(SwigcptrBtTriangleIndexVertexArray, uintptr, uintptr) string

func (_swig_base SwigcptrBtTriangleIndexVertexArray) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btTriangleIndexVertexArray_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func (p SwigcptrBtTriangleIndexVertexArray) SwigIsBtStridingMeshInterface() {
}

func (p SwigcptrBtTriangleIndexVertexArray) SwigGetBtStridingMeshInterface() BtStridingMeshInterface {
	return SwigcptrBtStridingMeshInterface(p.Swigcptr())
}

type BtTriangleIndexVertexArray interface {
	Swigcptr() uintptr
	SwigIsBtTriangleIndexVertexArray()
	AddIndexedMesh(a ...interface{})
	UnLockVertexBase(arg2 int)
	UnLockReadOnlyVertexBase(arg2 int)
	GetNumSubParts() int
	GetIndexedMeshArray(a ...interface{}) interface{}
	PreallocateVertices(arg2 int)
	PreallocateIndices(arg2 int)
	HasPremadeAabb() bool
	SetPremadeAabb(arg2 BtVector3, arg3 BtVector3)
	GetPremadeAabb(arg2 BtVector3, arg3 BtVector3)
	InternalProcessAllTriangles(arg1 BtInternalTriangleIndexCallback, arg2 BtVector3, arg3 BtVector3)
	CalculateAabbBruteForce(arg1 BtVector3, arg2 BtVector3)
	GetScaling() BtVector3
	SetScaling(arg1 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	SwigIsBtStridingMeshInterface()
	SwigGetBtStridingMeshInterface() BtStridingMeshInterface
}

type SwigcptrBtTriangleMesh uintptr

func (p SwigcptrBtTriangleMesh) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTriangleMesh) SwigIsBtTriangleMesh() {
}

func _swig_wrap_btTriangleMesh_m_weldingThreshold_set(SwigcptrBtTriangleMesh, float32)

func (arg1 SwigcptrBtTriangleMesh) SetM_weldingThreshold(arg2 float32) {
	_swig_wrap_btTriangleMesh_m_weldingThreshold_set(arg1, arg2)
}

func _swig_wrap_btTriangleMesh_m_weldingThreshold_get(SwigcptrBtTriangleMesh) float32

func (arg1 SwigcptrBtTriangleMesh) GetM_weldingThreshold() float32 {
	return _swig_wrap_btTriangleMesh_m_weldingThreshold_get(arg1)
}

func _swig_wrap_new_btTriangleMesh__SWIG_0(bool, bool) SwigcptrBtTriangleMesh

func NewBtTriangleMesh__SWIG_0(arg1 bool, arg2 bool) BtTriangleMesh {
	return _swig_wrap_new_btTriangleMesh__SWIG_0(arg1, arg2)
}

func _swig_wrap_new_btTriangleMesh__SWIG_1(bool) SwigcptrBtTriangleMesh

func NewBtTriangleMesh__SWIG_1(arg1 bool) BtTriangleMesh {
	return _swig_wrap_new_btTriangleMesh__SWIG_1(arg1)
}

func _swig_wrap_new_btTriangleMesh__SWIG_2() SwigcptrBtTriangleMesh

func NewBtTriangleMesh__SWIG_2() BtTriangleMesh {
	return _swig_wrap_new_btTriangleMesh__SWIG_2()
}

func NewBtTriangleMesh(a ...interface{}) BtTriangleMesh {
	argc := len(a)
	if argc == 0 {
		return NewBtTriangleMesh__SWIG_2()
	}
	if argc == 1 {
		return NewBtTriangleMesh__SWIG_1(a[0].(bool))
	}
	if argc == 2 {
		return NewBtTriangleMesh__SWIG_0(a[0].(bool), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTriangleMesh_getUse32bitIndices(SwigcptrBtTriangleMesh) bool

func (arg1 SwigcptrBtTriangleMesh) GetUse32bitIndices() bool {
	return _swig_wrap_btTriangleMesh_getUse32bitIndices(arg1)
}

func _swig_wrap_btTriangleMesh_getUse4componentVertices(SwigcptrBtTriangleMesh) bool

func (arg1 SwigcptrBtTriangleMesh) GetUse4componentVertices() bool {
	return _swig_wrap_btTriangleMesh_getUse4componentVertices(arg1)
}

func _swig_wrap_btTriangleMesh_addTriangle__SWIG_0(SwigcptrBtTriangleMesh, uintptr, uintptr, uintptr, bool)

func (arg1 SwigcptrBtTriangleMesh) AddTriangle__SWIG_0(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 bool) {
	_swig_wrap_btTriangleMesh_addTriangle__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_btTriangleMesh_addTriangle__SWIG_1(SwigcptrBtTriangleMesh, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtTriangleMesh) AddTriangle__SWIG_1(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btTriangleMesh_addTriangle__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func (p SwigcptrBtTriangleMesh) AddTriangle(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.AddTriangle__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3))
		return
	}
	if argc == 4 {
		p.AddTriangle__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTriangleMesh_getNumTriangles(SwigcptrBtTriangleMesh) int

func (arg1 SwigcptrBtTriangleMesh) GetNumTriangles() int {
	return _swig_wrap_btTriangleMesh_getNumTriangles(arg1)
}

func _swig_wrap_btTriangleMesh_preallocateVertices(SwigcptrBtTriangleMesh, int)

func (arg1 SwigcptrBtTriangleMesh) PreallocateVertices(arg2 int) {
	_swig_wrap_btTriangleMesh_preallocateVertices(arg1, arg2)
}

func _swig_wrap_btTriangleMesh_preallocateIndices(SwigcptrBtTriangleMesh, int)

func (arg1 SwigcptrBtTriangleMesh) PreallocateIndices(arg2 int) {
	_swig_wrap_btTriangleMesh_preallocateIndices(arg1, arg2)
}

func _swig_wrap_btTriangleMesh_findOrAddVertex(SwigcptrBtTriangleMesh, uintptr, bool) int

func (arg1 SwigcptrBtTriangleMesh) FindOrAddVertex(arg2 BtVector3, arg3 bool) int {
	return _swig_wrap_btTriangleMesh_findOrAddVertex(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btTriangleMesh_addIndex(SwigcptrBtTriangleMesh, int)

func (arg1 SwigcptrBtTriangleMesh) AddIndex(arg2 int) {
	_swig_wrap_btTriangleMesh_addIndex(arg1, arg2)
}

func _swig_wrap_delete_btTriangleMesh(uintptr)

func DeleteBtTriangleMesh(arg1 BtTriangleMesh) {
	_swig_wrap_delete_btTriangleMesh(arg1.Swigcptr())
}

func _swig_wrap_btTriangleMesh_addIndexedMesh__SWIG_0(SwigcptrBtTriangleMesh, uintptr, PHY_ScalarType)

func (_swig_base SwigcptrBtTriangleMesh) AddIndexedMesh__SWIG_0(arg1 BtIndexedMesh, arg2 PHY_ScalarType) {
	_swig_wrap_btTriangleMesh_addIndexedMesh__SWIG_0(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btTriangleMesh_addIndexedMesh__SWIG_1(SwigcptrBtTriangleMesh, uintptr)

func (_swig_base SwigcptrBtTriangleMesh) AddIndexedMesh__SWIG_1(arg1 BtIndexedMesh) {
	_swig_wrap_btTriangleMesh_addIndexedMesh__SWIG_1(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtTriangleMesh) AddIndexedMesh(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddIndexedMesh__SWIG_1(a[0].(BtIndexedMesh))
		return
	}
	if argc == 2 {
		p.AddIndexedMesh__SWIG_0(a[0].(BtIndexedMesh), a[1].(PHY_ScalarType))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTriangleMesh_unLockVertexBase(SwigcptrBtTriangleMesh, int)

func (_swig_base SwigcptrBtTriangleMesh) UnLockVertexBase(arg1 int) {
	_swig_wrap_btTriangleMesh_unLockVertexBase(_swig_base, arg1)
}

func _swig_wrap_btTriangleMesh_unLockReadOnlyVertexBase(SwigcptrBtTriangleMesh, int)

func (_swig_base SwigcptrBtTriangleMesh) UnLockReadOnlyVertexBase(arg1 int) {
	_swig_wrap_btTriangleMesh_unLockReadOnlyVertexBase(_swig_base, arg1)
}

func _swig_wrap_btTriangleMesh_getNumSubParts(SwigcptrBtTriangleMesh) int

func (_swig_base SwigcptrBtTriangleMesh) GetNumSubParts() int {
	return _swig_wrap_btTriangleMesh_getNumSubParts(_swig_base)
}

func _swig_wrap_btTriangleMesh_getIndexedMeshArray__SWIG_0(SwigcptrBtTriangleMesh) SwigcptrBtAlignedObjectArray_Sl_btIndexedMesh_Sg_

func (_swig_base SwigcptrBtTriangleMesh) GetIndexedMeshArray__SWIG_0() BtAlignedObjectArray_Sl_btIndexedMesh_Sg_ {
	return _swig_wrap_btTriangleMesh_getIndexedMeshArray__SWIG_0(_swig_base)
}

func _swig_wrap_btTriangleMesh_getIndexedMeshArray__SWIG_1(SwigcptrBtTriangleMesh) SwigcptrBtAlignedObjectArray_Sl_btIndexedMesh_Sg_

func (_swig_base SwigcptrBtTriangleMesh) GetIndexedMeshArray__SWIG_1() BtAlignedObjectArray_Sl_btIndexedMesh_Sg_ {
	return _swig_wrap_btTriangleMesh_getIndexedMeshArray__SWIG_1(_swig_base)
}

func (p SwigcptrBtTriangleMesh) GetIndexedMeshArray(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetIndexedMeshArray__SWIG_0()
	}
	if argc == 0 {
		return p.GetIndexedMeshArray__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTriangleMesh_hasPremadeAabb(SwigcptrBtTriangleMesh) bool

func (_swig_base SwigcptrBtTriangleMesh) HasPremadeAabb() bool {
	return _swig_wrap_btTriangleMesh_hasPremadeAabb(_swig_base)
}

func _swig_wrap_btTriangleMesh_setPremadeAabb(SwigcptrBtTriangleMesh, uintptr, uintptr)

func (_swig_base SwigcptrBtTriangleMesh) SetPremadeAabb(arg1 BtVector3, arg2 BtVector3) {
	_swig_wrap_btTriangleMesh_setPremadeAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btTriangleMesh_getPremadeAabb(SwigcptrBtTriangleMesh, uintptr, uintptr)

func (_swig_base SwigcptrBtTriangleMesh) GetPremadeAabb(arg1 BtVector3, arg2 BtVector3) {
	_swig_wrap_btTriangleMesh_getPremadeAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btTriangleMesh_InternalProcessAllTriangles(SwigcptrBtTriangleMesh, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtTriangleMesh) InternalProcessAllTriangles(arg1 BtInternalTriangleIndexCallback, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btTriangleMesh_InternalProcessAllTriangles(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btTriangleMesh_calculateAabbBruteForce(SwigcptrBtTriangleMesh, uintptr, uintptr)

func (_swig_base SwigcptrBtTriangleMesh) CalculateAabbBruteForce(arg1 BtVector3, arg2 BtVector3) {
	_swig_wrap_btTriangleMesh_calculateAabbBruteForce(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btTriangleMesh_getScaling(SwigcptrBtTriangleMesh) SwigcptrBtVector3

func (_swig_base SwigcptrBtTriangleMesh) GetScaling() BtVector3 {
	return _swig_wrap_btTriangleMesh_getScaling(_swig_base)
}

func _swig_wrap_btTriangleMesh_setScaling(SwigcptrBtTriangleMesh, uintptr)

func (_swig_base SwigcptrBtTriangleMesh) SetScaling(arg1 BtVector3) {
	_swig_wrap_btTriangleMesh_setScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btTriangleMesh_calculateSerializeBufferSize(SwigcptrBtTriangleMesh) int

func (_swig_base SwigcptrBtTriangleMesh) CalculateSerializeBufferSize() int {
	return _swig_wrap_btTriangleMesh_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btTriangleMesh_serialize(SwigcptrBtTriangleMesh, uintptr, uintptr) string

func (_swig_base SwigcptrBtTriangleMesh) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btTriangleMesh_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func (p SwigcptrBtTriangleMesh) SwigIsBtTriangleIndexVertexArray() {
}

func (p SwigcptrBtTriangleMesh) SwigGetBtTriangleIndexVertexArray() BtTriangleIndexVertexArray {
	return SwigcptrBtTriangleIndexVertexArray(p.Swigcptr())
}

func (p SwigcptrBtTriangleMesh) SwigIsBtStridingMeshInterface() {
}

func (p SwigcptrBtTriangleMesh) SwigGetBtStridingMeshInterface() BtStridingMeshInterface {
	return SwigcptrBtStridingMeshInterface(p.Swigcptr())
}

type BtTriangleMesh interface {
	Swigcptr() uintptr
	SwigIsBtTriangleMesh()
	SetM_weldingThreshold(arg2 float32)
	GetM_weldingThreshold() float32
	GetUse32bitIndices() bool
	GetUse4componentVertices() bool
	AddTriangle(a ...interface{})
	GetNumTriangles() int
	PreallocateVertices(arg2 int)
	PreallocateIndices(arg2 int)
	FindOrAddVertex(arg2 BtVector3, arg3 bool) int
	AddIndex(arg2 int)
	AddIndexedMesh(a ...interface{})
	UnLockVertexBase(arg1 int)
	UnLockReadOnlyVertexBase(arg1 int)
	GetNumSubParts() int
	GetIndexedMeshArray(a ...interface{}) interface{}
	HasPremadeAabb() bool
	SetPremadeAabb(arg1 BtVector3, arg2 BtVector3)
	GetPremadeAabb(arg1 BtVector3, arg2 BtVector3)
	InternalProcessAllTriangles(arg1 BtInternalTriangleIndexCallback, arg2 BtVector3, arg3 BtVector3)
	CalculateAabbBruteForce(arg1 BtVector3, arg2 BtVector3)
	GetScaling() BtVector3
	SetScaling(arg1 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	SwigIsBtTriangleIndexVertexArray()
	SwigGetBtTriangleIndexVertexArray() BtTriangleIndexVertexArray
	SwigIsBtStridingMeshInterface()
	SwigGetBtStridingMeshInterface() BtStridingMeshInterface
}

type SwigcptrBtConvexTriangleMeshShape uintptr

func (p SwigcptrBtConvexTriangleMeshShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConvexTriangleMeshShape) SwigIsBtConvexTriangleMeshShape() {
}

func _swig_wrap_new_btConvexTriangleMeshShape__SWIG_0(uintptr, bool) SwigcptrBtConvexTriangleMeshShape

func NewBtConvexTriangleMeshShape__SWIG_0(arg1 BtStridingMeshInterface, arg2 bool) BtConvexTriangleMeshShape {
	return _swig_wrap_new_btConvexTriangleMeshShape__SWIG_0(arg1.Swigcptr(), arg2)
}

func _swig_wrap_new_btConvexTriangleMeshShape__SWIG_1(uintptr) SwigcptrBtConvexTriangleMeshShape

func NewBtConvexTriangleMeshShape__SWIG_1(arg1 BtStridingMeshInterface) BtConvexTriangleMeshShape {
	return _swig_wrap_new_btConvexTriangleMeshShape__SWIG_1(arg1.Swigcptr())
}

func NewBtConvexTriangleMeshShape(a ...interface{}) BtConvexTriangleMeshShape {
	argc := len(a)
	if argc == 1 {
		return NewBtConvexTriangleMeshShape__SWIG_1(a[0].(BtStridingMeshInterface))
	}
	if argc == 2 {
		return NewBtConvexTriangleMeshShape__SWIG_0(a[0].(BtStridingMeshInterface), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConvexTriangleMeshShape_getMeshInterface__SWIG_0(SwigcptrBtConvexTriangleMeshShape) SwigcptrBtStridingMeshInterface

func (arg1 SwigcptrBtConvexTriangleMeshShape) GetMeshInterface__SWIG_0() BtStridingMeshInterface {
	return _swig_wrap_btConvexTriangleMeshShape_getMeshInterface__SWIG_0(arg1)
}

func _swig_wrap_btConvexTriangleMeshShape_getMeshInterface__SWIG_1(SwigcptrBtConvexTriangleMeshShape) SwigcptrBtStridingMeshInterface

func (arg1 SwigcptrBtConvexTriangleMeshShape) GetMeshInterface__SWIG_1() BtStridingMeshInterface {
	return _swig_wrap_btConvexTriangleMeshShape_getMeshInterface__SWIG_1(arg1)
}

func (p SwigcptrBtConvexTriangleMeshShape) GetMeshInterface(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetMeshInterface__SWIG_0()
	}
	if argc == 0 {
		return p.GetMeshInterface__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConvexTriangleMeshShape_localGetSupportingVertex(SwigcptrBtConvexTriangleMeshShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexTriangleMeshShape) LocalGetSupportingVertex(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btConvexTriangleMeshShape_localGetSupportingVertex(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_localGetSupportingVertexWithoutMargin(SwigcptrBtConvexTriangleMeshShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexTriangleMeshShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btConvexTriangleMeshShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtConvexTriangleMeshShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtConvexTriangleMeshShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btConvexTriangleMeshShape_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btConvexTriangleMeshShape_getName(SwigcptrBtConvexTriangleMeshShape) string

func (arg1 SwigcptrBtConvexTriangleMeshShape) GetName() string {
	return _swig_wrap_btConvexTriangleMeshShape_getName(arg1)
}

func _swig_wrap_btConvexTriangleMeshShape_getNumVertices(SwigcptrBtConvexTriangleMeshShape) int

func (arg1 SwigcptrBtConvexTriangleMeshShape) GetNumVertices() int {
	return _swig_wrap_btConvexTriangleMeshShape_getNumVertices(arg1)
}

func _swig_wrap_btConvexTriangleMeshShape_getNumEdges(SwigcptrBtConvexTriangleMeshShape) int

func (arg1 SwigcptrBtConvexTriangleMeshShape) GetNumEdges() int {
	return _swig_wrap_btConvexTriangleMeshShape_getNumEdges(arg1)
}

func _swig_wrap_btConvexTriangleMeshShape_getEdge(SwigcptrBtConvexTriangleMeshShape, int, uintptr, uintptr)

func (arg1 SwigcptrBtConvexTriangleMeshShape) GetEdge(arg2 int, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btConvexTriangleMeshShape_getEdge(arg1, arg2, arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_getVertex(SwigcptrBtConvexTriangleMeshShape, int, uintptr)

func (arg1 SwigcptrBtConvexTriangleMeshShape) GetVertex(arg2 int, arg3 BtVector3) {
	_swig_wrap_btConvexTriangleMeshShape_getVertex(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_getNumPlanes(SwigcptrBtConvexTriangleMeshShape) int

func (arg1 SwigcptrBtConvexTriangleMeshShape) GetNumPlanes() int {
	return _swig_wrap_btConvexTriangleMeshShape_getNumPlanes(arg1)
}

func _swig_wrap_btConvexTriangleMeshShape_getPlane(SwigcptrBtConvexTriangleMeshShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtConvexTriangleMeshShape) GetPlane(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btConvexTriangleMeshShape_getPlane(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btConvexTriangleMeshShape_isInside(SwigcptrBtConvexTriangleMeshShape, uintptr, float32) bool

func (arg1 SwigcptrBtConvexTriangleMeshShape) IsInside(arg2 BtVector3, arg3 float32) bool {
	return _swig_wrap_btConvexTriangleMeshShape_isInside(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btConvexTriangleMeshShape_setLocalScaling(SwigcptrBtConvexTriangleMeshShape, uintptr)

func (arg1 SwigcptrBtConvexTriangleMeshShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btConvexTriangleMeshShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_getLocalScaling(SwigcptrBtConvexTriangleMeshShape) SwigcptrBtVector3

func (arg1 SwigcptrBtConvexTriangleMeshShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btConvexTriangleMeshShape_getLocalScaling(arg1)
}

func _swig_wrap_btConvexTriangleMeshShape_calculatePrincipalAxisTransform(SwigcptrBtConvexTriangleMeshShape, uintptr, uintptr, *float32)

func (arg1 SwigcptrBtConvexTriangleMeshShape) CalculatePrincipalAxisTransform(arg2 BtTransform, arg3 BtVector3, arg4 *float32) {
	_swig_wrap_btConvexTriangleMeshShape_calculatePrincipalAxisTransform(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_delete_btConvexTriangleMeshShape(uintptr)

func DeleteBtConvexTriangleMeshShape(arg1 BtConvexTriangleMeshShape) {
	_swig_wrap_delete_btConvexTriangleMeshShape(arg1.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_getNonvirtualAabb(SwigcptrBtConvexTriangleMeshShape, uintptr, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetNonvirtualAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32) {
	_swig_wrap_btConvexTriangleMeshShape_getNonvirtualAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btConvexTriangleMeshShape_getAabb(SwigcptrBtConvexTriangleMeshShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConvexTriangleMeshShape_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_recalcLocalAabb(SwigcptrBtConvexTriangleMeshShape)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) RecalcLocalAabb() {
	_swig_wrap_btConvexTriangleMeshShape_recalcLocalAabb(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_initializePolyhedralFeatures__SWIG_0(SwigcptrBtConvexTriangleMeshShape, int) bool

func (_swig_base SwigcptrBtConvexTriangleMeshShape) InitializePolyhedralFeatures__SWIG_0(arg1 int) bool {
	return _swig_wrap_btConvexTriangleMeshShape_initializePolyhedralFeatures__SWIG_0(_swig_base, arg1)
}

func _swig_wrap_btConvexTriangleMeshShape_initializePolyhedralFeatures__SWIG_1(SwigcptrBtConvexTriangleMeshShape) bool

func (_swig_base SwigcptrBtConvexTriangleMeshShape) InitializePolyhedralFeatures__SWIG_1() bool {
	return _swig_wrap_btConvexTriangleMeshShape_initializePolyhedralFeatures__SWIG_1(_swig_base)
}

func (p SwigcptrBtConvexTriangleMeshShape) InitializePolyhedralFeatures(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.InitializePolyhedralFeatures__SWIG_1()
	}
	if argc == 1 {
		return p.InitializePolyhedralFeatures__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConvexTriangleMeshShape_getConvexPolyhedron(SwigcptrBtConvexTriangleMeshShape) SwigcptrBtConvexPolyhedron

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetConvexPolyhedron() BtConvexPolyhedron {
	return _swig_wrap_btConvexTriangleMeshShape_getConvexPolyhedron(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_calculateLocalInertia(SwigcptrBtConvexTriangleMeshShape, float32, uintptr)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btConvexTriangleMeshShape_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_getImplicitShapeDimensions(SwigcptrBtConvexTriangleMeshShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btConvexTriangleMeshShape_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_setImplicitShapeDimensions(SwigcptrBtConvexTriangleMeshShape, uintptr)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btConvexTriangleMeshShape_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_setSafeMargin__SWIG_0(SwigcptrBtConvexTriangleMeshShape, float32, float32)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btConvexTriangleMeshShape_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btConvexTriangleMeshShape_setSafeMargin__SWIG_1(SwigcptrBtConvexTriangleMeshShape, float32)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btConvexTriangleMeshShape_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btConvexTriangleMeshShape_setSafeMargin__SWIG_2(SwigcptrBtConvexTriangleMeshShape, uintptr, float32)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btConvexTriangleMeshShape_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConvexTriangleMeshShape_setSafeMargin__SWIG_3(SwigcptrBtConvexTriangleMeshShape, uintptr)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btConvexTriangleMeshShape_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConvexTriangleMeshShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConvexTriangleMeshShape_getAabbSlow(SwigcptrBtConvexTriangleMeshShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConvexTriangleMeshShape_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_getLocalScalingNV(SwigcptrBtConvexTriangleMeshShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btConvexTriangleMeshShape_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_setMargin(SwigcptrBtConvexTriangleMeshShape, float32)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) SetMargin(arg1 float32) {
	_swig_wrap_btConvexTriangleMeshShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btConvexTriangleMeshShape_getMargin(SwigcptrBtConvexTriangleMeshShape) float32

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetMargin() float32 {
	return _swig_wrap_btConvexTriangleMeshShape_getMargin(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_getMarginNV(SwigcptrBtConvexTriangleMeshShape) float32

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetMarginNV() float32 {
	return _swig_wrap_btConvexTriangleMeshShape_getMarginNV(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_getNumPreferredPenetrationDirections(SwigcptrBtConvexTriangleMeshShape) int

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btConvexTriangleMeshShape_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_getPreferredPenetrationDirection(SwigcptrBtConvexTriangleMeshShape, int, uintptr)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btConvexTriangleMeshShape_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_calculateSerializeBufferSize(SwigcptrBtConvexTriangleMeshShape) int

func (_swig_base SwigcptrBtConvexTriangleMeshShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btConvexTriangleMeshShape_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_serialize(SwigcptrBtConvexTriangleMeshShape, uintptr, uintptr) string

func (_swig_base SwigcptrBtConvexTriangleMeshShape) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btConvexTriangleMeshShape_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtConvexTriangleMeshShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexTriangleMeshShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConvexTriangleMeshShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_localGetSupportVertexNonVirtual(SwigcptrBtConvexTriangleMeshShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexTriangleMeshShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btConvexTriangleMeshShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_getMarginNonVirtual(SwigcptrBtConvexTriangleMeshShape) float32

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btConvexTriangleMeshShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_getAabbNonVirtual(SwigcptrBtConvexTriangleMeshShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btConvexTriangleMeshShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_project(SwigcptrBtConvexTriangleMeshShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btConvexTriangleMeshShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btConvexTriangleMeshShape_getBoundingSphere(SwigcptrBtConvexTriangleMeshShape, uintptr, *float32)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btConvexTriangleMeshShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btConvexTriangleMeshShape_getAngularMotionDisc(SwigcptrBtConvexTriangleMeshShape) float32

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btConvexTriangleMeshShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_getContactBreakingThreshold(SwigcptrBtConvexTriangleMeshShape, float32) float32

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btConvexTriangleMeshShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btConvexTriangleMeshShape_calculateTemporalAabb(SwigcptrBtConvexTriangleMeshShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btConvexTriangleMeshShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btConvexTriangleMeshShape_isPolyhedral(SwigcptrBtConvexTriangleMeshShape) bool

func (_swig_base SwigcptrBtConvexTriangleMeshShape) IsPolyhedral() bool {
	return _swig_wrap_btConvexTriangleMeshShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_isConvex2d(SwigcptrBtConvexTriangleMeshShape) bool

func (_swig_base SwigcptrBtConvexTriangleMeshShape) IsConvex2d() bool {
	return _swig_wrap_btConvexTriangleMeshShape_isConvex2d(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_isConvex(SwigcptrBtConvexTriangleMeshShape) bool

func (_swig_base SwigcptrBtConvexTriangleMeshShape) IsConvex() bool {
	return _swig_wrap_btConvexTriangleMeshShape_isConvex(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_isNonMoving(SwigcptrBtConvexTriangleMeshShape) bool

func (_swig_base SwigcptrBtConvexTriangleMeshShape) IsNonMoving() bool {
	return _swig_wrap_btConvexTriangleMeshShape_isNonMoving(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_isConcave(SwigcptrBtConvexTriangleMeshShape) bool

func (_swig_base SwigcptrBtConvexTriangleMeshShape) IsConcave() bool {
	return _swig_wrap_btConvexTriangleMeshShape_isConcave(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_isCompound(SwigcptrBtConvexTriangleMeshShape) bool

func (_swig_base SwigcptrBtConvexTriangleMeshShape) IsCompound() bool {
	return _swig_wrap_btConvexTriangleMeshShape_isCompound(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_isSoftBody(SwigcptrBtConvexTriangleMeshShape) bool

func (_swig_base SwigcptrBtConvexTriangleMeshShape) IsSoftBody() bool {
	return _swig_wrap_btConvexTriangleMeshShape_isSoftBody(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_isInfinite(SwigcptrBtConvexTriangleMeshShape) bool

func (_swig_base SwigcptrBtConvexTriangleMeshShape) IsInfinite() bool {
	return _swig_wrap_btConvexTriangleMeshShape_isInfinite(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_getShapeType(SwigcptrBtConvexTriangleMeshShape) int

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetShapeType() int {
	return _swig_wrap_btConvexTriangleMeshShape_getShapeType(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_getAnisotropicRollingFrictionDirection(SwigcptrBtConvexTriangleMeshShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btConvexTriangleMeshShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_setUserPointer(SwigcptrBtConvexTriangleMeshShape, uintptr)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btConvexTriangleMeshShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btConvexTriangleMeshShape_getUserPointer(SwigcptrBtConvexTriangleMeshShape) uintptr

func (_swig_base SwigcptrBtConvexTriangleMeshShape) GetUserPointer() uintptr {
	return _swig_wrap_btConvexTriangleMeshShape_getUserPointer(_swig_base)
}

func _swig_wrap_btConvexTriangleMeshShape_serializeSingleShape(SwigcptrBtConvexTriangleMeshShape, uintptr)

func (_swig_base SwigcptrBtConvexTriangleMeshShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btConvexTriangleMeshShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtConvexTriangleMeshShape) SwigIsBtPolyhedralConvexAabbCachingShape() {
}

func (p SwigcptrBtConvexTriangleMeshShape) SwigGetBtPolyhedralConvexAabbCachingShape() BtPolyhedralConvexAabbCachingShape {
	return SwigcptrBtPolyhedralConvexAabbCachingShape(p.Swigcptr())
}

func (p SwigcptrBtConvexTriangleMeshShape) SwigIsBtPolyhedralConvexShape() {
}

func (p SwigcptrBtConvexTriangleMeshShape) SwigGetBtPolyhedralConvexShape() BtPolyhedralConvexShape {
	return SwigcptrBtPolyhedralConvexShape(p.Swigcptr())
}

func (p SwigcptrBtConvexTriangleMeshShape) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtConvexTriangleMeshShape) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtConvexTriangleMeshShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtConvexTriangleMeshShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtConvexTriangleMeshShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtConvexTriangleMeshShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtConvexTriangleMeshShape interface {
	Swigcptr() uintptr
	SwigIsBtConvexTriangleMeshShape()
	GetMeshInterface(a ...interface{}) interface{}
	LocalGetSupportingVertex(arg2 BtVector3) BtVector3
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	GetName() string
	GetNumVertices() int
	GetNumEdges() int
	GetEdge(arg2 int, arg3 BtVector3, arg4 BtVector3)
	GetVertex(arg2 int, arg3 BtVector3)
	GetNumPlanes() int
	GetPlane(arg2 BtVector3, arg3 BtVector3, arg4 int)
	IsInside(arg2 BtVector3, arg3 float32) bool
	SetLocalScaling(arg2 BtVector3)
	GetLocalScaling() BtVector3
	CalculatePrincipalAxisTransform(arg2 BtTransform, arg3 BtVector3, arg4 *float32)
	GetNonvirtualAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32)
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	RecalcLocalAabb()
	InitializePolyhedralFeatures(a ...interface{}) bool
	GetConvexPolyhedron() BtConvexPolyhedron
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScalingNV() BtVector3
	SetMargin(arg1 float32)
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtPolyhedralConvexAabbCachingShape()
	SwigGetBtPolyhedralConvexAabbCachingShape() BtPolyhedralConvexAabbCachingShape
	SwigIsBtPolyhedralConvexShape()
	SwigGetBtPolyhedralConvexShape() BtPolyhedralConvexShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtTriangleMeshShape uintptr

func (p SwigcptrBtTriangleMeshShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTriangleMeshShape) SwigIsBtTriangleMeshShape() {
}

func _swig_wrap_delete_btTriangleMeshShape(uintptr)

func DeleteBtTriangleMeshShape(arg1 BtTriangleMeshShape) {
	_swig_wrap_delete_btTriangleMeshShape(arg1.Swigcptr())
}

func _swig_wrap_btTriangleMeshShape_localGetSupportingVertex(SwigcptrBtTriangleMeshShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtTriangleMeshShape) LocalGetSupportingVertex(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btTriangleMeshShape_localGetSupportingVertex(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTriangleMeshShape_localGetSupportingVertexWithoutMargin(SwigcptrBtTriangleMeshShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtTriangleMeshShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btTriangleMeshShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTriangleMeshShape_recalcLocalAabb(SwigcptrBtTriangleMeshShape)

func (arg1 SwigcptrBtTriangleMeshShape) RecalcLocalAabb() {
	_swig_wrap_btTriangleMeshShape_recalcLocalAabb(arg1)
}

func _swig_wrap_btTriangleMeshShape_getAabb(SwigcptrBtTriangleMeshShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtTriangleMeshShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btTriangleMeshShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btTriangleMeshShape_processAllTriangles(SwigcptrBtTriangleMeshShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtTriangleMeshShape) ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btTriangleMeshShape_processAllTriangles(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btTriangleMeshShape_calculateLocalInertia(SwigcptrBtTriangleMeshShape, float32, uintptr)

func (arg1 SwigcptrBtTriangleMeshShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btTriangleMeshShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btTriangleMeshShape_setLocalScaling(SwigcptrBtTriangleMeshShape, uintptr)

func (arg1 SwigcptrBtTriangleMeshShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btTriangleMeshShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTriangleMeshShape_getLocalScaling(SwigcptrBtTriangleMeshShape) SwigcptrBtVector3

func (arg1 SwigcptrBtTriangleMeshShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btTriangleMeshShape_getLocalScaling(arg1)
}

func _swig_wrap_btTriangleMeshShape_getMeshInterface__SWIG_0(SwigcptrBtTriangleMeshShape) SwigcptrBtStridingMeshInterface

func (arg1 SwigcptrBtTriangleMeshShape) GetMeshInterface__SWIG_0() BtStridingMeshInterface {
	return _swig_wrap_btTriangleMeshShape_getMeshInterface__SWIG_0(arg1)
}

func _swig_wrap_btTriangleMeshShape_getMeshInterface__SWIG_1(SwigcptrBtTriangleMeshShape) SwigcptrBtStridingMeshInterface

func (arg1 SwigcptrBtTriangleMeshShape) GetMeshInterface__SWIG_1() BtStridingMeshInterface {
	return _swig_wrap_btTriangleMeshShape_getMeshInterface__SWIG_1(arg1)
}

func (p SwigcptrBtTriangleMeshShape) GetMeshInterface(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetMeshInterface__SWIG_0()
	}
	if argc == 0 {
		return p.GetMeshInterface__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTriangleMeshShape_getLocalAabbMin(SwigcptrBtTriangleMeshShape) SwigcptrBtVector3

func (arg1 SwigcptrBtTriangleMeshShape) GetLocalAabbMin() BtVector3 {
	return _swig_wrap_btTriangleMeshShape_getLocalAabbMin(arg1)
}

func _swig_wrap_btTriangleMeshShape_getLocalAabbMax(SwigcptrBtTriangleMeshShape) SwigcptrBtVector3

func (arg1 SwigcptrBtTriangleMeshShape) GetLocalAabbMax() BtVector3 {
	return _swig_wrap_btTriangleMeshShape_getLocalAabbMax(arg1)
}

func _swig_wrap_btTriangleMeshShape_getName(SwigcptrBtTriangleMeshShape) string

func (arg1 SwigcptrBtTriangleMeshShape) GetName() string {
	return _swig_wrap_btTriangleMeshShape_getName(arg1)
}

func _swig_wrap_btTriangleMeshShape_getMargin(SwigcptrBtTriangleMeshShape) float32

func (_swig_base SwigcptrBtTriangleMeshShape) GetMargin() float32 {
	return _swig_wrap_btTriangleMeshShape_getMargin(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_setMargin(SwigcptrBtTriangleMeshShape, float32)

func (_swig_base SwigcptrBtTriangleMeshShape) SetMargin(arg1 float32) {
	_swig_wrap_btTriangleMeshShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btTriangleMeshShape_getBoundingSphere(SwigcptrBtTriangleMeshShape, uintptr, *float32)

func (_swig_base SwigcptrBtTriangleMeshShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btTriangleMeshShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btTriangleMeshShape_getAngularMotionDisc(SwigcptrBtTriangleMeshShape) float32

func (_swig_base SwigcptrBtTriangleMeshShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btTriangleMeshShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_getContactBreakingThreshold(SwigcptrBtTriangleMeshShape, float32) float32

func (_swig_base SwigcptrBtTriangleMeshShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btTriangleMeshShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btTriangleMeshShape_calculateTemporalAabb(SwigcptrBtTriangleMeshShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtTriangleMeshShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btTriangleMeshShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btTriangleMeshShape_isPolyhedral(SwigcptrBtTriangleMeshShape) bool

func (_swig_base SwigcptrBtTriangleMeshShape) IsPolyhedral() bool {
	return _swig_wrap_btTriangleMeshShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_isConvex2d(SwigcptrBtTriangleMeshShape) bool

func (_swig_base SwigcptrBtTriangleMeshShape) IsConvex2d() bool {
	return _swig_wrap_btTriangleMeshShape_isConvex2d(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_isConvex(SwigcptrBtTriangleMeshShape) bool

func (_swig_base SwigcptrBtTriangleMeshShape) IsConvex() bool {
	return _swig_wrap_btTriangleMeshShape_isConvex(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_isNonMoving(SwigcptrBtTriangleMeshShape) bool

func (_swig_base SwigcptrBtTriangleMeshShape) IsNonMoving() bool {
	return _swig_wrap_btTriangleMeshShape_isNonMoving(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_isConcave(SwigcptrBtTriangleMeshShape) bool

func (_swig_base SwigcptrBtTriangleMeshShape) IsConcave() bool {
	return _swig_wrap_btTriangleMeshShape_isConcave(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_isCompound(SwigcptrBtTriangleMeshShape) bool

func (_swig_base SwigcptrBtTriangleMeshShape) IsCompound() bool {
	return _swig_wrap_btTriangleMeshShape_isCompound(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_isSoftBody(SwigcptrBtTriangleMeshShape) bool

func (_swig_base SwigcptrBtTriangleMeshShape) IsSoftBody() bool {
	return _swig_wrap_btTriangleMeshShape_isSoftBody(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_isInfinite(SwigcptrBtTriangleMeshShape) bool

func (_swig_base SwigcptrBtTriangleMeshShape) IsInfinite() bool {
	return _swig_wrap_btTriangleMeshShape_isInfinite(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_getShapeType(SwigcptrBtTriangleMeshShape) int

func (_swig_base SwigcptrBtTriangleMeshShape) GetShapeType() int {
	return _swig_wrap_btTriangleMeshShape_getShapeType(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_getAnisotropicRollingFrictionDirection(SwigcptrBtTriangleMeshShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtTriangleMeshShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btTriangleMeshShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_setUserPointer(SwigcptrBtTriangleMeshShape, uintptr)

func (_swig_base SwigcptrBtTriangleMeshShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btTriangleMeshShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btTriangleMeshShape_getUserPointer(SwigcptrBtTriangleMeshShape) uintptr

func (_swig_base SwigcptrBtTriangleMeshShape) GetUserPointer() uintptr {
	return _swig_wrap_btTriangleMeshShape_getUserPointer(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_calculateSerializeBufferSize(SwigcptrBtTriangleMeshShape) int

func (_swig_base SwigcptrBtTriangleMeshShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btTriangleMeshShape_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btTriangleMeshShape_serialize(SwigcptrBtTriangleMeshShape, uintptr, uintptr) string

func (_swig_base SwigcptrBtTriangleMeshShape) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btTriangleMeshShape_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btTriangleMeshShape_serializeSingleShape(SwigcptrBtTriangleMeshShape, uintptr)

func (_swig_base SwigcptrBtTriangleMeshShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btTriangleMeshShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtTriangleMeshShape) SwigIsBtConcaveShape() {
}

func (p SwigcptrBtTriangleMeshShape) SwigGetBtConcaveShape() BtConcaveShape {
	return SwigcptrBtConcaveShape(p.Swigcptr())
}

func (p SwigcptrBtTriangleMeshShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtTriangleMeshShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtTriangleMeshShape interface {
	Swigcptr() uintptr
	SwigIsBtTriangleMeshShape()
	LocalGetSupportingVertex(arg2 BtVector3) BtVector3
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	RecalcLocalAabb()
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3)
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	SetLocalScaling(arg2 BtVector3)
	GetLocalScaling() BtVector3
	GetMeshInterface(a ...interface{}) interface{}
	GetLocalAabbMin() BtVector3
	GetLocalAabbMax() BtVector3
	GetName() string
	GetMargin() float32
	SetMargin(arg1 float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConcaveShape()
	SwigGetBtConcaveShape() BtConcaveShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

const BtQuantizedBvhDataName string = "btQuantizedBvhFloatData"
const MAX_SUBTREE_SIZE_IN_BYTES int = 2048
const MAX_NUM_PARTS_IN_BITS int = 10

type SwigcptrBtQuantizedBvhNode uintptr

func (p SwigcptrBtQuantizedBvhNode) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtQuantizedBvhNode) SwigIsBtQuantizedBvhNode() {
}

func _swig_wrap_btQuantizedBvhNode_m_quantizedAabbMin_set(SwigcptrBtQuantizedBvhNode, *uint16)

func (arg1 SwigcptrBtQuantizedBvhNode) SetM_quantizedAabbMin(arg2 *uint16) {
	_swig_wrap_btQuantizedBvhNode_m_quantizedAabbMin_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhNode_m_quantizedAabbMin_get(SwigcptrBtQuantizedBvhNode) *uint16

func (arg1 SwigcptrBtQuantizedBvhNode) GetM_quantizedAabbMin() *uint16 {
	return _swig_wrap_btQuantizedBvhNode_m_quantizedAabbMin_get(arg1)
}

func _swig_wrap_btQuantizedBvhNode_m_quantizedAabbMax_set(SwigcptrBtQuantizedBvhNode, *uint16)

func (arg1 SwigcptrBtQuantizedBvhNode) SetM_quantizedAabbMax(arg2 *uint16) {
	_swig_wrap_btQuantizedBvhNode_m_quantizedAabbMax_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhNode_m_quantizedAabbMax_get(SwigcptrBtQuantizedBvhNode) *uint16

func (arg1 SwigcptrBtQuantizedBvhNode) GetM_quantizedAabbMax() *uint16 {
	return _swig_wrap_btQuantizedBvhNode_m_quantizedAabbMax_get(arg1)
}

func _swig_wrap_btQuantizedBvhNode_m_escapeIndexOrTriangleIndex_set(SwigcptrBtQuantizedBvhNode, int)

func (arg1 SwigcptrBtQuantizedBvhNode) SetM_escapeIndexOrTriangleIndex(arg2 int) {
	_swig_wrap_btQuantizedBvhNode_m_escapeIndexOrTriangleIndex_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhNode_m_escapeIndexOrTriangleIndex_get(SwigcptrBtQuantizedBvhNode) int

func (arg1 SwigcptrBtQuantizedBvhNode) GetM_escapeIndexOrTriangleIndex() int {
	return _swig_wrap_btQuantizedBvhNode_m_escapeIndexOrTriangleIndex_get(arg1)
}

func _swig_wrap_btQuantizedBvhNode_isLeafNode(SwigcptrBtQuantizedBvhNode) bool

func (arg1 SwigcptrBtQuantizedBvhNode) IsLeafNode() bool {
	return _swig_wrap_btQuantizedBvhNode_isLeafNode(arg1)
}

func _swig_wrap_btQuantizedBvhNode_getEscapeIndex(SwigcptrBtQuantizedBvhNode) int

func (arg1 SwigcptrBtQuantizedBvhNode) GetEscapeIndex() int {
	return _swig_wrap_btQuantizedBvhNode_getEscapeIndex(arg1)
}

func _swig_wrap_btQuantizedBvhNode_getTriangleIndex(SwigcptrBtQuantizedBvhNode) int

func (arg1 SwigcptrBtQuantizedBvhNode) GetTriangleIndex() int {
	return _swig_wrap_btQuantizedBvhNode_getTriangleIndex(arg1)
}

func _swig_wrap_btQuantizedBvhNode_getPartId(SwigcptrBtQuantizedBvhNode) int

func (arg1 SwigcptrBtQuantizedBvhNode) GetPartId() int {
	return _swig_wrap_btQuantizedBvhNode_getPartId(arg1)
}

func _swig_wrap_delete_btQuantizedBvhNode(uintptr)

func DeleteBtQuantizedBvhNode(arg1 BtQuantizedBvhNode) {
	_swig_wrap_delete_btQuantizedBvhNode(arg1.Swigcptr())
}

type BtQuantizedBvhNode interface {
	Swigcptr() uintptr
	SwigIsBtQuantizedBvhNode()
	SetM_quantizedAabbMin(arg2 *uint16)
	GetM_quantizedAabbMin() *uint16
	SetM_quantizedAabbMax(arg2 *uint16)
	GetM_quantizedAabbMax() *uint16
	SetM_escapeIndexOrTriangleIndex(arg2 int)
	GetM_escapeIndexOrTriangleIndex() int
	IsLeafNode() bool
	GetEscapeIndex() int
	GetTriangleIndex() int
	GetPartId() int
}

type SwigcptrBtOptimizedBvhNode uintptr

func (p SwigcptrBtOptimizedBvhNode) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtOptimizedBvhNode) SwigIsBtOptimizedBvhNode() {
}

func _swig_wrap_btOptimizedBvhNode_m_aabbMinOrg_set(SwigcptrBtOptimizedBvhNode, uintptr)

func (arg1 SwigcptrBtOptimizedBvhNode) SetM_aabbMinOrg(arg2 BtVector3) {
	_swig_wrap_btOptimizedBvhNode_m_aabbMinOrg_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btOptimizedBvhNode_m_aabbMinOrg_get(SwigcptrBtOptimizedBvhNode) SwigcptrBtVector3

func (arg1 SwigcptrBtOptimizedBvhNode) GetM_aabbMinOrg() BtVector3 {
	return _swig_wrap_btOptimizedBvhNode_m_aabbMinOrg_get(arg1)
}

func _swig_wrap_btOptimizedBvhNode_m_aabbMaxOrg_set(SwigcptrBtOptimizedBvhNode, uintptr)

func (arg1 SwigcptrBtOptimizedBvhNode) SetM_aabbMaxOrg(arg2 BtVector3) {
	_swig_wrap_btOptimizedBvhNode_m_aabbMaxOrg_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btOptimizedBvhNode_m_aabbMaxOrg_get(SwigcptrBtOptimizedBvhNode) SwigcptrBtVector3

func (arg1 SwigcptrBtOptimizedBvhNode) GetM_aabbMaxOrg() BtVector3 {
	return _swig_wrap_btOptimizedBvhNode_m_aabbMaxOrg_get(arg1)
}

func _swig_wrap_btOptimizedBvhNode_m_escapeIndex_set(SwigcptrBtOptimizedBvhNode, int)

func (arg1 SwigcptrBtOptimizedBvhNode) SetM_escapeIndex(arg2 int) {
	_swig_wrap_btOptimizedBvhNode_m_escapeIndex_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNode_m_escapeIndex_get(SwigcptrBtOptimizedBvhNode) int

func (arg1 SwigcptrBtOptimizedBvhNode) GetM_escapeIndex() int {
	return _swig_wrap_btOptimizedBvhNode_m_escapeIndex_get(arg1)
}

func _swig_wrap_btOptimizedBvhNode_m_subPart_set(SwigcptrBtOptimizedBvhNode, int)

func (arg1 SwigcptrBtOptimizedBvhNode) SetM_subPart(arg2 int) {
	_swig_wrap_btOptimizedBvhNode_m_subPart_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNode_m_subPart_get(SwigcptrBtOptimizedBvhNode) int

func (arg1 SwigcptrBtOptimizedBvhNode) GetM_subPart() int {
	return _swig_wrap_btOptimizedBvhNode_m_subPart_get(arg1)
}

func _swig_wrap_btOptimizedBvhNode_m_triangleIndex_set(SwigcptrBtOptimizedBvhNode, int)

func (arg1 SwigcptrBtOptimizedBvhNode) SetM_triangleIndex(arg2 int) {
	_swig_wrap_btOptimizedBvhNode_m_triangleIndex_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNode_m_triangleIndex_get(SwigcptrBtOptimizedBvhNode) int

func (arg1 SwigcptrBtOptimizedBvhNode) GetM_triangleIndex() int {
	return _swig_wrap_btOptimizedBvhNode_m_triangleIndex_get(arg1)
}

func _swig_wrap_btOptimizedBvhNode_m_padding_set(SwigcptrBtOptimizedBvhNode, string)

func (arg1 SwigcptrBtOptimizedBvhNode) SetM_padding(arg2 string) {
	_swig_wrap_btOptimizedBvhNode_m_padding_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNode_m_padding_get(SwigcptrBtOptimizedBvhNode) string

func (arg1 SwigcptrBtOptimizedBvhNode) GetM_padding() string {
	return _swig_wrap_btOptimizedBvhNode_m_padding_get(arg1)
}

func _swig_wrap_delete_btOptimizedBvhNode(uintptr)

func DeleteBtOptimizedBvhNode(arg1 BtOptimizedBvhNode) {
	_swig_wrap_delete_btOptimizedBvhNode(arg1.Swigcptr())
}

type BtOptimizedBvhNode interface {
	Swigcptr() uintptr
	SwigIsBtOptimizedBvhNode()
	SetM_aabbMinOrg(arg2 BtVector3)
	GetM_aabbMinOrg() BtVector3
	SetM_aabbMaxOrg(arg2 BtVector3)
	GetM_aabbMaxOrg() BtVector3
	SetM_escapeIndex(arg2 int)
	GetM_escapeIndex() int
	SetM_subPart(arg2 int)
	GetM_subPart() int
	SetM_triangleIndex(arg2 int)
	GetM_triangleIndex() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtBvhSubtreeInfo uintptr

func (p SwigcptrBtBvhSubtreeInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtBvhSubtreeInfo) SwigIsBtBvhSubtreeInfo() {
}

func _swig_wrap_btBvhSubtreeInfo_m_quantizedAabbMin_set(SwigcptrBtBvhSubtreeInfo, *uint16)

func (arg1 SwigcptrBtBvhSubtreeInfo) SetM_quantizedAabbMin(arg2 *uint16) {
	_swig_wrap_btBvhSubtreeInfo_m_quantizedAabbMin_set(arg1, arg2)
}

func _swig_wrap_btBvhSubtreeInfo_m_quantizedAabbMin_get(SwigcptrBtBvhSubtreeInfo) *uint16

func (arg1 SwigcptrBtBvhSubtreeInfo) GetM_quantizedAabbMin() *uint16 {
	return _swig_wrap_btBvhSubtreeInfo_m_quantizedAabbMin_get(arg1)
}

func _swig_wrap_btBvhSubtreeInfo_m_quantizedAabbMax_set(SwigcptrBtBvhSubtreeInfo, *uint16)

func (arg1 SwigcptrBtBvhSubtreeInfo) SetM_quantizedAabbMax(arg2 *uint16) {
	_swig_wrap_btBvhSubtreeInfo_m_quantizedAabbMax_set(arg1, arg2)
}

func _swig_wrap_btBvhSubtreeInfo_m_quantizedAabbMax_get(SwigcptrBtBvhSubtreeInfo) *uint16

func (arg1 SwigcptrBtBvhSubtreeInfo) GetM_quantizedAabbMax() *uint16 {
	return _swig_wrap_btBvhSubtreeInfo_m_quantizedAabbMax_get(arg1)
}

func _swig_wrap_btBvhSubtreeInfo_m_rootNodeIndex_set(SwigcptrBtBvhSubtreeInfo, int)

func (arg1 SwigcptrBtBvhSubtreeInfo) SetM_rootNodeIndex(arg2 int) {
	_swig_wrap_btBvhSubtreeInfo_m_rootNodeIndex_set(arg1, arg2)
}

func _swig_wrap_btBvhSubtreeInfo_m_rootNodeIndex_get(SwigcptrBtBvhSubtreeInfo) int

func (arg1 SwigcptrBtBvhSubtreeInfo) GetM_rootNodeIndex() int {
	return _swig_wrap_btBvhSubtreeInfo_m_rootNodeIndex_get(arg1)
}

func _swig_wrap_btBvhSubtreeInfo_m_subtreeSize_set(SwigcptrBtBvhSubtreeInfo, int)

func (arg1 SwigcptrBtBvhSubtreeInfo) SetM_subtreeSize(arg2 int) {
	_swig_wrap_btBvhSubtreeInfo_m_subtreeSize_set(arg1, arg2)
}

func _swig_wrap_btBvhSubtreeInfo_m_subtreeSize_get(SwigcptrBtBvhSubtreeInfo) int

func (arg1 SwigcptrBtBvhSubtreeInfo) GetM_subtreeSize() int {
	return _swig_wrap_btBvhSubtreeInfo_m_subtreeSize_get(arg1)
}

func _swig_wrap_btBvhSubtreeInfo_m_padding_set(SwigcptrBtBvhSubtreeInfo, *int)

func (arg1 SwigcptrBtBvhSubtreeInfo) SetM_padding(arg2 *int) {
	_swig_wrap_btBvhSubtreeInfo_m_padding_set(arg1, arg2)
}

func _swig_wrap_btBvhSubtreeInfo_m_padding_get(SwigcptrBtBvhSubtreeInfo) *int

func (arg1 SwigcptrBtBvhSubtreeInfo) GetM_padding() *int {
	return _swig_wrap_btBvhSubtreeInfo_m_padding_get(arg1)
}

func _swig_wrap_new_btBvhSubtreeInfo() SwigcptrBtBvhSubtreeInfo

func NewBtBvhSubtreeInfo() BtBvhSubtreeInfo {
	return _swig_wrap_new_btBvhSubtreeInfo()
}

func _swig_wrap_btBvhSubtreeInfo_setAabbFromQuantizeNode(SwigcptrBtBvhSubtreeInfo, uintptr)

func (arg1 SwigcptrBtBvhSubtreeInfo) SetAabbFromQuantizeNode(arg2 BtQuantizedBvhNode) {
	_swig_wrap_btBvhSubtreeInfo_setAabbFromQuantizeNode(arg1, arg2.Swigcptr())
}

func _swig_wrap_delete_btBvhSubtreeInfo(uintptr)

func DeleteBtBvhSubtreeInfo(arg1 BtBvhSubtreeInfo) {
	_swig_wrap_delete_btBvhSubtreeInfo(arg1.Swigcptr())
}

type BtBvhSubtreeInfo interface {
	Swigcptr() uintptr
	SwigIsBtBvhSubtreeInfo()
	SetM_quantizedAabbMin(arg2 *uint16)
	GetM_quantizedAabbMin() *uint16
	SetM_quantizedAabbMax(arg2 *uint16)
	GetM_quantizedAabbMax() *uint16
	SetM_rootNodeIndex(arg2 int)
	GetM_rootNodeIndex() int
	SetM_subtreeSize(arg2 int)
	GetM_subtreeSize() int
	SetM_padding(arg2 *int)
	GetM_padding() *int
	SetAabbFromQuantizeNode(arg2 BtQuantizedBvhNode)
}

type SwigcptrBtNodeOverlapCallback uintptr

func (p SwigcptrBtNodeOverlapCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtNodeOverlapCallback) SwigIsBtNodeOverlapCallback() {
}

func _swig_wrap_delete_btNodeOverlapCallback(uintptr)

func DeleteBtNodeOverlapCallback(arg1 BtNodeOverlapCallback) {
	_swig_wrap_delete_btNodeOverlapCallback(arg1.Swigcptr())
}

func _swig_wrap_btNodeOverlapCallback_processNode(SwigcptrBtNodeOverlapCallback, int, int)

func (arg1 SwigcptrBtNodeOverlapCallback) ProcessNode(arg2 int, arg3 int) {
	_swig_wrap_btNodeOverlapCallback_processNode(arg1, arg2, arg3)
}

type BtNodeOverlapCallback interface {
	Swigcptr() uintptr
	SwigIsBtNodeOverlapCallback()
	ProcessNode(arg2 int, arg3 int)
}

type SwigcptrBtQuantizedBvh uintptr

func (p SwigcptrBtQuantizedBvh) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtQuantizedBvh) SwigIsBtQuantizedBvh() {
}

type BtQuantizedBvhBtTraversalMode int

func _swig_getbtQuantizedBvh_TRAVERSAL_STACKLESS_btQuantizedBvh() BtQuantizedBvhBtTraversalMode

var BtQuantizedBvhTRAVERSAL_STACKLESS BtQuantizedBvhBtTraversalMode = _swig_getbtQuantizedBvh_TRAVERSAL_STACKLESS_btQuantizedBvh()

func _swig_getbtQuantizedBvh_TRAVERSAL_STACKLESS_CACHE_FRIENDLY_btQuantizedBvh() BtQuantizedBvhBtTraversalMode

var BtQuantizedBvhTRAVERSAL_STACKLESS_CACHE_FRIENDLY BtQuantizedBvhBtTraversalMode = _swig_getbtQuantizedBvh_TRAVERSAL_STACKLESS_CACHE_FRIENDLY_btQuantizedBvh()

func _swig_getbtQuantizedBvh_TRAVERSAL_RECURSIVE_btQuantizedBvh() BtQuantizedBvhBtTraversalMode

var BtQuantizedBvhTRAVERSAL_RECURSIVE BtQuantizedBvhBtTraversalMode = _swig_getbtQuantizedBvh_TRAVERSAL_RECURSIVE_btQuantizedBvh()

func _swig_wrap_new_btQuantizedBvh() SwigcptrBtQuantizedBvh

func NewBtQuantizedBvh() BtQuantizedBvh {
	return _swig_wrap_new_btQuantizedBvh()
}

func _swig_wrap_delete_btQuantizedBvh(uintptr)

func DeleteBtQuantizedBvh(arg1 BtQuantizedBvh) {
	_swig_wrap_delete_btQuantizedBvh(arg1.Swigcptr())
}

func _swig_wrap_btQuantizedBvh_setQuantizationValues__SWIG_0(SwigcptrBtQuantizedBvh, uintptr, uintptr, float32)

func (arg1 SwigcptrBtQuantizedBvh) SetQuantizationValues__SWIG_0(arg2 BtVector3, arg3 BtVector3, arg4 float32) {
	_swig_wrap_btQuantizedBvh_setQuantizationValues__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btQuantizedBvh_setQuantizationValues__SWIG_1(SwigcptrBtQuantizedBvh, uintptr, uintptr)

func (arg1 SwigcptrBtQuantizedBvh) SetQuantizationValues__SWIG_1(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btQuantizedBvh_setQuantizationValues__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func (p SwigcptrBtQuantizedBvh) SetQuantizationValues(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetQuantizationValues__SWIG_1(a[0].(BtVector3), a[1].(BtVector3))
		return
	}
	if argc == 3 {
		p.SetQuantizationValues__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btQuantizedBvh_getLeafNodeArray(SwigcptrBtQuantizedBvh) SwigcptrBtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_

func (arg1 SwigcptrBtQuantizedBvh) GetLeafNodeArray() BtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_ {
	return _swig_wrap_btQuantizedBvh_getLeafNodeArray(arg1)
}

func _swig_wrap_btQuantizedBvh_buildInternal(SwigcptrBtQuantizedBvh)

func (arg1 SwigcptrBtQuantizedBvh) BuildInternal() {
	_swig_wrap_btQuantizedBvh_buildInternal(arg1)
}

func _swig_wrap_btQuantizedBvh_reportAabbOverlappingNodex(SwigcptrBtQuantizedBvh, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtQuantizedBvh) ReportAabbOverlappingNodex(arg2 BtNodeOverlapCallback, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btQuantizedBvh_reportAabbOverlappingNodex(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btQuantizedBvh_reportRayOverlappingNodex(SwigcptrBtQuantizedBvh, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtQuantizedBvh) ReportRayOverlappingNodex(arg2 BtNodeOverlapCallback, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btQuantizedBvh_reportRayOverlappingNodex(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btQuantizedBvh_reportBoxCastOverlappingNodex(SwigcptrBtQuantizedBvh, uintptr, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtQuantizedBvh) ReportBoxCastOverlappingNodex(arg2 BtNodeOverlapCallback, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btQuantizedBvh_reportBoxCastOverlappingNodex(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btQuantizedBvh_quantize(SwigcptrBtQuantizedBvh, *uint16, uintptr, int)

func (arg1 SwigcptrBtQuantizedBvh) Quantize(arg2 *uint16, arg3 BtVector3, arg4 int) {
	_swig_wrap_btQuantizedBvh_quantize(arg1, arg2, arg3.Swigcptr(), arg4)
}

func _swig_wrap_btQuantizedBvh_quantizeWithClamp(SwigcptrBtQuantizedBvh, *uint16, uintptr, int)

func (arg1 SwigcptrBtQuantizedBvh) QuantizeWithClamp(arg2 *uint16, arg3 BtVector3, arg4 int) {
	_swig_wrap_btQuantizedBvh_quantizeWithClamp(arg1, arg2, arg3.Swigcptr(), arg4)
}

func _swig_wrap_btQuantizedBvh_unQuantize(SwigcptrBtQuantizedBvh, *uint16) SwigcptrBtVector3

func (arg1 SwigcptrBtQuantizedBvh) UnQuantize(arg2 *uint16) BtVector3 {
	return _swig_wrap_btQuantizedBvh_unQuantize(arg1, arg2)
}

func _swig_wrap_btQuantizedBvh_setTraversalMode(SwigcptrBtQuantizedBvh, BtQuantizedBvhBtTraversalMode)

func (arg1 SwigcptrBtQuantizedBvh) SetTraversalMode(arg2 BtQuantizedBvhBtTraversalMode) {
	_swig_wrap_btQuantizedBvh_setTraversalMode(arg1, arg2)
}

func _swig_wrap_btQuantizedBvh_getQuantizedNodeArray(SwigcptrBtQuantizedBvh) SwigcptrBtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_

func (arg1 SwigcptrBtQuantizedBvh) GetQuantizedNodeArray() BtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_ {
	return _swig_wrap_btQuantizedBvh_getQuantizedNodeArray(arg1)
}

func _swig_wrap_btQuantizedBvh_getSubtreeInfoArray(SwigcptrBtQuantizedBvh) SwigcptrBtAlignedObjectArray_Sl_btBvhSubtreeInfo_Sg_

func (arg1 SwigcptrBtQuantizedBvh) GetSubtreeInfoArray() BtAlignedObjectArray_Sl_btBvhSubtreeInfo_Sg_ {
	return _swig_wrap_btQuantizedBvh_getSubtreeInfoArray(arg1)
}

func _swig_wrap_btQuantizedBvh_calculateSerializeBufferSize(SwigcptrBtQuantizedBvh) uint

func (arg1 SwigcptrBtQuantizedBvh) CalculateSerializeBufferSize() uint {
	return _swig_wrap_btQuantizedBvh_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btQuantizedBvh_serialize__SWIG_0(SwigcptrBtQuantizedBvh, uintptr, uint, bool) bool

func (arg1 SwigcptrBtQuantizedBvh) Serialize__SWIG_0(arg2 uintptr, arg3 uint, arg4 bool) bool {
	return _swig_wrap_btQuantizedBvh_serialize__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btQuantizedBvh_deSerializeInPlace(uintptr, uint, bool) SwigcptrBtQuantizedBvh

func BtQuantizedBvhDeSerializeInPlace(arg1 uintptr, arg2 uint, arg3 bool) BtQuantizedBvh {
	return _swig_wrap_btQuantizedBvh_deSerializeInPlace(arg1, arg2, arg3)
}

func BtQuantizedBvhGetAlignmentSerializationPadding() uint
func _swig_wrap_btQuantizedBvh_calculateSerializeBufferSizeNew(SwigcptrBtQuantizedBvh) int

func (arg1 SwigcptrBtQuantizedBvh) CalculateSerializeBufferSizeNew() int {
	return _swig_wrap_btQuantizedBvh_calculateSerializeBufferSizeNew(arg1)
}

func _swig_wrap_btQuantizedBvh_serialize__SWIG_1(SwigcptrBtQuantizedBvh, uintptr, uintptr) string

func (arg1 SwigcptrBtQuantizedBvh) Serialize__SWIG_1(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btQuantizedBvh_serialize__SWIG_1(arg1, arg2, arg3.Swigcptr())
}

func (p SwigcptrBtQuantizedBvh) Serialize(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 2 {
		return p.Serialize__SWIG_1(a[0].(uintptr), a[1].(BtSerializer))
	}
	if argc == 3 {
		return p.Serialize__SWIG_0(a[0].(uintptr), a[1].(uint), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btQuantizedBvh_deSerializeFloat(SwigcptrBtQuantizedBvh, uintptr)

func (arg1 SwigcptrBtQuantizedBvh) DeSerializeFloat(arg2 BtQuantizedBvhFloatData) {
	_swig_wrap_btQuantizedBvh_deSerializeFloat(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvh_deSerializeDouble(SwigcptrBtQuantizedBvh, uintptr)

func (arg1 SwigcptrBtQuantizedBvh) DeSerializeDouble(arg2 BtQuantizedBvhDoubleData) {
	_swig_wrap_btQuantizedBvh_deSerializeDouble(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvh_isQuantized(SwigcptrBtQuantizedBvh) bool

func (arg1 SwigcptrBtQuantizedBvh) IsQuantized() bool {
	return _swig_wrap_btQuantizedBvh_isQuantized(arg1)
}

type BtQuantizedBvh interface {
	Swigcptr() uintptr
	SwigIsBtQuantizedBvh()
	SetQuantizationValues(a ...interface{})
	GetLeafNodeArray() BtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_
	BuildInternal()
	ReportAabbOverlappingNodex(arg2 BtNodeOverlapCallback, arg3 BtVector3, arg4 BtVector3)
	ReportRayOverlappingNodex(arg2 BtNodeOverlapCallback, arg3 BtVector3, arg4 BtVector3)
	ReportBoxCastOverlappingNodex(arg2 BtNodeOverlapCallback, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3)
	Quantize(arg2 *uint16, arg3 BtVector3, arg4 int)
	QuantizeWithClamp(arg2 *uint16, arg3 BtVector3, arg4 int)
	UnQuantize(arg2 *uint16) BtVector3
	SetTraversalMode(arg2 BtQuantizedBvhBtTraversalMode)
	GetQuantizedNodeArray() BtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_
	GetSubtreeInfoArray() BtAlignedObjectArray_Sl_btBvhSubtreeInfo_Sg_
	CalculateSerializeBufferSize() uint
	CalculateSerializeBufferSizeNew() int
	Serialize(a ...interface{}) interface{}
	DeSerializeFloat(arg2 BtQuantizedBvhFloatData)
	DeSerializeDouble(arg2 BtQuantizedBvhDoubleData)
	IsQuantized() bool
}

type SwigcptrBtBvhSubtreeInfoData uintptr

func (p SwigcptrBtBvhSubtreeInfoData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtBvhSubtreeInfoData) SwigIsBtBvhSubtreeInfoData() {
}

func _swig_wrap_btBvhSubtreeInfoData_m_rootNodeIndex_set(SwigcptrBtBvhSubtreeInfoData, int)

func (arg1 SwigcptrBtBvhSubtreeInfoData) SetM_rootNodeIndex(arg2 int) {
	_swig_wrap_btBvhSubtreeInfoData_m_rootNodeIndex_set(arg1, arg2)
}

func _swig_wrap_btBvhSubtreeInfoData_m_rootNodeIndex_get(SwigcptrBtBvhSubtreeInfoData) int

func (arg1 SwigcptrBtBvhSubtreeInfoData) GetM_rootNodeIndex() int {
	return _swig_wrap_btBvhSubtreeInfoData_m_rootNodeIndex_get(arg1)
}

func _swig_wrap_btBvhSubtreeInfoData_m_subtreeSize_set(SwigcptrBtBvhSubtreeInfoData, int)

func (arg1 SwigcptrBtBvhSubtreeInfoData) SetM_subtreeSize(arg2 int) {
	_swig_wrap_btBvhSubtreeInfoData_m_subtreeSize_set(arg1, arg2)
}

func _swig_wrap_btBvhSubtreeInfoData_m_subtreeSize_get(SwigcptrBtBvhSubtreeInfoData) int

func (arg1 SwigcptrBtBvhSubtreeInfoData) GetM_subtreeSize() int {
	return _swig_wrap_btBvhSubtreeInfoData_m_subtreeSize_get(arg1)
}

func _swig_wrap_btBvhSubtreeInfoData_m_quantizedAabbMin_set(SwigcptrBtBvhSubtreeInfoData, *uint16)

func (arg1 SwigcptrBtBvhSubtreeInfoData) SetM_quantizedAabbMin(arg2 *uint16) {
	_swig_wrap_btBvhSubtreeInfoData_m_quantizedAabbMin_set(arg1, arg2)
}

func _swig_wrap_btBvhSubtreeInfoData_m_quantizedAabbMin_get(SwigcptrBtBvhSubtreeInfoData) *uint16

func (arg1 SwigcptrBtBvhSubtreeInfoData) GetM_quantizedAabbMin() *uint16 {
	return _swig_wrap_btBvhSubtreeInfoData_m_quantizedAabbMin_get(arg1)
}

func _swig_wrap_btBvhSubtreeInfoData_m_quantizedAabbMax_set(SwigcptrBtBvhSubtreeInfoData, *uint16)

func (arg1 SwigcptrBtBvhSubtreeInfoData) SetM_quantizedAabbMax(arg2 *uint16) {
	_swig_wrap_btBvhSubtreeInfoData_m_quantizedAabbMax_set(arg1, arg2)
}

func _swig_wrap_btBvhSubtreeInfoData_m_quantizedAabbMax_get(SwigcptrBtBvhSubtreeInfoData) *uint16

func (arg1 SwigcptrBtBvhSubtreeInfoData) GetM_quantizedAabbMax() *uint16 {
	return _swig_wrap_btBvhSubtreeInfoData_m_quantizedAabbMax_get(arg1)
}

func _swig_wrap_new_btBvhSubtreeInfoData() SwigcptrBtBvhSubtreeInfoData

func NewBtBvhSubtreeInfoData() BtBvhSubtreeInfoData {
	return _swig_wrap_new_btBvhSubtreeInfoData()
}

func _swig_wrap_delete_btBvhSubtreeInfoData(uintptr)

func DeleteBtBvhSubtreeInfoData(arg1 BtBvhSubtreeInfoData) {
	_swig_wrap_delete_btBvhSubtreeInfoData(arg1.Swigcptr())
}

type BtBvhSubtreeInfoData interface {
	Swigcptr() uintptr
	SwigIsBtBvhSubtreeInfoData()
	SetM_rootNodeIndex(arg2 int)
	GetM_rootNodeIndex() int
	SetM_subtreeSize(arg2 int)
	GetM_subtreeSize() int
	SetM_quantizedAabbMin(arg2 *uint16)
	GetM_quantizedAabbMin() *uint16
	SetM_quantizedAabbMax(arg2 *uint16)
	GetM_quantizedAabbMax() *uint16
}

type SwigcptrBtOptimizedBvhNodeFloatData uintptr

func (p SwigcptrBtOptimizedBvhNodeFloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtOptimizedBvhNodeFloatData) SwigIsBtOptimizedBvhNodeFloatData() {
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_aabbMinOrg_set(SwigcptrBtOptimizedBvhNodeFloatData, uintptr)

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) SetM_aabbMinOrg(arg2 BtVector3FloatData) {
	_swig_wrap_btOptimizedBvhNodeFloatData_m_aabbMinOrg_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_aabbMinOrg_get(SwigcptrBtOptimizedBvhNodeFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) GetM_aabbMinOrg() BtVector3FloatData {
	return _swig_wrap_btOptimizedBvhNodeFloatData_m_aabbMinOrg_get(arg1)
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_aabbMaxOrg_set(SwigcptrBtOptimizedBvhNodeFloatData, uintptr)

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) SetM_aabbMaxOrg(arg2 BtVector3FloatData) {
	_swig_wrap_btOptimizedBvhNodeFloatData_m_aabbMaxOrg_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_aabbMaxOrg_get(SwigcptrBtOptimizedBvhNodeFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) GetM_aabbMaxOrg() BtVector3FloatData {
	return _swig_wrap_btOptimizedBvhNodeFloatData_m_aabbMaxOrg_get(arg1)
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_escapeIndex_set(SwigcptrBtOptimizedBvhNodeFloatData, int)

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) SetM_escapeIndex(arg2 int) {
	_swig_wrap_btOptimizedBvhNodeFloatData_m_escapeIndex_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_escapeIndex_get(SwigcptrBtOptimizedBvhNodeFloatData) int

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) GetM_escapeIndex() int {
	return _swig_wrap_btOptimizedBvhNodeFloatData_m_escapeIndex_get(arg1)
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_subPart_set(SwigcptrBtOptimizedBvhNodeFloatData, int)

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) SetM_subPart(arg2 int) {
	_swig_wrap_btOptimizedBvhNodeFloatData_m_subPart_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_subPart_get(SwigcptrBtOptimizedBvhNodeFloatData) int

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) GetM_subPart() int {
	return _swig_wrap_btOptimizedBvhNodeFloatData_m_subPart_get(arg1)
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_triangleIndex_set(SwigcptrBtOptimizedBvhNodeFloatData, int)

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) SetM_triangleIndex(arg2 int) {
	_swig_wrap_btOptimizedBvhNodeFloatData_m_triangleIndex_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_triangleIndex_get(SwigcptrBtOptimizedBvhNodeFloatData) int

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) GetM_triangleIndex() int {
	return _swig_wrap_btOptimizedBvhNodeFloatData_m_triangleIndex_get(arg1)
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_pad_set(SwigcptrBtOptimizedBvhNodeFloatData, string)

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) SetM_pad(arg2 string) {
	_swig_wrap_btOptimizedBvhNodeFloatData_m_pad_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNodeFloatData_m_pad_get(SwigcptrBtOptimizedBvhNodeFloatData) string

func (arg1 SwigcptrBtOptimizedBvhNodeFloatData) GetM_pad() string {
	return _swig_wrap_btOptimizedBvhNodeFloatData_m_pad_get(arg1)
}

func _swig_wrap_new_btOptimizedBvhNodeFloatData() SwigcptrBtOptimizedBvhNodeFloatData

func NewBtOptimizedBvhNodeFloatData() BtOptimizedBvhNodeFloatData {
	return _swig_wrap_new_btOptimizedBvhNodeFloatData()
}

func _swig_wrap_delete_btOptimizedBvhNodeFloatData(uintptr)

func DeleteBtOptimizedBvhNodeFloatData(arg1 BtOptimizedBvhNodeFloatData) {
	_swig_wrap_delete_btOptimizedBvhNodeFloatData(arg1.Swigcptr())
}

type BtOptimizedBvhNodeFloatData interface {
	Swigcptr() uintptr
	SwigIsBtOptimizedBvhNodeFloatData()
	SetM_aabbMinOrg(arg2 BtVector3FloatData)
	GetM_aabbMinOrg() BtVector3FloatData
	SetM_aabbMaxOrg(arg2 BtVector3FloatData)
	GetM_aabbMaxOrg() BtVector3FloatData
	SetM_escapeIndex(arg2 int)
	GetM_escapeIndex() int
	SetM_subPart(arg2 int)
	GetM_subPart() int
	SetM_triangleIndex(arg2 int)
	GetM_triangleIndex() int
	SetM_pad(arg2 string)
	GetM_pad() string
}

type SwigcptrBtOptimizedBvhNodeDoubleData uintptr

func (p SwigcptrBtOptimizedBvhNodeDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtOptimizedBvhNodeDoubleData) SwigIsBtOptimizedBvhNodeDoubleData() {
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_aabbMinOrg_set(SwigcptrBtOptimizedBvhNodeDoubleData, uintptr)

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) SetM_aabbMinOrg(arg2 BtVector3DoubleData) {
	_swig_wrap_btOptimizedBvhNodeDoubleData_m_aabbMinOrg_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_aabbMinOrg_get(SwigcptrBtOptimizedBvhNodeDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) GetM_aabbMinOrg() BtVector3DoubleData {
	return _swig_wrap_btOptimizedBvhNodeDoubleData_m_aabbMinOrg_get(arg1)
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_aabbMaxOrg_set(SwigcptrBtOptimizedBvhNodeDoubleData, uintptr)

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) SetM_aabbMaxOrg(arg2 BtVector3DoubleData) {
	_swig_wrap_btOptimizedBvhNodeDoubleData_m_aabbMaxOrg_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_aabbMaxOrg_get(SwigcptrBtOptimizedBvhNodeDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) GetM_aabbMaxOrg() BtVector3DoubleData {
	return _swig_wrap_btOptimizedBvhNodeDoubleData_m_aabbMaxOrg_get(arg1)
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_escapeIndex_set(SwigcptrBtOptimizedBvhNodeDoubleData, int)

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) SetM_escapeIndex(arg2 int) {
	_swig_wrap_btOptimizedBvhNodeDoubleData_m_escapeIndex_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_escapeIndex_get(SwigcptrBtOptimizedBvhNodeDoubleData) int

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) GetM_escapeIndex() int {
	return _swig_wrap_btOptimizedBvhNodeDoubleData_m_escapeIndex_get(arg1)
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_subPart_set(SwigcptrBtOptimizedBvhNodeDoubleData, int)

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) SetM_subPart(arg2 int) {
	_swig_wrap_btOptimizedBvhNodeDoubleData_m_subPart_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_subPart_get(SwigcptrBtOptimizedBvhNodeDoubleData) int

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) GetM_subPart() int {
	return _swig_wrap_btOptimizedBvhNodeDoubleData_m_subPart_get(arg1)
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_triangleIndex_set(SwigcptrBtOptimizedBvhNodeDoubleData, int)

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) SetM_triangleIndex(arg2 int) {
	_swig_wrap_btOptimizedBvhNodeDoubleData_m_triangleIndex_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_triangleIndex_get(SwigcptrBtOptimizedBvhNodeDoubleData) int

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) GetM_triangleIndex() int {
	return _swig_wrap_btOptimizedBvhNodeDoubleData_m_triangleIndex_get(arg1)
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_pad_set(SwigcptrBtOptimizedBvhNodeDoubleData, string)

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) SetM_pad(arg2 string) {
	_swig_wrap_btOptimizedBvhNodeDoubleData_m_pad_set(arg1, arg2)
}

func _swig_wrap_btOptimizedBvhNodeDoubleData_m_pad_get(SwigcptrBtOptimizedBvhNodeDoubleData) string

func (arg1 SwigcptrBtOptimizedBvhNodeDoubleData) GetM_pad() string {
	return _swig_wrap_btOptimizedBvhNodeDoubleData_m_pad_get(arg1)
}

func _swig_wrap_new_btOptimizedBvhNodeDoubleData() SwigcptrBtOptimizedBvhNodeDoubleData

func NewBtOptimizedBvhNodeDoubleData() BtOptimizedBvhNodeDoubleData {
	return _swig_wrap_new_btOptimizedBvhNodeDoubleData()
}

func _swig_wrap_delete_btOptimizedBvhNodeDoubleData(uintptr)

func DeleteBtOptimizedBvhNodeDoubleData(arg1 BtOptimizedBvhNodeDoubleData) {
	_swig_wrap_delete_btOptimizedBvhNodeDoubleData(arg1.Swigcptr())
}

type BtOptimizedBvhNodeDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtOptimizedBvhNodeDoubleData()
	SetM_aabbMinOrg(arg2 BtVector3DoubleData)
	GetM_aabbMinOrg() BtVector3DoubleData
	SetM_aabbMaxOrg(arg2 BtVector3DoubleData)
	GetM_aabbMaxOrg() BtVector3DoubleData
	SetM_escapeIndex(arg2 int)
	GetM_escapeIndex() int
	SetM_subPart(arg2 int)
	GetM_subPart() int
	SetM_triangleIndex(arg2 int)
	GetM_triangleIndex() int
	SetM_pad(arg2 string)
	GetM_pad() string
}

type SwigcptrBtQuantizedBvhNodeData uintptr

func (p SwigcptrBtQuantizedBvhNodeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtQuantizedBvhNodeData) SwigIsBtQuantizedBvhNodeData() {
}

func _swig_wrap_btQuantizedBvhNodeData_m_quantizedAabbMin_set(SwigcptrBtQuantizedBvhNodeData, *uint16)

func (arg1 SwigcptrBtQuantizedBvhNodeData) SetM_quantizedAabbMin(arg2 *uint16) {
	_swig_wrap_btQuantizedBvhNodeData_m_quantizedAabbMin_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhNodeData_m_quantizedAabbMin_get(SwigcptrBtQuantizedBvhNodeData) *uint16

func (arg1 SwigcptrBtQuantizedBvhNodeData) GetM_quantizedAabbMin() *uint16 {
	return _swig_wrap_btQuantizedBvhNodeData_m_quantizedAabbMin_get(arg1)
}

func _swig_wrap_btQuantizedBvhNodeData_m_quantizedAabbMax_set(SwigcptrBtQuantizedBvhNodeData, *uint16)

func (arg1 SwigcptrBtQuantizedBvhNodeData) SetM_quantizedAabbMax(arg2 *uint16) {
	_swig_wrap_btQuantizedBvhNodeData_m_quantizedAabbMax_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhNodeData_m_quantizedAabbMax_get(SwigcptrBtQuantizedBvhNodeData) *uint16

func (arg1 SwigcptrBtQuantizedBvhNodeData) GetM_quantizedAabbMax() *uint16 {
	return _swig_wrap_btQuantizedBvhNodeData_m_quantizedAabbMax_get(arg1)
}

func _swig_wrap_btQuantizedBvhNodeData_m_escapeIndexOrTriangleIndex_set(SwigcptrBtQuantizedBvhNodeData, int)

func (arg1 SwigcptrBtQuantizedBvhNodeData) SetM_escapeIndexOrTriangleIndex(arg2 int) {
	_swig_wrap_btQuantizedBvhNodeData_m_escapeIndexOrTriangleIndex_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhNodeData_m_escapeIndexOrTriangleIndex_get(SwigcptrBtQuantizedBvhNodeData) int

func (arg1 SwigcptrBtQuantizedBvhNodeData) GetM_escapeIndexOrTriangleIndex() int {
	return _swig_wrap_btQuantizedBvhNodeData_m_escapeIndexOrTriangleIndex_get(arg1)
}

func _swig_wrap_new_btQuantizedBvhNodeData() SwigcptrBtQuantizedBvhNodeData

func NewBtQuantizedBvhNodeData() BtQuantizedBvhNodeData {
	return _swig_wrap_new_btQuantizedBvhNodeData()
}

func _swig_wrap_delete_btQuantizedBvhNodeData(uintptr)

func DeleteBtQuantizedBvhNodeData(arg1 BtQuantizedBvhNodeData) {
	_swig_wrap_delete_btQuantizedBvhNodeData(arg1.Swigcptr())
}

type BtQuantizedBvhNodeData interface {
	Swigcptr() uintptr
	SwigIsBtQuantizedBvhNodeData()
	SetM_quantizedAabbMin(arg2 *uint16)
	GetM_quantizedAabbMin() *uint16
	SetM_quantizedAabbMax(arg2 *uint16)
	GetM_quantizedAabbMax() *uint16
	SetM_escapeIndexOrTriangleIndex(arg2 int)
	GetM_escapeIndexOrTriangleIndex() int
}

type SwigcptrBtQuantizedBvhFloatData uintptr

func (p SwigcptrBtQuantizedBvhFloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtQuantizedBvhFloatData) SwigIsBtQuantizedBvhFloatData() {
}

func _swig_wrap_btQuantizedBvhFloatData_m_bvhAabbMin_set(SwigcptrBtQuantizedBvhFloatData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_bvhAabbMin(arg2 BtVector3FloatData) {
	_swig_wrap_btQuantizedBvhFloatData_m_bvhAabbMin_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhFloatData_m_bvhAabbMin_get(SwigcptrBtQuantizedBvhFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_bvhAabbMin() BtVector3FloatData {
	return _swig_wrap_btQuantizedBvhFloatData_m_bvhAabbMin_get(arg1)
}

func _swig_wrap_btQuantizedBvhFloatData_m_bvhAabbMax_set(SwigcptrBtQuantizedBvhFloatData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_bvhAabbMax(arg2 BtVector3FloatData) {
	_swig_wrap_btQuantizedBvhFloatData_m_bvhAabbMax_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhFloatData_m_bvhAabbMax_get(SwigcptrBtQuantizedBvhFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_bvhAabbMax() BtVector3FloatData {
	return _swig_wrap_btQuantizedBvhFloatData_m_bvhAabbMax_get(arg1)
}

func _swig_wrap_btQuantizedBvhFloatData_m_bvhQuantization_set(SwigcptrBtQuantizedBvhFloatData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_bvhQuantization(arg2 BtVector3FloatData) {
	_swig_wrap_btQuantizedBvhFloatData_m_bvhQuantization_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhFloatData_m_bvhQuantization_get(SwigcptrBtQuantizedBvhFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_bvhQuantization() BtVector3FloatData {
	return _swig_wrap_btQuantizedBvhFloatData_m_bvhQuantization_get(arg1)
}

func _swig_wrap_btQuantizedBvhFloatData_m_curNodeIndex_set(SwigcptrBtQuantizedBvhFloatData, int)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_curNodeIndex(arg2 int) {
	_swig_wrap_btQuantizedBvhFloatData_m_curNodeIndex_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhFloatData_m_curNodeIndex_get(SwigcptrBtQuantizedBvhFloatData) int

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_curNodeIndex() int {
	return _swig_wrap_btQuantizedBvhFloatData_m_curNodeIndex_get(arg1)
}

func _swig_wrap_btQuantizedBvhFloatData_m_useQuantization_set(SwigcptrBtQuantizedBvhFloatData, int)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_useQuantization(arg2 int) {
	_swig_wrap_btQuantizedBvhFloatData_m_useQuantization_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhFloatData_m_useQuantization_get(SwigcptrBtQuantizedBvhFloatData) int

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_useQuantization() int {
	return _swig_wrap_btQuantizedBvhFloatData_m_useQuantization_get(arg1)
}

func _swig_wrap_btQuantizedBvhFloatData_m_numContiguousLeafNodes_set(SwigcptrBtQuantizedBvhFloatData, int)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_numContiguousLeafNodes(arg2 int) {
	_swig_wrap_btQuantizedBvhFloatData_m_numContiguousLeafNodes_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhFloatData_m_numContiguousLeafNodes_get(SwigcptrBtQuantizedBvhFloatData) int

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_numContiguousLeafNodes() int {
	return _swig_wrap_btQuantizedBvhFloatData_m_numContiguousLeafNodes_get(arg1)
}

func _swig_wrap_btQuantizedBvhFloatData_m_numQuantizedContiguousNodes_set(SwigcptrBtQuantizedBvhFloatData, int)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_numQuantizedContiguousNodes(arg2 int) {
	_swig_wrap_btQuantizedBvhFloatData_m_numQuantizedContiguousNodes_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhFloatData_m_numQuantizedContiguousNodes_get(SwigcptrBtQuantizedBvhFloatData) int

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_numQuantizedContiguousNodes() int {
	return _swig_wrap_btQuantizedBvhFloatData_m_numQuantizedContiguousNodes_get(arg1)
}

func _swig_wrap_btQuantizedBvhFloatData_m_contiguousNodesPtr_set(SwigcptrBtQuantizedBvhFloatData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_contiguousNodesPtr(arg2 BtOptimizedBvhNodeFloatData) {
	_swig_wrap_btQuantizedBvhFloatData_m_contiguousNodesPtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhFloatData_m_contiguousNodesPtr_get(SwigcptrBtQuantizedBvhFloatData) SwigcptrBtOptimizedBvhNodeFloatData

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_contiguousNodesPtr() BtOptimizedBvhNodeFloatData {
	return _swig_wrap_btQuantizedBvhFloatData_m_contiguousNodesPtr_get(arg1)
}

func _swig_wrap_btQuantizedBvhFloatData_m_quantizedContiguousNodesPtr_set(SwigcptrBtQuantizedBvhFloatData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_quantizedContiguousNodesPtr(arg2 BtQuantizedBvhNodeData) {
	_swig_wrap_btQuantizedBvhFloatData_m_quantizedContiguousNodesPtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhFloatData_m_quantizedContiguousNodesPtr_get(SwigcptrBtQuantizedBvhFloatData) SwigcptrBtQuantizedBvhNodeData

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_quantizedContiguousNodesPtr() BtQuantizedBvhNodeData {
	return _swig_wrap_btQuantizedBvhFloatData_m_quantizedContiguousNodesPtr_get(arg1)
}

func _swig_wrap_btQuantizedBvhFloatData_m_subTreeInfoPtr_set(SwigcptrBtQuantizedBvhFloatData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_subTreeInfoPtr(arg2 BtBvhSubtreeInfoData) {
	_swig_wrap_btQuantizedBvhFloatData_m_subTreeInfoPtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhFloatData_m_subTreeInfoPtr_get(SwigcptrBtQuantizedBvhFloatData) SwigcptrBtBvhSubtreeInfoData

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_subTreeInfoPtr() BtBvhSubtreeInfoData {
	return _swig_wrap_btQuantizedBvhFloatData_m_subTreeInfoPtr_get(arg1)
}

func _swig_wrap_btQuantizedBvhFloatData_m_traversalMode_set(SwigcptrBtQuantizedBvhFloatData, int)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_traversalMode(arg2 int) {
	_swig_wrap_btQuantizedBvhFloatData_m_traversalMode_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhFloatData_m_traversalMode_get(SwigcptrBtQuantizedBvhFloatData) int

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_traversalMode() int {
	return _swig_wrap_btQuantizedBvhFloatData_m_traversalMode_get(arg1)
}

func _swig_wrap_btQuantizedBvhFloatData_m_numSubtreeHeaders_set(SwigcptrBtQuantizedBvhFloatData, int)

func (arg1 SwigcptrBtQuantizedBvhFloatData) SetM_numSubtreeHeaders(arg2 int) {
	_swig_wrap_btQuantizedBvhFloatData_m_numSubtreeHeaders_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhFloatData_m_numSubtreeHeaders_get(SwigcptrBtQuantizedBvhFloatData) int

func (arg1 SwigcptrBtQuantizedBvhFloatData) GetM_numSubtreeHeaders() int {
	return _swig_wrap_btQuantizedBvhFloatData_m_numSubtreeHeaders_get(arg1)
}

func _swig_wrap_new_btQuantizedBvhFloatData() SwigcptrBtQuantizedBvhFloatData

func NewBtQuantizedBvhFloatData() BtQuantizedBvhFloatData {
	return _swig_wrap_new_btQuantizedBvhFloatData()
}

func _swig_wrap_delete_btQuantizedBvhFloatData(uintptr)

func DeleteBtQuantizedBvhFloatData(arg1 BtQuantizedBvhFloatData) {
	_swig_wrap_delete_btQuantizedBvhFloatData(arg1.Swigcptr())
}

type BtQuantizedBvhFloatData interface {
	Swigcptr() uintptr
	SwigIsBtQuantizedBvhFloatData()
	SetM_bvhAabbMin(arg2 BtVector3FloatData)
	GetM_bvhAabbMin() BtVector3FloatData
	SetM_bvhAabbMax(arg2 BtVector3FloatData)
	GetM_bvhAabbMax() BtVector3FloatData
	SetM_bvhQuantization(arg2 BtVector3FloatData)
	GetM_bvhQuantization() BtVector3FloatData
	SetM_curNodeIndex(arg2 int)
	GetM_curNodeIndex() int
	SetM_useQuantization(arg2 int)
	GetM_useQuantization() int
	SetM_numContiguousLeafNodes(arg2 int)
	GetM_numContiguousLeafNodes() int
	SetM_numQuantizedContiguousNodes(arg2 int)
	GetM_numQuantizedContiguousNodes() int
	SetM_contiguousNodesPtr(arg2 BtOptimizedBvhNodeFloatData)
	GetM_contiguousNodesPtr() BtOptimizedBvhNodeFloatData
	SetM_quantizedContiguousNodesPtr(arg2 BtQuantizedBvhNodeData)
	GetM_quantizedContiguousNodesPtr() BtQuantizedBvhNodeData
	SetM_subTreeInfoPtr(arg2 BtBvhSubtreeInfoData)
	GetM_subTreeInfoPtr() BtBvhSubtreeInfoData
	SetM_traversalMode(arg2 int)
	GetM_traversalMode() int
	SetM_numSubtreeHeaders(arg2 int)
	GetM_numSubtreeHeaders() int
}

type SwigcptrBtQuantizedBvhDoubleData uintptr

func (p SwigcptrBtQuantizedBvhDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtQuantizedBvhDoubleData) SwigIsBtQuantizedBvhDoubleData() {
}

func _swig_wrap_btQuantizedBvhDoubleData_m_bvhAabbMin_set(SwigcptrBtQuantizedBvhDoubleData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_bvhAabbMin(arg2 BtVector3DoubleData) {
	_swig_wrap_btQuantizedBvhDoubleData_m_bvhAabbMin_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhDoubleData_m_bvhAabbMin_get(SwigcptrBtQuantizedBvhDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_bvhAabbMin() BtVector3DoubleData {
	return _swig_wrap_btQuantizedBvhDoubleData_m_bvhAabbMin_get(arg1)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_bvhAabbMax_set(SwigcptrBtQuantizedBvhDoubleData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_bvhAabbMax(arg2 BtVector3DoubleData) {
	_swig_wrap_btQuantizedBvhDoubleData_m_bvhAabbMax_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhDoubleData_m_bvhAabbMax_get(SwigcptrBtQuantizedBvhDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_bvhAabbMax() BtVector3DoubleData {
	return _swig_wrap_btQuantizedBvhDoubleData_m_bvhAabbMax_get(arg1)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_bvhQuantization_set(SwigcptrBtQuantizedBvhDoubleData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_bvhQuantization(arg2 BtVector3DoubleData) {
	_swig_wrap_btQuantizedBvhDoubleData_m_bvhQuantization_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhDoubleData_m_bvhQuantization_get(SwigcptrBtQuantizedBvhDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_bvhQuantization() BtVector3DoubleData {
	return _swig_wrap_btQuantizedBvhDoubleData_m_bvhQuantization_get(arg1)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_curNodeIndex_set(SwigcptrBtQuantizedBvhDoubleData, int)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_curNodeIndex(arg2 int) {
	_swig_wrap_btQuantizedBvhDoubleData_m_curNodeIndex_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_curNodeIndex_get(SwigcptrBtQuantizedBvhDoubleData) int

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_curNodeIndex() int {
	return _swig_wrap_btQuantizedBvhDoubleData_m_curNodeIndex_get(arg1)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_useQuantization_set(SwigcptrBtQuantizedBvhDoubleData, int)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_useQuantization(arg2 int) {
	_swig_wrap_btQuantizedBvhDoubleData_m_useQuantization_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_useQuantization_get(SwigcptrBtQuantizedBvhDoubleData) int

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_useQuantization() int {
	return _swig_wrap_btQuantizedBvhDoubleData_m_useQuantization_get(arg1)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_numContiguousLeafNodes_set(SwigcptrBtQuantizedBvhDoubleData, int)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_numContiguousLeafNodes(arg2 int) {
	_swig_wrap_btQuantizedBvhDoubleData_m_numContiguousLeafNodes_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_numContiguousLeafNodes_get(SwigcptrBtQuantizedBvhDoubleData) int

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_numContiguousLeafNodes() int {
	return _swig_wrap_btQuantizedBvhDoubleData_m_numContiguousLeafNodes_get(arg1)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_numQuantizedContiguousNodes_set(SwigcptrBtQuantizedBvhDoubleData, int)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_numQuantizedContiguousNodes(arg2 int) {
	_swig_wrap_btQuantizedBvhDoubleData_m_numQuantizedContiguousNodes_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_numQuantizedContiguousNodes_get(SwigcptrBtQuantizedBvhDoubleData) int

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_numQuantizedContiguousNodes() int {
	return _swig_wrap_btQuantizedBvhDoubleData_m_numQuantizedContiguousNodes_get(arg1)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_contiguousNodesPtr_set(SwigcptrBtQuantizedBvhDoubleData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_contiguousNodesPtr(arg2 BtOptimizedBvhNodeDoubleData) {
	_swig_wrap_btQuantizedBvhDoubleData_m_contiguousNodesPtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhDoubleData_m_contiguousNodesPtr_get(SwigcptrBtQuantizedBvhDoubleData) SwigcptrBtOptimizedBvhNodeDoubleData

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_contiguousNodesPtr() BtOptimizedBvhNodeDoubleData {
	return _swig_wrap_btQuantizedBvhDoubleData_m_contiguousNodesPtr_get(arg1)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_quantizedContiguousNodesPtr_set(SwigcptrBtQuantizedBvhDoubleData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_quantizedContiguousNodesPtr(arg2 BtQuantizedBvhNodeData) {
	_swig_wrap_btQuantizedBvhDoubleData_m_quantizedContiguousNodesPtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhDoubleData_m_quantizedContiguousNodesPtr_get(SwigcptrBtQuantizedBvhDoubleData) SwigcptrBtQuantizedBvhNodeData

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_quantizedContiguousNodesPtr() BtQuantizedBvhNodeData {
	return _swig_wrap_btQuantizedBvhDoubleData_m_quantizedContiguousNodesPtr_get(arg1)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_traversalMode_set(SwigcptrBtQuantizedBvhDoubleData, int)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_traversalMode(arg2 int) {
	_swig_wrap_btQuantizedBvhDoubleData_m_traversalMode_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_traversalMode_get(SwigcptrBtQuantizedBvhDoubleData) int

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_traversalMode() int {
	return _swig_wrap_btQuantizedBvhDoubleData_m_traversalMode_get(arg1)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_numSubtreeHeaders_set(SwigcptrBtQuantizedBvhDoubleData, int)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_numSubtreeHeaders(arg2 int) {
	_swig_wrap_btQuantizedBvhDoubleData_m_numSubtreeHeaders_set(arg1, arg2)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_numSubtreeHeaders_get(SwigcptrBtQuantizedBvhDoubleData) int

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_numSubtreeHeaders() int {
	return _swig_wrap_btQuantizedBvhDoubleData_m_numSubtreeHeaders_get(arg1)
}

func _swig_wrap_btQuantizedBvhDoubleData_m_subTreeInfoPtr_set(SwigcptrBtQuantizedBvhDoubleData, uintptr)

func (arg1 SwigcptrBtQuantizedBvhDoubleData) SetM_subTreeInfoPtr(arg2 BtBvhSubtreeInfoData) {
	_swig_wrap_btQuantizedBvhDoubleData_m_subTreeInfoPtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btQuantizedBvhDoubleData_m_subTreeInfoPtr_get(SwigcptrBtQuantizedBvhDoubleData) SwigcptrBtBvhSubtreeInfoData

func (arg1 SwigcptrBtQuantizedBvhDoubleData) GetM_subTreeInfoPtr() BtBvhSubtreeInfoData {
	return _swig_wrap_btQuantizedBvhDoubleData_m_subTreeInfoPtr_get(arg1)
}

func _swig_wrap_new_btQuantizedBvhDoubleData() SwigcptrBtQuantizedBvhDoubleData

func NewBtQuantizedBvhDoubleData() BtQuantizedBvhDoubleData {
	return _swig_wrap_new_btQuantizedBvhDoubleData()
}

func _swig_wrap_delete_btQuantizedBvhDoubleData(uintptr)

func DeleteBtQuantizedBvhDoubleData(arg1 BtQuantizedBvhDoubleData) {
	_swig_wrap_delete_btQuantizedBvhDoubleData(arg1.Swigcptr())
}

type BtQuantizedBvhDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtQuantizedBvhDoubleData()
	SetM_bvhAabbMin(arg2 BtVector3DoubleData)
	GetM_bvhAabbMin() BtVector3DoubleData
	SetM_bvhAabbMax(arg2 BtVector3DoubleData)
	GetM_bvhAabbMax() BtVector3DoubleData
	SetM_bvhQuantization(arg2 BtVector3DoubleData)
	GetM_bvhQuantization() BtVector3DoubleData
	SetM_curNodeIndex(arg2 int)
	GetM_curNodeIndex() int
	SetM_useQuantization(arg2 int)
	GetM_useQuantization() int
	SetM_numContiguousLeafNodes(arg2 int)
	GetM_numContiguousLeafNodes() int
	SetM_numQuantizedContiguousNodes(arg2 int)
	GetM_numQuantizedContiguousNodes() int
	SetM_contiguousNodesPtr(arg2 BtOptimizedBvhNodeDoubleData)
	GetM_contiguousNodesPtr() BtOptimizedBvhNodeDoubleData
	SetM_quantizedContiguousNodesPtr(arg2 BtQuantizedBvhNodeData)
	GetM_quantizedContiguousNodesPtr() BtQuantizedBvhNodeData
	SetM_traversalMode(arg2 int)
	GetM_traversalMode() int
	SetM_numSubtreeHeaders(arg2 int)
	GetM_numSubtreeHeaders() int
	SetM_subTreeInfoPtr(arg2 BtBvhSubtreeInfoData)
	GetM_subTreeInfoPtr() BtBvhSubtreeInfoData
}

type SwigcptrBtOptimizedBvh uintptr

func (p SwigcptrBtOptimizedBvh) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtOptimizedBvh) SwigIsBtOptimizedBvh() {
}

func _swig_wrap_new_btOptimizedBvh() SwigcptrBtOptimizedBvh

func NewBtOptimizedBvh() BtOptimizedBvh {
	return _swig_wrap_new_btOptimizedBvh()
}

func _swig_wrap_delete_btOptimizedBvh(uintptr)

func DeleteBtOptimizedBvh(arg1 BtOptimizedBvh) {
	_swig_wrap_delete_btOptimizedBvh(arg1.Swigcptr())
}

func _swig_wrap_btOptimizedBvh_build(SwigcptrBtOptimizedBvh, uintptr, bool, uintptr, uintptr)

func (arg1 SwigcptrBtOptimizedBvh) Build(arg2 BtStridingMeshInterface, arg3 bool, arg4 BtVector3, arg5 BtVector3) {
	_swig_wrap_btOptimizedBvh_build(arg1, arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btOptimizedBvh_refit(SwigcptrBtOptimizedBvh, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtOptimizedBvh) Refit(arg2 BtStridingMeshInterface, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btOptimizedBvh_refit(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btOptimizedBvh_refitPartial(SwigcptrBtOptimizedBvh, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtOptimizedBvh) RefitPartial(arg2 BtStridingMeshInterface, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btOptimizedBvh_refitPartial(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btOptimizedBvh_updateBvhNodes(SwigcptrBtOptimizedBvh, uintptr, int, int, int)

func (arg1 SwigcptrBtOptimizedBvh) UpdateBvhNodes(arg2 BtStridingMeshInterface, arg3 int, arg4 int, arg5 int) {
	_swig_wrap_btOptimizedBvh_updateBvhNodes(arg1, arg2.Swigcptr(), arg3, arg4, arg5)
}

func _swig_wrap_btOptimizedBvh_serializeInPlace(SwigcptrBtOptimizedBvh, uintptr, uint, bool) bool

func (arg1 SwigcptrBtOptimizedBvh) SerializeInPlace(arg2 uintptr, arg3 uint, arg4 bool) bool {
	return _swig_wrap_btOptimizedBvh_serializeInPlace(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btOptimizedBvh_deSerializeInPlace(uintptr, uint, bool) SwigcptrBtOptimizedBvh

func BtOptimizedBvhDeSerializeInPlace(arg1 uintptr, arg2 uint, arg3 bool) BtOptimizedBvh {
	return _swig_wrap_btOptimizedBvh_deSerializeInPlace(arg1, arg2, arg3)
}

func _swig_wrap_btOptimizedBvh_setQuantizationValues__SWIG_0(SwigcptrBtOptimizedBvh, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtOptimizedBvh) SetQuantizationValues__SWIG_0(arg1 BtVector3, arg2 BtVector3, arg3 float32) {
	_swig_wrap_btOptimizedBvh_setQuantizationValues__SWIG_0(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btOptimizedBvh_setQuantizationValues__SWIG_1(SwigcptrBtOptimizedBvh, uintptr, uintptr)

func (_swig_base SwigcptrBtOptimizedBvh) SetQuantizationValues__SWIG_1(arg1 BtVector3, arg2 BtVector3) {
	_swig_wrap_btOptimizedBvh_setQuantizationValues__SWIG_1(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func (p SwigcptrBtOptimizedBvh) SetQuantizationValues(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetQuantizationValues__SWIG_1(a[0].(BtVector3), a[1].(BtVector3))
		return
	}
	if argc == 3 {
		p.SetQuantizationValues__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btOptimizedBvh_getLeafNodeArray(SwigcptrBtOptimizedBvh) SwigcptrBtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_

func (_swig_base SwigcptrBtOptimizedBvh) GetLeafNodeArray() BtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_ {
	return _swig_wrap_btOptimizedBvh_getLeafNodeArray(_swig_base)
}

func _swig_wrap_btOptimizedBvh_buildInternal(SwigcptrBtOptimizedBvh)

func (_swig_base SwigcptrBtOptimizedBvh) BuildInternal() {
	_swig_wrap_btOptimizedBvh_buildInternal(_swig_base)
}

func _swig_wrap_btOptimizedBvh_reportAabbOverlappingNodex(SwigcptrBtOptimizedBvh, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtOptimizedBvh) ReportAabbOverlappingNodex(arg1 BtNodeOverlapCallback, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btOptimizedBvh_reportAabbOverlappingNodex(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btOptimizedBvh_reportRayOverlappingNodex(SwigcptrBtOptimizedBvh, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtOptimizedBvh) ReportRayOverlappingNodex(arg1 BtNodeOverlapCallback, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btOptimizedBvh_reportRayOverlappingNodex(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btOptimizedBvh_reportBoxCastOverlappingNodex(SwigcptrBtOptimizedBvh, uintptr, uintptr, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtOptimizedBvh) ReportBoxCastOverlappingNodex(arg1 BtNodeOverlapCallback, arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3) {
	_swig_wrap_btOptimizedBvh_reportBoxCastOverlappingNodex(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btOptimizedBvh_quantize(SwigcptrBtOptimizedBvh, *uint16, uintptr, int)

func (_swig_base SwigcptrBtOptimizedBvh) Quantize(arg1 *uint16, arg2 BtVector3, arg3 int) {
	_swig_wrap_btOptimizedBvh_quantize(_swig_base, arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btOptimizedBvh_quantizeWithClamp(SwigcptrBtOptimizedBvh, *uint16, uintptr, int)

func (_swig_base SwigcptrBtOptimizedBvh) QuantizeWithClamp(arg1 *uint16, arg2 BtVector3, arg3 int) {
	_swig_wrap_btOptimizedBvh_quantizeWithClamp(_swig_base, arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btOptimizedBvh_unQuantize(SwigcptrBtOptimizedBvh, *uint16) SwigcptrBtVector3

func (_swig_base SwigcptrBtOptimizedBvh) UnQuantize(arg1 *uint16) BtVector3 {
	return _swig_wrap_btOptimizedBvh_unQuantize(_swig_base, arg1)
}

func _swig_wrap_btOptimizedBvh_setTraversalMode(SwigcptrBtOptimizedBvh, BtQuantizedBvhBtTraversalMode)

func (_swig_base SwigcptrBtOptimizedBvh) SetTraversalMode(arg1 BtQuantizedBvhBtTraversalMode) {
	_swig_wrap_btOptimizedBvh_setTraversalMode(_swig_base, arg1)
}

func _swig_wrap_btOptimizedBvh_getQuantizedNodeArray(SwigcptrBtOptimizedBvh) SwigcptrBtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_

func (_swig_base SwigcptrBtOptimizedBvh) GetQuantizedNodeArray() BtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_ {
	return _swig_wrap_btOptimizedBvh_getQuantizedNodeArray(_swig_base)
}

func _swig_wrap_btOptimizedBvh_getSubtreeInfoArray(SwigcptrBtOptimizedBvh) SwigcptrBtAlignedObjectArray_Sl_btBvhSubtreeInfo_Sg_

func (_swig_base SwigcptrBtOptimizedBvh) GetSubtreeInfoArray() BtAlignedObjectArray_Sl_btBvhSubtreeInfo_Sg_ {
	return _swig_wrap_btOptimizedBvh_getSubtreeInfoArray(_swig_base)
}

func _swig_wrap_btOptimizedBvh_calculateSerializeBufferSize(SwigcptrBtOptimizedBvh) uint

func (_swig_base SwigcptrBtOptimizedBvh) CalculateSerializeBufferSize() uint {
	return _swig_wrap_btOptimizedBvh_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btOptimizedBvh_serialize__SWIG_0(SwigcptrBtOptimizedBvh, uintptr, uint, bool) bool

func (_swig_base SwigcptrBtOptimizedBvh) Serialize__SWIG_0(arg1 uintptr, arg2 uint, arg3 bool) bool {
	return _swig_wrap_btOptimizedBvh_serialize__SWIG_0(_swig_base, arg1, arg2, arg3)
}

func _swig_wrap_btOptimizedBvh_serialize__SWIG_1(SwigcptrBtOptimizedBvh, uintptr, uintptr) string

func (_swig_base SwigcptrBtOptimizedBvh) Serialize__SWIG_1(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btOptimizedBvh_serialize__SWIG_1(_swig_base, arg1, arg2.Swigcptr())
}

func (p SwigcptrBtOptimizedBvh) Serialize(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 2 {
		return p.Serialize__SWIG_1(a[0].(uintptr), a[1].(BtSerializer))
	}
	if argc == 3 {
		return p.Serialize__SWIG_0(a[0].(uintptr), a[1].(uint), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func BtOptimizedBvhGetAlignmentSerializationPadding() uint
func _swig_wrap_btOptimizedBvh_calculateSerializeBufferSizeNew(SwigcptrBtOptimizedBvh) int

func (_swig_base SwigcptrBtOptimizedBvh) CalculateSerializeBufferSizeNew() int {
	return _swig_wrap_btOptimizedBvh_calculateSerializeBufferSizeNew(_swig_base)
}

func _swig_wrap_btOptimizedBvh_deSerializeFloat(SwigcptrBtOptimizedBvh, uintptr)

func (_swig_base SwigcptrBtOptimizedBvh) DeSerializeFloat(arg1 BtQuantizedBvhFloatData) {
	_swig_wrap_btOptimizedBvh_deSerializeFloat(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btOptimizedBvh_deSerializeDouble(SwigcptrBtOptimizedBvh, uintptr)

func (_swig_base SwigcptrBtOptimizedBvh) DeSerializeDouble(arg1 BtQuantizedBvhDoubleData) {
	_swig_wrap_btOptimizedBvh_deSerializeDouble(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btOptimizedBvh_isQuantized(SwigcptrBtOptimizedBvh) bool

func (_swig_base SwigcptrBtOptimizedBvh) IsQuantized() bool {
	return _swig_wrap_btOptimizedBvh_isQuantized(_swig_base)
}

func (p SwigcptrBtOptimizedBvh) SwigIsBtQuantizedBvh() {
}

func (p SwigcptrBtOptimizedBvh) SwigGetBtQuantizedBvh() BtQuantizedBvh {
	return SwigcptrBtQuantizedBvh(p.Swigcptr())
}

type BtOptimizedBvh interface {
	Swigcptr() uintptr
	SwigIsBtOptimizedBvh()
	Build(arg2 BtStridingMeshInterface, arg3 bool, arg4 BtVector3, arg5 BtVector3)
	Refit(arg2 BtStridingMeshInterface, arg3 BtVector3, arg4 BtVector3)
	RefitPartial(arg2 BtStridingMeshInterface, arg3 BtVector3, arg4 BtVector3)
	UpdateBvhNodes(arg2 BtStridingMeshInterface, arg3 int, arg4 int, arg5 int)
	SerializeInPlace(arg2 uintptr, arg3 uint, arg4 bool) bool
	SetQuantizationValues(a ...interface{})
	GetLeafNodeArray() BtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_
	BuildInternal()
	ReportAabbOverlappingNodex(arg1 BtNodeOverlapCallback, arg2 BtVector3, arg3 BtVector3)
	ReportRayOverlappingNodex(arg1 BtNodeOverlapCallback, arg2 BtVector3, arg3 BtVector3)
	ReportBoxCastOverlappingNodex(arg1 BtNodeOverlapCallback, arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3)
	Quantize(arg1 *uint16, arg2 BtVector3, arg3 int)
	QuantizeWithClamp(arg1 *uint16, arg2 BtVector3, arg3 int)
	UnQuantize(arg1 *uint16) BtVector3
	SetTraversalMode(arg1 BtQuantizedBvhBtTraversalMode)
	GetQuantizedNodeArray() BtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_
	GetSubtreeInfoArray() BtAlignedObjectArray_Sl_btBvhSubtreeInfo_Sg_
	CalculateSerializeBufferSize() uint
	Serialize(a ...interface{}) interface{}
	CalculateSerializeBufferSizeNew() int
	DeSerializeFloat(arg1 BtQuantizedBvhFloatData)
	DeSerializeDouble(arg1 BtQuantizedBvhDoubleData)
	IsQuantized() bool
	SwigIsBtQuantizedBvh()
	SwigGetBtQuantizedBvh() BtQuantizedBvh
}

type SwigcptrBtHashString uintptr

func (p SwigcptrBtHashString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtHashString) SwigIsBtHashString() {
}

func _swig_wrap_btHashString_m_string_set(SwigcptrBtHashString, string)

func (arg1 SwigcptrBtHashString) SetM_string(arg2 string) {
	_swig_wrap_btHashString_m_string_set(arg1, arg2)
}

func _swig_wrap_btHashString_m_string_get(SwigcptrBtHashString) string

func (arg1 SwigcptrBtHashString) GetM_string() string {
	return _swig_wrap_btHashString_m_string_get(arg1)
}

func _swig_wrap_btHashString_m_hash_set(SwigcptrBtHashString, uint)

func (arg1 SwigcptrBtHashString) SetM_hash(arg2 uint) {
	_swig_wrap_btHashString_m_hash_set(arg1, arg2)
}

func _swig_wrap_btHashString_m_hash_get(SwigcptrBtHashString) uint

func (arg1 SwigcptrBtHashString) GetM_hash() uint {
	return _swig_wrap_btHashString_m_hash_get(arg1)
}

func _swig_wrap_btHashString_getHash(SwigcptrBtHashString) uint

func (arg1 SwigcptrBtHashString) GetHash() uint {
	return _swig_wrap_btHashString_getHash(arg1)
}

func _swig_wrap_new_btHashString(string) SwigcptrBtHashString

func NewBtHashString(arg1 string) BtHashString {
	return _swig_wrap_new_btHashString(arg1)
}

func _swig_wrap_btHashString_portableStringCompare(SwigcptrBtHashString, string, string) int

func (arg1 SwigcptrBtHashString) PortableStringCompare(arg2 string, arg3 string) int {
	return _swig_wrap_btHashString_portableStringCompare(arg1, arg2, arg3)
}

func _swig_wrap_btHashString_equals(SwigcptrBtHashString, uintptr) bool

func (arg1 SwigcptrBtHashString) Equals(arg2 BtHashString) bool {
	return _swig_wrap_btHashString_equals(arg1, arg2.Swigcptr())
}

func _swig_wrap_delete_btHashString(uintptr)

func DeleteBtHashString(arg1 BtHashString) {
	_swig_wrap_delete_btHashString(arg1.Swigcptr())
}

type BtHashString interface {
	Swigcptr() uintptr
	SwigIsBtHashString()
	SetM_string(arg2 string)
	GetM_string() string
	SetM_hash(arg2 uint)
	GetM_hash() uint
	GetHash() uint
	PortableStringCompare(arg2 string, arg3 string) int
	Equals(arg2 BtHashString) bool
}

func GetBT_HASH_NULL() int

type SwigcptrBtHashInt uintptr

func (p SwigcptrBtHashInt) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtHashInt) SwigIsBtHashInt() {
}

func _swig_wrap_new_btHashInt(int) SwigcptrBtHashInt

func NewBtHashInt(arg1 int) BtHashInt {
	return _swig_wrap_new_btHashInt(arg1)
}

func _swig_wrap_btHashInt_getUid1(SwigcptrBtHashInt) int

func (arg1 SwigcptrBtHashInt) GetUid1() int {
	return _swig_wrap_btHashInt_getUid1(arg1)
}

func _swig_wrap_btHashInt_setUid1(SwigcptrBtHashInt, int)

func (arg1 SwigcptrBtHashInt) SetUid1(arg2 int) {
	_swig_wrap_btHashInt_setUid1(arg1, arg2)
}

func _swig_wrap_btHashInt_equals(SwigcptrBtHashInt, uintptr) bool

func (arg1 SwigcptrBtHashInt) Equals(arg2 BtHashInt) bool {
	return _swig_wrap_btHashInt_equals(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHashInt_getHash(SwigcptrBtHashInt) uint

func (arg1 SwigcptrBtHashInt) GetHash() uint {
	return _swig_wrap_btHashInt_getHash(arg1)
}

func _swig_wrap_delete_btHashInt(uintptr)

func DeleteBtHashInt(arg1 BtHashInt) {
	_swig_wrap_delete_btHashInt(arg1.Swigcptr())
}

type BtHashInt interface {
	Swigcptr() uintptr
	SwigIsBtHashInt()
	GetUid1() int
	SetUid1(arg2 int)
	Equals(arg2 BtHashInt) bool
	GetHash() uint
}

type SwigcptrBtHashPtr uintptr

func (p SwigcptrBtHashPtr) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtHashPtr) SwigIsBtHashPtr() {
}

func _swig_wrap_new_btHashPtr(uintptr) SwigcptrBtHashPtr

func NewBtHashPtr(arg1 uintptr) BtHashPtr {
	return _swig_wrap_new_btHashPtr(arg1)
}

func _swig_wrap_btHashPtr_getPointer(SwigcptrBtHashPtr) uintptr

func (arg1 SwigcptrBtHashPtr) GetPointer() uintptr {
	return _swig_wrap_btHashPtr_getPointer(arg1)
}

func _swig_wrap_btHashPtr_equals(SwigcptrBtHashPtr, uintptr) bool

func (arg1 SwigcptrBtHashPtr) Equals(arg2 BtHashPtr) bool {
	return _swig_wrap_btHashPtr_equals(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHashPtr_getHash(SwigcptrBtHashPtr) uint

func (arg1 SwigcptrBtHashPtr) GetHash() uint {
	return _swig_wrap_btHashPtr_getHash(arg1)
}

func _swig_wrap_delete_btHashPtr(uintptr)

func DeleteBtHashPtr(arg1 BtHashPtr) {
	_swig_wrap_delete_btHashPtr(arg1.Swigcptr())
}

type BtHashPtr interface {
	Swigcptr() uintptr
	SwigIsBtHashPtr()
	GetPointer() uintptr
	Equals(arg2 BtHashPtr) bool
	GetHash() uint
}

func _swig_wrap_sBulletDNAstr_set(string)

func SetSBulletDNAstr(arg1 string) {
	_swig_wrap_sBulletDNAstr_set(arg1)
}

func GetSBulletDNAstr() string
func _swig_wrap_sBulletDNAlen_set(int)

func SetSBulletDNAlen(arg1 int) {
	_swig_wrap_sBulletDNAlen_set(arg1)
}

func GetSBulletDNAlen() int
func _swig_wrap_sBulletDNAstr64_set(string)

func SetSBulletDNAstr64(arg1 string) {
	_swig_wrap_sBulletDNAstr64_set(arg1)
}

func GetSBulletDNAstr64() string
func _swig_wrap_sBulletDNAlen64_set(int)

func SetSBulletDNAlen64(arg1 int) {
	_swig_wrap_sBulletDNAlen64_set(arg1)
}

func GetSBulletDNAlen64() int
func BtStrLen(string) int

type SwigcptrBtChunk uintptr

func (p SwigcptrBtChunk) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtChunk) SwigIsBtChunk() {
}

func _swig_wrap_btChunk_m_chunkCode_set(SwigcptrBtChunk, int)

func (arg1 SwigcptrBtChunk) SetM_chunkCode(arg2 int) {
	_swig_wrap_btChunk_m_chunkCode_set(arg1, arg2)
}

func _swig_wrap_btChunk_m_chunkCode_get(SwigcptrBtChunk) int

func (arg1 SwigcptrBtChunk) GetM_chunkCode() int {
	return _swig_wrap_btChunk_m_chunkCode_get(arg1)
}

func _swig_wrap_btChunk_m_length_set(SwigcptrBtChunk, int)

func (arg1 SwigcptrBtChunk) SetM_length(arg2 int) {
	_swig_wrap_btChunk_m_length_set(arg1, arg2)
}

func _swig_wrap_btChunk_m_length_get(SwigcptrBtChunk) int

func (arg1 SwigcptrBtChunk) GetM_length() int {
	return _swig_wrap_btChunk_m_length_get(arg1)
}

func _swig_wrap_btChunk_m_oldPtr_set(SwigcptrBtChunk, uintptr)

func (arg1 SwigcptrBtChunk) SetM_oldPtr(arg2 uintptr) {
	_swig_wrap_btChunk_m_oldPtr_set(arg1, arg2)
}

func _swig_wrap_btChunk_m_oldPtr_get(SwigcptrBtChunk) uintptr

func (arg1 SwigcptrBtChunk) GetM_oldPtr() uintptr {
	return _swig_wrap_btChunk_m_oldPtr_get(arg1)
}

func _swig_wrap_btChunk_m_dna_nr_set(SwigcptrBtChunk, int)

func (arg1 SwigcptrBtChunk) SetM_dna_nr(arg2 int) {
	_swig_wrap_btChunk_m_dna_nr_set(arg1, arg2)
}

func _swig_wrap_btChunk_m_dna_nr_get(SwigcptrBtChunk) int

func (arg1 SwigcptrBtChunk) GetM_dna_nr() int {
	return _swig_wrap_btChunk_m_dna_nr_get(arg1)
}

func _swig_wrap_btChunk_m_number_set(SwigcptrBtChunk, int)

func (arg1 SwigcptrBtChunk) SetM_number(arg2 int) {
	_swig_wrap_btChunk_m_number_set(arg1, arg2)
}

func _swig_wrap_btChunk_m_number_get(SwigcptrBtChunk) int

func (arg1 SwigcptrBtChunk) GetM_number() int {
	return _swig_wrap_btChunk_m_number_get(arg1)
}

func _swig_wrap_new_btChunk() SwigcptrBtChunk

func NewBtChunk() BtChunk {
	return _swig_wrap_new_btChunk()
}

func _swig_wrap_delete_btChunk(uintptr)

func DeleteBtChunk(arg1 BtChunk) {
	_swig_wrap_delete_btChunk(arg1.Swigcptr())
}

type BtChunk interface {
	Swigcptr() uintptr
	SwigIsBtChunk()
	SetM_chunkCode(arg2 int)
	GetM_chunkCode() int
	SetM_length(arg2 int)
	GetM_length() int
	SetM_oldPtr(arg2 uintptr)
	GetM_oldPtr() uintptr
	SetM_dna_nr(arg2 int)
	GetM_dna_nr() int
	SetM_number(arg2 int)
	GetM_number() int
}

type BtSerializationFlags int

func _swig_getBT_SERIALIZE_NO_BVH() BtSerializationFlags

var BT_SERIALIZE_NO_BVH BtSerializationFlags = _swig_getBT_SERIALIZE_NO_BVH()

func _swig_getBT_SERIALIZE_NO_TRIANGLEINFOMAP() BtSerializationFlags

var BT_SERIALIZE_NO_TRIANGLEINFOMAP BtSerializationFlags = _swig_getBT_SERIALIZE_NO_TRIANGLEINFOMAP()

func _swig_getBT_SERIALIZE_NO_DUPLICATE_ASSERT() BtSerializationFlags

var BT_SERIALIZE_NO_DUPLICATE_ASSERT BtSerializationFlags = _swig_getBT_SERIALIZE_NO_DUPLICATE_ASSERT()

type SwigcptrBtSerializer uintptr

func (p SwigcptrBtSerializer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSerializer) SwigIsBtSerializer() {
}

func _swig_wrap_delete_btSerializer(uintptr)

func DeleteBtSerializer(arg1 BtSerializer) {
	_swig_wrap_delete_btSerializer(arg1.Swigcptr())
}

func _swig_wrap_btSerializer_getBufferPointer(SwigcptrBtSerializer) string

func (arg1 SwigcptrBtSerializer) GetBufferPointer() string {
	return _swig_wrap_btSerializer_getBufferPointer(arg1)
}

func _swig_wrap_btSerializer_getCurrentBufferSize(SwigcptrBtSerializer) int

func (arg1 SwigcptrBtSerializer) GetCurrentBufferSize() int {
	return _swig_wrap_btSerializer_getCurrentBufferSize(arg1)
}

func _swig_wrap_btSerializer_allocate(SwigcptrBtSerializer, int64, int) SwigcptrBtChunk

func (arg1 SwigcptrBtSerializer) Allocate(arg2 int64, arg3 int) BtChunk {
	return _swig_wrap_btSerializer_allocate(arg1, arg2, arg3)
}

func _swig_wrap_btSerializer_finalizeChunk(SwigcptrBtSerializer, uintptr, string, int, uintptr)

func (arg1 SwigcptrBtSerializer) FinalizeChunk(arg2 BtChunk, arg3 string, arg4 int, arg5 uintptr) {
	_swig_wrap_btSerializer_finalizeChunk(arg1, arg2.Swigcptr(), arg3, arg4, arg5)
}

func _swig_wrap_btSerializer_findPointer(SwigcptrBtSerializer, uintptr) uintptr

func (arg1 SwigcptrBtSerializer) FindPointer(arg2 uintptr) uintptr {
	return _swig_wrap_btSerializer_findPointer(arg1, arg2)
}

func _swig_wrap_btSerializer_getUniquePointer(SwigcptrBtSerializer, uintptr) uintptr

func (arg1 SwigcptrBtSerializer) GetUniquePointer(arg2 uintptr) uintptr {
	return _swig_wrap_btSerializer_getUniquePointer(arg1, arg2)
}

func _swig_wrap_btSerializer_startSerialization(SwigcptrBtSerializer)

func (arg1 SwigcptrBtSerializer) StartSerialization() {
	_swig_wrap_btSerializer_startSerialization(arg1)
}

func _swig_wrap_btSerializer_finishSerialization(SwigcptrBtSerializer)

func (arg1 SwigcptrBtSerializer) FinishSerialization() {
	_swig_wrap_btSerializer_finishSerialization(arg1)
}

func _swig_wrap_btSerializer_findNameForPointer(SwigcptrBtSerializer, uintptr) string

func (arg1 SwigcptrBtSerializer) FindNameForPointer(arg2 uintptr) string {
	return _swig_wrap_btSerializer_findNameForPointer(arg1, arg2)
}

func _swig_wrap_btSerializer_registerNameForPointer(SwigcptrBtSerializer, uintptr, string)

func (arg1 SwigcptrBtSerializer) RegisterNameForPointer(arg2 uintptr, arg3 string) {
	_swig_wrap_btSerializer_registerNameForPointer(arg1, arg2, arg3)
}

func _swig_wrap_btSerializer_serializeName(SwigcptrBtSerializer, string)

func (arg1 SwigcptrBtSerializer) SerializeName(arg2 string) {
	_swig_wrap_btSerializer_serializeName(arg1, arg2)
}

func _swig_wrap_btSerializer_getSerializationFlags(SwigcptrBtSerializer) int

func (arg1 SwigcptrBtSerializer) GetSerializationFlags() int {
	return _swig_wrap_btSerializer_getSerializationFlags(arg1)
}

func _swig_wrap_btSerializer_setSerializationFlags(SwigcptrBtSerializer, int)

func (arg1 SwigcptrBtSerializer) SetSerializationFlags(arg2 int) {
	_swig_wrap_btSerializer_setSerializationFlags(arg1, arg2)
}

type BtSerializer interface {
	Swigcptr() uintptr
	SwigIsBtSerializer()
	GetBufferPointer() string
	GetCurrentBufferSize() int
	Allocate(arg2 int64, arg3 int) BtChunk
	FinalizeChunk(arg2 BtChunk, arg3 string, arg4 int, arg5 uintptr)
	FindPointer(arg2 uintptr) uintptr
	GetUniquePointer(arg2 uintptr) uintptr
	StartSerialization()
	FinishSerialization()
	FindNameForPointer(arg2 uintptr) string
	RegisterNameForPointer(arg2 uintptr, arg3 string)
	SerializeName(arg2 string)
	GetSerializationFlags() int
	SetSerializationFlags(arg2 int)
}

const BT_HEADER_LENGTH int = 12

type SwigcptrBtPointerUid uintptr

func (p SwigcptrBtPointerUid) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtPointerUid) SwigIsBtPointerUid() {
}

func _swig_wrap_new_btPointerUid() SwigcptrBtPointerUid

func NewBtPointerUid() BtPointerUid {
	return _swig_wrap_new_btPointerUid()
}

func _swig_wrap_delete_btPointerUid(uintptr)

func DeleteBtPointerUid(arg1 BtPointerUid) {
	_swig_wrap_delete_btPointerUid(arg1.Swigcptr())
}

type BtPointerUid interface {
	Swigcptr() uintptr
	SwigIsBtPointerUid()
}

type SwigcptrBtDefaultSerializer uintptr

func (p SwigcptrBtDefaultSerializer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDefaultSerializer) SwigIsBtDefaultSerializer() {
}

func _swig_wrap_new_btDefaultSerializer__SWIG_0(int) SwigcptrBtDefaultSerializer

func NewBtDefaultSerializer__SWIG_0(arg1 int) BtDefaultSerializer {
	return _swig_wrap_new_btDefaultSerializer__SWIG_0(arg1)
}

func _swig_wrap_new_btDefaultSerializer__SWIG_1() SwigcptrBtDefaultSerializer

func NewBtDefaultSerializer__SWIG_1() BtDefaultSerializer {
	return _swig_wrap_new_btDefaultSerializer__SWIG_1()
}

func NewBtDefaultSerializer(a ...interface{}) BtDefaultSerializer {
	argc := len(a)
	if argc == 0 {
		return NewBtDefaultSerializer__SWIG_1()
	}
	if argc == 1 {
		return NewBtDefaultSerializer__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_btDefaultSerializer(uintptr)

func DeleteBtDefaultSerializer(arg1 BtDefaultSerializer) {
	_swig_wrap_delete_btDefaultSerializer(arg1.Swigcptr())
}

func _swig_wrap_btDefaultSerializer_writeHeader(SwigcptrBtDefaultSerializer, string)

func (arg1 SwigcptrBtDefaultSerializer) WriteHeader(arg2 string) {
	_swig_wrap_btDefaultSerializer_writeHeader(arg1, arg2)
}

func _swig_wrap_btDefaultSerializer_startSerialization(SwigcptrBtDefaultSerializer)

func (arg1 SwigcptrBtDefaultSerializer) StartSerialization() {
	_swig_wrap_btDefaultSerializer_startSerialization(arg1)
}

func _swig_wrap_btDefaultSerializer_finishSerialization(SwigcptrBtDefaultSerializer)

func (arg1 SwigcptrBtDefaultSerializer) FinishSerialization() {
	_swig_wrap_btDefaultSerializer_finishSerialization(arg1)
}

func _swig_wrap_btDefaultSerializer_getUniquePointer(SwigcptrBtDefaultSerializer, uintptr) uintptr

func (arg1 SwigcptrBtDefaultSerializer) GetUniquePointer(arg2 uintptr) uintptr {
	return _swig_wrap_btDefaultSerializer_getUniquePointer(arg1, arg2)
}

func _swig_wrap_btDefaultSerializer_getBufferPointer(SwigcptrBtDefaultSerializer) string

func (arg1 SwigcptrBtDefaultSerializer) GetBufferPointer() string {
	return _swig_wrap_btDefaultSerializer_getBufferPointer(arg1)
}

func _swig_wrap_btDefaultSerializer_getCurrentBufferSize(SwigcptrBtDefaultSerializer) int

func (arg1 SwigcptrBtDefaultSerializer) GetCurrentBufferSize() int {
	return _swig_wrap_btDefaultSerializer_getCurrentBufferSize(arg1)
}

func _swig_wrap_btDefaultSerializer_finalizeChunk(SwigcptrBtDefaultSerializer, uintptr, string, int, uintptr)

func (arg1 SwigcptrBtDefaultSerializer) FinalizeChunk(arg2 BtChunk, arg3 string, arg4 int, arg5 uintptr) {
	_swig_wrap_btDefaultSerializer_finalizeChunk(arg1, arg2.Swigcptr(), arg3, arg4, arg5)
}

func _swig_wrap_btDefaultSerializer_internalAlloc(SwigcptrBtDefaultSerializer, int64) string

func (arg1 SwigcptrBtDefaultSerializer) InternalAlloc(arg2 int64) string {
	return _swig_wrap_btDefaultSerializer_internalAlloc(arg1, arg2)
}

func _swig_wrap_btDefaultSerializer_allocate(SwigcptrBtDefaultSerializer, int64, int) SwigcptrBtChunk

func (arg1 SwigcptrBtDefaultSerializer) Allocate(arg2 int64, arg3 int) BtChunk {
	return _swig_wrap_btDefaultSerializer_allocate(arg1, arg2, arg3)
}

func _swig_wrap_btDefaultSerializer_findNameForPointer(SwigcptrBtDefaultSerializer, uintptr) string

func (arg1 SwigcptrBtDefaultSerializer) FindNameForPointer(arg2 uintptr) string {
	return _swig_wrap_btDefaultSerializer_findNameForPointer(arg1, arg2)
}

func _swig_wrap_btDefaultSerializer_registerNameForPointer(SwigcptrBtDefaultSerializer, uintptr, string)

func (arg1 SwigcptrBtDefaultSerializer) RegisterNameForPointer(arg2 uintptr, arg3 string) {
	_swig_wrap_btDefaultSerializer_registerNameForPointer(arg1, arg2, arg3)
}

func _swig_wrap_btDefaultSerializer_serializeName(SwigcptrBtDefaultSerializer, string)

func (arg1 SwigcptrBtDefaultSerializer) SerializeName(arg2 string) {
	_swig_wrap_btDefaultSerializer_serializeName(arg1, arg2)
}

func _swig_wrap_btDefaultSerializer_getSerializationFlags(SwigcptrBtDefaultSerializer) int

func (arg1 SwigcptrBtDefaultSerializer) GetSerializationFlags() int {
	return _swig_wrap_btDefaultSerializer_getSerializationFlags(arg1)
}

func _swig_wrap_btDefaultSerializer_setSerializationFlags(SwigcptrBtDefaultSerializer, int)

func (arg1 SwigcptrBtDefaultSerializer) SetSerializationFlags(arg2 int) {
	_swig_wrap_btDefaultSerializer_setSerializationFlags(arg1, arg2)
}

func _swig_wrap_btDefaultSerializer_findPointer(SwigcptrBtDefaultSerializer, uintptr) uintptr

func (_swig_base SwigcptrBtDefaultSerializer) FindPointer(arg1 uintptr) uintptr {
	return _swig_wrap_btDefaultSerializer_findPointer(_swig_base, arg1)
}

func (p SwigcptrBtDefaultSerializer) SwigIsBtSerializer() {
}

func (p SwigcptrBtDefaultSerializer) SwigGetBtSerializer() BtSerializer {
	return SwigcptrBtSerializer(p.Swigcptr())
}

type BtDefaultSerializer interface {
	Swigcptr() uintptr
	SwigIsBtDefaultSerializer()
	WriteHeader(arg2 string)
	StartSerialization()
	FinishSerialization()
	GetUniquePointer(arg2 uintptr) uintptr
	GetBufferPointer() string
	GetCurrentBufferSize() int
	FinalizeChunk(arg2 BtChunk, arg3 string, arg4 int, arg5 uintptr)
	InternalAlloc(arg2 int64) string
	Allocate(arg2 int64, arg3 int) BtChunk
	FindNameForPointer(arg2 uintptr) string
	RegisterNameForPointer(arg2 uintptr, arg3 string)
	SerializeName(arg2 string)
	GetSerializationFlags() int
	SetSerializationFlags(arg2 int)
	FindPointer(arg1 uintptr) uintptr
	SwigIsBtSerializer()
	SwigGetBtSerializer() BtSerializer
}

const TRI_INFO_V0V1_CONVEX int = 1
const TRI_INFO_V1V2_CONVEX int = 2
const TRI_INFO_V2V0_CONVEX int = 4
const TRI_INFO_V0V1_SWAP_NORMALB int = 8
const TRI_INFO_V1V2_SWAP_NORMALB int = 16
const TRI_INFO_V2V0_SWAP_NORMALB int = 32

type SwigcptrBtTriangleInfo uintptr

func (p SwigcptrBtTriangleInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTriangleInfo) SwigIsBtTriangleInfo() {
}

func _swig_wrap_new_btTriangleInfo() SwigcptrBtTriangleInfo

func NewBtTriangleInfo() BtTriangleInfo {
	return _swig_wrap_new_btTriangleInfo()
}

func _swig_wrap_btTriangleInfo_m_flags_set(SwigcptrBtTriangleInfo, int)

func (arg1 SwigcptrBtTriangleInfo) SetM_flags(arg2 int) {
	_swig_wrap_btTriangleInfo_m_flags_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfo_m_flags_get(SwigcptrBtTriangleInfo) int

func (arg1 SwigcptrBtTriangleInfo) GetM_flags() int {
	return _swig_wrap_btTriangleInfo_m_flags_get(arg1)
}

func _swig_wrap_btTriangleInfo_m_edgeV0V1Angle_set(SwigcptrBtTriangleInfo, float32)

func (arg1 SwigcptrBtTriangleInfo) SetM_edgeV0V1Angle(arg2 float32) {
	_swig_wrap_btTriangleInfo_m_edgeV0V1Angle_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfo_m_edgeV0V1Angle_get(SwigcptrBtTriangleInfo) float32

func (arg1 SwigcptrBtTriangleInfo) GetM_edgeV0V1Angle() float32 {
	return _swig_wrap_btTriangleInfo_m_edgeV0V1Angle_get(arg1)
}

func _swig_wrap_btTriangleInfo_m_edgeV1V2Angle_set(SwigcptrBtTriangleInfo, float32)

func (arg1 SwigcptrBtTriangleInfo) SetM_edgeV1V2Angle(arg2 float32) {
	_swig_wrap_btTriangleInfo_m_edgeV1V2Angle_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfo_m_edgeV1V2Angle_get(SwigcptrBtTriangleInfo) float32

func (arg1 SwigcptrBtTriangleInfo) GetM_edgeV1V2Angle() float32 {
	return _swig_wrap_btTriangleInfo_m_edgeV1V2Angle_get(arg1)
}

func _swig_wrap_btTriangleInfo_m_edgeV2V0Angle_set(SwigcptrBtTriangleInfo, float32)

func (arg1 SwigcptrBtTriangleInfo) SetM_edgeV2V0Angle(arg2 float32) {
	_swig_wrap_btTriangleInfo_m_edgeV2V0Angle_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfo_m_edgeV2V0Angle_get(SwigcptrBtTriangleInfo) float32

func (arg1 SwigcptrBtTriangleInfo) GetM_edgeV2V0Angle() float32 {
	return _swig_wrap_btTriangleInfo_m_edgeV2V0Angle_get(arg1)
}

func _swig_wrap_delete_btTriangleInfo(uintptr)

func DeleteBtTriangleInfo(arg1 BtTriangleInfo) {
	_swig_wrap_delete_btTriangleInfo(arg1.Swigcptr())
}

type BtTriangleInfo interface {
	Swigcptr() uintptr
	SwigIsBtTriangleInfo()
	SetM_flags(arg2 int)
	GetM_flags() int
	SetM_edgeV0V1Angle(arg2 float32)
	GetM_edgeV0V1Angle() float32
	SetM_edgeV1V2Angle(arg2 float32)
	GetM_edgeV1V2Angle() float32
	SetM_edgeV2V0Angle(arg2 float32)
	GetM_edgeV2V0Angle() float32
}

type SwigcptrBtTriangleInfoMap uintptr

func (p SwigcptrBtTriangleInfoMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTriangleInfoMap) SwigIsBtTriangleInfoMap() {
}

func _swig_wrap_btTriangleInfoMap_m_convexEpsilon_set(SwigcptrBtTriangleInfoMap, float32)

func (arg1 SwigcptrBtTriangleInfoMap) SetM_convexEpsilon(arg2 float32) {
	_swig_wrap_btTriangleInfoMap_m_convexEpsilon_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMap_m_convexEpsilon_get(SwigcptrBtTriangleInfoMap) float32

func (arg1 SwigcptrBtTriangleInfoMap) GetM_convexEpsilon() float32 {
	return _swig_wrap_btTriangleInfoMap_m_convexEpsilon_get(arg1)
}

func _swig_wrap_btTriangleInfoMap_m_planarEpsilon_set(SwigcptrBtTriangleInfoMap, float32)

func (arg1 SwigcptrBtTriangleInfoMap) SetM_planarEpsilon(arg2 float32) {
	_swig_wrap_btTriangleInfoMap_m_planarEpsilon_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMap_m_planarEpsilon_get(SwigcptrBtTriangleInfoMap) float32

func (arg1 SwigcptrBtTriangleInfoMap) GetM_planarEpsilon() float32 {
	return _swig_wrap_btTriangleInfoMap_m_planarEpsilon_get(arg1)
}

func _swig_wrap_btTriangleInfoMap_m_equalVertexThreshold_set(SwigcptrBtTriangleInfoMap, float32)

func (arg1 SwigcptrBtTriangleInfoMap) SetM_equalVertexThreshold(arg2 float32) {
	_swig_wrap_btTriangleInfoMap_m_equalVertexThreshold_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMap_m_equalVertexThreshold_get(SwigcptrBtTriangleInfoMap) float32

func (arg1 SwigcptrBtTriangleInfoMap) GetM_equalVertexThreshold() float32 {
	return _swig_wrap_btTriangleInfoMap_m_equalVertexThreshold_get(arg1)
}

func _swig_wrap_btTriangleInfoMap_m_edgeDistanceThreshold_set(SwigcptrBtTriangleInfoMap, float32)

func (arg1 SwigcptrBtTriangleInfoMap) SetM_edgeDistanceThreshold(arg2 float32) {
	_swig_wrap_btTriangleInfoMap_m_edgeDistanceThreshold_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMap_m_edgeDistanceThreshold_get(SwigcptrBtTriangleInfoMap) float32

func (arg1 SwigcptrBtTriangleInfoMap) GetM_edgeDistanceThreshold() float32 {
	return _swig_wrap_btTriangleInfoMap_m_edgeDistanceThreshold_get(arg1)
}

func _swig_wrap_btTriangleInfoMap_m_maxEdgeAngleThreshold_set(SwigcptrBtTriangleInfoMap, float32)

func (arg1 SwigcptrBtTriangleInfoMap) SetM_maxEdgeAngleThreshold(arg2 float32) {
	_swig_wrap_btTriangleInfoMap_m_maxEdgeAngleThreshold_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMap_m_maxEdgeAngleThreshold_get(SwigcptrBtTriangleInfoMap) float32

func (arg1 SwigcptrBtTriangleInfoMap) GetM_maxEdgeAngleThreshold() float32 {
	return _swig_wrap_btTriangleInfoMap_m_maxEdgeAngleThreshold_get(arg1)
}

func _swig_wrap_btTriangleInfoMap_m_zeroAreaThreshold_set(SwigcptrBtTriangleInfoMap, float32)

func (arg1 SwigcptrBtTriangleInfoMap) SetM_zeroAreaThreshold(arg2 float32) {
	_swig_wrap_btTriangleInfoMap_m_zeroAreaThreshold_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMap_m_zeroAreaThreshold_get(SwigcptrBtTriangleInfoMap) float32

func (arg1 SwigcptrBtTriangleInfoMap) GetM_zeroAreaThreshold() float32 {
	return _swig_wrap_btTriangleInfoMap_m_zeroAreaThreshold_get(arg1)
}

func _swig_wrap_new_btTriangleInfoMap() SwigcptrBtTriangleInfoMap

func NewBtTriangleInfoMap() BtTriangleInfoMap {
	return _swig_wrap_new_btTriangleInfoMap()
}

func _swig_wrap_delete_btTriangleInfoMap(uintptr)

func DeleteBtTriangleInfoMap(arg1 BtTriangleInfoMap) {
	_swig_wrap_delete_btTriangleInfoMap(arg1.Swigcptr())
}

func _swig_wrap_btTriangleInfoMap_calculateSerializeBufferSize(SwigcptrBtTriangleInfoMap) int

func (arg1 SwigcptrBtTriangleInfoMap) CalculateSerializeBufferSize() int {
	return _swig_wrap_btTriangleInfoMap_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btTriangleInfoMap_serialize(SwigcptrBtTriangleInfoMap, uintptr, uintptr) string

func (arg1 SwigcptrBtTriangleInfoMap) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btTriangleInfoMap_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btTriangleInfoMap_deSerialize(SwigcptrBtTriangleInfoMap, uintptr)

func (arg1 SwigcptrBtTriangleInfoMap) DeSerialize(arg2 BtTriangleInfoMapData) {
	_swig_wrap_btTriangleInfoMap_deSerialize(arg1, arg2.Swigcptr())
}

type BtTriangleInfoMap interface {
	Swigcptr() uintptr
	SwigIsBtTriangleInfoMap()
	SetM_convexEpsilon(arg2 float32)
	GetM_convexEpsilon() float32
	SetM_planarEpsilon(arg2 float32)
	GetM_planarEpsilon() float32
	SetM_equalVertexThreshold(arg2 float32)
	GetM_equalVertexThreshold() float32
	SetM_edgeDistanceThreshold(arg2 float32)
	GetM_edgeDistanceThreshold() float32
	SetM_maxEdgeAngleThreshold(arg2 float32)
	GetM_maxEdgeAngleThreshold() float32
	SetM_zeroAreaThreshold(arg2 float32)
	GetM_zeroAreaThreshold() float32
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	DeSerialize(arg2 BtTriangleInfoMapData)
}

type SwigcptrBtTriangleInfoData uintptr

func (p SwigcptrBtTriangleInfoData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTriangleInfoData) SwigIsBtTriangleInfoData() {
}

func _swig_wrap_btTriangleInfoData_m_flags_set(SwigcptrBtTriangleInfoData, int)

func (arg1 SwigcptrBtTriangleInfoData) SetM_flags(arg2 int) {
	_swig_wrap_btTriangleInfoData_m_flags_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoData_m_flags_get(SwigcptrBtTriangleInfoData) int

func (arg1 SwigcptrBtTriangleInfoData) GetM_flags() int {
	return _swig_wrap_btTriangleInfoData_m_flags_get(arg1)
}

func _swig_wrap_btTriangleInfoData_m_edgeV0V1Angle_set(SwigcptrBtTriangleInfoData, float32)

func (arg1 SwigcptrBtTriangleInfoData) SetM_edgeV0V1Angle(arg2 float32) {
	_swig_wrap_btTriangleInfoData_m_edgeV0V1Angle_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoData_m_edgeV0V1Angle_get(SwigcptrBtTriangleInfoData) float32

func (arg1 SwigcptrBtTriangleInfoData) GetM_edgeV0V1Angle() float32 {
	return _swig_wrap_btTriangleInfoData_m_edgeV0V1Angle_get(arg1)
}

func _swig_wrap_btTriangleInfoData_m_edgeV1V2Angle_set(SwigcptrBtTriangleInfoData, float32)

func (arg1 SwigcptrBtTriangleInfoData) SetM_edgeV1V2Angle(arg2 float32) {
	_swig_wrap_btTriangleInfoData_m_edgeV1V2Angle_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoData_m_edgeV1V2Angle_get(SwigcptrBtTriangleInfoData) float32

func (arg1 SwigcptrBtTriangleInfoData) GetM_edgeV1V2Angle() float32 {
	return _swig_wrap_btTriangleInfoData_m_edgeV1V2Angle_get(arg1)
}

func _swig_wrap_btTriangleInfoData_m_edgeV2V0Angle_set(SwigcptrBtTriangleInfoData, float32)

func (arg1 SwigcptrBtTriangleInfoData) SetM_edgeV2V0Angle(arg2 float32) {
	_swig_wrap_btTriangleInfoData_m_edgeV2V0Angle_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoData_m_edgeV2V0Angle_get(SwigcptrBtTriangleInfoData) float32

func (arg1 SwigcptrBtTriangleInfoData) GetM_edgeV2V0Angle() float32 {
	return _swig_wrap_btTriangleInfoData_m_edgeV2V0Angle_get(arg1)
}

func _swig_wrap_new_btTriangleInfoData() SwigcptrBtTriangleInfoData

func NewBtTriangleInfoData() BtTriangleInfoData {
	return _swig_wrap_new_btTriangleInfoData()
}

func _swig_wrap_delete_btTriangleInfoData(uintptr)

func DeleteBtTriangleInfoData(arg1 BtTriangleInfoData) {
	_swig_wrap_delete_btTriangleInfoData(arg1.Swigcptr())
}

type BtTriangleInfoData interface {
	Swigcptr() uintptr
	SwigIsBtTriangleInfoData()
	SetM_flags(arg2 int)
	GetM_flags() int
	SetM_edgeV0V1Angle(arg2 float32)
	GetM_edgeV0V1Angle() float32
	SetM_edgeV1V2Angle(arg2 float32)
	GetM_edgeV1V2Angle() float32
	SetM_edgeV2V0Angle(arg2 float32)
	GetM_edgeV2V0Angle() float32
}

type SwigcptrBtTriangleInfoMapData uintptr

func (p SwigcptrBtTriangleInfoMapData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTriangleInfoMapData) SwigIsBtTriangleInfoMapData() {
}

func _swig_wrap_btTriangleInfoMapData_m_hashTablePtr_set(SwigcptrBtTriangleInfoMapData, *int)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_hashTablePtr(arg2 *int) {
	_swig_wrap_btTriangleInfoMapData_m_hashTablePtr_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_hashTablePtr_get(SwigcptrBtTriangleInfoMapData) *int

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_hashTablePtr() *int {
	return _swig_wrap_btTriangleInfoMapData_m_hashTablePtr_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_nextPtr_set(SwigcptrBtTriangleInfoMapData, *int)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_nextPtr(arg2 *int) {
	_swig_wrap_btTriangleInfoMapData_m_nextPtr_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_nextPtr_get(SwigcptrBtTriangleInfoMapData) *int

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_nextPtr() *int {
	return _swig_wrap_btTriangleInfoMapData_m_nextPtr_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_valueArrayPtr_set(SwigcptrBtTriangleInfoMapData, uintptr)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_valueArrayPtr(arg2 BtTriangleInfoData) {
	_swig_wrap_btTriangleInfoMapData_m_valueArrayPtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTriangleInfoMapData_m_valueArrayPtr_get(SwigcptrBtTriangleInfoMapData) SwigcptrBtTriangleInfoData

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_valueArrayPtr() BtTriangleInfoData {
	return _swig_wrap_btTriangleInfoMapData_m_valueArrayPtr_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_keyArrayPtr_set(SwigcptrBtTriangleInfoMapData, *int)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_keyArrayPtr(arg2 *int) {
	_swig_wrap_btTriangleInfoMapData_m_keyArrayPtr_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_keyArrayPtr_get(SwigcptrBtTriangleInfoMapData) *int

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_keyArrayPtr() *int {
	return _swig_wrap_btTriangleInfoMapData_m_keyArrayPtr_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_convexEpsilon_set(SwigcptrBtTriangleInfoMapData, float32)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_convexEpsilon(arg2 float32) {
	_swig_wrap_btTriangleInfoMapData_m_convexEpsilon_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_convexEpsilon_get(SwigcptrBtTriangleInfoMapData) float32

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_convexEpsilon() float32 {
	return _swig_wrap_btTriangleInfoMapData_m_convexEpsilon_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_planarEpsilon_set(SwigcptrBtTriangleInfoMapData, float32)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_planarEpsilon(arg2 float32) {
	_swig_wrap_btTriangleInfoMapData_m_planarEpsilon_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_planarEpsilon_get(SwigcptrBtTriangleInfoMapData) float32

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_planarEpsilon() float32 {
	return _swig_wrap_btTriangleInfoMapData_m_planarEpsilon_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_equalVertexThreshold_set(SwigcptrBtTriangleInfoMapData, float32)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_equalVertexThreshold(arg2 float32) {
	_swig_wrap_btTriangleInfoMapData_m_equalVertexThreshold_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_equalVertexThreshold_get(SwigcptrBtTriangleInfoMapData) float32

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_equalVertexThreshold() float32 {
	return _swig_wrap_btTriangleInfoMapData_m_equalVertexThreshold_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_edgeDistanceThreshold_set(SwigcptrBtTriangleInfoMapData, float32)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_edgeDistanceThreshold(arg2 float32) {
	_swig_wrap_btTriangleInfoMapData_m_edgeDistanceThreshold_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_edgeDistanceThreshold_get(SwigcptrBtTriangleInfoMapData) float32

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_edgeDistanceThreshold() float32 {
	return _swig_wrap_btTriangleInfoMapData_m_edgeDistanceThreshold_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_zeroAreaThreshold_set(SwigcptrBtTriangleInfoMapData, float32)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_zeroAreaThreshold(arg2 float32) {
	_swig_wrap_btTriangleInfoMapData_m_zeroAreaThreshold_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_zeroAreaThreshold_get(SwigcptrBtTriangleInfoMapData) float32

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_zeroAreaThreshold() float32 {
	return _swig_wrap_btTriangleInfoMapData_m_zeroAreaThreshold_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_nextSize_set(SwigcptrBtTriangleInfoMapData, int)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_nextSize(arg2 int) {
	_swig_wrap_btTriangleInfoMapData_m_nextSize_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_nextSize_get(SwigcptrBtTriangleInfoMapData) int

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_nextSize() int {
	return _swig_wrap_btTriangleInfoMapData_m_nextSize_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_hashTableSize_set(SwigcptrBtTriangleInfoMapData, int)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_hashTableSize(arg2 int) {
	_swig_wrap_btTriangleInfoMapData_m_hashTableSize_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_hashTableSize_get(SwigcptrBtTriangleInfoMapData) int

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_hashTableSize() int {
	return _swig_wrap_btTriangleInfoMapData_m_hashTableSize_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_numValues_set(SwigcptrBtTriangleInfoMapData, int)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_numValues(arg2 int) {
	_swig_wrap_btTriangleInfoMapData_m_numValues_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_numValues_get(SwigcptrBtTriangleInfoMapData) int

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_numValues() int {
	return _swig_wrap_btTriangleInfoMapData_m_numValues_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_numKeys_set(SwigcptrBtTriangleInfoMapData, int)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_numKeys(arg2 int) {
	_swig_wrap_btTriangleInfoMapData_m_numKeys_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_numKeys_get(SwigcptrBtTriangleInfoMapData) int

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_numKeys() int {
	return _swig_wrap_btTriangleInfoMapData_m_numKeys_get(arg1)
}

func _swig_wrap_btTriangleInfoMapData_m_padding_set(SwigcptrBtTriangleInfoMapData, string)

func (arg1 SwigcptrBtTriangleInfoMapData) SetM_padding(arg2 string) {
	_swig_wrap_btTriangleInfoMapData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btTriangleInfoMapData_m_padding_get(SwigcptrBtTriangleInfoMapData) string

func (arg1 SwigcptrBtTriangleInfoMapData) GetM_padding() string {
	return _swig_wrap_btTriangleInfoMapData_m_padding_get(arg1)
}

func _swig_wrap_new_btTriangleInfoMapData() SwigcptrBtTriangleInfoMapData

func NewBtTriangleInfoMapData() BtTriangleInfoMapData {
	return _swig_wrap_new_btTriangleInfoMapData()
}

func _swig_wrap_delete_btTriangleInfoMapData(uintptr)

func DeleteBtTriangleInfoMapData(arg1 BtTriangleInfoMapData) {
	_swig_wrap_delete_btTriangleInfoMapData(arg1.Swigcptr())
}

type BtTriangleInfoMapData interface {
	Swigcptr() uintptr
	SwigIsBtTriangleInfoMapData()
	SetM_hashTablePtr(arg2 *int)
	GetM_hashTablePtr() *int
	SetM_nextPtr(arg2 *int)
	GetM_nextPtr() *int
	SetM_valueArrayPtr(arg2 BtTriangleInfoData)
	GetM_valueArrayPtr() BtTriangleInfoData
	SetM_keyArrayPtr(arg2 *int)
	GetM_keyArrayPtr() *int
	SetM_convexEpsilon(arg2 float32)
	GetM_convexEpsilon() float32
	SetM_planarEpsilon(arg2 float32)
	GetM_planarEpsilon() float32
	SetM_equalVertexThreshold(arg2 float32)
	GetM_equalVertexThreshold() float32
	SetM_edgeDistanceThreshold(arg2 float32)
	GetM_edgeDistanceThreshold() float32
	SetM_zeroAreaThreshold(arg2 float32)
	GetM_zeroAreaThreshold() float32
	SetM_nextSize(arg2 int)
	GetM_nextSize() int
	SetM_hashTableSize(arg2 int)
	GetM_hashTableSize() int
	SetM_numValues(arg2 int)
	GetM_numValues() int
	SetM_numKeys(arg2 int)
	GetM_numKeys() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtBvhTriangleMeshShape uintptr

func (p SwigcptrBtBvhTriangleMeshShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtBvhTriangleMeshShape) SwigIsBtBvhTriangleMeshShape() {
}

func _swig_wrap_new_btBvhTriangleMeshShape__SWIG_0(uintptr, bool, bool) SwigcptrBtBvhTriangleMeshShape

func NewBtBvhTriangleMeshShape__SWIG_0(arg1 BtStridingMeshInterface, arg2 bool, arg3 bool) BtBvhTriangleMeshShape {
	return _swig_wrap_new_btBvhTriangleMeshShape__SWIG_0(arg1.Swigcptr(), arg2, arg3)
}

func _swig_wrap_new_btBvhTriangleMeshShape__SWIG_1(uintptr, bool) SwigcptrBtBvhTriangleMeshShape

func NewBtBvhTriangleMeshShape__SWIG_1(arg1 BtStridingMeshInterface, arg2 bool) BtBvhTriangleMeshShape {
	return _swig_wrap_new_btBvhTriangleMeshShape__SWIG_1(arg1.Swigcptr(), arg2)
}

func _swig_wrap_new_btBvhTriangleMeshShape__SWIG_2(uintptr, bool, uintptr, uintptr, bool) SwigcptrBtBvhTriangleMeshShape

func NewBtBvhTriangleMeshShape__SWIG_2(arg1 BtStridingMeshInterface, arg2 bool, arg3 BtVector3, arg4 BtVector3, arg5 bool) BtBvhTriangleMeshShape {
	return _swig_wrap_new_btBvhTriangleMeshShape__SWIG_2(arg1.Swigcptr(), arg2, arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_new_btBvhTriangleMeshShape__SWIG_3(uintptr, bool, uintptr, uintptr) SwigcptrBtBvhTriangleMeshShape

func NewBtBvhTriangleMeshShape__SWIG_3(arg1 BtStridingMeshInterface, arg2 bool, arg3 BtVector3, arg4 BtVector3) BtBvhTriangleMeshShape {
	return _swig_wrap_new_btBvhTriangleMeshShape__SWIG_3(arg1.Swigcptr(), arg2, arg3.Swigcptr(), arg4.Swigcptr())
}

func NewBtBvhTriangleMeshShape(a ...interface{}) BtBvhTriangleMeshShape {
	argc := len(a)
	if argc == 2 {
		return NewBtBvhTriangleMeshShape__SWIG_1(a[0].(BtStridingMeshInterface), a[1].(bool))
	}
	if argc == 3 {
		return NewBtBvhTriangleMeshShape__SWIG_0(a[0].(BtStridingMeshInterface), a[1].(bool), a[2].(bool))
	}
	if argc == 4 {
		return NewBtBvhTriangleMeshShape__SWIG_3(a[0].(BtStridingMeshInterface), a[1].(bool), a[2].(BtVector3), a[3].(BtVector3))
	}
	if argc == 5 {
		return NewBtBvhTriangleMeshShape__SWIG_2(a[0].(BtStridingMeshInterface), a[1].(bool), a[2].(BtVector3), a[3].(BtVector3), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_btBvhTriangleMeshShape(uintptr)

func DeleteBtBvhTriangleMeshShape(arg1 BtBvhTriangleMeshShape) {
	_swig_wrap_delete_btBvhTriangleMeshShape(arg1.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_getOwnsBvh(SwigcptrBtBvhTriangleMeshShape) bool

func (arg1 SwigcptrBtBvhTriangleMeshShape) GetOwnsBvh() bool {
	return _swig_wrap_btBvhTriangleMeshShape_getOwnsBvh(arg1)
}

func _swig_wrap_btBvhTriangleMeshShape_performRaycast(SwigcptrBtBvhTriangleMeshShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtBvhTriangleMeshShape) PerformRaycast(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btBvhTriangleMeshShape_performRaycast(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_performConvexcast(SwigcptrBtBvhTriangleMeshShape, uintptr, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtBvhTriangleMeshShape) PerformConvexcast(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btBvhTriangleMeshShape_performConvexcast(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_processAllTriangles(SwigcptrBtBvhTriangleMeshShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtBvhTriangleMeshShape) ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btBvhTriangleMeshShape_processAllTriangles(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_refitTree(SwigcptrBtBvhTriangleMeshShape, uintptr, uintptr)

func (arg1 SwigcptrBtBvhTriangleMeshShape) RefitTree(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btBvhTriangleMeshShape_refitTree(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_partialRefitTree(SwigcptrBtBvhTriangleMeshShape, uintptr, uintptr)

func (arg1 SwigcptrBtBvhTriangleMeshShape) PartialRefitTree(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btBvhTriangleMeshShape_partialRefitTree(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_getName(SwigcptrBtBvhTriangleMeshShape) string

func (arg1 SwigcptrBtBvhTriangleMeshShape) GetName() string {
	return _swig_wrap_btBvhTriangleMeshShape_getName(arg1)
}

func _swig_wrap_btBvhTriangleMeshShape_setLocalScaling(SwigcptrBtBvhTriangleMeshShape, uintptr)

func (arg1 SwigcptrBtBvhTriangleMeshShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btBvhTriangleMeshShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_getOptimizedBvh(SwigcptrBtBvhTriangleMeshShape) SwigcptrBtOptimizedBvh

func (arg1 SwigcptrBtBvhTriangleMeshShape) GetOptimizedBvh() BtOptimizedBvh {
	return _swig_wrap_btBvhTriangleMeshShape_getOptimizedBvh(arg1)
}

func _swig_wrap_btBvhTriangleMeshShape_setOptimizedBvh__SWIG_0(SwigcptrBtBvhTriangleMeshShape, uintptr, uintptr)

func (arg1 SwigcptrBtBvhTriangleMeshShape) SetOptimizedBvh__SWIG_0(arg2 BtOptimizedBvh, arg3 BtVector3) {
	_swig_wrap_btBvhTriangleMeshShape_setOptimizedBvh__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_setOptimizedBvh__SWIG_1(SwigcptrBtBvhTriangleMeshShape, uintptr)

func (arg1 SwigcptrBtBvhTriangleMeshShape) SetOptimizedBvh__SWIG_1(arg2 BtOptimizedBvh) {
	_swig_wrap_btBvhTriangleMeshShape_setOptimizedBvh__SWIG_1(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtBvhTriangleMeshShape) SetOptimizedBvh(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.SetOptimizedBvh__SWIG_1(a[0].(BtOptimizedBvh))
		return
	}
	if argc == 2 {
		p.SetOptimizedBvh__SWIG_0(a[0].(BtOptimizedBvh), a[1].(BtVector3))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btBvhTriangleMeshShape_buildOptimizedBvh(SwigcptrBtBvhTriangleMeshShape)

func (arg1 SwigcptrBtBvhTriangleMeshShape) BuildOptimizedBvh() {
	_swig_wrap_btBvhTriangleMeshShape_buildOptimizedBvh(arg1)
}

func _swig_wrap_btBvhTriangleMeshShape_usesQuantizedAabbCompression(SwigcptrBtBvhTriangleMeshShape) bool

func (arg1 SwigcptrBtBvhTriangleMeshShape) UsesQuantizedAabbCompression() bool {
	return _swig_wrap_btBvhTriangleMeshShape_usesQuantizedAabbCompression(arg1)
}

func _swig_wrap_btBvhTriangleMeshShape_setTriangleInfoMap(SwigcptrBtBvhTriangleMeshShape, uintptr)

func (arg1 SwigcptrBtBvhTriangleMeshShape) SetTriangleInfoMap(arg2 BtTriangleInfoMap) {
	_swig_wrap_btBvhTriangleMeshShape_setTriangleInfoMap(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_0(SwigcptrBtBvhTriangleMeshShape) SwigcptrBtTriangleInfoMap

func (arg1 SwigcptrBtBvhTriangleMeshShape) GetTriangleInfoMap__SWIG_0() BtTriangleInfoMap {
	return _swig_wrap_btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_0(arg1)
}

func _swig_wrap_btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_1(SwigcptrBtBvhTriangleMeshShape) SwigcptrBtTriangleInfoMap

func (arg1 SwigcptrBtBvhTriangleMeshShape) GetTriangleInfoMap__SWIG_1() BtTriangleInfoMap {
	return _swig_wrap_btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_1(arg1)
}

func (p SwigcptrBtBvhTriangleMeshShape) GetTriangleInfoMap(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetTriangleInfoMap__SWIG_0()
	}
	if argc == 0 {
		return p.GetTriangleInfoMap__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btBvhTriangleMeshShape_calculateSerializeBufferSize(SwigcptrBtBvhTriangleMeshShape) int

func (arg1 SwigcptrBtBvhTriangleMeshShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btBvhTriangleMeshShape_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btBvhTriangleMeshShape_serialize(SwigcptrBtBvhTriangleMeshShape, uintptr, uintptr) string

func (arg1 SwigcptrBtBvhTriangleMeshShape) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btBvhTriangleMeshShape_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_serializeSingleBvh(SwigcptrBtBvhTriangleMeshShape, uintptr)

func (arg1 SwigcptrBtBvhTriangleMeshShape) SerializeSingleBvh(arg2 BtSerializer) {
	_swig_wrap_btBvhTriangleMeshShape_serializeSingleBvh(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_serializeSingleTriangleInfoMap(SwigcptrBtBvhTriangleMeshShape, uintptr)

func (arg1 SwigcptrBtBvhTriangleMeshShape) SerializeSingleTriangleInfoMap(arg2 BtSerializer) {
	_swig_wrap_btBvhTriangleMeshShape_serializeSingleTriangleInfoMap(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_localGetSupportingVertex(SwigcptrBtBvhTriangleMeshShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtBvhTriangleMeshShape) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btBvhTriangleMeshShape_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_localGetSupportingVertexWithoutMargin(SwigcptrBtBvhTriangleMeshShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtBvhTriangleMeshShape) LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btBvhTriangleMeshShape_localGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_recalcLocalAabb(SwigcptrBtBvhTriangleMeshShape)

func (_swig_base SwigcptrBtBvhTriangleMeshShape) RecalcLocalAabb() {
	_swig_wrap_btBvhTriangleMeshShape_recalcLocalAabb(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_getAabb(SwigcptrBtBvhTriangleMeshShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btBvhTriangleMeshShape_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_calculateLocalInertia(SwigcptrBtBvhTriangleMeshShape, float32, uintptr)

func (_swig_base SwigcptrBtBvhTriangleMeshShape) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btBvhTriangleMeshShape_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_getLocalScaling(SwigcptrBtBvhTriangleMeshShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btBvhTriangleMeshShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_getMeshInterface__SWIG_0(SwigcptrBtBvhTriangleMeshShape) SwigcptrBtStridingMeshInterface

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetMeshInterface__SWIG_0() BtStridingMeshInterface {
	return _swig_wrap_btBvhTriangleMeshShape_getMeshInterface__SWIG_0(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_getMeshInterface__SWIG_1(SwigcptrBtBvhTriangleMeshShape) SwigcptrBtStridingMeshInterface

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetMeshInterface__SWIG_1() BtStridingMeshInterface {
	return _swig_wrap_btBvhTriangleMeshShape_getMeshInterface__SWIG_1(_swig_base)
}

func (p SwigcptrBtBvhTriangleMeshShape) GetMeshInterface(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetMeshInterface__SWIG_0()
	}
	if argc == 0 {
		return p.GetMeshInterface__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btBvhTriangleMeshShape_getLocalAabbMin(SwigcptrBtBvhTriangleMeshShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetLocalAabbMin() BtVector3 {
	return _swig_wrap_btBvhTriangleMeshShape_getLocalAabbMin(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_getLocalAabbMax(SwigcptrBtBvhTriangleMeshShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetLocalAabbMax() BtVector3 {
	return _swig_wrap_btBvhTriangleMeshShape_getLocalAabbMax(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_getMargin(SwigcptrBtBvhTriangleMeshShape) float32

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetMargin() float32 {
	return _swig_wrap_btBvhTriangleMeshShape_getMargin(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_setMargin(SwigcptrBtBvhTriangleMeshShape, float32)

func (_swig_base SwigcptrBtBvhTriangleMeshShape) SetMargin(arg1 float32) {
	_swig_wrap_btBvhTriangleMeshShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btBvhTriangleMeshShape_getBoundingSphere(SwigcptrBtBvhTriangleMeshShape, uintptr, *float32)

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btBvhTriangleMeshShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btBvhTriangleMeshShape_getAngularMotionDisc(SwigcptrBtBvhTriangleMeshShape) float32

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btBvhTriangleMeshShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_getContactBreakingThreshold(SwigcptrBtBvhTriangleMeshShape, float32) float32

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btBvhTriangleMeshShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btBvhTriangleMeshShape_calculateTemporalAabb(SwigcptrBtBvhTriangleMeshShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtBvhTriangleMeshShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btBvhTriangleMeshShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btBvhTriangleMeshShape_isPolyhedral(SwigcptrBtBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtBvhTriangleMeshShape) IsPolyhedral() bool {
	return _swig_wrap_btBvhTriangleMeshShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_isConvex2d(SwigcptrBtBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtBvhTriangleMeshShape) IsConvex2d() bool {
	return _swig_wrap_btBvhTriangleMeshShape_isConvex2d(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_isConvex(SwigcptrBtBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtBvhTriangleMeshShape) IsConvex() bool {
	return _swig_wrap_btBvhTriangleMeshShape_isConvex(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_isNonMoving(SwigcptrBtBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtBvhTriangleMeshShape) IsNonMoving() bool {
	return _swig_wrap_btBvhTriangleMeshShape_isNonMoving(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_isConcave(SwigcptrBtBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtBvhTriangleMeshShape) IsConcave() bool {
	return _swig_wrap_btBvhTriangleMeshShape_isConcave(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_isCompound(SwigcptrBtBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtBvhTriangleMeshShape) IsCompound() bool {
	return _swig_wrap_btBvhTriangleMeshShape_isCompound(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_isSoftBody(SwigcptrBtBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtBvhTriangleMeshShape) IsSoftBody() bool {
	return _swig_wrap_btBvhTriangleMeshShape_isSoftBody(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_isInfinite(SwigcptrBtBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtBvhTriangleMeshShape) IsInfinite() bool {
	return _swig_wrap_btBvhTriangleMeshShape_isInfinite(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_getShapeType(SwigcptrBtBvhTriangleMeshShape) int

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetShapeType() int {
	return _swig_wrap_btBvhTriangleMeshShape_getShapeType(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_getAnisotropicRollingFrictionDirection(SwigcptrBtBvhTriangleMeshShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btBvhTriangleMeshShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_setUserPointer(SwigcptrBtBvhTriangleMeshShape, uintptr)

func (_swig_base SwigcptrBtBvhTriangleMeshShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btBvhTriangleMeshShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btBvhTriangleMeshShape_getUserPointer(SwigcptrBtBvhTriangleMeshShape) uintptr

func (_swig_base SwigcptrBtBvhTriangleMeshShape) GetUserPointer() uintptr {
	return _swig_wrap_btBvhTriangleMeshShape_getUserPointer(_swig_base)
}

func _swig_wrap_btBvhTriangleMeshShape_serializeSingleShape(SwigcptrBtBvhTriangleMeshShape, uintptr)

func (_swig_base SwigcptrBtBvhTriangleMeshShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btBvhTriangleMeshShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtBvhTriangleMeshShape) SwigIsBtTriangleMeshShape() {
}

func (p SwigcptrBtBvhTriangleMeshShape) SwigGetBtTriangleMeshShape() BtTriangleMeshShape {
	return SwigcptrBtTriangleMeshShape(p.Swigcptr())
}

func (p SwigcptrBtBvhTriangleMeshShape) SwigIsBtConcaveShape() {
}

func (p SwigcptrBtBvhTriangleMeshShape) SwigGetBtConcaveShape() BtConcaveShape {
	return SwigcptrBtConcaveShape(p.Swigcptr())
}

func (p SwigcptrBtBvhTriangleMeshShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtBvhTriangleMeshShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtBvhTriangleMeshShape interface {
	Swigcptr() uintptr
	SwigIsBtBvhTriangleMeshShape()
	GetOwnsBvh() bool
	PerformRaycast(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3)
	PerformConvexcast(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3)
	ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3)
	RefitTree(arg2 BtVector3, arg3 BtVector3)
	PartialRefitTree(arg2 BtVector3, arg3 BtVector3)
	GetName() string
	SetLocalScaling(arg2 BtVector3)
	GetOptimizedBvh() BtOptimizedBvh
	SetOptimizedBvh(a ...interface{})
	BuildOptimizedBvh()
	UsesQuantizedAabbCompression() bool
	SetTriangleInfoMap(arg2 BtTriangleInfoMap)
	GetTriangleInfoMap(a ...interface{}) interface{}
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	SerializeSingleBvh(arg2 BtSerializer)
	SerializeSingleTriangleInfoMap(arg2 BtSerializer)
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3
	RecalcLocalAabb()
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	GetLocalScaling() BtVector3
	GetMeshInterface(a ...interface{}) interface{}
	GetLocalAabbMin() BtVector3
	GetLocalAabbMax() BtVector3
	GetMargin() float32
	SetMargin(arg1 float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtTriangleMeshShape()
	SwigGetBtTriangleMeshShape() BtTriangleMeshShape
	SwigIsBtConcaveShape()
	SwigGetBtConcaveShape() BtConcaveShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtTriangleMeshShapeData uintptr

func (p SwigcptrBtTriangleMeshShapeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTriangleMeshShapeData) SwigIsBtTriangleMeshShapeData() {
}

func _swig_wrap_btTriangleMeshShapeData_m_collisionShapeData_set(SwigcptrBtTriangleMeshShapeData, uintptr)

func (arg1 SwigcptrBtTriangleMeshShapeData) SetM_collisionShapeData(arg2 BtCollisionShapeData) {
	_swig_wrap_btTriangleMeshShapeData_m_collisionShapeData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTriangleMeshShapeData_m_collisionShapeData_get(SwigcptrBtTriangleMeshShapeData) SwigcptrBtCollisionShapeData

func (arg1 SwigcptrBtTriangleMeshShapeData) GetM_collisionShapeData() BtCollisionShapeData {
	return _swig_wrap_btTriangleMeshShapeData_m_collisionShapeData_get(arg1)
}

func _swig_wrap_btTriangleMeshShapeData_m_meshInterface_set(SwigcptrBtTriangleMeshShapeData, uintptr)

func (arg1 SwigcptrBtTriangleMeshShapeData) SetM_meshInterface(arg2 BtStridingMeshInterfaceData) {
	_swig_wrap_btTriangleMeshShapeData_m_meshInterface_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTriangleMeshShapeData_m_meshInterface_get(SwigcptrBtTriangleMeshShapeData) SwigcptrBtStridingMeshInterfaceData

func (arg1 SwigcptrBtTriangleMeshShapeData) GetM_meshInterface() BtStridingMeshInterfaceData {
	return _swig_wrap_btTriangleMeshShapeData_m_meshInterface_get(arg1)
}

func _swig_wrap_btTriangleMeshShapeData_m_quantizedFloatBvh_set(SwigcptrBtTriangleMeshShapeData, uintptr)

func (arg1 SwigcptrBtTriangleMeshShapeData) SetM_quantizedFloatBvh(arg2 BtQuantizedBvhFloatData) {
	_swig_wrap_btTriangleMeshShapeData_m_quantizedFloatBvh_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTriangleMeshShapeData_m_quantizedFloatBvh_get(SwigcptrBtTriangleMeshShapeData) SwigcptrBtQuantizedBvhFloatData

func (arg1 SwigcptrBtTriangleMeshShapeData) GetM_quantizedFloatBvh() BtQuantizedBvhFloatData {
	return _swig_wrap_btTriangleMeshShapeData_m_quantizedFloatBvh_get(arg1)
}

func _swig_wrap_btTriangleMeshShapeData_m_quantizedDoubleBvh_set(SwigcptrBtTriangleMeshShapeData, uintptr)

func (arg1 SwigcptrBtTriangleMeshShapeData) SetM_quantizedDoubleBvh(arg2 BtQuantizedBvhDoubleData) {
	_swig_wrap_btTriangleMeshShapeData_m_quantizedDoubleBvh_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTriangleMeshShapeData_m_quantizedDoubleBvh_get(SwigcptrBtTriangleMeshShapeData) SwigcptrBtQuantizedBvhDoubleData

func (arg1 SwigcptrBtTriangleMeshShapeData) GetM_quantizedDoubleBvh() BtQuantizedBvhDoubleData {
	return _swig_wrap_btTriangleMeshShapeData_m_quantizedDoubleBvh_get(arg1)
}

func _swig_wrap_btTriangleMeshShapeData_m_triangleInfoMap_set(SwigcptrBtTriangleMeshShapeData, uintptr)

func (arg1 SwigcptrBtTriangleMeshShapeData) SetM_triangleInfoMap(arg2 BtTriangleInfoMapData) {
	_swig_wrap_btTriangleMeshShapeData_m_triangleInfoMap_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTriangleMeshShapeData_m_triangleInfoMap_get(SwigcptrBtTriangleMeshShapeData) SwigcptrBtTriangleInfoMapData

func (arg1 SwigcptrBtTriangleMeshShapeData) GetM_triangleInfoMap() BtTriangleInfoMapData {
	return _swig_wrap_btTriangleMeshShapeData_m_triangleInfoMap_get(arg1)
}

func _swig_wrap_btTriangleMeshShapeData_m_collisionMargin_set(SwigcptrBtTriangleMeshShapeData, float32)

func (arg1 SwigcptrBtTriangleMeshShapeData) SetM_collisionMargin(arg2 float32) {
	_swig_wrap_btTriangleMeshShapeData_m_collisionMargin_set(arg1, arg2)
}

func _swig_wrap_btTriangleMeshShapeData_m_collisionMargin_get(SwigcptrBtTriangleMeshShapeData) float32

func (arg1 SwigcptrBtTriangleMeshShapeData) GetM_collisionMargin() float32 {
	return _swig_wrap_btTriangleMeshShapeData_m_collisionMargin_get(arg1)
}

func _swig_wrap_btTriangleMeshShapeData_m_pad3_set(SwigcptrBtTriangleMeshShapeData, string)

func (arg1 SwigcptrBtTriangleMeshShapeData) SetM_pad3(arg2 string) {
	_swig_wrap_btTriangleMeshShapeData_m_pad3_set(arg1, arg2)
}

func _swig_wrap_btTriangleMeshShapeData_m_pad3_get(SwigcptrBtTriangleMeshShapeData) string

func (arg1 SwigcptrBtTriangleMeshShapeData) GetM_pad3() string {
	return _swig_wrap_btTriangleMeshShapeData_m_pad3_get(arg1)
}

func _swig_wrap_new_btTriangleMeshShapeData() SwigcptrBtTriangleMeshShapeData

func NewBtTriangleMeshShapeData() BtTriangleMeshShapeData {
	return _swig_wrap_new_btTriangleMeshShapeData()
}

func _swig_wrap_delete_btTriangleMeshShapeData(uintptr)

func DeleteBtTriangleMeshShapeData(arg1 BtTriangleMeshShapeData) {
	_swig_wrap_delete_btTriangleMeshShapeData(arg1.Swigcptr())
}

type BtTriangleMeshShapeData interface {
	Swigcptr() uintptr
	SwigIsBtTriangleMeshShapeData()
	SetM_collisionShapeData(arg2 BtCollisionShapeData)
	GetM_collisionShapeData() BtCollisionShapeData
	SetM_meshInterface(arg2 BtStridingMeshInterfaceData)
	GetM_meshInterface() BtStridingMeshInterfaceData
	SetM_quantizedFloatBvh(arg2 BtQuantizedBvhFloatData)
	GetM_quantizedFloatBvh() BtQuantizedBvhFloatData
	SetM_quantizedDoubleBvh(arg2 BtQuantizedBvhDoubleData)
	GetM_quantizedDoubleBvh() BtQuantizedBvhDoubleData
	SetM_triangleInfoMap(arg2 BtTriangleInfoMapData)
	GetM_triangleInfoMap() BtTriangleInfoMapData
	SetM_collisionMargin(arg2 float32)
	GetM_collisionMargin() float32
	SetM_pad3(arg2 string)
	GetM_pad3() string
}

type SwigcptrBtScaledBvhTriangleMeshShape uintptr

func (p SwigcptrBtScaledBvhTriangleMeshShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtScaledBvhTriangleMeshShape) SwigIsBtScaledBvhTriangleMeshShape() {
}

func _swig_wrap_new_btScaledBvhTriangleMeshShape(uintptr, uintptr) SwigcptrBtScaledBvhTriangleMeshShape

func NewBtScaledBvhTriangleMeshShape(arg1 BtBvhTriangleMeshShape, arg2 BtVector3) BtScaledBvhTriangleMeshShape {
	return _swig_wrap_new_btScaledBvhTriangleMeshShape(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_delete_btScaledBvhTriangleMeshShape(uintptr)

func DeleteBtScaledBvhTriangleMeshShape(arg1 BtScaledBvhTriangleMeshShape) {
	_swig_wrap_delete_btScaledBvhTriangleMeshShape(arg1.Swigcptr())
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getAabb(SwigcptrBtScaledBvhTriangleMeshShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtScaledBvhTriangleMeshShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btScaledBvhTriangleMeshShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btScaledBvhTriangleMeshShape_setLocalScaling(SwigcptrBtScaledBvhTriangleMeshShape, uintptr)

func (arg1 SwigcptrBtScaledBvhTriangleMeshShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btScaledBvhTriangleMeshShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getLocalScaling(SwigcptrBtScaledBvhTriangleMeshShape) SwigcptrBtVector3

func (arg1 SwigcptrBtScaledBvhTriangleMeshShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btScaledBvhTriangleMeshShape_getLocalScaling(arg1)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_calculateLocalInertia(SwigcptrBtScaledBvhTriangleMeshShape, float32, uintptr)

func (arg1 SwigcptrBtScaledBvhTriangleMeshShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btScaledBvhTriangleMeshShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btScaledBvhTriangleMeshShape_processAllTriangles(SwigcptrBtScaledBvhTriangleMeshShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtScaledBvhTriangleMeshShape) ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btScaledBvhTriangleMeshShape_processAllTriangles(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getChildShape__SWIG_0(SwigcptrBtScaledBvhTriangleMeshShape) SwigcptrBtBvhTriangleMeshShape

func (arg1 SwigcptrBtScaledBvhTriangleMeshShape) GetChildShape__SWIG_0() BtBvhTriangleMeshShape {
	return _swig_wrap_btScaledBvhTriangleMeshShape_getChildShape__SWIG_0(arg1)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getChildShape__SWIG_1(SwigcptrBtScaledBvhTriangleMeshShape) SwigcptrBtBvhTriangleMeshShape

func (arg1 SwigcptrBtScaledBvhTriangleMeshShape) GetChildShape__SWIG_1() BtBvhTriangleMeshShape {
	return _swig_wrap_btScaledBvhTriangleMeshShape_getChildShape__SWIG_1(arg1)
}

func (p SwigcptrBtScaledBvhTriangleMeshShape) GetChildShape(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetChildShape__SWIG_0()
	}
	if argc == 0 {
		return p.GetChildShape__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getName(SwigcptrBtScaledBvhTriangleMeshShape) string

func (arg1 SwigcptrBtScaledBvhTriangleMeshShape) GetName() string {
	return _swig_wrap_btScaledBvhTriangleMeshShape_getName(arg1)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_calculateSerializeBufferSize(SwigcptrBtScaledBvhTriangleMeshShape) int

func (arg1 SwigcptrBtScaledBvhTriangleMeshShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btScaledBvhTriangleMeshShape_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_serialize(SwigcptrBtScaledBvhTriangleMeshShape, uintptr, uintptr) string

func (arg1 SwigcptrBtScaledBvhTriangleMeshShape) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btScaledBvhTriangleMeshShape_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getMargin(SwigcptrBtScaledBvhTriangleMeshShape) float32

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) GetMargin() float32 {
	return _swig_wrap_btScaledBvhTriangleMeshShape_getMargin(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_setMargin(SwigcptrBtScaledBvhTriangleMeshShape, float32)

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) SetMargin(arg1 float32) {
	_swig_wrap_btScaledBvhTriangleMeshShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getBoundingSphere(SwigcptrBtScaledBvhTriangleMeshShape, uintptr, *float32)

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btScaledBvhTriangleMeshShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getAngularMotionDisc(SwigcptrBtScaledBvhTriangleMeshShape) float32

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btScaledBvhTriangleMeshShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getContactBreakingThreshold(SwigcptrBtScaledBvhTriangleMeshShape, float32) float32

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btScaledBvhTriangleMeshShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_calculateTemporalAabb(SwigcptrBtScaledBvhTriangleMeshShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btScaledBvhTriangleMeshShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btScaledBvhTriangleMeshShape_isPolyhedral(SwigcptrBtScaledBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) IsPolyhedral() bool {
	return _swig_wrap_btScaledBvhTriangleMeshShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_isConvex2d(SwigcptrBtScaledBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) IsConvex2d() bool {
	return _swig_wrap_btScaledBvhTriangleMeshShape_isConvex2d(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_isConvex(SwigcptrBtScaledBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) IsConvex() bool {
	return _swig_wrap_btScaledBvhTriangleMeshShape_isConvex(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_isNonMoving(SwigcptrBtScaledBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) IsNonMoving() bool {
	return _swig_wrap_btScaledBvhTriangleMeshShape_isNonMoving(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_isConcave(SwigcptrBtScaledBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) IsConcave() bool {
	return _swig_wrap_btScaledBvhTriangleMeshShape_isConcave(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_isCompound(SwigcptrBtScaledBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) IsCompound() bool {
	return _swig_wrap_btScaledBvhTriangleMeshShape_isCompound(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_isSoftBody(SwigcptrBtScaledBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) IsSoftBody() bool {
	return _swig_wrap_btScaledBvhTriangleMeshShape_isSoftBody(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_isInfinite(SwigcptrBtScaledBvhTriangleMeshShape) bool

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) IsInfinite() bool {
	return _swig_wrap_btScaledBvhTriangleMeshShape_isInfinite(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getShapeType(SwigcptrBtScaledBvhTriangleMeshShape) int

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) GetShapeType() int {
	return _swig_wrap_btScaledBvhTriangleMeshShape_getShapeType(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getAnisotropicRollingFrictionDirection(SwigcptrBtScaledBvhTriangleMeshShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btScaledBvhTriangleMeshShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_setUserPointer(SwigcptrBtScaledBvhTriangleMeshShape, uintptr)

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btScaledBvhTriangleMeshShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_getUserPointer(SwigcptrBtScaledBvhTriangleMeshShape) uintptr

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) GetUserPointer() uintptr {
	return _swig_wrap_btScaledBvhTriangleMeshShape_getUserPointer(_swig_base)
}

func _swig_wrap_btScaledBvhTriangleMeshShape_serializeSingleShape(SwigcptrBtScaledBvhTriangleMeshShape, uintptr)

func (_swig_base SwigcptrBtScaledBvhTriangleMeshShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btScaledBvhTriangleMeshShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtScaledBvhTriangleMeshShape) SwigIsBtConcaveShape() {
}

func (p SwigcptrBtScaledBvhTriangleMeshShape) SwigGetBtConcaveShape() BtConcaveShape {
	return SwigcptrBtConcaveShape(p.Swigcptr())
}

func (p SwigcptrBtScaledBvhTriangleMeshShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtScaledBvhTriangleMeshShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtScaledBvhTriangleMeshShape interface {
	Swigcptr() uintptr
	SwigIsBtScaledBvhTriangleMeshShape()
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	SetLocalScaling(arg2 BtVector3)
	GetLocalScaling() BtVector3
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3)
	GetChildShape(a ...interface{}) interface{}
	GetName() string
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetMargin() float32
	SetMargin(arg1 float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConcaveShape()
	SwigGetBtConcaveShape() BtConcaveShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtScaledTriangleMeshShapeData uintptr

func (p SwigcptrBtScaledTriangleMeshShapeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtScaledTriangleMeshShapeData) SwigIsBtScaledTriangleMeshShapeData() {
}

func _swig_wrap_btScaledTriangleMeshShapeData_m_trimeshShapeData_set(SwigcptrBtScaledTriangleMeshShapeData, uintptr)

func (arg1 SwigcptrBtScaledTriangleMeshShapeData) SetM_trimeshShapeData(arg2 BtTriangleMeshShapeData) {
	_swig_wrap_btScaledTriangleMeshShapeData_m_trimeshShapeData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btScaledTriangleMeshShapeData_m_trimeshShapeData_get(SwigcptrBtScaledTriangleMeshShapeData) SwigcptrBtTriangleMeshShapeData

func (arg1 SwigcptrBtScaledTriangleMeshShapeData) GetM_trimeshShapeData() BtTriangleMeshShapeData {
	return _swig_wrap_btScaledTriangleMeshShapeData_m_trimeshShapeData_get(arg1)
}

func _swig_wrap_btScaledTriangleMeshShapeData_m_localScaling_set(SwigcptrBtScaledTriangleMeshShapeData, uintptr)

func (arg1 SwigcptrBtScaledTriangleMeshShapeData) SetM_localScaling(arg2 BtVector3FloatData) {
	_swig_wrap_btScaledTriangleMeshShapeData_m_localScaling_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btScaledTriangleMeshShapeData_m_localScaling_get(SwigcptrBtScaledTriangleMeshShapeData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtScaledTriangleMeshShapeData) GetM_localScaling() BtVector3FloatData {
	return _swig_wrap_btScaledTriangleMeshShapeData_m_localScaling_get(arg1)
}

func _swig_wrap_new_btScaledTriangleMeshShapeData() SwigcptrBtScaledTriangleMeshShapeData

func NewBtScaledTriangleMeshShapeData() BtScaledTriangleMeshShapeData {
	return _swig_wrap_new_btScaledTriangleMeshShapeData()
}

func _swig_wrap_delete_btScaledTriangleMeshShapeData(uintptr)

func DeleteBtScaledTriangleMeshShapeData(arg1 BtScaledTriangleMeshShapeData) {
	_swig_wrap_delete_btScaledTriangleMeshShapeData(arg1.Swigcptr())
}

type BtScaledTriangleMeshShapeData interface {
	Swigcptr() uintptr
	SwigIsBtScaledTriangleMeshShapeData()
	SetM_trimeshShapeData(arg2 BtTriangleMeshShapeData)
	GetM_trimeshShapeData() BtTriangleMeshShapeData
	SetM_localScaling(arg2 BtVector3FloatData)
	GetM_localScaling() BtVector3FloatData
}

type SwigcptrBtCompoundShapeChild uintptr

func (p SwigcptrBtCompoundShapeChild) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCompoundShapeChild) SwigIsBtCompoundShapeChild() {
}

func _swig_wrap_btCompoundShapeChild_m_transform_set(SwigcptrBtCompoundShapeChild, uintptr)

func (arg1 SwigcptrBtCompoundShapeChild) SetM_transform(arg2 BtTransform) {
	_swig_wrap_btCompoundShapeChild_m_transform_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCompoundShapeChild_m_transform_get(SwigcptrBtCompoundShapeChild) SwigcptrBtTransform

func (arg1 SwigcptrBtCompoundShapeChild) GetM_transform() BtTransform {
	return _swig_wrap_btCompoundShapeChild_m_transform_get(arg1)
}

func _swig_wrap_btCompoundShapeChild_m_childShape_set(SwigcptrBtCompoundShapeChild, uintptr)

func (arg1 SwigcptrBtCompoundShapeChild) SetM_childShape(arg2 BtCollisionShape) {
	_swig_wrap_btCompoundShapeChild_m_childShape_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCompoundShapeChild_m_childShape_get(SwigcptrBtCompoundShapeChild) SwigcptrBtCollisionShape

func (arg1 SwigcptrBtCompoundShapeChild) GetM_childShape() BtCollisionShape {
	return _swig_wrap_btCompoundShapeChild_m_childShape_get(arg1)
}

func _swig_wrap_btCompoundShapeChild_m_childShapeType_set(SwigcptrBtCompoundShapeChild, int)

func (arg1 SwigcptrBtCompoundShapeChild) SetM_childShapeType(arg2 int) {
	_swig_wrap_btCompoundShapeChild_m_childShapeType_set(arg1, arg2)
}

func _swig_wrap_btCompoundShapeChild_m_childShapeType_get(SwigcptrBtCompoundShapeChild) int

func (arg1 SwigcptrBtCompoundShapeChild) GetM_childShapeType() int {
	return _swig_wrap_btCompoundShapeChild_m_childShapeType_get(arg1)
}

func _swig_wrap_btCompoundShapeChild_m_childMargin_set(SwigcptrBtCompoundShapeChild, float32)

func (arg1 SwigcptrBtCompoundShapeChild) SetM_childMargin(arg2 float32) {
	_swig_wrap_btCompoundShapeChild_m_childMargin_set(arg1, arg2)
}

func _swig_wrap_btCompoundShapeChild_m_childMargin_get(SwigcptrBtCompoundShapeChild) float32

func (arg1 SwigcptrBtCompoundShapeChild) GetM_childMargin() float32 {
	return _swig_wrap_btCompoundShapeChild_m_childMargin_get(arg1)
}

func _swig_wrap_btCompoundShapeChild_m_node_set(SwigcptrBtCompoundShapeChild, uintptr)

func (arg1 SwigcptrBtCompoundShapeChild) SetM_node(arg2 BtDbvtNode) {
	_swig_wrap_btCompoundShapeChild_m_node_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCompoundShapeChild_m_node_get(SwigcptrBtCompoundShapeChild) SwigcptrBtDbvtNode

func (arg1 SwigcptrBtCompoundShapeChild) GetM_node() BtDbvtNode {
	return _swig_wrap_btCompoundShapeChild_m_node_get(arg1)
}

func _swig_wrap_delete_btCompoundShapeChild(uintptr)

func DeleteBtCompoundShapeChild(arg1 BtCompoundShapeChild) {
	_swig_wrap_delete_btCompoundShapeChild(arg1.Swigcptr())
}

type BtCompoundShapeChild interface {
	Swigcptr() uintptr
	SwigIsBtCompoundShapeChild()
	SetM_transform(arg2 BtTransform)
	GetM_transform() BtTransform
	SetM_childShape(arg2 BtCollisionShape)
	GetM_childShape() BtCollisionShape
	SetM_childShapeType(arg2 int)
	GetM_childShapeType() int
	SetM_childMargin(arg2 float32)
	GetM_childMargin() float32
	SetM_node(arg2 BtDbvtNode)
	GetM_node() BtDbvtNode
}

type SwigcptrBtCompoundShape uintptr

func (p SwigcptrBtCompoundShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCompoundShape) SwigIsBtCompoundShape() {
}

func _swig_wrap_new_btCompoundShape__SWIG_0(bool) SwigcptrBtCompoundShape

func NewBtCompoundShape__SWIG_0(arg1 bool) BtCompoundShape {
	return _swig_wrap_new_btCompoundShape__SWIG_0(arg1)
}

func _swig_wrap_new_btCompoundShape__SWIG_1() SwigcptrBtCompoundShape

func NewBtCompoundShape__SWIG_1() BtCompoundShape {
	return _swig_wrap_new_btCompoundShape__SWIG_1()
}

func NewBtCompoundShape(a ...interface{}) BtCompoundShape {
	argc := len(a)
	if argc == 0 {
		return NewBtCompoundShape__SWIG_1()
	}
	if argc == 1 {
		return NewBtCompoundShape__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_btCompoundShape(uintptr)

func DeleteBtCompoundShape(arg1 BtCompoundShape) {
	_swig_wrap_delete_btCompoundShape(arg1.Swigcptr())
}

func _swig_wrap_btCompoundShape_addChildShape(SwigcptrBtCompoundShape, uintptr, uintptr)

func (arg1 SwigcptrBtCompoundShape) AddChildShape(arg2 BtTransform, arg3 BtCollisionShape) {
	_swig_wrap_btCompoundShape_addChildShape(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btCompoundShape_removeChildShape(SwigcptrBtCompoundShape, uintptr)

func (arg1 SwigcptrBtCompoundShape) RemoveChildShape(arg2 BtCollisionShape) {
	_swig_wrap_btCompoundShape_removeChildShape(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCompoundShape_removeChildShapeByIndex(SwigcptrBtCompoundShape, int)

func (arg1 SwigcptrBtCompoundShape) RemoveChildShapeByIndex(arg2 int) {
	_swig_wrap_btCompoundShape_removeChildShapeByIndex(arg1, arg2)
}

func _swig_wrap_btCompoundShape_getNumChildShapes(SwigcptrBtCompoundShape) int

func (arg1 SwigcptrBtCompoundShape) GetNumChildShapes() int {
	return _swig_wrap_btCompoundShape_getNumChildShapes(arg1)
}

func _swig_wrap_btCompoundShape_getChildShape__SWIG_0(SwigcptrBtCompoundShape, int) SwigcptrBtCollisionShape

func (arg1 SwigcptrBtCompoundShape) GetChildShape__SWIG_0(arg2 int) BtCollisionShape {
	return _swig_wrap_btCompoundShape_getChildShape__SWIG_0(arg1, arg2)
}

func _swig_wrap_btCompoundShape_getChildShape__SWIG_1(SwigcptrBtCompoundShape, int) SwigcptrBtCollisionShape

func (arg1 SwigcptrBtCompoundShape) GetChildShape__SWIG_1(arg2 int) BtCollisionShape {
	return _swig_wrap_btCompoundShape_getChildShape__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtCompoundShape) GetChildShape(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.GetChildShape__SWIG_0(a[0].(int))
	}
	if argc == 1 {
		return p.GetChildShape__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCompoundShape_getChildTransform__SWIG_0(SwigcptrBtCompoundShape, int) SwigcptrBtTransform

func (arg1 SwigcptrBtCompoundShape) GetChildTransform__SWIG_0(arg2 int) BtTransform {
	return _swig_wrap_btCompoundShape_getChildTransform__SWIG_0(arg1, arg2)
}

func _swig_wrap_btCompoundShape_getChildTransform__SWIG_1(SwigcptrBtCompoundShape, int) SwigcptrBtTransform

func (arg1 SwigcptrBtCompoundShape) GetChildTransform__SWIG_1(arg2 int) BtTransform {
	return _swig_wrap_btCompoundShape_getChildTransform__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtCompoundShape) GetChildTransform(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.GetChildTransform__SWIG_0(a[0].(int))
	}
	if argc == 1 {
		return p.GetChildTransform__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCompoundShape_updateChildTransform__SWIG_0(SwigcptrBtCompoundShape, int, uintptr, bool)

func (arg1 SwigcptrBtCompoundShape) UpdateChildTransform__SWIG_0(arg2 int, arg3 BtTransform, arg4 bool) {
	_swig_wrap_btCompoundShape_updateChildTransform__SWIG_0(arg1, arg2, arg3.Swigcptr(), arg4)
}

func _swig_wrap_btCompoundShape_updateChildTransform__SWIG_1(SwigcptrBtCompoundShape, int, uintptr)

func (arg1 SwigcptrBtCompoundShape) UpdateChildTransform__SWIG_1(arg2 int, arg3 BtTransform) {
	_swig_wrap_btCompoundShape_updateChildTransform__SWIG_1(arg1, arg2, arg3.Swigcptr())
}

func (p SwigcptrBtCompoundShape) UpdateChildTransform(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.UpdateChildTransform__SWIG_1(a[0].(int), a[1].(BtTransform))
		return
	}
	if argc == 3 {
		p.UpdateChildTransform__SWIG_0(a[0].(int), a[1].(BtTransform), a[2].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCompoundShape_getChildList(SwigcptrBtCompoundShape) SwigcptrBtCompoundShapeChild

func (arg1 SwigcptrBtCompoundShape) GetChildList() BtCompoundShapeChild {
	return _swig_wrap_btCompoundShape_getChildList(arg1)
}

func _swig_wrap_btCompoundShape_getAabb(SwigcptrBtCompoundShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtCompoundShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btCompoundShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btCompoundShape_recalculateLocalAabb(SwigcptrBtCompoundShape)

func (arg1 SwigcptrBtCompoundShape) RecalculateLocalAabb() {
	_swig_wrap_btCompoundShape_recalculateLocalAabb(arg1)
}

func _swig_wrap_btCompoundShape_setLocalScaling(SwigcptrBtCompoundShape, uintptr)

func (arg1 SwigcptrBtCompoundShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btCompoundShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCompoundShape_getLocalScaling(SwigcptrBtCompoundShape) SwigcptrBtVector3

func (arg1 SwigcptrBtCompoundShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btCompoundShape_getLocalScaling(arg1)
}

func _swig_wrap_btCompoundShape_calculateLocalInertia(SwigcptrBtCompoundShape, float32, uintptr)

func (arg1 SwigcptrBtCompoundShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btCompoundShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btCompoundShape_setMargin(SwigcptrBtCompoundShape, float32)

func (arg1 SwigcptrBtCompoundShape) SetMargin(arg2 float32) {
	_swig_wrap_btCompoundShape_setMargin(arg1, arg2)
}

func _swig_wrap_btCompoundShape_getMargin(SwigcptrBtCompoundShape) float32

func (arg1 SwigcptrBtCompoundShape) GetMargin() float32 {
	return _swig_wrap_btCompoundShape_getMargin(arg1)
}

func _swig_wrap_btCompoundShape_getName(SwigcptrBtCompoundShape) string

func (arg1 SwigcptrBtCompoundShape) GetName() string {
	return _swig_wrap_btCompoundShape_getName(arg1)
}

func _swig_wrap_btCompoundShape_getDynamicAabbTree__SWIG_0(SwigcptrBtCompoundShape) SwigcptrBtDbvt

func (arg1 SwigcptrBtCompoundShape) GetDynamicAabbTree__SWIG_0() BtDbvt {
	return _swig_wrap_btCompoundShape_getDynamicAabbTree__SWIG_0(arg1)
}

func _swig_wrap_btCompoundShape_getDynamicAabbTree__SWIG_1(SwigcptrBtCompoundShape) SwigcptrBtDbvt

func (arg1 SwigcptrBtCompoundShape) GetDynamicAabbTree__SWIG_1() BtDbvt {
	return _swig_wrap_btCompoundShape_getDynamicAabbTree__SWIG_1(arg1)
}

func (p SwigcptrBtCompoundShape) GetDynamicAabbTree(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetDynamicAabbTree__SWIG_0()
	}
	if argc == 0 {
		return p.GetDynamicAabbTree__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCompoundShape_createAabbTreeFromChildren(SwigcptrBtCompoundShape)

func (arg1 SwigcptrBtCompoundShape) CreateAabbTreeFromChildren() {
	_swig_wrap_btCompoundShape_createAabbTreeFromChildren(arg1)
}

func _swig_wrap_btCompoundShape_calculatePrincipalAxisTransform(SwigcptrBtCompoundShape, *float32, uintptr, uintptr)

func (arg1 SwigcptrBtCompoundShape) CalculatePrincipalAxisTransform(arg2 *float32, arg3 BtTransform, arg4 BtVector3) {
	_swig_wrap_btCompoundShape_calculatePrincipalAxisTransform(arg1, arg2, arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btCompoundShape_getUpdateRevision(SwigcptrBtCompoundShape) int

func (arg1 SwigcptrBtCompoundShape) GetUpdateRevision() int {
	return _swig_wrap_btCompoundShape_getUpdateRevision(arg1)
}

func _swig_wrap_btCompoundShape_calculateSerializeBufferSize(SwigcptrBtCompoundShape) int

func (arg1 SwigcptrBtCompoundShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btCompoundShape_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btCompoundShape_serialize(SwigcptrBtCompoundShape, uintptr, uintptr) string

func (arg1 SwigcptrBtCompoundShape) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btCompoundShape_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btCompoundShape_getBoundingSphere(SwigcptrBtCompoundShape, uintptr, *float32)

func (_swig_base SwigcptrBtCompoundShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btCompoundShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btCompoundShape_getAngularMotionDisc(SwigcptrBtCompoundShape) float32

func (_swig_base SwigcptrBtCompoundShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btCompoundShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btCompoundShape_getContactBreakingThreshold(SwigcptrBtCompoundShape, float32) float32

func (_swig_base SwigcptrBtCompoundShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btCompoundShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btCompoundShape_calculateTemporalAabb(SwigcptrBtCompoundShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtCompoundShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btCompoundShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btCompoundShape_isPolyhedral(SwigcptrBtCompoundShape) bool

func (_swig_base SwigcptrBtCompoundShape) IsPolyhedral() bool {
	return _swig_wrap_btCompoundShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btCompoundShape_isConvex2d(SwigcptrBtCompoundShape) bool

func (_swig_base SwigcptrBtCompoundShape) IsConvex2d() bool {
	return _swig_wrap_btCompoundShape_isConvex2d(_swig_base)
}

func _swig_wrap_btCompoundShape_isConvex(SwigcptrBtCompoundShape) bool

func (_swig_base SwigcptrBtCompoundShape) IsConvex() bool {
	return _swig_wrap_btCompoundShape_isConvex(_swig_base)
}

func _swig_wrap_btCompoundShape_isNonMoving(SwigcptrBtCompoundShape) bool

func (_swig_base SwigcptrBtCompoundShape) IsNonMoving() bool {
	return _swig_wrap_btCompoundShape_isNonMoving(_swig_base)
}

func _swig_wrap_btCompoundShape_isConcave(SwigcptrBtCompoundShape) bool

func (_swig_base SwigcptrBtCompoundShape) IsConcave() bool {
	return _swig_wrap_btCompoundShape_isConcave(_swig_base)
}

func _swig_wrap_btCompoundShape_isCompound(SwigcptrBtCompoundShape) bool

func (_swig_base SwigcptrBtCompoundShape) IsCompound() bool {
	return _swig_wrap_btCompoundShape_isCompound(_swig_base)
}

func _swig_wrap_btCompoundShape_isSoftBody(SwigcptrBtCompoundShape) bool

func (_swig_base SwigcptrBtCompoundShape) IsSoftBody() bool {
	return _swig_wrap_btCompoundShape_isSoftBody(_swig_base)
}

func _swig_wrap_btCompoundShape_isInfinite(SwigcptrBtCompoundShape) bool

func (_swig_base SwigcptrBtCompoundShape) IsInfinite() bool {
	return _swig_wrap_btCompoundShape_isInfinite(_swig_base)
}

func _swig_wrap_btCompoundShape_getShapeType(SwigcptrBtCompoundShape) int

func (_swig_base SwigcptrBtCompoundShape) GetShapeType() int {
	return _swig_wrap_btCompoundShape_getShapeType(_swig_base)
}

func _swig_wrap_btCompoundShape_getAnisotropicRollingFrictionDirection(SwigcptrBtCompoundShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtCompoundShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btCompoundShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btCompoundShape_setUserPointer(SwigcptrBtCompoundShape, uintptr)

func (_swig_base SwigcptrBtCompoundShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btCompoundShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btCompoundShape_getUserPointer(SwigcptrBtCompoundShape) uintptr

func (_swig_base SwigcptrBtCompoundShape) GetUserPointer() uintptr {
	return _swig_wrap_btCompoundShape_getUserPointer(_swig_base)
}

func _swig_wrap_btCompoundShape_serializeSingleShape(SwigcptrBtCompoundShape, uintptr)

func (_swig_base SwigcptrBtCompoundShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btCompoundShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtCompoundShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtCompoundShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtCompoundShape interface {
	Swigcptr() uintptr
	SwigIsBtCompoundShape()
	AddChildShape(arg2 BtTransform, arg3 BtCollisionShape)
	RemoveChildShape(arg2 BtCollisionShape)
	RemoveChildShapeByIndex(arg2 int)
	GetNumChildShapes() int
	GetChildShape(a ...interface{}) interface{}
	GetChildTransform(a ...interface{}) interface{}
	UpdateChildTransform(a ...interface{})
	GetChildList() BtCompoundShapeChild
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	RecalculateLocalAabb()
	SetLocalScaling(arg2 BtVector3)
	GetLocalScaling() BtVector3
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	SetMargin(arg2 float32)
	GetMargin() float32
	GetName() string
	GetDynamicAabbTree(a ...interface{}) interface{}
	CreateAabbTreeFromChildren()
	CalculatePrincipalAxisTransform(arg2 *float32, arg3 BtTransform, arg4 BtVector3)
	GetUpdateRevision() int
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtCompoundShapeChildData uintptr

func (p SwigcptrBtCompoundShapeChildData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCompoundShapeChildData) SwigIsBtCompoundShapeChildData() {
}

func _swig_wrap_btCompoundShapeChildData_m_transform_set(SwigcptrBtCompoundShapeChildData, uintptr)

func (arg1 SwigcptrBtCompoundShapeChildData) SetM_transform(arg2 BtTransformFloatData) {
	_swig_wrap_btCompoundShapeChildData_m_transform_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCompoundShapeChildData_m_transform_get(SwigcptrBtCompoundShapeChildData) SwigcptrBtTransformFloatData

func (arg1 SwigcptrBtCompoundShapeChildData) GetM_transform() BtTransformFloatData {
	return _swig_wrap_btCompoundShapeChildData_m_transform_get(arg1)
}

func _swig_wrap_btCompoundShapeChildData_m_childShape_set(SwigcptrBtCompoundShapeChildData, uintptr)

func (arg1 SwigcptrBtCompoundShapeChildData) SetM_childShape(arg2 BtCollisionShapeData) {
	_swig_wrap_btCompoundShapeChildData_m_childShape_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCompoundShapeChildData_m_childShape_get(SwigcptrBtCompoundShapeChildData) SwigcptrBtCollisionShapeData

func (arg1 SwigcptrBtCompoundShapeChildData) GetM_childShape() BtCollisionShapeData {
	return _swig_wrap_btCompoundShapeChildData_m_childShape_get(arg1)
}

func _swig_wrap_btCompoundShapeChildData_m_childShapeType_set(SwigcptrBtCompoundShapeChildData, int)

func (arg1 SwigcptrBtCompoundShapeChildData) SetM_childShapeType(arg2 int) {
	_swig_wrap_btCompoundShapeChildData_m_childShapeType_set(arg1, arg2)
}

func _swig_wrap_btCompoundShapeChildData_m_childShapeType_get(SwigcptrBtCompoundShapeChildData) int

func (arg1 SwigcptrBtCompoundShapeChildData) GetM_childShapeType() int {
	return _swig_wrap_btCompoundShapeChildData_m_childShapeType_get(arg1)
}

func _swig_wrap_btCompoundShapeChildData_m_childMargin_set(SwigcptrBtCompoundShapeChildData, float32)

func (arg1 SwigcptrBtCompoundShapeChildData) SetM_childMargin(arg2 float32) {
	_swig_wrap_btCompoundShapeChildData_m_childMargin_set(arg1, arg2)
}

func _swig_wrap_btCompoundShapeChildData_m_childMargin_get(SwigcptrBtCompoundShapeChildData) float32

func (arg1 SwigcptrBtCompoundShapeChildData) GetM_childMargin() float32 {
	return _swig_wrap_btCompoundShapeChildData_m_childMargin_get(arg1)
}

func _swig_wrap_new_btCompoundShapeChildData() SwigcptrBtCompoundShapeChildData

func NewBtCompoundShapeChildData() BtCompoundShapeChildData {
	return _swig_wrap_new_btCompoundShapeChildData()
}

func _swig_wrap_delete_btCompoundShapeChildData(uintptr)

func DeleteBtCompoundShapeChildData(arg1 BtCompoundShapeChildData) {
	_swig_wrap_delete_btCompoundShapeChildData(arg1.Swigcptr())
}

type BtCompoundShapeChildData interface {
	Swigcptr() uintptr
	SwigIsBtCompoundShapeChildData()
	SetM_transform(arg2 BtTransformFloatData)
	GetM_transform() BtTransformFloatData
	SetM_childShape(arg2 BtCollisionShapeData)
	GetM_childShape() BtCollisionShapeData
	SetM_childShapeType(arg2 int)
	GetM_childShapeType() int
	SetM_childMargin(arg2 float32)
	GetM_childMargin() float32
}

type SwigcptrBtCompoundShapeData uintptr

func (p SwigcptrBtCompoundShapeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCompoundShapeData) SwigIsBtCompoundShapeData() {
}

func _swig_wrap_btCompoundShapeData_m_collisionShapeData_set(SwigcptrBtCompoundShapeData, uintptr)

func (arg1 SwigcptrBtCompoundShapeData) SetM_collisionShapeData(arg2 BtCollisionShapeData) {
	_swig_wrap_btCompoundShapeData_m_collisionShapeData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCompoundShapeData_m_collisionShapeData_get(SwigcptrBtCompoundShapeData) SwigcptrBtCollisionShapeData

func (arg1 SwigcptrBtCompoundShapeData) GetM_collisionShapeData() BtCollisionShapeData {
	return _swig_wrap_btCompoundShapeData_m_collisionShapeData_get(arg1)
}

func _swig_wrap_btCompoundShapeData_m_childShapePtr_set(SwigcptrBtCompoundShapeData, uintptr)

func (arg1 SwigcptrBtCompoundShapeData) SetM_childShapePtr(arg2 BtCompoundShapeChildData) {
	_swig_wrap_btCompoundShapeData_m_childShapePtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCompoundShapeData_m_childShapePtr_get(SwigcptrBtCompoundShapeData) SwigcptrBtCompoundShapeChildData

func (arg1 SwigcptrBtCompoundShapeData) GetM_childShapePtr() BtCompoundShapeChildData {
	return _swig_wrap_btCompoundShapeData_m_childShapePtr_get(arg1)
}

func _swig_wrap_btCompoundShapeData_m_numChildShapes_set(SwigcptrBtCompoundShapeData, int)

func (arg1 SwigcptrBtCompoundShapeData) SetM_numChildShapes(arg2 int) {
	_swig_wrap_btCompoundShapeData_m_numChildShapes_set(arg1, arg2)
}

func _swig_wrap_btCompoundShapeData_m_numChildShapes_get(SwigcptrBtCompoundShapeData) int

func (arg1 SwigcptrBtCompoundShapeData) GetM_numChildShapes() int {
	return _swig_wrap_btCompoundShapeData_m_numChildShapes_get(arg1)
}

func _swig_wrap_btCompoundShapeData_m_collisionMargin_set(SwigcptrBtCompoundShapeData, float32)

func (arg1 SwigcptrBtCompoundShapeData) SetM_collisionMargin(arg2 float32) {
	_swig_wrap_btCompoundShapeData_m_collisionMargin_set(arg1, arg2)
}

func _swig_wrap_btCompoundShapeData_m_collisionMargin_get(SwigcptrBtCompoundShapeData) float32

func (arg1 SwigcptrBtCompoundShapeData) GetM_collisionMargin() float32 {
	return _swig_wrap_btCompoundShapeData_m_collisionMargin_get(arg1)
}

func _swig_wrap_new_btCompoundShapeData() SwigcptrBtCompoundShapeData

func NewBtCompoundShapeData() BtCompoundShapeData {
	return _swig_wrap_new_btCompoundShapeData()
}

func _swig_wrap_delete_btCompoundShapeData(uintptr)

func DeleteBtCompoundShapeData(arg1 BtCompoundShapeData) {
	_swig_wrap_delete_btCompoundShapeData(arg1.Swigcptr())
}

type BtCompoundShapeData interface {
	Swigcptr() uintptr
	SwigIsBtCompoundShapeData()
	SetM_collisionShapeData(arg2 BtCollisionShapeData)
	GetM_collisionShapeData() BtCollisionShapeData
	SetM_childShapePtr(arg2 BtCompoundShapeChildData)
	GetM_childShapePtr() BtCompoundShapeChildData
	SetM_numChildShapes(arg2 int)
	GetM_numChildShapes() int
	SetM_collisionMargin(arg2 float32)
	GetM_collisionMargin() float32
}

type SwigcptrBtBU_Simplex1to4 uintptr

func (p SwigcptrBtBU_Simplex1to4) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtBU_Simplex1to4) SwigIsBtBU_Simplex1to4() {
}

func _swig_wrap_new_btBU_Simplex1to4__SWIG_0() SwigcptrBtBU_Simplex1to4

func NewBtBU_Simplex1to4__SWIG_0() BtBU_Simplex1to4 {
	return _swig_wrap_new_btBU_Simplex1to4__SWIG_0()
}

func _swig_wrap_new_btBU_Simplex1to4__SWIG_1(uintptr) SwigcptrBtBU_Simplex1to4

func NewBtBU_Simplex1to4__SWIG_1(arg1 BtVector3) BtBU_Simplex1to4 {
	return _swig_wrap_new_btBU_Simplex1to4__SWIG_1(arg1.Swigcptr())
}

func _swig_wrap_new_btBU_Simplex1to4__SWIG_2(uintptr, uintptr) SwigcptrBtBU_Simplex1to4

func NewBtBU_Simplex1to4__SWIG_2(arg1 BtVector3, arg2 BtVector3) BtBU_Simplex1to4 {
	return _swig_wrap_new_btBU_Simplex1to4__SWIG_2(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_new_btBU_Simplex1to4__SWIG_3(uintptr, uintptr, uintptr) SwigcptrBtBU_Simplex1to4

func NewBtBU_Simplex1to4__SWIG_3(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3) BtBU_Simplex1to4 {
	return _swig_wrap_new_btBU_Simplex1to4__SWIG_3(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_new_btBU_Simplex1to4__SWIG_4(uintptr, uintptr, uintptr, uintptr) SwigcptrBtBU_Simplex1to4

func NewBtBU_Simplex1to4__SWIG_4(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3, arg4 BtVector3) BtBU_Simplex1to4 {
	return _swig_wrap_new_btBU_Simplex1to4__SWIG_4(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func NewBtBU_Simplex1to4(a ...interface{}) BtBU_Simplex1to4 {
	argc := len(a)
	if argc == 0 {
		return NewBtBU_Simplex1to4__SWIG_0()
	}
	if argc == 1 {
		return NewBtBU_Simplex1to4__SWIG_1(a[0].(BtVector3))
	}
	if argc == 2 {
		return NewBtBU_Simplex1to4__SWIG_2(a[0].(BtVector3), a[1].(BtVector3))
	}
	if argc == 3 {
		return NewBtBU_Simplex1to4__SWIG_3(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3))
	}
	if argc == 4 {
		return NewBtBU_Simplex1to4__SWIG_4(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(BtVector3))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btBU_Simplex1to4_reset(SwigcptrBtBU_Simplex1to4)

func (arg1 SwigcptrBtBU_Simplex1to4) Reset() {
	_swig_wrap_btBU_Simplex1to4_reset(arg1)
}

func _swig_wrap_btBU_Simplex1to4_getAabb(SwigcptrBtBU_Simplex1to4, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtBU_Simplex1to4) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_addVertex(SwigcptrBtBU_Simplex1to4, uintptr)

func (arg1 SwigcptrBtBU_Simplex1to4) AddVertex(arg2 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_addVertex(arg1, arg2.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_getNumVertices(SwigcptrBtBU_Simplex1to4) int

func (arg1 SwigcptrBtBU_Simplex1to4) GetNumVertices() int {
	return _swig_wrap_btBU_Simplex1to4_getNumVertices(arg1)
}

func _swig_wrap_btBU_Simplex1to4_getNumEdges(SwigcptrBtBU_Simplex1to4) int

func (arg1 SwigcptrBtBU_Simplex1to4) GetNumEdges() int {
	return _swig_wrap_btBU_Simplex1to4_getNumEdges(arg1)
}

func _swig_wrap_btBU_Simplex1to4_getEdge(SwigcptrBtBU_Simplex1to4, int, uintptr, uintptr)

func (arg1 SwigcptrBtBU_Simplex1to4) GetEdge(arg2 int, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_getEdge(arg1, arg2, arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_getVertex(SwigcptrBtBU_Simplex1to4, int, uintptr)

func (arg1 SwigcptrBtBU_Simplex1to4) GetVertex(arg2 int, arg3 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_getVertex(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_getNumPlanes(SwigcptrBtBU_Simplex1to4) int

func (arg1 SwigcptrBtBU_Simplex1to4) GetNumPlanes() int {
	return _swig_wrap_btBU_Simplex1to4_getNumPlanes(arg1)
}

func _swig_wrap_btBU_Simplex1to4_getPlane(SwigcptrBtBU_Simplex1to4, uintptr, uintptr, int)

func (arg1 SwigcptrBtBU_Simplex1to4) GetPlane(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btBU_Simplex1to4_getPlane(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btBU_Simplex1to4_getIndex(SwigcptrBtBU_Simplex1to4, int) int

func (arg1 SwigcptrBtBU_Simplex1to4) GetIndex(arg2 int) int {
	return _swig_wrap_btBU_Simplex1to4_getIndex(arg1, arg2)
}

func _swig_wrap_btBU_Simplex1to4_isInside(SwigcptrBtBU_Simplex1to4, uintptr, float32) bool

func (arg1 SwigcptrBtBU_Simplex1to4) IsInside(arg2 BtVector3, arg3 float32) bool {
	return _swig_wrap_btBU_Simplex1to4_isInside(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btBU_Simplex1to4_getName(SwigcptrBtBU_Simplex1to4) string

func (arg1 SwigcptrBtBU_Simplex1to4) GetName() string {
	return _swig_wrap_btBU_Simplex1to4_getName(arg1)
}

func _swig_wrap_delete_btBU_Simplex1to4(uintptr)

func DeleteBtBU_Simplex1to4(arg1 BtBU_Simplex1to4) {
	_swig_wrap_delete_btBU_Simplex1to4(arg1.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_getNonvirtualAabb(SwigcptrBtBU_Simplex1to4, uintptr, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtBU_Simplex1to4) GetNonvirtualAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32) {
	_swig_wrap_btBU_Simplex1to4_getNonvirtualAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btBU_Simplex1to4_setLocalScaling(SwigcptrBtBU_Simplex1to4, uintptr)

func (_swig_base SwigcptrBtBU_Simplex1to4) SetLocalScaling(arg1 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_setLocalScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_recalcLocalAabb(SwigcptrBtBU_Simplex1to4)

func (_swig_base SwigcptrBtBU_Simplex1to4) RecalcLocalAabb() {
	_swig_wrap_btBU_Simplex1to4_recalcLocalAabb(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_initializePolyhedralFeatures__SWIG_0(SwigcptrBtBU_Simplex1to4, int) bool

func (_swig_base SwigcptrBtBU_Simplex1to4) InitializePolyhedralFeatures__SWIG_0(arg1 int) bool {
	return _swig_wrap_btBU_Simplex1to4_initializePolyhedralFeatures__SWIG_0(_swig_base, arg1)
}

func _swig_wrap_btBU_Simplex1to4_initializePolyhedralFeatures__SWIG_1(SwigcptrBtBU_Simplex1to4) bool

func (_swig_base SwigcptrBtBU_Simplex1to4) InitializePolyhedralFeatures__SWIG_1() bool {
	return _swig_wrap_btBU_Simplex1to4_initializePolyhedralFeatures__SWIG_1(_swig_base)
}

func (p SwigcptrBtBU_Simplex1to4) InitializePolyhedralFeatures(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.InitializePolyhedralFeatures__SWIG_1()
	}
	if argc == 1 {
		return p.InitializePolyhedralFeatures__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btBU_Simplex1to4_getConvexPolyhedron(SwigcptrBtBU_Simplex1to4) SwigcptrBtConvexPolyhedron

func (_swig_base SwigcptrBtBU_Simplex1to4) GetConvexPolyhedron() BtConvexPolyhedron {
	return _swig_wrap_btBU_Simplex1to4_getConvexPolyhedron(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_localGetSupportingVertexWithoutMargin(SwigcptrBtBU_Simplex1to4, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtBU_Simplex1to4) LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btBU_Simplex1to4_localGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtBU_Simplex1to4, uintptr, uintptr, int)

func (_swig_base SwigcptrBtBU_Simplex1to4) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int) {
	_swig_wrap_btBU_Simplex1to4_batchedUnitVectorGetSupportingVertexWithoutMargin(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btBU_Simplex1to4_calculateLocalInertia(SwigcptrBtBU_Simplex1to4, float32, uintptr)

func (_swig_base SwigcptrBtBU_Simplex1to4) CalculateLocalInertia(arg1 float32, arg2 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_calculateLocalInertia(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_localGetSupportingVertex(SwigcptrBtBU_Simplex1to4, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtBU_Simplex1to4) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btBU_Simplex1to4_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_getImplicitShapeDimensions(SwigcptrBtBU_Simplex1to4) SwigcptrBtVector3

func (_swig_base SwigcptrBtBU_Simplex1to4) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btBU_Simplex1to4_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_setImplicitShapeDimensions(SwigcptrBtBU_Simplex1to4, uintptr)

func (_swig_base SwigcptrBtBU_Simplex1to4) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_setSafeMargin__SWIG_0(SwigcptrBtBU_Simplex1to4, float32, float32)

func (_swig_base SwigcptrBtBU_Simplex1to4) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btBU_Simplex1to4_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btBU_Simplex1to4_setSafeMargin__SWIG_1(SwigcptrBtBU_Simplex1to4, float32)

func (_swig_base SwigcptrBtBU_Simplex1to4) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btBU_Simplex1to4_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btBU_Simplex1to4_setSafeMargin__SWIG_2(SwigcptrBtBU_Simplex1to4, uintptr, float32)

func (_swig_base SwigcptrBtBU_Simplex1to4) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btBU_Simplex1to4_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btBU_Simplex1to4_setSafeMargin__SWIG_3(SwigcptrBtBU_Simplex1to4, uintptr)

func (_swig_base SwigcptrBtBU_Simplex1to4) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtBU_Simplex1to4) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btBU_Simplex1to4_getAabbSlow(SwigcptrBtBU_Simplex1to4, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtBU_Simplex1to4) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_getLocalScaling(SwigcptrBtBU_Simplex1to4) SwigcptrBtVector3

func (_swig_base SwigcptrBtBU_Simplex1to4) GetLocalScaling() BtVector3 {
	return _swig_wrap_btBU_Simplex1to4_getLocalScaling(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_getLocalScalingNV(SwigcptrBtBU_Simplex1to4) SwigcptrBtVector3

func (_swig_base SwigcptrBtBU_Simplex1to4) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btBU_Simplex1to4_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_setMargin(SwigcptrBtBU_Simplex1to4, float32)

func (_swig_base SwigcptrBtBU_Simplex1to4) SetMargin(arg1 float32) {
	_swig_wrap_btBU_Simplex1to4_setMargin(_swig_base, arg1)
}

func _swig_wrap_btBU_Simplex1to4_getMargin(SwigcptrBtBU_Simplex1to4) float32

func (_swig_base SwigcptrBtBU_Simplex1to4) GetMargin() float32 {
	return _swig_wrap_btBU_Simplex1to4_getMargin(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_getMarginNV(SwigcptrBtBU_Simplex1to4) float32

func (_swig_base SwigcptrBtBU_Simplex1to4) GetMarginNV() float32 {
	return _swig_wrap_btBU_Simplex1to4_getMarginNV(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_getNumPreferredPenetrationDirections(SwigcptrBtBU_Simplex1to4) int

func (_swig_base SwigcptrBtBU_Simplex1to4) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btBU_Simplex1to4_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_getPreferredPenetrationDirection(SwigcptrBtBU_Simplex1to4, int, uintptr)

func (_swig_base SwigcptrBtBU_Simplex1to4) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_calculateSerializeBufferSize(SwigcptrBtBU_Simplex1to4) int

func (_swig_base SwigcptrBtBU_Simplex1to4) CalculateSerializeBufferSize() int {
	return _swig_wrap_btBU_Simplex1to4_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_serialize(SwigcptrBtBU_Simplex1to4, uintptr, uintptr) string

func (_swig_base SwigcptrBtBU_Simplex1to4) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btBU_Simplex1to4_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtBU_Simplex1to4, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtBU_Simplex1to4) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btBU_Simplex1to4_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_localGetSupportVertexNonVirtual(SwigcptrBtBU_Simplex1to4, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtBU_Simplex1to4) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btBU_Simplex1to4_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_getMarginNonVirtual(SwigcptrBtBU_Simplex1to4) float32

func (_swig_base SwigcptrBtBU_Simplex1to4) GetMarginNonVirtual() float32 {
	return _swig_wrap_btBU_Simplex1to4_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_getAabbNonVirtual(SwigcptrBtBU_Simplex1to4, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtBU_Simplex1to4) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_project(SwigcptrBtBU_Simplex1to4, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtBU_Simplex1to4) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btBU_Simplex1to4_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btBU_Simplex1to4_getBoundingSphere(SwigcptrBtBU_Simplex1to4, uintptr, *float32)

func (_swig_base SwigcptrBtBU_Simplex1to4) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btBU_Simplex1to4_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btBU_Simplex1to4_getAngularMotionDisc(SwigcptrBtBU_Simplex1to4) float32

func (_swig_base SwigcptrBtBU_Simplex1to4) GetAngularMotionDisc() float32 {
	return _swig_wrap_btBU_Simplex1to4_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_getContactBreakingThreshold(SwigcptrBtBU_Simplex1to4, float32) float32

func (_swig_base SwigcptrBtBU_Simplex1to4) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btBU_Simplex1to4_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btBU_Simplex1to4_calculateTemporalAabb(SwigcptrBtBU_Simplex1to4, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtBU_Simplex1to4) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btBU_Simplex1to4_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btBU_Simplex1to4_isPolyhedral(SwigcptrBtBU_Simplex1to4) bool

func (_swig_base SwigcptrBtBU_Simplex1to4) IsPolyhedral() bool {
	return _swig_wrap_btBU_Simplex1to4_isPolyhedral(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_isConvex2d(SwigcptrBtBU_Simplex1to4) bool

func (_swig_base SwigcptrBtBU_Simplex1to4) IsConvex2d() bool {
	return _swig_wrap_btBU_Simplex1to4_isConvex2d(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_isConvex(SwigcptrBtBU_Simplex1to4) bool

func (_swig_base SwigcptrBtBU_Simplex1to4) IsConvex() bool {
	return _swig_wrap_btBU_Simplex1to4_isConvex(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_isNonMoving(SwigcptrBtBU_Simplex1to4) bool

func (_swig_base SwigcptrBtBU_Simplex1to4) IsNonMoving() bool {
	return _swig_wrap_btBU_Simplex1to4_isNonMoving(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_isConcave(SwigcptrBtBU_Simplex1to4) bool

func (_swig_base SwigcptrBtBU_Simplex1to4) IsConcave() bool {
	return _swig_wrap_btBU_Simplex1to4_isConcave(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_isCompound(SwigcptrBtBU_Simplex1to4) bool

func (_swig_base SwigcptrBtBU_Simplex1to4) IsCompound() bool {
	return _swig_wrap_btBU_Simplex1to4_isCompound(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_isSoftBody(SwigcptrBtBU_Simplex1to4) bool

func (_swig_base SwigcptrBtBU_Simplex1to4) IsSoftBody() bool {
	return _swig_wrap_btBU_Simplex1to4_isSoftBody(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_isInfinite(SwigcptrBtBU_Simplex1to4) bool

func (_swig_base SwigcptrBtBU_Simplex1to4) IsInfinite() bool {
	return _swig_wrap_btBU_Simplex1to4_isInfinite(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_getShapeType(SwigcptrBtBU_Simplex1to4) int

func (_swig_base SwigcptrBtBU_Simplex1to4) GetShapeType() int {
	return _swig_wrap_btBU_Simplex1to4_getShapeType(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_getAnisotropicRollingFrictionDirection(SwigcptrBtBU_Simplex1to4) SwigcptrBtVector3

func (_swig_base SwigcptrBtBU_Simplex1to4) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btBU_Simplex1to4_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_setUserPointer(SwigcptrBtBU_Simplex1to4, uintptr)

func (_swig_base SwigcptrBtBU_Simplex1to4) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btBU_Simplex1to4_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btBU_Simplex1to4_getUserPointer(SwigcptrBtBU_Simplex1to4) uintptr

func (_swig_base SwigcptrBtBU_Simplex1to4) GetUserPointer() uintptr {
	return _swig_wrap_btBU_Simplex1to4_getUserPointer(_swig_base)
}

func _swig_wrap_btBU_Simplex1to4_serializeSingleShape(SwigcptrBtBU_Simplex1to4, uintptr)

func (_swig_base SwigcptrBtBU_Simplex1to4) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btBU_Simplex1to4_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtBU_Simplex1to4) SwigIsBtPolyhedralConvexAabbCachingShape() {
}

func (p SwigcptrBtBU_Simplex1to4) SwigGetBtPolyhedralConvexAabbCachingShape() BtPolyhedralConvexAabbCachingShape {
	return SwigcptrBtPolyhedralConvexAabbCachingShape(p.Swigcptr())
}

func (p SwigcptrBtBU_Simplex1to4) SwigIsBtPolyhedralConvexShape() {
}

func (p SwigcptrBtBU_Simplex1to4) SwigGetBtPolyhedralConvexShape() BtPolyhedralConvexShape {
	return SwigcptrBtPolyhedralConvexShape(p.Swigcptr())
}

func (p SwigcptrBtBU_Simplex1to4) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtBU_Simplex1to4) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtBU_Simplex1to4) SwigIsBtConvexShape() {
}

func (p SwigcptrBtBU_Simplex1to4) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtBU_Simplex1to4) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtBU_Simplex1to4) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtBU_Simplex1to4 interface {
	Swigcptr() uintptr
	SwigIsBtBU_Simplex1to4()
	Reset()
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	AddVertex(arg2 BtVector3)
	GetNumVertices() int
	GetNumEdges() int
	GetEdge(arg2 int, arg3 BtVector3, arg4 BtVector3)
	GetVertex(arg2 int, arg3 BtVector3)
	GetNumPlanes() int
	GetPlane(arg2 BtVector3, arg3 BtVector3, arg4 int)
	GetIndex(arg2 int) int
	IsInside(arg2 BtVector3, arg3 float32) bool
	GetName() string
	GetNonvirtualAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32)
	SetLocalScaling(arg1 BtVector3)
	RecalcLocalAabb()
	InitializePolyhedralFeatures(a ...interface{}) bool
	GetConvexPolyhedron() BtConvexPolyhedron
	LocalGetSupportingVertexWithoutMargin(arg1 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg1 BtVector3, arg2 BtVector3, arg3 int)
	CalculateLocalInertia(arg1 float32, arg2 BtVector3)
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	SetMargin(arg1 float32)
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtPolyhedralConvexAabbCachingShape()
	SwigGetBtPolyhedralConvexAabbCachingShape() BtPolyhedralConvexAabbCachingShape
	SwigIsBtPolyhedralConvexShape()
	SwigGetBtPolyhedralConvexShape() BtPolyhedralConvexShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtEmptyShape uintptr

func (p SwigcptrBtEmptyShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtEmptyShape) SwigIsBtEmptyShape() {
}

func _swig_wrap_new_btEmptyShape() SwigcptrBtEmptyShape

func NewBtEmptyShape() BtEmptyShape {
	return _swig_wrap_new_btEmptyShape()
}

func _swig_wrap_delete_btEmptyShape(uintptr)

func DeleteBtEmptyShape(arg1 BtEmptyShape) {
	_swig_wrap_delete_btEmptyShape(arg1.Swigcptr())
}

func _swig_wrap_btEmptyShape_getAabb(SwigcptrBtEmptyShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtEmptyShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btEmptyShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btEmptyShape_setLocalScaling(SwigcptrBtEmptyShape, uintptr)

func (arg1 SwigcptrBtEmptyShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btEmptyShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btEmptyShape_getLocalScaling(SwigcptrBtEmptyShape) SwigcptrBtVector3

func (arg1 SwigcptrBtEmptyShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btEmptyShape_getLocalScaling(arg1)
}

func _swig_wrap_btEmptyShape_calculateLocalInertia(SwigcptrBtEmptyShape, float32, uintptr)

func (arg1 SwigcptrBtEmptyShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btEmptyShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btEmptyShape_getName(SwigcptrBtEmptyShape) string

func (arg1 SwigcptrBtEmptyShape) GetName() string {
	return _swig_wrap_btEmptyShape_getName(arg1)
}

func _swig_wrap_btEmptyShape_processAllTriangles(SwigcptrBtEmptyShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtEmptyShape) ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btEmptyShape_processAllTriangles(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btEmptyShape_getMargin(SwigcptrBtEmptyShape) float32

func (_swig_base SwigcptrBtEmptyShape) GetMargin() float32 {
	return _swig_wrap_btEmptyShape_getMargin(_swig_base)
}

func _swig_wrap_btEmptyShape_setMargin(SwigcptrBtEmptyShape, float32)

func (_swig_base SwigcptrBtEmptyShape) SetMargin(arg1 float32) {
	_swig_wrap_btEmptyShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btEmptyShape_getBoundingSphere(SwigcptrBtEmptyShape, uintptr, *float32)

func (_swig_base SwigcptrBtEmptyShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btEmptyShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btEmptyShape_getAngularMotionDisc(SwigcptrBtEmptyShape) float32

func (_swig_base SwigcptrBtEmptyShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btEmptyShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btEmptyShape_getContactBreakingThreshold(SwigcptrBtEmptyShape, float32) float32

func (_swig_base SwigcptrBtEmptyShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btEmptyShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btEmptyShape_calculateTemporalAabb(SwigcptrBtEmptyShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtEmptyShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btEmptyShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btEmptyShape_isPolyhedral(SwigcptrBtEmptyShape) bool

func (_swig_base SwigcptrBtEmptyShape) IsPolyhedral() bool {
	return _swig_wrap_btEmptyShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btEmptyShape_isConvex2d(SwigcptrBtEmptyShape) bool

func (_swig_base SwigcptrBtEmptyShape) IsConvex2d() bool {
	return _swig_wrap_btEmptyShape_isConvex2d(_swig_base)
}

func _swig_wrap_btEmptyShape_isConvex(SwigcptrBtEmptyShape) bool

func (_swig_base SwigcptrBtEmptyShape) IsConvex() bool {
	return _swig_wrap_btEmptyShape_isConvex(_swig_base)
}

func _swig_wrap_btEmptyShape_isNonMoving(SwigcptrBtEmptyShape) bool

func (_swig_base SwigcptrBtEmptyShape) IsNonMoving() bool {
	return _swig_wrap_btEmptyShape_isNonMoving(_swig_base)
}

func _swig_wrap_btEmptyShape_isConcave(SwigcptrBtEmptyShape) bool

func (_swig_base SwigcptrBtEmptyShape) IsConcave() bool {
	return _swig_wrap_btEmptyShape_isConcave(_swig_base)
}

func _swig_wrap_btEmptyShape_isCompound(SwigcptrBtEmptyShape) bool

func (_swig_base SwigcptrBtEmptyShape) IsCompound() bool {
	return _swig_wrap_btEmptyShape_isCompound(_swig_base)
}

func _swig_wrap_btEmptyShape_isSoftBody(SwigcptrBtEmptyShape) bool

func (_swig_base SwigcptrBtEmptyShape) IsSoftBody() bool {
	return _swig_wrap_btEmptyShape_isSoftBody(_swig_base)
}

func _swig_wrap_btEmptyShape_isInfinite(SwigcptrBtEmptyShape) bool

func (_swig_base SwigcptrBtEmptyShape) IsInfinite() bool {
	return _swig_wrap_btEmptyShape_isInfinite(_swig_base)
}

func _swig_wrap_btEmptyShape_getShapeType(SwigcptrBtEmptyShape) int

func (_swig_base SwigcptrBtEmptyShape) GetShapeType() int {
	return _swig_wrap_btEmptyShape_getShapeType(_swig_base)
}

func _swig_wrap_btEmptyShape_getAnisotropicRollingFrictionDirection(SwigcptrBtEmptyShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtEmptyShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btEmptyShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btEmptyShape_setUserPointer(SwigcptrBtEmptyShape, uintptr)

func (_swig_base SwigcptrBtEmptyShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btEmptyShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btEmptyShape_getUserPointer(SwigcptrBtEmptyShape) uintptr

func (_swig_base SwigcptrBtEmptyShape) GetUserPointer() uintptr {
	return _swig_wrap_btEmptyShape_getUserPointer(_swig_base)
}

func _swig_wrap_btEmptyShape_calculateSerializeBufferSize(SwigcptrBtEmptyShape) int

func (_swig_base SwigcptrBtEmptyShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btEmptyShape_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btEmptyShape_serialize(SwigcptrBtEmptyShape, uintptr, uintptr) string

func (_swig_base SwigcptrBtEmptyShape) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btEmptyShape_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btEmptyShape_serializeSingleShape(SwigcptrBtEmptyShape, uintptr)

func (_swig_base SwigcptrBtEmptyShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btEmptyShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtEmptyShape) SwigIsBtConcaveShape() {
}

func (p SwigcptrBtEmptyShape) SwigGetBtConcaveShape() BtConcaveShape {
	return SwigcptrBtConcaveShape(p.Swigcptr())
}

func (p SwigcptrBtEmptyShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtEmptyShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtEmptyShape interface {
	Swigcptr() uintptr
	SwigIsBtEmptyShape()
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	SetLocalScaling(arg2 BtVector3)
	GetLocalScaling() BtVector3
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	GetName() string
	ProcessAllTriangles(arg2 BtTriangleCallback, arg3 BtVector3, arg4 BtVector3)
	GetMargin() float32
	SetMargin(arg1 float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConcaveShape()
	SwigGetBtConcaveShape() BtConcaveShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtMultiSphereShape uintptr

func (p SwigcptrBtMultiSphereShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtMultiSphereShape) SwigIsBtMultiSphereShape() {
}

func _swig_wrap_new_btMultiSphereShape(uintptr, *float32, int) SwigcptrBtMultiSphereShape

func NewBtMultiSphereShape(arg1 BtVector3, arg2 *float32, arg3 int) BtMultiSphereShape {
	return _swig_wrap_new_btMultiSphereShape(arg1.Swigcptr(), arg2, arg3)
}

func _swig_wrap_btMultiSphereShape_calculateLocalInertia(SwigcptrBtMultiSphereShape, float32, uintptr)

func (arg1 SwigcptrBtMultiSphereShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btMultiSphereShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_localGetSupportingVertexWithoutMargin(SwigcptrBtMultiSphereShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtMultiSphereShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btMultiSphereShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtMultiSphereShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtMultiSphereShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btMultiSphereShape_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btMultiSphereShape_getSphereCount(SwigcptrBtMultiSphereShape) int

func (arg1 SwigcptrBtMultiSphereShape) GetSphereCount() int {
	return _swig_wrap_btMultiSphereShape_getSphereCount(arg1)
}

func _swig_wrap_btMultiSphereShape_getSpherePosition(SwigcptrBtMultiSphereShape, int) SwigcptrBtVector3

func (arg1 SwigcptrBtMultiSphereShape) GetSpherePosition(arg2 int) BtVector3 {
	return _swig_wrap_btMultiSphereShape_getSpherePosition(arg1, arg2)
}

func _swig_wrap_btMultiSphereShape_getSphereRadius(SwigcptrBtMultiSphereShape, int) float32

func (arg1 SwigcptrBtMultiSphereShape) GetSphereRadius(arg2 int) float32 {
	return _swig_wrap_btMultiSphereShape_getSphereRadius(arg1, arg2)
}

func _swig_wrap_btMultiSphereShape_getName(SwigcptrBtMultiSphereShape) string

func (arg1 SwigcptrBtMultiSphereShape) GetName() string {
	return _swig_wrap_btMultiSphereShape_getName(arg1)
}

func _swig_wrap_btMultiSphereShape_calculateSerializeBufferSize(SwigcptrBtMultiSphereShape) int

func (arg1 SwigcptrBtMultiSphereShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btMultiSphereShape_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btMultiSphereShape_serialize(SwigcptrBtMultiSphereShape, uintptr, uintptr) string

func (arg1 SwigcptrBtMultiSphereShape) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btMultiSphereShape_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btMultiSphereShape(uintptr)

func DeleteBtMultiSphereShape(arg1 BtMultiSphereShape) {
	_swig_wrap_delete_btMultiSphereShape(arg1.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_setLocalScaling(SwigcptrBtMultiSphereShape, uintptr)

func (_swig_base SwigcptrBtMultiSphereShape) SetLocalScaling(arg1 BtVector3) {
	_swig_wrap_btMultiSphereShape_setLocalScaling(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_getAabb(SwigcptrBtMultiSphereShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtMultiSphereShape) GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btMultiSphereShape_getAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_recalcLocalAabb(SwigcptrBtMultiSphereShape)

func (_swig_base SwigcptrBtMultiSphereShape) RecalcLocalAabb() {
	_swig_wrap_btMultiSphereShape_recalcLocalAabb(_swig_base)
}

func _swig_wrap_btMultiSphereShape_localGetSupportingVertex(SwigcptrBtMultiSphereShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtMultiSphereShape) LocalGetSupportingVertex(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btMultiSphereShape_localGetSupportingVertex(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_getImplicitShapeDimensions(SwigcptrBtMultiSphereShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtMultiSphereShape) GetImplicitShapeDimensions() BtVector3 {
	return _swig_wrap_btMultiSphereShape_getImplicitShapeDimensions(_swig_base)
}

func _swig_wrap_btMultiSphereShape_setImplicitShapeDimensions(SwigcptrBtMultiSphereShape, uintptr)

func (_swig_base SwigcptrBtMultiSphereShape) SetImplicitShapeDimensions(arg1 BtVector3) {
	_swig_wrap_btMultiSphereShape_setImplicitShapeDimensions(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_setSafeMargin__SWIG_0(SwigcptrBtMultiSphereShape, float32, float32)

func (_swig_base SwigcptrBtMultiSphereShape) SetSafeMargin__SWIG_0(arg1 float32, arg2 float32) {
	_swig_wrap_btMultiSphereShape_setSafeMargin__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btMultiSphereShape_setSafeMargin__SWIG_1(SwigcptrBtMultiSphereShape, float32)

func (_swig_base SwigcptrBtMultiSphereShape) SetSafeMargin__SWIG_1(arg1 float32) {
	_swig_wrap_btMultiSphereShape_setSafeMargin__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btMultiSphereShape_setSafeMargin__SWIG_2(SwigcptrBtMultiSphereShape, uintptr, float32)

func (_swig_base SwigcptrBtMultiSphereShape) SetSafeMargin__SWIG_2(arg1 BtVector3, arg2 float32) {
	_swig_wrap_btMultiSphereShape_setSafeMargin__SWIG_2(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btMultiSphereShape_setSafeMargin__SWIG_3(SwigcptrBtMultiSphereShape, uintptr)

func (_swig_base SwigcptrBtMultiSphereShape) SetSafeMargin__SWIG_3(arg1 BtVector3) {
	_swig_wrap_btMultiSphereShape_setSafeMargin__SWIG_3(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtMultiSphereShape) SetSafeMargin(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetSafeMargin__SWIG_3(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetSafeMargin__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_3
		}
		p.SetSafeMargin__SWIG_2(a[0].(BtVector3), a[1].(float32))
		return
	}
check_3:
	if argc == 2 {
		p.SetSafeMargin__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btMultiSphereShape_getAabbSlow(SwigcptrBtMultiSphereShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtMultiSphereShape) GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btMultiSphereShape_getAabbSlow(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_getLocalScaling(SwigcptrBtMultiSphereShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtMultiSphereShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btMultiSphereShape_getLocalScaling(_swig_base)
}

func _swig_wrap_btMultiSphereShape_getLocalScalingNV(SwigcptrBtMultiSphereShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtMultiSphereShape) GetLocalScalingNV() BtVector3 {
	return _swig_wrap_btMultiSphereShape_getLocalScalingNV(_swig_base)
}

func _swig_wrap_btMultiSphereShape_setMargin(SwigcptrBtMultiSphereShape, float32)

func (_swig_base SwigcptrBtMultiSphereShape) SetMargin(arg1 float32) {
	_swig_wrap_btMultiSphereShape_setMargin(_swig_base, arg1)
}

func _swig_wrap_btMultiSphereShape_getMargin(SwigcptrBtMultiSphereShape) float32

func (_swig_base SwigcptrBtMultiSphereShape) GetMargin() float32 {
	return _swig_wrap_btMultiSphereShape_getMargin(_swig_base)
}

func _swig_wrap_btMultiSphereShape_getMarginNV(SwigcptrBtMultiSphereShape) float32

func (_swig_base SwigcptrBtMultiSphereShape) GetMarginNV() float32 {
	return _swig_wrap_btMultiSphereShape_getMarginNV(_swig_base)
}

func _swig_wrap_btMultiSphereShape_getNumPreferredPenetrationDirections(SwigcptrBtMultiSphereShape) int

func (_swig_base SwigcptrBtMultiSphereShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btMultiSphereShape_getNumPreferredPenetrationDirections(_swig_base)
}

func _swig_wrap_btMultiSphereShape_getPreferredPenetrationDirection(SwigcptrBtMultiSphereShape, int, uintptr)

func (_swig_base SwigcptrBtMultiSphereShape) GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3) {
	_swig_wrap_btMultiSphereShape_getPreferredPenetrationDirection(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtMultiSphereShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtMultiSphereShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btMultiSphereShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_localGetSupportVertexNonVirtual(SwigcptrBtMultiSphereShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtMultiSphereShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btMultiSphereShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_getMarginNonVirtual(SwigcptrBtMultiSphereShape) float32

func (_swig_base SwigcptrBtMultiSphereShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btMultiSphereShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btMultiSphereShape_getAabbNonVirtual(SwigcptrBtMultiSphereShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtMultiSphereShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btMultiSphereShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_project(SwigcptrBtMultiSphereShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtMultiSphereShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btMultiSphereShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btMultiSphereShape_getBoundingSphere(SwigcptrBtMultiSphereShape, uintptr, *float32)

func (_swig_base SwigcptrBtMultiSphereShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btMultiSphereShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btMultiSphereShape_getAngularMotionDisc(SwigcptrBtMultiSphereShape) float32

func (_swig_base SwigcptrBtMultiSphereShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btMultiSphereShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btMultiSphereShape_getContactBreakingThreshold(SwigcptrBtMultiSphereShape, float32) float32

func (_swig_base SwigcptrBtMultiSphereShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btMultiSphereShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btMultiSphereShape_calculateTemporalAabb(SwigcptrBtMultiSphereShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtMultiSphereShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btMultiSphereShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btMultiSphereShape_isPolyhedral(SwigcptrBtMultiSphereShape) bool

func (_swig_base SwigcptrBtMultiSphereShape) IsPolyhedral() bool {
	return _swig_wrap_btMultiSphereShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btMultiSphereShape_isConvex2d(SwigcptrBtMultiSphereShape) bool

func (_swig_base SwigcptrBtMultiSphereShape) IsConvex2d() bool {
	return _swig_wrap_btMultiSphereShape_isConvex2d(_swig_base)
}

func _swig_wrap_btMultiSphereShape_isConvex(SwigcptrBtMultiSphereShape) bool

func (_swig_base SwigcptrBtMultiSphereShape) IsConvex() bool {
	return _swig_wrap_btMultiSphereShape_isConvex(_swig_base)
}

func _swig_wrap_btMultiSphereShape_isNonMoving(SwigcptrBtMultiSphereShape) bool

func (_swig_base SwigcptrBtMultiSphereShape) IsNonMoving() bool {
	return _swig_wrap_btMultiSphereShape_isNonMoving(_swig_base)
}

func _swig_wrap_btMultiSphereShape_isConcave(SwigcptrBtMultiSphereShape) bool

func (_swig_base SwigcptrBtMultiSphereShape) IsConcave() bool {
	return _swig_wrap_btMultiSphereShape_isConcave(_swig_base)
}

func _swig_wrap_btMultiSphereShape_isCompound(SwigcptrBtMultiSphereShape) bool

func (_swig_base SwigcptrBtMultiSphereShape) IsCompound() bool {
	return _swig_wrap_btMultiSphereShape_isCompound(_swig_base)
}

func _swig_wrap_btMultiSphereShape_isSoftBody(SwigcptrBtMultiSphereShape) bool

func (_swig_base SwigcptrBtMultiSphereShape) IsSoftBody() bool {
	return _swig_wrap_btMultiSphereShape_isSoftBody(_swig_base)
}

func _swig_wrap_btMultiSphereShape_isInfinite(SwigcptrBtMultiSphereShape) bool

func (_swig_base SwigcptrBtMultiSphereShape) IsInfinite() bool {
	return _swig_wrap_btMultiSphereShape_isInfinite(_swig_base)
}

func _swig_wrap_btMultiSphereShape_getShapeType(SwigcptrBtMultiSphereShape) int

func (_swig_base SwigcptrBtMultiSphereShape) GetShapeType() int {
	return _swig_wrap_btMultiSphereShape_getShapeType(_swig_base)
}

func _swig_wrap_btMultiSphereShape_getAnisotropicRollingFrictionDirection(SwigcptrBtMultiSphereShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtMultiSphereShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btMultiSphereShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btMultiSphereShape_setUserPointer(SwigcptrBtMultiSphereShape, uintptr)

func (_swig_base SwigcptrBtMultiSphereShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btMultiSphereShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btMultiSphereShape_getUserPointer(SwigcptrBtMultiSphereShape) uintptr

func (_swig_base SwigcptrBtMultiSphereShape) GetUserPointer() uintptr {
	return _swig_wrap_btMultiSphereShape_getUserPointer(_swig_base)
}

func _swig_wrap_btMultiSphereShape_serializeSingleShape(SwigcptrBtMultiSphereShape, uintptr)

func (_swig_base SwigcptrBtMultiSphereShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btMultiSphereShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtMultiSphereShape) SwigIsBtConvexInternalAabbCachingShape() {
}

func (p SwigcptrBtMultiSphereShape) SwigGetBtConvexInternalAabbCachingShape() BtConvexInternalAabbCachingShape {
	return SwigcptrBtConvexInternalAabbCachingShape(p.Swigcptr())
}

func (p SwigcptrBtMultiSphereShape) SwigIsBtConvexInternalShape() {
}

func (p SwigcptrBtMultiSphereShape) SwigGetBtConvexInternalShape() BtConvexInternalShape {
	return SwigcptrBtConvexInternalShape(p.Swigcptr())
}

func (p SwigcptrBtMultiSphereShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtMultiSphereShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtMultiSphereShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtMultiSphereShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtMultiSphereShape interface {
	Swigcptr() uintptr
	SwigIsBtMultiSphereShape()
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	GetSphereCount() int
	GetSpherePosition(arg2 int) BtVector3
	GetSphereRadius(arg2 int) float32
	GetName() string
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	SetLocalScaling(arg1 BtVector3)
	GetAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	RecalcLocalAabb()
	LocalGetSupportingVertex(arg1 BtVector3) BtVector3
	GetImplicitShapeDimensions() BtVector3
	SetImplicitShapeDimensions(arg1 BtVector3)
	SetSafeMargin(a ...interface{})
	GetAabbSlow(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	GetLocalScaling() BtVector3
	GetLocalScalingNV() BtVector3
	SetMargin(arg1 float32)
	GetMargin() float32
	GetMarginNV() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg1 int, arg2 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConvexInternalAabbCachingShape()
	SwigGetBtConvexInternalAabbCachingShape() BtConvexInternalAabbCachingShape
	SwigIsBtConvexInternalShape()
	SwigGetBtConvexInternalShape() BtConvexInternalShape
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtPositionAndRadius uintptr

func (p SwigcptrBtPositionAndRadius) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtPositionAndRadius) SwigIsBtPositionAndRadius() {
}

func _swig_wrap_btPositionAndRadius_m_pos_set(SwigcptrBtPositionAndRadius, uintptr)

func (arg1 SwigcptrBtPositionAndRadius) SetM_pos(arg2 BtVector3FloatData) {
	_swig_wrap_btPositionAndRadius_m_pos_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPositionAndRadius_m_pos_get(SwigcptrBtPositionAndRadius) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtPositionAndRadius) GetM_pos() BtVector3FloatData {
	return _swig_wrap_btPositionAndRadius_m_pos_get(arg1)
}

func _swig_wrap_btPositionAndRadius_m_radius_set(SwigcptrBtPositionAndRadius, float32)

func (arg1 SwigcptrBtPositionAndRadius) SetM_radius(arg2 float32) {
	_swig_wrap_btPositionAndRadius_m_radius_set(arg1, arg2)
}

func _swig_wrap_btPositionAndRadius_m_radius_get(SwigcptrBtPositionAndRadius) float32

func (arg1 SwigcptrBtPositionAndRadius) GetM_radius() float32 {
	return _swig_wrap_btPositionAndRadius_m_radius_get(arg1)
}

func _swig_wrap_new_btPositionAndRadius() SwigcptrBtPositionAndRadius

func NewBtPositionAndRadius() BtPositionAndRadius {
	return _swig_wrap_new_btPositionAndRadius()
}

func _swig_wrap_delete_btPositionAndRadius(uintptr)

func DeleteBtPositionAndRadius(arg1 BtPositionAndRadius) {
	_swig_wrap_delete_btPositionAndRadius(arg1.Swigcptr())
}

type BtPositionAndRadius interface {
	Swigcptr() uintptr
	SwigIsBtPositionAndRadius()
	SetM_pos(arg2 BtVector3FloatData)
	GetM_pos() BtVector3FloatData
	SetM_radius(arg2 float32)
	GetM_radius() float32
}

type SwigcptrBtMultiSphereShapeData uintptr

func (p SwigcptrBtMultiSphereShapeData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtMultiSphereShapeData) SwigIsBtMultiSphereShapeData() {
}

func _swig_wrap_btMultiSphereShapeData_m_convexInternalShapeData_set(SwigcptrBtMultiSphereShapeData, uintptr)

func (arg1 SwigcptrBtMultiSphereShapeData) SetM_convexInternalShapeData(arg2 BtConvexInternalShapeData) {
	_swig_wrap_btMultiSphereShapeData_m_convexInternalShapeData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMultiSphereShapeData_m_convexInternalShapeData_get(SwigcptrBtMultiSphereShapeData) SwigcptrBtConvexInternalShapeData

func (arg1 SwigcptrBtMultiSphereShapeData) GetM_convexInternalShapeData() BtConvexInternalShapeData {
	return _swig_wrap_btMultiSphereShapeData_m_convexInternalShapeData_get(arg1)
}

func _swig_wrap_btMultiSphereShapeData_m_localPositionArrayPtr_set(SwigcptrBtMultiSphereShapeData, uintptr)

func (arg1 SwigcptrBtMultiSphereShapeData) SetM_localPositionArrayPtr(arg2 BtPositionAndRadius) {
	_swig_wrap_btMultiSphereShapeData_m_localPositionArrayPtr_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMultiSphereShapeData_m_localPositionArrayPtr_get(SwigcptrBtMultiSphereShapeData) SwigcptrBtPositionAndRadius

func (arg1 SwigcptrBtMultiSphereShapeData) GetM_localPositionArrayPtr() BtPositionAndRadius {
	return _swig_wrap_btMultiSphereShapeData_m_localPositionArrayPtr_get(arg1)
}

func _swig_wrap_btMultiSphereShapeData_m_localPositionArraySize_set(SwigcptrBtMultiSphereShapeData, int)

func (arg1 SwigcptrBtMultiSphereShapeData) SetM_localPositionArraySize(arg2 int) {
	_swig_wrap_btMultiSphereShapeData_m_localPositionArraySize_set(arg1, arg2)
}

func _swig_wrap_btMultiSphereShapeData_m_localPositionArraySize_get(SwigcptrBtMultiSphereShapeData) int

func (arg1 SwigcptrBtMultiSphereShapeData) GetM_localPositionArraySize() int {
	return _swig_wrap_btMultiSphereShapeData_m_localPositionArraySize_get(arg1)
}

func _swig_wrap_btMultiSphereShapeData_m_padding_set(SwigcptrBtMultiSphereShapeData, string)

func (arg1 SwigcptrBtMultiSphereShapeData) SetM_padding(arg2 string) {
	_swig_wrap_btMultiSphereShapeData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btMultiSphereShapeData_m_padding_get(SwigcptrBtMultiSphereShapeData) string

func (arg1 SwigcptrBtMultiSphereShapeData) GetM_padding() string {
	return _swig_wrap_btMultiSphereShapeData_m_padding_get(arg1)
}

func _swig_wrap_new_btMultiSphereShapeData() SwigcptrBtMultiSphereShapeData

func NewBtMultiSphereShapeData() BtMultiSphereShapeData {
	return _swig_wrap_new_btMultiSphereShapeData()
}

func _swig_wrap_delete_btMultiSphereShapeData(uintptr)

func DeleteBtMultiSphereShapeData(arg1 BtMultiSphereShapeData) {
	_swig_wrap_delete_btMultiSphereShapeData(arg1.Swigcptr())
}

type BtMultiSphereShapeData interface {
	Swigcptr() uintptr
	SwigIsBtMultiSphereShapeData()
	SetM_convexInternalShapeData(arg2 BtConvexInternalShapeData)
	GetM_convexInternalShapeData() BtConvexInternalShapeData
	SetM_localPositionArrayPtr(arg2 BtPositionAndRadius)
	GetM_localPositionArrayPtr() BtPositionAndRadius
	SetM_localPositionArraySize(arg2 int)
	GetM_localPositionArraySize() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtUniformScalingShape uintptr

func (p SwigcptrBtUniformScalingShape) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtUniformScalingShape) SwigIsBtUniformScalingShape() {
}

func _swig_wrap_new_btUniformScalingShape(uintptr, float32) SwigcptrBtUniformScalingShape

func NewBtUniformScalingShape(arg1 BtConvexShape, arg2 float32) BtUniformScalingShape {
	return _swig_wrap_new_btUniformScalingShape(arg1.Swigcptr(), arg2)
}

func _swig_wrap_delete_btUniformScalingShape(uintptr)

func DeleteBtUniformScalingShape(arg1 BtUniformScalingShape) {
	_swig_wrap_delete_btUniformScalingShape(arg1.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_localGetSupportingVertexWithoutMargin(SwigcptrBtUniformScalingShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtUniformScalingShape) LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btUniformScalingShape_localGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_localGetSupportingVertex(SwigcptrBtUniformScalingShape, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtUniformScalingShape) LocalGetSupportingVertex(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btUniformScalingShape_localGetSupportingVertex(arg1, arg2.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_batchedUnitVectorGetSupportingVertexWithoutMargin(SwigcptrBtUniformScalingShape, uintptr, uintptr, int)

func (arg1 SwigcptrBtUniformScalingShape) BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int) {
	_swig_wrap_btUniformScalingShape_batchedUnitVectorGetSupportingVertexWithoutMargin(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btUniformScalingShape_calculateLocalInertia(SwigcptrBtUniformScalingShape, float32, uintptr)

func (arg1 SwigcptrBtUniformScalingShape) CalculateLocalInertia(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btUniformScalingShape_calculateLocalInertia(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_getUniformScalingFactor(SwigcptrBtUniformScalingShape) float32

func (arg1 SwigcptrBtUniformScalingShape) GetUniformScalingFactor() float32 {
	return _swig_wrap_btUniformScalingShape_getUniformScalingFactor(arg1)
}

func _swig_wrap_btUniformScalingShape_getChildShape__SWIG_0(SwigcptrBtUniformScalingShape) SwigcptrBtConvexShape

func (arg1 SwigcptrBtUniformScalingShape) GetChildShape__SWIG_0() BtConvexShape {
	return _swig_wrap_btUniformScalingShape_getChildShape__SWIG_0(arg1)
}

func _swig_wrap_btUniformScalingShape_getChildShape__SWIG_1(SwigcptrBtUniformScalingShape) SwigcptrBtConvexShape

func (arg1 SwigcptrBtUniformScalingShape) GetChildShape__SWIG_1() BtConvexShape {
	return _swig_wrap_btUniformScalingShape_getChildShape__SWIG_1(arg1)
}

func (p SwigcptrBtUniformScalingShape) GetChildShape(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetChildShape__SWIG_0()
	}
	if argc == 0 {
		return p.GetChildShape__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btUniformScalingShape_getName(SwigcptrBtUniformScalingShape) string

func (arg1 SwigcptrBtUniformScalingShape) GetName() string {
	return _swig_wrap_btUniformScalingShape_getName(arg1)
}

func _swig_wrap_btUniformScalingShape_getAabb(SwigcptrBtUniformScalingShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtUniformScalingShape) GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btUniformScalingShape_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_getAabbSlow(SwigcptrBtUniformScalingShape, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtUniformScalingShape) GetAabbSlow(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btUniformScalingShape_getAabbSlow(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_setLocalScaling(SwigcptrBtUniformScalingShape, uintptr)

func (arg1 SwigcptrBtUniformScalingShape) SetLocalScaling(arg2 BtVector3) {
	_swig_wrap_btUniformScalingShape_setLocalScaling(arg1, arg2.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_getLocalScaling(SwigcptrBtUniformScalingShape) SwigcptrBtVector3

func (arg1 SwigcptrBtUniformScalingShape) GetLocalScaling() BtVector3 {
	return _swig_wrap_btUniformScalingShape_getLocalScaling(arg1)
}

func _swig_wrap_btUniformScalingShape_setMargin(SwigcptrBtUniformScalingShape, float32)

func (arg1 SwigcptrBtUniformScalingShape) SetMargin(arg2 float32) {
	_swig_wrap_btUniformScalingShape_setMargin(arg1, arg2)
}

func _swig_wrap_btUniformScalingShape_getMargin(SwigcptrBtUniformScalingShape) float32

func (arg1 SwigcptrBtUniformScalingShape) GetMargin() float32 {
	return _swig_wrap_btUniformScalingShape_getMargin(arg1)
}

func _swig_wrap_btUniformScalingShape_getNumPreferredPenetrationDirections(SwigcptrBtUniformScalingShape) int

func (arg1 SwigcptrBtUniformScalingShape) GetNumPreferredPenetrationDirections() int {
	return _swig_wrap_btUniformScalingShape_getNumPreferredPenetrationDirections(arg1)
}

func _swig_wrap_btUniformScalingShape_getPreferredPenetrationDirection(SwigcptrBtUniformScalingShape, int, uintptr)

func (arg1 SwigcptrBtUniformScalingShape) GetPreferredPenetrationDirection(arg2 int, arg3 BtVector3) {
	_swig_wrap_btUniformScalingShape_getPreferredPenetrationDirection(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_localGetSupportVertexWithoutMarginNonVirtual(SwigcptrBtUniformScalingShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtUniformScalingShape) LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btUniformScalingShape_localGetSupportVertexWithoutMarginNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_localGetSupportVertexNonVirtual(SwigcptrBtUniformScalingShape, uintptr) SwigcptrBtVector3

func (_swig_base SwigcptrBtUniformScalingShape) LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3 {
	return _swig_wrap_btUniformScalingShape_localGetSupportVertexNonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_getMarginNonVirtual(SwigcptrBtUniformScalingShape) float32

func (_swig_base SwigcptrBtUniformScalingShape) GetMarginNonVirtual() float32 {
	return _swig_wrap_btUniformScalingShape_getMarginNonVirtual(_swig_base)
}

func _swig_wrap_btUniformScalingShape_getAabbNonVirtual(SwigcptrBtUniformScalingShape, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtUniformScalingShape) GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btUniformScalingShape_getAabbNonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_project(SwigcptrBtUniformScalingShape, uintptr, uintptr, *float32, *float32)

func (_swig_base SwigcptrBtUniformScalingShape) Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32) {
	_swig_wrap_btUniformScalingShape_project(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btUniformScalingShape_getBoundingSphere(SwigcptrBtUniformScalingShape, uintptr, *float32)

func (_swig_base SwigcptrBtUniformScalingShape) GetBoundingSphere(arg1 BtVector3, arg2 *float32) {
	_swig_wrap_btUniformScalingShape_getBoundingSphere(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btUniformScalingShape_getAngularMotionDisc(SwigcptrBtUniformScalingShape) float32

func (_swig_base SwigcptrBtUniformScalingShape) GetAngularMotionDisc() float32 {
	return _swig_wrap_btUniformScalingShape_getAngularMotionDisc(_swig_base)
}

func _swig_wrap_btUniformScalingShape_getContactBreakingThreshold(SwigcptrBtUniformScalingShape, float32) float32

func (_swig_base SwigcptrBtUniformScalingShape) GetContactBreakingThreshold(arg1 float32) float32 {
	return _swig_wrap_btUniformScalingShape_getContactBreakingThreshold(_swig_base, arg1)
}

func _swig_wrap_btUniformScalingShape_calculateTemporalAabb(SwigcptrBtUniformScalingShape, uintptr, uintptr, uintptr, float32, uintptr, uintptr)

func (_swig_base SwigcptrBtUniformScalingShape) CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btUniformScalingShape_calculateTemporalAabb(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_isPolyhedral(SwigcptrBtUniformScalingShape) bool

func (_swig_base SwigcptrBtUniformScalingShape) IsPolyhedral() bool {
	return _swig_wrap_btUniformScalingShape_isPolyhedral(_swig_base)
}

func _swig_wrap_btUniformScalingShape_isConvex2d(SwigcptrBtUniformScalingShape) bool

func (_swig_base SwigcptrBtUniformScalingShape) IsConvex2d() bool {
	return _swig_wrap_btUniformScalingShape_isConvex2d(_swig_base)
}

func _swig_wrap_btUniformScalingShape_isConvex(SwigcptrBtUniformScalingShape) bool

func (_swig_base SwigcptrBtUniformScalingShape) IsConvex() bool {
	return _swig_wrap_btUniformScalingShape_isConvex(_swig_base)
}

func _swig_wrap_btUniformScalingShape_isNonMoving(SwigcptrBtUniformScalingShape) bool

func (_swig_base SwigcptrBtUniformScalingShape) IsNonMoving() bool {
	return _swig_wrap_btUniformScalingShape_isNonMoving(_swig_base)
}

func _swig_wrap_btUniformScalingShape_isConcave(SwigcptrBtUniformScalingShape) bool

func (_swig_base SwigcptrBtUniformScalingShape) IsConcave() bool {
	return _swig_wrap_btUniformScalingShape_isConcave(_swig_base)
}

func _swig_wrap_btUniformScalingShape_isCompound(SwigcptrBtUniformScalingShape) bool

func (_swig_base SwigcptrBtUniformScalingShape) IsCompound() bool {
	return _swig_wrap_btUniformScalingShape_isCompound(_swig_base)
}

func _swig_wrap_btUniformScalingShape_isSoftBody(SwigcptrBtUniformScalingShape) bool

func (_swig_base SwigcptrBtUniformScalingShape) IsSoftBody() bool {
	return _swig_wrap_btUniformScalingShape_isSoftBody(_swig_base)
}

func _swig_wrap_btUniformScalingShape_isInfinite(SwigcptrBtUniformScalingShape) bool

func (_swig_base SwigcptrBtUniformScalingShape) IsInfinite() bool {
	return _swig_wrap_btUniformScalingShape_isInfinite(_swig_base)
}

func _swig_wrap_btUniformScalingShape_getShapeType(SwigcptrBtUniformScalingShape) int

func (_swig_base SwigcptrBtUniformScalingShape) GetShapeType() int {
	return _swig_wrap_btUniformScalingShape_getShapeType(_swig_base)
}

func _swig_wrap_btUniformScalingShape_getAnisotropicRollingFrictionDirection(SwigcptrBtUniformScalingShape) SwigcptrBtVector3

func (_swig_base SwigcptrBtUniformScalingShape) GetAnisotropicRollingFrictionDirection() BtVector3 {
	return _swig_wrap_btUniformScalingShape_getAnisotropicRollingFrictionDirection(_swig_base)
}

func _swig_wrap_btUniformScalingShape_setUserPointer(SwigcptrBtUniformScalingShape, uintptr)

func (_swig_base SwigcptrBtUniformScalingShape) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btUniformScalingShape_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btUniformScalingShape_getUserPointer(SwigcptrBtUniformScalingShape) uintptr

func (_swig_base SwigcptrBtUniformScalingShape) GetUserPointer() uintptr {
	return _swig_wrap_btUniformScalingShape_getUserPointer(_swig_base)
}

func _swig_wrap_btUniformScalingShape_calculateSerializeBufferSize(SwigcptrBtUniformScalingShape) int

func (_swig_base SwigcptrBtUniformScalingShape) CalculateSerializeBufferSize() int {
	return _swig_wrap_btUniformScalingShape_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btUniformScalingShape_serialize(SwigcptrBtUniformScalingShape, uintptr, uintptr) string

func (_swig_base SwigcptrBtUniformScalingShape) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btUniformScalingShape_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btUniformScalingShape_serializeSingleShape(SwigcptrBtUniformScalingShape, uintptr)

func (_swig_base SwigcptrBtUniformScalingShape) SerializeSingleShape(arg1 BtSerializer) {
	_swig_wrap_btUniformScalingShape_serializeSingleShape(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtUniformScalingShape) SwigIsBtConvexShape() {
}

func (p SwigcptrBtUniformScalingShape) SwigGetBtConvexShape() BtConvexShape {
	return SwigcptrBtConvexShape(p.Swigcptr())
}

func (p SwigcptrBtUniformScalingShape) SwigIsBtCollisionShape() {
}

func (p SwigcptrBtUniformScalingShape) SwigGetBtCollisionShape() BtCollisionShape {
	return SwigcptrBtCollisionShape(p.Swigcptr())
}

type BtUniformScalingShape interface {
	Swigcptr() uintptr
	SwigIsBtUniformScalingShape()
	LocalGetSupportingVertexWithoutMargin(arg2 BtVector3) BtVector3
	LocalGetSupportingVertex(arg2 BtVector3) BtVector3
	BatchedUnitVectorGetSupportingVertexWithoutMargin(arg2 BtVector3, arg3 BtVector3, arg4 int)
	CalculateLocalInertia(arg2 float32, arg3 BtVector3)
	GetUniformScalingFactor() float32
	GetChildShape(a ...interface{}) interface{}
	GetName() string
	GetAabb(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	GetAabbSlow(arg2 BtTransform, arg3 BtVector3, arg4 BtVector3)
	SetLocalScaling(arg2 BtVector3)
	GetLocalScaling() BtVector3
	SetMargin(arg2 float32)
	GetMargin() float32
	GetNumPreferredPenetrationDirections() int
	GetPreferredPenetrationDirection(arg2 int, arg3 BtVector3)
	LocalGetSupportVertexWithoutMarginNonVirtual(arg1 BtVector3) BtVector3
	LocalGetSupportVertexNonVirtual(arg1 BtVector3) BtVector3
	GetMarginNonVirtual() float32
	GetAabbNonVirtual(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3)
	Project(arg1 BtTransform, arg2 BtVector3, arg3 *float32, arg4 *float32)
	GetBoundingSphere(arg1 BtVector3, arg2 *float32)
	GetAngularMotionDisc() float32
	GetContactBreakingThreshold(arg1 float32) float32
	CalculateTemporalAabb(arg1 BtTransform, arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 BtVector3, arg6 BtVector3)
	IsPolyhedral() bool
	IsConvex2d() bool
	IsConvex() bool
	IsNonMoving() bool
	IsConcave() bool
	IsCompound() bool
	IsSoftBody() bool
	IsInfinite() bool
	GetShapeType() int
	GetAnisotropicRollingFrictionDirection() BtVector3
	SetUserPointer(arg1 uintptr)
	GetUserPointer() uintptr
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	SerializeSingleShape(arg1 BtSerializer)
	SwigIsBtConvexShape()
	SwigGetBtConvexShape() BtConvexShape
	SwigIsBtCollisionShape()
	SwigGetBtCollisionShape() BtCollisionShape
}

type SwigcptrBtCollisionAlgorithmConstructionInfo uintptr

func (p SwigcptrBtCollisionAlgorithmConstructionInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionAlgorithmConstructionInfo) SwigIsBtCollisionAlgorithmConstructionInfo() {
}

func _swig_wrap_new_btCollisionAlgorithmConstructionInfo__SWIG_0() SwigcptrBtCollisionAlgorithmConstructionInfo

func NewBtCollisionAlgorithmConstructionInfo__SWIG_0() BtCollisionAlgorithmConstructionInfo {
	return _swig_wrap_new_btCollisionAlgorithmConstructionInfo__SWIG_0()
}

func _swig_wrap_new_btCollisionAlgorithmConstructionInfo__SWIG_1(uintptr, int) SwigcptrBtCollisionAlgorithmConstructionInfo

func NewBtCollisionAlgorithmConstructionInfo__SWIG_1(arg1 BtDispatcher, arg2 int) BtCollisionAlgorithmConstructionInfo {
	return _swig_wrap_new_btCollisionAlgorithmConstructionInfo__SWIG_1(arg1.Swigcptr(), arg2)
}

func NewBtCollisionAlgorithmConstructionInfo(a ...interface{}) BtCollisionAlgorithmConstructionInfo {
	argc := len(a)
	if argc == 0 {
		return NewBtCollisionAlgorithmConstructionInfo__SWIG_0()
	}
	if argc == 2 {
		return NewBtCollisionAlgorithmConstructionInfo__SWIG_1(a[0].(BtDispatcher), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btCollisionAlgorithmConstructionInfo_m_dispatcher1_set(SwigcptrBtCollisionAlgorithmConstructionInfo, uintptr)

func (arg1 SwigcptrBtCollisionAlgorithmConstructionInfo) SetM_dispatcher1(arg2 BtDispatcher) {
	_swig_wrap_btCollisionAlgorithmConstructionInfo_m_dispatcher1_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionAlgorithmConstructionInfo_m_dispatcher1_get(SwigcptrBtCollisionAlgorithmConstructionInfo) SwigcptrBtDispatcher

func (arg1 SwigcptrBtCollisionAlgorithmConstructionInfo) GetM_dispatcher1() BtDispatcher {
	return _swig_wrap_btCollisionAlgorithmConstructionInfo_m_dispatcher1_get(arg1)
}

func _swig_wrap_btCollisionAlgorithmConstructionInfo_m_manifold_set(SwigcptrBtCollisionAlgorithmConstructionInfo, uintptr)

func (arg1 SwigcptrBtCollisionAlgorithmConstructionInfo) SetM_manifold(arg2 BtPersistentManifold) {
	_swig_wrap_btCollisionAlgorithmConstructionInfo_m_manifold_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btCollisionAlgorithmConstructionInfo_m_manifold_get(SwigcptrBtCollisionAlgorithmConstructionInfo) SwigcptrBtPersistentManifold

func (arg1 SwigcptrBtCollisionAlgorithmConstructionInfo) GetM_manifold() BtPersistentManifold {
	return _swig_wrap_btCollisionAlgorithmConstructionInfo_m_manifold_get(arg1)
}

func _swig_wrap_delete_btCollisionAlgorithmConstructionInfo(uintptr)

func DeleteBtCollisionAlgorithmConstructionInfo(arg1 BtCollisionAlgorithmConstructionInfo) {
	_swig_wrap_delete_btCollisionAlgorithmConstructionInfo(arg1.Swigcptr())
}

type BtCollisionAlgorithmConstructionInfo interface {
	Swigcptr() uintptr
	SwigIsBtCollisionAlgorithmConstructionInfo()
	SetM_dispatcher1(arg2 BtDispatcher)
	GetM_dispatcher1() BtDispatcher
	SetM_manifold(arg2 BtPersistentManifold)
	GetM_manifold() BtPersistentManifold
}

type SwigcptrBtCollisionAlgorithm uintptr

func (p SwigcptrBtCollisionAlgorithm) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionAlgorithm) SwigIsBtCollisionAlgorithm() {
}

func _swig_wrap_delete_btCollisionAlgorithm(uintptr)

func DeleteBtCollisionAlgorithm(arg1 BtCollisionAlgorithm) {
	_swig_wrap_delete_btCollisionAlgorithm(arg1.Swigcptr())
}

func _swig_wrap_btCollisionAlgorithm_processCollision(SwigcptrBtCollisionAlgorithm, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtCollisionAlgorithm) ProcessCollision(arg2 BtCollisionObjectWrapper, arg3 BtCollisionObjectWrapper, arg4 BtDispatcherInfo, arg5 BtManifoldResult) {
	_swig_wrap_btCollisionAlgorithm_processCollision(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btCollisionAlgorithm_calculateTimeOfImpact(SwigcptrBtCollisionAlgorithm, uintptr, uintptr, uintptr, uintptr) float32

func (arg1 SwigcptrBtCollisionAlgorithm) CalculateTimeOfImpact(arg2 BtCollisionObject, arg3 BtCollisionObject, arg4 BtDispatcherInfo, arg5 BtManifoldResult) float32 {
	return _swig_wrap_btCollisionAlgorithm_calculateTimeOfImpact(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btCollisionAlgorithm_getAllContactManifolds(SwigcptrBtCollisionAlgorithm, uintptr)

func (arg1 SwigcptrBtCollisionAlgorithm) GetAllContactManifolds(arg2 BtAlignedObjectArray_Sl_btPersistentManifold_Sm__Sg_) {
	_swig_wrap_btCollisionAlgorithm_getAllContactManifolds(arg1, arg2.Swigcptr())
}

type BtCollisionAlgorithm interface {
	Swigcptr() uintptr
	SwigIsBtCollisionAlgorithm()
	ProcessCollision(arg2 BtCollisionObjectWrapper, arg3 BtCollisionObjectWrapper, arg4 BtDispatcherInfo, arg5 BtManifoldResult)
	CalculateTimeOfImpact(arg2 BtCollisionObject, arg3 BtCollisionObject, arg4 BtDispatcherInfo, arg5 BtManifoldResult) float32
	GetAllContactManifolds(arg2 BtAlignedObjectArray_Sl_btPersistentManifold_Sm__Sg_)
}

type SwigcptrBtActivatingCollisionAlgorithm uintptr

func (p SwigcptrBtActivatingCollisionAlgorithm) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtActivatingCollisionAlgorithm) SwigIsBtActivatingCollisionAlgorithm() {
}

func _swig_wrap_delete_btActivatingCollisionAlgorithm(uintptr)

func DeleteBtActivatingCollisionAlgorithm(arg1 BtActivatingCollisionAlgorithm) {
	_swig_wrap_delete_btActivatingCollisionAlgorithm(arg1.Swigcptr())
}

func _swig_wrap_btActivatingCollisionAlgorithm_processCollision(SwigcptrBtActivatingCollisionAlgorithm, uintptr, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtActivatingCollisionAlgorithm) ProcessCollision(arg1 BtCollisionObjectWrapper, arg2 BtCollisionObjectWrapper, arg3 BtDispatcherInfo, arg4 BtManifoldResult) {
	_swig_wrap_btActivatingCollisionAlgorithm_processCollision(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btActivatingCollisionAlgorithm_calculateTimeOfImpact(SwigcptrBtActivatingCollisionAlgorithm, uintptr, uintptr, uintptr, uintptr) float32

func (_swig_base SwigcptrBtActivatingCollisionAlgorithm) CalculateTimeOfImpact(arg1 BtCollisionObject, arg2 BtCollisionObject, arg3 BtDispatcherInfo, arg4 BtManifoldResult) float32 {
	return _swig_wrap_btActivatingCollisionAlgorithm_calculateTimeOfImpact(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btActivatingCollisionAlgorithm_getAllContactManifolds(SwigcptrBtActivatingCollisionAlgorithm, uintptr)

func (_swig_base SwigcptrBtActivatingCollisionAlgorithm) GetAllContactManifolds(arg1 BtAlignedObjectArray_Sl_btPersistentManifold_Sm__Sg_) {
	_swig_wrap_btActivatingCollisionAlgorithm_getAllContactManifolds(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtActivatingCollisionAlgorithm) SwigIsBtCollisionAlgorithm() {
}

func (p SwigcptrBtActivatingCollisionAlgorithm) SwigGetBtCollisionAlgorithm() BtCollisionAlgorithm {
	return SwigcptrBtCollisionAlgorithm(p.Swigcptr())
}

type BtActivatingCollisionAlgorithm interface {
	Swigcptr() uintptr
	SwigIsBtActivatingCollisionAlgorithm()
	ProcessCollision(arg1 BtCollisionObjectWrapper, arg2 BtCollisionObjectWrapper, arg3 BtDispatcherInfo, arg4 BtManifoldResult)
	CalculateTimeOfImpact(arg1 BtCollisionObject, arg2 BtCollisionObject, arg3 BtDispatcherInfo, arg4 BtManifoldResult) float32
	GetAllContactManifolds(arg1 BtAlignedObjectArray_Sl_btPersistentManifold_Sm__Sg_)
	SwigIsBtCollisionAlgorithm()
	SwigGetBtCollisionAlgorithm() BtCollisionAlgorithm
}

type SwigcptrBtSphereSphereCollisionAlgorithm uintptr

func (p SwigcptrBtSphereSphereCollisionAlgorithm) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSphereSphereCollisionAlgorithm) SwigIsBtSphereSphereCollisionAlgorithm() {
}

func _swig_wrap_new_btSphereSphereCollisionAlgorithm__SWIG_0(uintptr, uintptr, uintptr, uintptr) SwigcptrBtSphereSphereCollisionAlgorithm

func NewBtSphereSphereCollisionAlgorithm__SWIG_0(arg1 BtPersistentManifold, arg2 BtCollisionAlgorithmConstructionInfo, arg3 BtCollisionObjectWrapper, arg4 BtCollisionObjectWrapper) BtSphereSphereCollisionAlgorithm {
	return _swig_wrap_new_btSphereSphereCollisionAlgorithm__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_new_btSphereSphereCollisionAlgorithm__SWIG_1(uintptr) SwigcptrBtSphereSphereCollisionAlgorithm

func NewBtSphereSphereCollisionAlgorithm__SWIG_1(arg1 BtCollisionAlgorithmConstructionInfo) BtSphereSphereCollisionAlgorithm {
	return _swig_wrap_new_btSphereSphereCollisionAlgorithm__SWIG_1(arg1.Swigcptr())
}

func NewBtSphereSphereCollisionAlgorithm(a ...interface{}) BtSphereSphereCollisionAlgorithm {
	argc := len(a)
	if argc == 1 {
		return NewBtSphereSphereCollisionAlgorithm__SWIG_1(a[0].(BtCollisionAlgorithmConstructionInfo))
	}
	if argc == 4 {
		return NewBtSphereSphereCollisionAlgorithm__SWIG_0(a[0].(BtPersistentManifold), a[1].(BtCollisionAlgorithmConstructionInfo), a[2].(BtCollisionObjectWrapper), a[3].(BtCollisionObjectWrapper))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSphereSphereCollisionAlgorithm_processCollision(SwigcptrBtSphereSphereCollisionAlgorithm, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtSphereSphereCollisionAlgorithm) ProcessCollision(arg2 BtCollisionObjectWrapper, arg3 BtCollisionObjectWrapper, arg4 BtDispatcherInfo, arg5 BtManifoldResult) {
	_swig_wrap_btSphereSphereCollisionAlgorithm_processCollision(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btSphereSphereCollisionAlgorithm_calculateTimeOfImpact(SwigcptrBtSphereSphereCollisionAlgorithm, uintptr, uintptr, uintptr, uintptr) float32

func (arg1 SwigcptrBtSphereSphereCollisionAlgorithm) CalculateTimeOfImpact(arg2 BtCollisionObject, arg3 BtCollisionObject, arg4 BtDispatcherInfo, arg5 BtManifoldResult) float32 {
	return _swig_wrap_btSphereSphereCollisionAlgorithm_calculateTimeOfImpact(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btSphereSphereCollisionAlgorithm_getAllContactManifolds(SwigcptrBtSphereSphereCollisionAlgorithm, uintptr)

func (arg1 SwigcptrBtSphereSphereCollisionAlgorithm) GetAllContactManifolds(arg2 BtAlignedObjectArray_Sl_btPersistentManifold_Sm__Sg_) {
	_swig_wrap_btSphereSphereCollisionAlgorithm_getAllContactManifolds(arg1, arg2.Swigcptr())
}

func _swig_wrap_delete_btSphereSphereCollisionAlgorithm(uintptr)

func DeleteBtSphereSphereCollisionAlgorithm(arg1 BtSphereSphereCollisionAlgorithm) {
	_swig_wrap_delete_btSphereSphereCollisionAlgorithm(arg1.Swigcptr())
}

func (p SwigcptrBtSphereSphereCollisionAlgorithm) SwigIsBtActivatingCollisionAlgorithm() {
}

func (p SwigcptrBtSphereSphereCollisionAlgorithm) SwigGetBtActivatingCollisionAlgorithm() BtActivatingCollisionAlgorithm {
	return SwigcptrBtActivatingCollisionAlgorithm(p.Swigcptr())
}

func (p SwigcptrBtSphereSphereCollisionAlgorithm) SwigIsBtCollisionAlgorithm() {
}

func (p SwigcptrBtSphereSphereCollisionAlgorithm) SwigGetBtCollisionAlgorithm() BtCollisionAlgorithm {
	return SwigcptrBtCollisionAlgorithm(p.Swigcptr())
}

type BtSphereSphereCollisionAlgorithm interface {
	Swigcptr() uintptr
	SwigIsBtSphereSphereCollisionAlgorithm()
	ProcessCollision(arg2 BtCollisionObjectWrapper, arg3 BtCollisionObjectWrapper, arg4 BtDispatcherInfo, arg5 BtManifoldResult)
	CalculateTimeOfImpact(arg2 BtCollisionObject, arg3 BtCollisionObject, arg4 BtDispatcherInfo, arg5 BtManifoldResult) float32
	GetAllContactManifolds(arg2 BtAlignedObjectArray_Sl_btPersistentManifold_Sm__Sg_)
	SwigIsBtActivatingCollisionAlgorithm()
	SwigGetBtActivatingCollisionAlgorithm() BtActivatingCollisionAlgorithm
	SwigIsBtCollisionAlgorithm()
	SwigGetBtCollisionAlgorithm() BtCollisionAlgorithm
}

type SwigcptrBtCollisionConfiguration uintptr

func (p SwigcptrBtCollisionConfiguration) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtCollisionConfiguration) SwigIsBtCollisionConfiguration() {
}

func _swig_wrap_delete_btCollisionConfiguration(uintptr)

func DeleteBtCollisionConfiguration(arg1 BtCollisionConfiguration) {
	_swig_wrap_delete_btCollisionConfiguration(arg1.Swigcptr())
}

func _swig_wrap_btCollisionConfiguration_getPersistentManifoldPool(SwigcptrBtCollisionConfiguration) SwigcptrBtPoolAllocator

func (arg1 SwigcptrBtCollisionConfiguration) GetPersistentManifoldPool() BtPoolAllocator {
	return _swig_wrap_btCollisionConfiguration_getPersistentManifoldPool(arg1)
}

func _swig_wrap_btCollisionConfiguration_getCollisionAlgorithmPool(SwigcptrBtCollisionConfiguration) SwigcptrBtPoolAllocator

func (arg1 SwigcptrBtCollisionConfiguration) GetCollisionAlgorithmPool() BtPoolAllocator {
	return _swig_wrap_btCollisionConfiguration_getCollisionAlgorithmPool(arg1)
}

func _swig_wrap_btCollisionConfiguration_getCollisionAlgorithmCreateFunc(SwigcptrBtCollisionConfiguration, int, int) SwigcptrBtCollisionAlgorithmCreateFunc

func (arg1 SwigcptrBtCollisionConfiguration) GetCollisionAlgorithmCreateFunc(arg2 int, arg3 int) BtCollisionAlgorithmCreateFunc {
	return _swig_wrap_btCollisionConfiguration_getCollisionAlgorithmCreateFunc(arg1, arg2, arg3)
}

type BtCollisionConfiguration interface {
	Swigcptr() uintptr
	SwigIsBtCollisionConfiguration()
	GetPersistentManifoldPool() BtPoolAllocator
	GetCollisionAlgorithmPool() BtPoolAllocator
	GetCollisionAlgorithmCreateFunc(arg2 int, arg3 int) BtCollisionAlgorithmCreateFunc
}

type SwigcptrBtDefaultCollisionConstructionInfo uintptr

func (p SwigcptrBtDefaultCollisionConstructionInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDefaultCollisionConstructionInfo) SwigIsBtDefaultCollisionConstructionInfo() {
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_persistentManifoldPool_set(SwigcptrBtDefaultCollisionConstructionInfo, uintptr)

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) SetM_persistentManifoldPool(arg2 BtPoolAllocator) {
	_swig_wrap_btDefaultCollisionConstructionInfo_m_persistentManifoldPool_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_persistentManifoldPool_get(SwigcptrBtDefaultCollisionConstructionInfo) SwigcptrBtPoolAllocator

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) GetM_persistentManifoldPool() BtPoolAllocator {
	return _swig_wrap_btDefaultCollisionConstructionInfo_m_persistentManifoldPool_get(arg1)
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_collisionAlgorithmPool_set(SwigcptrBtDefaultCollisionConstructionInfo, uintptr)

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) SetM_collisionAlgorithmPool(arg2 BtPoolAllocator) {
	_swig_wrap_btDefaultCollisionConstructionInfo_m_collisionAlgorithmPool_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_collisionAlgorithmPool_get(SwigcptrBtDefaultCollisionConstructionInfo) SwigcptrBtPoolAllocator

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) GetM_collisionAlgorithmPool() BtPoolAllocator {
	return _swig_wrap_btDefaultCollisionConstructionInfo_m_collisionAlgorithmPool_get(arg1)
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_defaultMaxPersistentManifoldPoolSize_set(SwigcptrBtDefaultCollisionConstructionInfo, int)

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) SetM_defaultMaxPersistentManifoldPoolSize(arg2 int) {
	_swig_wrap_btDefaultCollisionConstructionInfo_m_defaultMaxPersistentManifoldPoolSize_set(arg1, arg2)
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_defaultMaxPersistentManifoldPoolSize_get(SwigcptrBtDefaultCollisionConstructionInfo) int

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) GetM_defaultMaxPersistentManifoldPoolSize() int {
	return _swig_wrap_btDefaultCollisionConstructionInfo_m_defaultMaxPersistentManifoldPoolSize_get(arg1)
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_defaultMaxCollisionAlgorithmPoolSize_set(SwigcptrBtDefaultCollisionConstructionInfo, int)

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) SetM_defaultMaxCollisionAlgorithmPoolSize(arg2 int) {
	_swig_wrap_btDefaultCollisionConstructionInfo_m_defaultMaxCollisionAlgorithmPoolSize_set(arg1, arg2)
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_defaultMaxCollisionAlgorithmPoolSize_get(SwigcptrBtDefaultCollisionConstructionInfo) int

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) GetM_defaultMaxCollisionAlgorithmPoolSize() int {
	return _swig_wrap_btDefaultCollisionConstructionInfo_m_defaultMaxCollisionAlgorithmPoolSize_get(arg1)
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_customCollisionAlgorithmMaxElementSize_set(SwigcptrBtDefaultCollisionConstructionInfo, int)

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) SetM_customCollisionAlgorithmMaxElementSize(arg2 int) {
	_swig_wrap_btDefaultCollisionConstructionInfo_m_customCollisionAlgorithmMaxElementSize_set(arg1, arg2)
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_customCollisionAlgorithmMaxElementSize_get(SwigcptrBtDefaultCollisionConstructionInfo) int

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) GetM_customCollisionAlgorithmMaxElementSize() int {
	return _swig_wrap_btDefaultCollisionConstructionInfo_m_customCollisionAlgorithmMaxElementSize_get(arg1)
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_useEpaPenetrationAlgorithm_set(SwigcptrBtDefaultCollisionConstructionInfo, int)

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) SetM_useEpaPenetrationAlgorithm(arg2 int) {
	_swig_wrap_btDefaultCollisionConstructionInfo_m_useEpaPenetrationAlgorithm_set(arg1, arg2)
}

func _swig_wrap_btDefaultCollisionConstructionInfo_m_useEpaPenetrationAlgorithm_get(SwigcptrBtDefaultCollisionConstructionInfo) int

func (arg1 SwigcptrBtDefaultCollisionConstructionInfo) GetM_useEpaPenetrationAlgorithm() int {
	return _swig_wrap_btDefaultCollisionConstructionInfo_m_useEpaPenetrationAlgorithm_get(arg1)
}

func _swig_wrap_new_btDefaultCollisionConstructionInfo() SwigcptrBtDefaultCollisionConstructionInfo

func NewBtDefaultCollisionConstructionInfo() BtDefaultCollisionConstructionInfo {
	return _swig_wrap_new_btDefaultCollisionConstructionInfo()
}

func _swig_wrap_delete_btDefaultCollisionConstructionInfo(uintptr)

func DeleteBtDefaultCollisionConstructionInfo(arg1 BtDefaultCollisionConstructionInfo) {
	_swig_wrap_delete_btDefaultCollisionConstructionInfo(arg1.Swigcptr())
}

type BtDefaultCollisionConstructionInfo interface {
	Swigcptr() uintptr
	SwigIsBtDefaultCollisionConstructionInfo()
	SetM_persistentManifoldPool(arg2 BtPoolAllocator)
	GetM_persistentManifoldPool() BtPoolAllocator
	SetM_collisionAlgorithmPool(arg2 BtPoolAllocator)
	GetM_collisionAlgorithmPool() BtPoolAllocator
	SetM_defaultMaxPersistentManifoldPoolSize(arg2 int)
	GetM_defaultMaxPersistentManifoldPoolSize() int
	SetM_defaultMaxCollisionAlgorithmPoolSize(arg2 int)
	GetM_defaultMaxCollisionAlgorithmPoolSize() int
	SetM_customCollisionAlgorithmMaxElementSize(arg2 int)
	GetM_customCollisionAlgorithmMaxElementSize() int
	SetM_useEpaPenetrationAlgorithm(arg2 int)
	GetM_useEpaPenetrationAlgorithm() int
}

type SwigcptrBtDefaultCollisionConfiguration uintptr

func (p SwigcptrBtDefaultCollisionConfiguration) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDefaultCollisionConfiguration) SwigIsBtDefaultCollisionConfiguration() {
}

func _swig_wrap_new_btDefaultCollisionConfiguration__SWIG_0(uintptr) SwigcptrBtDefaultCollisionConfiguration

func NewBtDefaultCollisionConfiguration__SWIG_0(arg1 BtDefaultCollisionConstructionInfo) BtDefaultCollisionConfiguration {
	return _swig_wrap_new_btDefaultCollisionConfiguration__SWIG_0(arg1.Swigcptr())
}

func _swig_wrap_new_btDefaultCollisionConfiguration__SWIG_1() SwigcptrBtDefaultCollisionConfiguration

func NewBtDefaultCollisionConfiguration__SWIG_1() BtDefaultCollisionConfiguration {
	return _swig_wrap_new_btDefaultCollisionConfiguration__SWIG_1()
}

func NewBtDefaultCollisionConfiguration(a ...interface{}) BtDefaultCollisionConfiguration {
	argc := len(a)
	if argc == 0 {
		return NewBtDefaultCollisionConfiguration__SWIG_1()
	}
	if argc == 1 {
		return NewBtDefaultCollisionConfiguration__SWIG_0(a[0].(BtDefaultCollisionConstructionInfo))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_btDefaultCollisionConfiguration(uintptr)

func DeleteBtDefaultCollisionConfiguration(arg1 BtDefaultCollisionConfiguration) {
	_swig_wrap_delete_btDefaultCollisionConfiguration(arg1.Swigcptr())
}

func _swig_wrap_btDefaultCollisionConfiguration_getPersistentManifoldPool(SwigcptrBtDefaultCollisionConfiguration) SwigcptrBtPoolAllocator

func (arg1 SwigcptrBtDefaultCollisionConfiguration) GetPersistentManifoldPool() BtPoolAllocator {
	return _swig_wrap_btDefaultCollisionConfiguration_getPersistentManifoldPool(arg1)
}

func _swig_wrap_btDefaultCollisionConfiguration_getCollisionAlgorithmPool(SwigcptrBtDefaultCollisionConfiguration) SwigcptrBtPoolAllocator

func (arg1 SwigcptrBtDefaultCollisionConfiguration) GetCollisionAlgorithmPool() BtPoolAllocator {
	return _swig_wrap_btDefaultCollisionConfiguration_getCollisionAlgorithmPool(arg1)
}

func _swig_wrap_btDefaultCollisionConfiguration_getSimplexSolver(SwigcptrBtDefaultCollisionConfiguration) SwigcptrBtVoronoiSimplexSolver

func (arg1 SwigcptrBtDefaultCollisionConfiguration) GetSimplexSolver() BtVoronoiSimplexSolver {
	return _swig_wrap_btDefaultCollisionConfiguration_getSimplexSolver(arg1)
}

func _swig_wrap_btDefaultCollisionConfiguration_getCollisionAlgorithmCreateFunc(SwigcptrBtDefaultCollisionConfiguration, int, int) SwigcptrBtCollisionAlgorithmCreateFunc

func (arg1 SwigcptrBtDefaultCollisionConfiguration) GetCollisionAlgorithmCreateFunc(arg2 int, arg3 int) BtCollisionAlgorithmCreateFunc {
	return _swig_wrap_btDefaultCollisionConfiguration_getCollisionAlgorithmCreateFunc(arg1, arg2, arg3)
}

func _swig_wrap_btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_0(SwigcptrBtDefaultCollisionConfiguration, int, int)

func (arg1 SwigcptrBtDefaultCollisionConfiguration) SetConvexConvexMultipointIterations__SWIG_0(arg2 int, arg3 int) {
	_swig_wrap_btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_1(SwigcptrBtDefaultCollisionConfiguration, int)

func (arg1 SwigcptrBtDefaultCollisionConfiguration) SetConvexConvexMultipointIterations__SWIG_1(arg2 int) {
	_swig_wrap_btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_1(arg1, arg2)
}

func _swig_wrap_btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_2(SwigcptrBtDefaultCollisionConfiguration)

func (arg1 SwigcptrBtDefaultCollisionConfiguration) SetConvexConvexMultipointIterations__SWIG_2() {
	_swig_wrap_btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_2(arg1)
}

func (p SwigcptrBtDefaultCollisionConfiguration) SetConvexConvexMultipointIterations(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.SetConvexConvexMultipointIterations__SWIG_2()
		return
	}
	if argc == 1 {
		p.SetConvexConvexMultipointIterations__SWIG_1(a[0].(int))
		return
	}
	if argc == 2 {
		p.SetConvexConvexMultipointIterations__SWIG_0(a[0].(int), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_0(SwigcptrBtDefaultCollisionConfiguration, int, int)

func (arg1 SwigcptrBtDefaultCollisionConfiguration) SetPlaneConvexMultipointIterations__SWIG_0(arg2 int, arg3 int) {
	_swig_wrap_btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_1(SwigcptrBtDefaultCollisionConfiguration, int)

func (arg1 SwigcptrBtDefaultCollisionConfiguration) SetPlaneConvexMultipointIterations__SWIG_1(arg2 int) {
	_swig_wrap_btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_1(arg1, arg2)
}

func _swig_wrap_btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_2(SwigcptrBtDefaultCollisionConfiguration)

func (arg1 SwigcptrBtDefaultCollisionConfiguration) SetPlaneConvexMultipointIterations__SWIG_2() {
	_swig_wrap_btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_2(arg1)
}

func (p SwigcptrBtDefaultCollisionConfiguration) SetPlaneConvexMultipointIterations(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.SetPlaneConvexMultipointIterations__SWIG_2()
		return
	}
	if argc == 1 {
		p.SetPlaneConvexMultipointIterations__SWIG_1(a[0].(int))
		return
	}
	if argc == 2 {
		p.SetPlaneConvexMultipointIterations__SWIG_0(a[0].(int), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (p SwigcptrBtDefaultCollisionConfiguration) SwigIsBtCollisionConfiguration() {
}

func (p SwigcptrBtDefaultCollisionConfiguration) SwigGetBtCollisionConfiguration() BtCollisionConfiguration {
	return SwigcptrBtCollisionConfiguration(p.Swigcptr())
}

type BtDefaultCollisionConfiguration interface {
	Swigcptr() uintptr
	SwigIsBtDefaultCollisionConfiguration()
	GetPersistentManifoldPool() BtPoolAllocator
	GetCollisionAlgorithmPool() BtPoolAllocator
	GetSimplexSolver() BtVoronoiSimplexSolver
	GetCollisionAlgorithmCreateFunc(arg2 int, arg3 int) BtCollisionAlgorithmCreateFunc
	SetConvexConvexMultipointIterations(a ...interface{})
	SetPlaneConvexMultipointIterations(a ...interface{})
	SwigIsBtCollisionConfiguration()
	SwigGetBtCollisionConfiguration() BtCollisionConfiguration
}

type SwigcptrBtSimpleBroadphaseProxy uintptr

func (p SwigcptrBtSimpleBroadphaseProxy) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSimpleBroadphaseProxy) SwigIsBtSimpleBroadphaseProxy() {
}

func _swig_wrap_btSimpleBroadphaseProxy_m_nextFree_set(SwigcptrBtSimpleBroadphaseProxy, int)

func (arg1 SwigcptrBtSimpleBroadphaseProxy) SetM_nextFree(arg2 int) {
	_swig_wrap_btSimpleBroadphaseProxy_m_nextFree_set(arg1, arg2)
}

func _swig_wrap_btSimpleBroadphaseProxy_m_nextFree_get(SwigcptrBtSimpleBroadphaseProxy) int

func (arg1 SwigcptrBtSimpleBroadphaseProxy) GetM_nextFree() int {
	return _swig_wrap_btSimpleBroadphaseProxy_m_nextFree_get(arg1)
}

func _swig_wrap_new_btSimpleBroadphaseProxy__SWIG_0() SwigcptrBtSimpleBroadphaseProxy

func NewBtSimpleBroadphaseProxy__SWIG_0() BtSimpleBroadphaseProxy {
	return _swig_wrap_new_btSimpleBroadphaseProxy__SWIG_0()
}

func _swig_wrap_new_btSimpleBroadphaseProxy__SWIG_1(uintptr, uintptr, int, uintptr, int16, int16, uintptr) SwigcptrBtSimpleBroadphaseProxy

func NewBtSimpleBroadphaseProxy__SWIG_1(arg1 BtVector3, arg2 BtVector3, arg3 int, arg4 uintptr, arg5 int16, arg6 int16, arg7 uintptr) BtSimpleBroadphaseProxy {
	return _swig_wrap_new_btSimpleBroadphaseProxy__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4, arg5, arg6, arg7)
}

func NewBtSimpleBroadphaseProxy(a ...interface{}) BtSimpleBroadphaseProxy {
	argc := len(a)
	if argc == 0 {
		return NewBtSimpleBroadphaseProxy__SWIG_0()
	}
	if argc == 7 {
		return NewBtSimpleBroadphaseProxy__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(int), a[3].(uintptr), a[4].(int16), a[5].(int16), a[6].(uintptr))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleBroadphaseProxy_SetNextFree(SwigcptrBtSimpleBroadphaseProxy, int)

func (arg1 SwigcptrBtSimpleBroadphaseProxy) SetNextFree(arg2 int) {
	_swig_wrap_btSimpleBroadphaseProxy_SetNextFree(arg1, arg2)
}

func _swig_wrap_btSimpleBroadphaseProxy_GetNextFree(SwigcptrBtSimpleBroadphaseProxy) int

func (arg1 SwigcptrBtSimpleBroadphaseProxy) GetNextFree() int {
	return _swig_wrap_btSimpleBroadphaseProxy_GetNextFree(arg1)
}

func _swig_wrap_delete_btSimpleBroadphaseProxy(uintptr)

func DeleteBtSimpleBroadphaseProxy(arg1 BtSimpleBroadphaseProxy) {
	_swig_wrap_delete_btSimpleBroadphaseProxy(arg1.Swigcptr())
}

func _swig_wrap_SetbtSimpleBroadphaseProxy_M_clientObject(SwigcptrBtSimpleBroadphaseProxy, uintptr)

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) SetM_clientObject(arg1 uintptr) {
	_swig_wrap_SetbtSimpleBroadphaseProxy_M_clientObject(_swig_base, arg1)
}

func _swig_wrap_GetbtSimpleBroadphaseProxy_M_clientObject(SwigcptrBtSimpleBroadphaseProxy) uintptr

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) GetM_clientObject() uintptr {
	return _swig_wrap_GetbtSimpleBroadphaseProxy_M_clientObject(_swig_base)
}

func _swig_wrap_SetbtSimpleBroadphaseProxy_M_collisionFilterGroup(SwigcptrBtSimpleBroadphaseProxy, int16)

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) SetM_collisionFilterGroup(arg1 int16) {
	_swig_wrap_SetbtSimpleBroadphaseProxy_M_collisionFilterGroup(_swig_base, arg1)
}

func _swig_wrap_GetbtSimpleBroadphaseProxy_M_collisionFilterGroup(SwigcptrBtSimpleBroadphaseProxy) int16

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) GetM_collisionFilterGroup() int16 {
	return _swig_wrap_GetbtSimpleBroadphaseProxy_M_collisionFilterGroup(_swig_base)
}

func _swig_wrap_SetbtSimpleBroadphaseProxy_M_collisionFilterMask(SwigcptrBtSimpleBroadphaseProxy, int16)

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) SetM_collisionFilterMask(arg1 int16) {
	_swig_wrap_SetbtSimpleBroadphaseProxy_M_collisionFilterMask(_swig_base, arg1)
}

func _swig_wrap_GetbtSimpleBroadphaseProxy_M_collisionFilterMask(SwigcptrBtSimpleBroadphaseProxy) int16

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) GetM_collisionFilterMask() int16 {
	return _swig_wrap_GetbtSimpleBroadphaseProxy_M_collisionFilterMask(_swig_base)
}

func _swig_wrap_SetbtSimpleBroadphaseProxy_M_multiSapParentProxy(SwigcptrBtSimpleBroadphaseProxy, uintptr)

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) SetM_multiSapParentProxy(arg1 uintptr) {
	_swig_wrap_SetbtSimpleBroadphaseProxy_M_multiSapParentProxy(_swig_base, arg1)
}

func _swig_wrap_GetbtSimpleBroadphaseProxy_M_multiSapParentProxy(SwigcptrBtSimpleBroadphaseProxy) uintptr

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) GetM_multiSapParentProxy() uintptr {
	return _swig_wrap_GetbtSimpleBroadphaseProxy_M_multiSapParentProxy(_swig_base)
}

func _swig_wrap_SetbtSimpleBroadphaseProxy_M_uniqueId(SwigcptrBtSimpleBroadphaseProxy, int)

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) SetM_uniqueId(arg1 int) {
	_swig_wrap_SetbtSimpleBroadphaseProxy_M_uniqueId(_swig_base, arg1)
}

func _swig_wrap_GetbtSimpleBroadphaseProxy_M_uniqueId(SwigcptrBtSimpleBroadphaseProxy) int

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) GetM_uniqueId() int {
	return _swig_wrap_GetbtSimpleBroadphaseProxy_M_uniqueId(_swig_base)
}

func _swig_wrap_SetbtSimpleBroadphaseProxy_M_aabbMin(SwigcptrBtSimpleBroadphaseProxy, uintptr)

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) SetM_aabbMin(arg1 BtVector3) {
	_swig_wrap_SetbtSimpleBroadphaseProxy_M_aabbMin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_GetbtSimpleBroadphaseProxy_M_aabbMin(SwigcptrBtSimpleBroadphaseProxy) SwigcptrBtVector3

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) GetM_aabbMin() BtVector3 {
	return _swig_wrap_GetbtSimpleBroadphaseProxy_M_aabbMin(_swig_base)
}

func _swig_wrap_SetbtSimpleBroadphaseProxy_M_aabbMax(SwigcptrBtSimpleBroadphaseProxy, uintptr)

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) SetM_aabbMax(arg1 BtVector3) {
	_swig_wrap_SetbtSimpleBroadphaseProxy_M_aabbMax(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_GetbtSimpleBroadphaseProxy_M_aabbMax(SwigcptrBtSimpleBroadphaseProxy) SwigcptrBtVector3

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) GetM_aabbMax() BtVector3 {
	return _swig_wrap_GetbtSimpleBroadphaseProxy_M_aabbMax(_swig_base)
}

func _swig_wrap_btSimpleBroadphaseProxy_getUid(SwigcptrBtSimpleBroadphaseProxy) int

func (_swig_base SwigcptrBtSimpleBroadphaseProxy) GetUid() int {
	return _swig_wrap_btSimpleBroadphaseProxy_getUid(_swig_base)
}

func BtSimpleBroadphaseProxyIsPolyhedral(int) bool
func BtSimpleBroadphaseProxyIsConvex(int) bool
func BtSimpleBroadphaseProxyIsNonMoving(int) bool
func BtSimpleBroadphaseProxyIsConcave(int) bool
func BtSimpleBroadphaseProxyIsCompound(int) bool
func BtSimpleBroadphaseProxyIsSoftBody(int) bool
func BtSimpleBroadphaseProxyIsInfinite(int) bool
func BtSimpleBroadphaseProxyIsConvex2d(int) bool
func (p SwigcptrBtSimpleBroadphaseProxy) SwigIsBtBroadphaseProxy() {
}

func (p SwigcptrBtSimpleBroadphaseProxy) SwigGetBtBroadphaseProxy() BtBroadphaseProxy {
	return SwigcptrBtBroadphaseProxy(p.Swigcptr())
}

type BtSimpleBroadphaseProxy interface {
	Swigcptr() uintptr
	SwigIsBtSimpleBroadphaseProxy()
	SetM_nextFree(arg2 int)
	GetM_nextFree() int
	SetNextFree(arg2 int)
	GetNextFree() int
	SetM_clientObject(arg1 uintptr)
	GetM_clientObject() uintptr
	SetM_collisionFilterGroup(arg1 int16)
	GetM_collisionFilterGroup() int16
	SetM_collisionFilterMask(arg1 int16)
	GetM_collisionFilterMask() int16
	SetM_multiSapParentProxy(arg1 uintptr)
	GetM_multiSapParentProxy() uintptr
	SetM_uniqueId(arg1 int)
	GetM_uniqueId() int
	SetM_aabbMin(arg1 BtVector3)
	GetM_aabbMin() BtVector3
	SetM_aabbMax(arg1 BtVector3)
	GetM_aabbMax() BtVector3
	GetUid() int
	SwigIsBtBroadphaseProxy()
	SwigGetBtBroadphaseProxy() BtBroadphaseProxy
}

type SwigcptrBtSimpleBroadphase uintptr

func (p SwigcptrBtSimpleBroadphase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSimpleBroadphase) SwigIsBtSimpleBroadphase() {
}

func _swig_wrap_new_btSimpleBroadphase__SWIG_0(int, uintptr) SwigcptrBtSimpleBroadphase

func NewBtSimpleBroadphase__SWIG_0(arg1 int, arg2 BtOverlappingPairCache) BtSimpleBroadphase {
	return _swig_wrap_new_btSimpleBroadphase__SWIG_0(arg1, arg2.Swigcptr())
}

func _swig_wrap_new_btSimpleBroadphase__SWIG_1(int) SwigcptrBtSimpleBroadphase

func NewBtSimpleBroadphase__SWIG_1(arg1 int) BtSimpleBroadphase {
	return _swig_wrap_new_btSimpleBroadphase__SWIG_1(arg1)
}

func _swig_wrap_new_btSimpleBroadphase__SWIG_2() SwigcptrBtSimpleBroadphase

func NewBtSimpleBroadphase__SWIG_2() BtSimpleBroadphase {
	return _swig_wrap_new_btSimpleBroadphase__SWIG_2()
}

func NewBtSimpleBroadphase(a ...interface{}) BtSimpleBroadphase {
	argc := len(a)
	if argc == 0 {
		return NewBtSimpleBroadphase__SWIG_2()
	}
	if argc == 1 {
		return NewBtSimpleBroadphase__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return NewBtSimpleBroadphase__SWIG_0(a[0].(int), a[1].(BtOverlappingPairCache))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_btSimpleBroadphase(uintptr)

func DeleteBtSimpleBroadphase(arg1 BtSimpleBroadphase) {
	_swig_wrap_delete_btSimpleBroadphase(arg1.Swigcptr())
}

func _swig_wrap_btSimpleBroadphase_aabbOverlap(uintptr, uintptr) bool

func BtSimpleBroadphaseAabbOverlap(arg1 BtSimpleBroadphaseProxy, arg2 BtSimpleBroadphaseProxy) bool {
	return _swig_wrap_btSimpleBroadphase_aabbOverlap(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btSimpleBroadphase_createProxy(SwigcptrBtSimpleBroadphase, uintptr, uintptr, int, uintptr, int16, int16, uintptr, uintptr) SwigcptrBtBroadphaseProxy

func (arg1 SwigcptrBtSimpleBroadphase) CreateProxy(arg2 BtVector3, arg3 BtVector3, arg4 int, arg5 uintptr, arg6 int16, arg7 int16, arg8 BtDispatcher, arg9 uintptr) BtBroadphaseProxy {
	return _swig_wrap_btSimpleBroadphase_createProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5, arg6, arg7, arg8.Swigcptr(), arg9)
}

func _swig_wrap_btSimpleBroadphase_calculateOverlappingPairs(SwigcptrBtSimpleBroadphase, uintptr)

func (arg1 SwigcptrBtSimpleBroadphase) CalculateOverlappingPairs(arg2 BtDispatcher) {
	_swig_wrap_btSimpleBroadphase_calculateOverlappingPairs(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSimpleBroadphase_destroyProxy(SwigcptrBtSimpleBroadphase, uintptr, uintptr)

func (arg1 SwigcptrBtSimpleBroadphase) DestroyProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btSimpleBroadphase_destroyProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSimpleBroadphase_setAabb(SwigcptrBtSimpleBroadphase, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtSimpleBroadphase) SetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3, arg5 BtDispatcher) {
	_swig_wrap_btSimpleBroadphase_setAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btSimpleBroadphase_getAabb(SwigcptrBtSimpleBroadphase, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtSimpleBroadphase) GetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btSimpleBroadphase_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btSimpleBroadphase_rayTest__SWIG_0(SwigcptrBtSimpleBroadphase, uintptr, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtSimpleBroadphase) RayTest__SWIG_0(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btSimpleBroadphase_rayTest__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btSimpleBroadphase_rayTest__SWIG_1(SwigcptrBtSimpleBroadphase, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtSimpleBroadphase) RayTest__SWIG_1(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback, arg5 BtVector3) {
	_swig_wrap_btSimpleBroadphase_rayTest__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btSimpleBroadphase_rayTest__SWIG_2(SwigcptrBtSimpleBroadphase, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtSimpleBroadphase) RayTest__SWIG_2(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback) {
	_swig_wrap_btSimpleBroadphase_rayTest__SWIG_2(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func (p SwigcptrBtSimpleBroadphase) RayTest(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.RayTest__SWIG_2(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback))
		return
	}
	if argc == 4 {
		p.RayTest__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback), a[3].(BtVector3))
		return
	}
	if argc == 5 {
		p.RayTest__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback), a[3].(BtVector3), a[4].(BtVector3))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleBroadphase_aabbTest(SwigcptrBtSimpleBroadphase, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtSimpleBroadphase) AabbTest(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseAabbCallback) {
	_swig_wrap_btSimpleBroadphase_aabbTest(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btSimpleBroadphase_getOverlappingPairCache__SWIG_0(SwigcptrBtSimpleBroadphase) SwigcptrBtOverlappingPairCache

func (arg1 SwigcptrBtSimpleBroadphase) GetOverlappingPairCache__SWIG_0() BtOverlappingPairCache {
	return _swig_wrap_btSimpleBroadphase_getOverlappingPairCache__SWIG_0(arg1)
}

func _swig_wrap_btSimpleBroadphase_getOverlappingPairCache__SWIG_1(SwigcptrBtSimpleBroadphase) SwigcptrBtOverlappingPairCache

func (arg1 SwigcptrBtSimpleBroadphase) GetOverlappingPairCache__SWIG_1() BtOverlappingPairCache {
	return _swig_wrap_btSimpleBroadphase_getOverlappingPairCache__SWIG_1(arg1)
}

func (p SwigcptrBtSimpleBroadphase) GetOverlappingPairCache(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetOverlappingPairCache__SWIG_0()
	}
	if argc == 0 {
		return p.GetOverlappingPairCache__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleBroadphase_testAabbOverlap(SwigcptrBtSimpleBroadphase, uintptr, uintptr) bool

func (arg1 SwigcptrBtSimpleBroadphase) TestAabbOverlap(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) bool {
	return _swig_wrap_btSimpleBroadphase_testAabbOverlap(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSimpleBroadphase_getBroadphaseAabb(SwigcptrBtSimpleBroadphase, uintptr, uintptr)

func (arg1 SwigcptrBtSimpleBroadphase) GetBroadphaseAabb(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btSimpleBroadphase_getBroadphaseAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSimpleBroadphase_printStats(SwigcptrBtSimpleBroadphase)

func (arg1 SwigcptrBtSimpleBroadphase) PrintStats() {
	_swig_wrap_btSimpleBroadphase_printStats(arg1)
}

func _swig_wrap_btSimpleBroadphase_resetPool(SwigcptrBtSimpleBroadphase, uintptr)

func (_swig_base SwigcptrBtSimpleBroadphase) ResetPool(arg1 BtDispatcher) {
	_swig_wrap_btSimpleBroadphase_resetPool(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtSimpleBroadphase) SwigIsBtBroadphaseInterface() {
}

func (p SwigcptrBtSimpleBroadphase) SwigGetBtBroadphaseInterface() BtBroadphaseInterface {
	return SwigcptrBtBroadphaseInterface(p.Swigcptr())
}

type BtSimpleBroadphase interface {
	Swigcptr() uintptr
	SwigIsBtSimpleBroadphase()
	CreateProxy(arg2 BtVector3, arg3 BtVector3, arg4 int, arg5 uintptr, arg6 int16, arg7 int16, arg8 BtDispatcher, arg9 uintptr) BtBroadphaseProxy
	CalculateOverlappingPairs(arg2 BtDispatcher)
	DestroyProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
	SetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3, arg5 BtDispatcher)
	GetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3)
	RayTest(a ...interface{})
	AabbTest(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseAabbCallback)
	GetOverlappingPairCache(a ...interface{}) interface{}
	TestAabbOverlap(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) bool
	GetBroadphaseAabb(arg2 BtVector3, arg3 BtVector3)
	PrintStats()
	ResetPool(arg1 BtDispatcher)
	SwigIsBtBroadphaseInterface()
	SwigGetBtBroadphaseInterface() BtBroadphaseInterface
}

const DBVT_IMPL_GENERIC int = 0
const DBVT_IMPL_SSE int = 1
const DBVT_USE_TEMPLATE int = 0
const DBVT_USE_INTRINSIC_SSE int = 1
const DBVT_USE_MEMMOVE int = 1
const DBVT_ENABLE_BENCHMARK int = 0
const DBVT_SELECT_IMPL int = 0
const DBVT_MERGE_IMPL int = 0
const DBVT_INT0_IMPL int = 0

type SwigcptrBtDbvtAabbMm uintptr

func (p SwigcptrBtDbvtAabbMm) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDbvtAabbMm) SwigIsBtDbvtAabbMm() {
}

func _swig_wrap_btDbvtAabbMm_Center(SwigcptrBtDbvtAabbMm) SwigcptrBtVector3

func (arg1 SwigcptrBtDbvtAabbMm) Center() BtVector3 {
	return _swig_wrap_btDbvtAabbMm_Center(arg1)
}

func _swig_wrap_btDbvtAabbMm_Lengths(SwigcptrBtDbvtAabbMm) SwigcptrBtVector3

func (arg1 SwigcptrBtDbvtAabbMm) Lengths() BtVector3 {
	return _swig_wrap_btDbvtAabbMm_Lengths(arg1)
}

func _swig_wrap_btDbvtAabbMm_Extents(SwigcptrBtDbvtAabbMm) SwigcptrBtVector3

func (arg1 SwigcptrBtDbvtAabbMm) Extents() BtVector3 {
	return _swig_wrap_btDbvtAabbMm_Extents(arg1)
}

func _swig_wrap_btDbvtAabbMm_Mins(SwigcptrBtDbvtAabbMm) SwigcptrBtVector3

func (arg1 SwigcptrBtDbvtAabbMm) Mins() BtVector3 {
	return _swig_wrap_btDbvtAabbMm_Mins(arg1)
}

func _swig_wrap_btDbvtAabbMm_Maxs(SwigcptrBtDbvtAabbMm) SwigcptrBtVector3

func (arg1 SwigcptrBtDbvtAabbMm) Maxs() BtVector3 {
	return _swig_wrap_btDbvtAabbMm_Maxs(arg1)
}

func _swig_wrap_btDbvtAabbMm_FromCE(uintptr, uintptr) SwigcptrBtDbvtAabbMm

func BtDbvtAabbMmFromCE(arg1 BtVector3, arg2 BtVector3) BtDbvtAabbMm {
	return _swig_wrap_btDbvtAabbMm_FromCE(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btDbvtAabbMm_FromCR(uintptr, float32) SwigcptrBtDbvtAabbMm

func BtDbvtAabbMmFromCR(arg1 BtVector3, arg2 float32) BtDbvtAabbMm {
	return _swig_wrap_btDbvtAabbMm_FromCR(arg1.Swigcptr(), arg2)
}

func _swig_wrap_btDbvtAabbMm_FromMM(uintptr, uintptr) SwigcptrBtDbvtAabbMm

func BtDbvtAabbMmFromMM(arg1 BtVector3, arg2 BtVector3) BtDbvtAabbMm {
	return _swig_wrap_btDbvtAabbMm_FromMM(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btDbvtAabbMm_FromPoints__SWIG_0(uintptr, int) SwigcptrBtDbvtAabbMm

func BtDbvtAabbMmFromPoints__SWIG_0(arg1 BtVector3, arg2 int) BtDbvtAabbMm {
	return _swig_wrap_btDbvtAabbMm_FromPoints__SWIG_0(arg1.Swigcptr(), arg2)
}

func _swig_wrap_btDbvtAabbMm_FromPoints__SWIG_1(uintptr, int) SwigcptrBtDbvtAabbMm

func BtDbvtAabbMmFromPoints__SWIG_1(arg1 BtVector3, arg2 int) BtDbvtAabbMm {
	return _swig_wrap_btDbvtAabbMm_FromPoints__SWIG_1(arg1.Swigcptr(), arg2)
}

func BtDbvtAabbMmFromPoints(a ...interface{}) BtDbvtAabbMm {
	argc := len(a)
	if argc == 2 {
		return BtDbvtAabbMmFromPoints__SWIG_0(a[0].(BtVector3), a[1].(int))
	}
	if argc == 2 {
		return BtDbvtAabbMmFromPoints__SWIG_1(a[0].(BtVector3), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDbvtAabbMm_Expand(SwigcptrBtDbvtAabbMm, uintptr)

func (arg1 SwigcptrBtDbvtAabbMm) Expand(arg2 BtVector3) {
	_swig_wrap_btDbvtAabbMm_Expand(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtAabbMm_SignedExpand(SwigcptrBtDbvtAabbMm, uintptr)

func (arg1 SwigcptrBtDbvtAabbMm) SignedExpand(arg2 BtVector3) {
	_swig_wrap_btDbvtAabbMm_SignedExpand(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtAabbMm_Contain(SwigcptrBtDbvtAabbMm, uintptr) bool

func (arg1 SwigcptrBtDbvtAabbMm) Contain(arg2 BtDbvtAabbMm) bool {
	return _swig_wrap_btDbvtAabbMm_Contain(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtAabbMm_Classify(SwigcptrBtDbvtAabbMm, uintptr, float32, int) int

func (arg1 SwigcptrBtDbvtAabbMm) Classify(arg2 BtVector3, arg3 float32, arg4 int) int {
	return _swig_wrap_btDbvtAabbMm_Classify(arg1, arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btDbvtAabbMm_ProjectMinimum(SwigcptrBtDbvtAabbMm, uintptr, uint) float32

func (arg1 SwigcptrBtDbvtAabbMm) ProjectMinimum(arg2 BtVector3, arg3 uint) float32 {
	return _swig_wrap_btDbvtAabbMm_ProjectMinimum(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_Intersect__SWIG_0(uintptr, uintptr) bool

func Intersect__SWIG_0(arg1 BtDbvtAabbMm, arg2 BtDbvtAabbMm) bool {
	return _swig_wrap_Intersect__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_Intersect__SWIG_1(uintptr, uintptr) bool

func Intersect__SWIG_1(arg1 BtDbvtAabbMm, arg2 BtVector3) bool {
	return _swig_wrap_Intersect__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr())
}

func Intersect(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(SwigcptrBtDbvtAabbMm); !ok {
			goto check_1
		}
		return Intersect__SWIG_0(a[0].(BtDbvtAabbMm), a[1].(BtDbvtAabbMm))
	}
check_1:
	if argc == 2 {
		return Intersect__SWIG_1(a[0].(BtDbvtAabbMm), a[1].(BtVector3))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Proximity(uintptr, uintptr) float32

func Proximity(arg1 BtDbvtAabbMm, arg2 BtDbvtAabbMm) float32 {
	return _swig_wrap_Proximity(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_Select(uintptr, uintptr, uintptr) int

func Select(arg1 BtDbvtAabbMm, arg2 BtDbvtAabbMm, arg3 BtDbvtAabbMm) int {
	return _swig_wrap_Select(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_Merge(uintptr, uintptr, uintptr)

func Merge(arg1 BtDbvtAabbMm, arg2 BtDbvtAabbMm, arg3 BtDbvtAabbMm) {
	_swig_wrap_Merge(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_NotEqual(uintptr, uintptr) bool

func NotEqual(arg1 BtDbvtAabbMm, arg2 BtDbvtAabbMm) bool {
	return _swig_wrap_NotEqual(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btDbvtAabbMm_tMins(SwigcptrBtDbvtAabbMm) SwigcptrBtVector3

func (arg1 SwigcptrBtDbvtAabbMm) TMins() BtVector3 {
	return _swig_wrap_btDbvtAabbMm_tMins(arg1)
}

func _swig_wrap_btDbvtAabbMm_tMaxs(SwigcptrBtDbvtAabbMm) SwigcptrBtVector3

func (arg1 SwigcptrBtDbvtAabbMm) TMaxs() BtVector3 {
	return _swig_wrap_btDbvtAabbMm_tMaxs(arg1)
}

func _swig_wrap_new_btDbvtAabbMm() SwigcptrBtDbvtAabbMm

func NewBtDbvtAabbMm() BtDbvtAabbMm {
	return _swig_wrap_new_btDbvtAabbMm()
}

func _swig_wrap_delete_btDbvtAabbMm(uintptr)

func DeleteBtDbvtAabbMm(arg1 BtDbvtAabbMm) {
	_swig_wrap_delete_btDbvtAabbMm(arg1.Swigcptr())
}

type BtDbvtAabbMm interface {
	Swigcptr() uintptr
	SwigIsBtDbvtAabbMm()
	Center() BtVector3
	Lengths() BtVector3
	Extents() BtVector3
	Mins() BtVector3
	Maxs() BtVector3
	Expand(arg2 BtVector3)
	SignedExpand(arg2 BtVector3)
	Contain(arg2 BtDbvtAabbMm) bool
	Classify(arg2 BtVector3, arg3 float32, arg4 int) int
	ProjectMinimum(arg2 BtVector3, arg3 uint) float32
	TMins() BtVector3
	TMaxs() BtVector3
}

type SwigcptrBtDbvtNode uintptr

func (p SwigcptrBtDbvtNode) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDbvtNode) SwigIsBtDbvtNode() {
}

func _swig_wrap_btDbvtNode_volume_set(SwigcptrBtDbvtNode, uintptr)

func (arg1 SwigcptrBtDbvtNode) SetVolume(arg2 BtDbvtAabbMm) {
	_swig_wrap_btDbvtNode_volume_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtNode_volume_get(SwigcptrBtDbvtNode) SwigcptrBtDbvtAabbMm

func (arg1 SwigcptrBtDbvtNode) GetVolume() BtDbvtAabbMm {
	return _swig_wrap_btDbvtNode_volume_get(arg1)
}

func _swig_wrap_btDbvtNode_parent_set(SwigcptrBtDbvtNode, uintptr)

func (arg1 SwigcptrBtDbvtNode) SetParent(arg2 BtDbvtNode) {
	_swig_wrap_btDbvtNode_parent_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtNode_parent_get(SwigcptrBtDbvtNode) SwigcptrBtDbvtNode

func (arg1 SwigcptrBtDbvtNode) GetParent() BtDbvtNode {
	return _swig_wrap_btDbvtNode_parent_get(arg1)
}

func _swig_wrap_btDbvtNode_isleaf(SwigcptrBtDbvtNode) bool

func (arg1 SwigcptrBtDbvtNode) Isleaf() bool {
	return _swig_wrap_btDbvtNode_isleaf(arg1)
}

func _swig_wrap_btDbvtNode_isinternal(SwigcptrBtDbvtNode) bool

func (arg1 SwigcptrBtDbvtNode) Isinternal() bool {
	return _swig_wrap_btDbvtNode_isinternal(arg1)
}

func _swig_wrap_new_btDbvtNode() SwigcptrBtDbvtNode

func NewBtDbvtNode() BtDbvtNode {
	return _swig_wrap_new_btDbvtNode()
}

func _swig_wrap_delete_btDbvtNode(uintptr)

func DeleteBtDbvtNode(arg1 BtDbvtNode) {
	_swig_wrap_delete_btDbvtNode(arg1.Swigcptr())
}

type BtDbvtNode interface {
	Swigcptr() uintptr
	SwigIsBtDbvtNode()
	SetVolume(arg2 BtDbvtAabbMm)
	GetVolume() BtDbvtAabbMm
	SetParent(arg2 BtDbvtNode)
	GetParent() BtDbvtNode
	Isleaf() bool
	Isinternal() bool
}

type SwigcptrBtDbvt uintptr

func (p SwigcptrBtDbvt) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDbvt) SwigIsBtDbvt() {
}

func _swig_getbtDbvt_SIMPLE_STACKSIZE_btDbvt() int

var BtDbvtSIMPLE_STACKSIZE int = _swig_getbtDbvt_SIMPLE_STACKSIZE_btDbvt()

func _swig_getbtDbvt_DOUBLE_STACKSIZE_btDbvt() int

var BtDbvtDOUBLE_STACKSIZE int = _swig_getbtDbvt_DOUBLE_STACKSIZE_btDbvt()

func _swig_wrap_btDbvt_m_root_set(SwigcptrBtDbvt, uintptr)

func (arg1 SwigcptrBtDbvt) SetM_root(arg2 BtDbvtNode) {
	_swig_wrap_btDbvt_m_root_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvt_m_root_get(SwigcptrBtDbvt) SwigcptrBtDbvtNode

func (arg1 SwigcptrBtDbvt) GetM_root() BtDbvtNode {
	return _swig_wrap_btDbvt_m_root_get(arg1)
}

func _swig_wrap_btDbvt_m_free_set(SwigcptrBtDbvt, uintptr)

func (arg1 SwigcptrBtDbvt) SetM_free(arg2 BtDbvtNode) {
	_swig_wrap_btDbvt_m_free_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvt_m_free_get(SwigcptrBtDbvt) SwigcptrBtDbvtNode

func (arg1 SwigcptrBtDbvt) GetM_free() BtDbvtNode {
	return _swig_wrap_btDbvt_m_free_get(arg1)
}

func _swig_wrap_btDbvt_m_lkhd_set(SwigcptrBtDbvt, int)

func (arg1 SwigcptrBtDbvt) SetM_lkhd(arg2 int) {
	_swig_wrap_btDbvt_m_lkhd_set(arg1, arg2)
}

func _swig_wrap_btDbvt_m_lkhd_get(SwigcptrBtDbvt) int

func (arg1 SwigcptrBtDbvt) GetM_lkhd() int {
	return _swig_wrap_btDbvt_m_lkhd_get(arg1)
}

func _swig_wrap_btDbvt_m_leaves_set(SwigcptrBtDbvt, int)

func (arg1 SwigcptrBtDbvt) SetM_leaves(arg2 int) {
	_swig_wrap_btDbvt_m_leaves_set(arg1, arg2)
}

func _swig_wrap_btDbvt_m_leaves_get(SwigcptrBtDbvt) int

func (arg1 SwigcptrBtDbvt) GetM_leaves() int {
	return _swig_wrap_btDbvt_m_leaves_get(arg1)
}

func _swig_wrap_btDbvt_m_opath_set(SwigcptrBtDbvt, uint)

func (arg1 SwigcptrBtDbvt) SetM_opath(arg2 uint) {
	_swig_wrap_btDbvt_m_opath_set(arg1, arg2)
}

func _swig_wrap_btDbvt_m_opath_get(SwigcptrBtDbvt) uint

func (arg1 SwigcptrBtDbvt) GetM_opath() uint {
	return _swig_wrap_btDbvt_m_opath_get(arg1)
}

func _swig_wrap_btDbvt_m_stkStack_set(SwigcptrBtDbvt, uintptr)

func (arg1 SwigcptrBtDbvt) SetM_stkStack(arg2 BtAlignedObjectArray_Sl_sStkNN_Sg_) {
	_swig_wrap_btDbvt_m_stkStack_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvt_m_stkStack_get(SwigcptrBtDbvt) SwigcptrBtAlignedObjectArray_Sl_sStkNN_Sg_

func (arg1 SwigcptrBtDbvt) GetM_stkStack() BtAlignedObjectArray_Sl_sStkNN_Sg_ {
	return _swig_wrap_btDbvt_m_stkStack_get(arg1)
}

func _swig_wrap_btDbvt_m_rayTestStack_set(SwigcptrBtDbvt, uintptr)

func (arg1 SwigcptrBtDbvt) SetM_rayTestStack(arg2 BtAlignedObjectArray_Sl_btDbvtNode_SS_const_Sm__Sg_) {
	_swig_wrap_btDbvt_m_rayTestStack_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvt_m_rayTestStack_get(SwigcptrBtDbvt) SwigcptrBtAlignedObjectArray_Sl_btDbvtNode_SS_const_Sm__Sg_

func (arg1 SwigcptrBtDbvt) GetM_rayTestStack() BtAlignedObjectArray_Sl_btDbvtNode_SS_const_Sm__Sg_ {
	return _swig_wrap_btDbvt_m_rayTestStack_get(arg1)
}

func _swig_wrap_new_btDbvt() SwigcptrBtDbvt

func NewBtDbvt() BtDbvt {
	return _swig_wrap_new_btDbvt()
}

func _swig_wrap_delete_btDbvt(uintptr)

func DeleteBtDbvt(arg1 BtDbvt) {
	_swig_wrap_delete_btDbvt(arg1.Swigcptr())
}

func _swig_wrap_btDbvt_clear(SwigcptrBtDbvt)

func (arg1 SwigcptrBtDbvt) Clear() {
	_swig_wrap_btDbvt_clear(arg1)
}

func _swig_wrap_btDbvt_empty(SwigcptrBtDbvt) bool

func (arg1 SwigcptrBtDbvt) Empty() bool {
	return _swig_wrap_btDbvt_empty(arg1)
}

func _swig_wrap_btDbvt_optimizeBottomUp(SwigcptrBtDbvt)

func (arg1 SwigcptrBtDbvt) OptimizeBottomUp() {
	_swig_wrap_btDbvt_optimizeBottomUp(arg1)
}

func _swig_wrap_btDbvt_optimizeTopDown__SWIG_0(SwigcptrBtDbvt, int)

func (arg1 SwigcptrBtDbvt) OptimizeTopDown__SWIG_0(arg2 int) {
	_swig_wrap_btDbvt_optimizeTopDown__SWIG_0(arg1, arg2)
}

func _swig_wrap_btDbvt_optimizeTopDown__SWIG_1(SwigcptrBtDbvt)

func (arg1 SwigcptrBtDbvt) OptimizeTopDown__SWIG_1() {
	_swig_wrap_btDbvt_optimizeTopDown__SWIG_1(arg1)
}

func (p SwigcptrBtDbvt) OptimizeTopDown(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.OptimizeTopDown__SWIG_1()
		return
	}
	if argc == 1 {
		p.OptimizeTopDown__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDbvt_optimizeIncremental(SwigcptrBtDbvt, int)

func (arg1 SwigcptrBtDbvt) OptimizeIncremental(arg2 int) {
	_swig_wrap_btDbvt_optimizeIncremental(arg1, arg2)
}

func _swig_wrap_btDbvt_insert(SwigcptrBtDbvt, uintptr, uintptr) SwigcptrBtDbvtNode

func (arg1 SwigcptrBtDbvt) Insert(arg2 BtDbvtAabbMm, arg3 uintptr) BtDbvtNode {
	return _swig_wrap_btDbvt_insert(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btDbvt_update__SWIG_0(SwigcptrBtDbvt, uintptr, int)

func (arg1 SwigcptrBtDbvt) Update__SWIG_0(arg2 BtDbvtNode, arg3 int) {
	_swig_wrap_btDbvt_update__SWIG_0(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btDbvt_update__SWIG_1(SwigcptrBtDbvt, uintptr)

func (arg1 SwigcptrBtDbvt) Update__SWIG_1(arg2 BtDbvtNode) {
	_swig_wrap_btDbvt_update__SWIG_1(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvt_update__SWIG_2(SwigcptrBtDbvt, uintptr, uintptr)

func (arg1 SwigcptrBtDbvt) Update__SWIG_2(arg2 BtDbvtNode, arg3 BtDbvtAabbMm) {
	_swig_wrap_btDbvt_update__SWIG_2(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDbvt_update__SWIG_3(SwigcptrBtDbvt, uintptr, uintptr, uintptr, float32) bool

func (arg1 SwigcptrBtDbvt) Update__SWIG_3(arg2 BtDbvtNode, arg3 BtDbvtAabbMm, arg4 BtVector3, arg5 float32) bool {
	return _swig_wrap_btDbvt_update__SWIG_3(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_btDbvt_update__SWIG_4(SwigcptrBtDbvt, uintptr, uintptr, uintptr) bool

func (arg1 SwigcptrBtDbvt) Update__SWIG_4(arg2 BtDbvtNode, arg3 BtDbvtAabbMm, arg4 BtVector3) bool {
	return _swig_wrap_btDbvt_update__SWIG_4(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btDbvt_update__SWIG_5(SwigcptrBtDbvt, uintptr, uintptr, float32) bool

func (arg1 SwigcptrBtDbvt) Update__SWIG_5(arg2 BtDbvtNode, arg3 BtDbvtAabbMm, arg4 float32) bool {
	return _swig_wrap_btDbvt_update__SWIG_5(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func (p SwigcptrBtDbvt) Update(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		p.Update__SWIG_1(a[0].(BtDbvtNode))
		return 0
	}
	if argc == 2 {
		if _, ok := a[1].(SwigcptrBtDbvtAabbMm); !ok {
			goto check_2
		}
		p.Update__SWIG_2(a[0].(BtDbvtNode), a[1].(BtDbvtAabbMm))
		return 0
	}
check_2:
	if argc == 2 {
		p.Update__SWIG_0(a[0].(BtDbvtNode), a[1].(int))
		return 0
	}
	if argc == 3 {
		if _, ok := a[2].(SwigcptrBtVector3); !ok {
			goto check_4
		}
		return p.Update__SWIG_4(a[0].(BtDbvtNode), a[1].(BtDbvtAabbMm), a[2].(BtVector3))
	}
check_4:
	if argc == 3 {
		return p.Update__SWIG_5(a[0].(BtDbvtNode), a[1].(BtDbvtAabbMm), a[2].(float32))
	}
	if argc == 4 {
		return p.Update__SWIG_3(a[0].(BtDbvtNode), a[1].(BtDbvtAabbMm), a[2].(BtVector3), a[3].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDbvt_remove(SwigcptrBtDbvt, uintptr)

func (arg1 SwigcptrBtDbvt) Remove(arg2 BtDbvtNode) {
	_swig_wrap_btDbvt_remove(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvt_write(SwigcptrBtDbvt, uintptr)

func (arg1 SwigcptrBtDbvt) Write(arg2 IWriter) {
	_swig_wrap_btDbvt_write(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvt_clone__SWIG_0(SwigcptrBtDbvt, uintptr, uintptr)

func (arg1 SwigcptrBtDbvt) Clone__SWIG_0(arg2 BtDbvt, arg3 IClone) {
	_swig_wrap_btDbvt_clone__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDbvt_clone__SWIG_1(SwigcptrBtDbvt, uintptr)

func (arg1 SwigcptrBtDbvt) Clone__SWIG_1(arg2 BtDbvt) {
	_swig_wrap_btDbvt_clone__SWIG_1(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtDbvt) Clone(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Clone__SWIG_1(a[0].(BtDbvt))
		return
	}
	if argc == 2 {
		p.Clone__SWIG_0(a[0].(BtDbvt), a[1].(IClone))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDbvt_maxdepth(uintptr) int

func BtDbvtMaxdepth(arg1 BtDbvtNode) int {
	return _swig_wrap_btDbvt_maxdepth(arg1.Swigcptr())
}

func _swig_wrap_btDbvt_countLeaves(uintptr) int

func BtDbvtCountLeaves(arg1 BtDbvtNode) int {
	return _swig_wrap_btDbvt_countLeaves(arg1.Swigcptr())
}

func _swig_wrap_btDbvt_extractLeaves(uintptr, uintptr)

func BtDbvtExtractLeaves(arg1 BtDbvtNode, arg2 BtAlignedObjectArray_Sl_btDbvtNode_SS_const_Sm__Sg_) {
	_swig_wrap_btDbvt_extractLeaves(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btDbvt_benchmark()

func BtDbvtBenchmark() {
	_swig_wrap_btDbvt_benchmark()
}

func _swig_wrap_btDbvt_enumNodes(uintptr, uintptr)

func BtDbvtEnumNodes(arg1 BtDbvtNode, arg2 ICollide) {
	_swig_wrap_btDbvt_enumNodes(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btDbvt_enumLeaves(uintptr, uintptr)

func BtDbvtEnumLeaves(arg1 BtDbvtNode, arg2 ICollide) {
	_swig_wrap_btDbvt_enumLeaves(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btDbvt_collideTT(SwigcptrBtDbvt, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDbvt) CollideTT(arg2 BtDbvtNode, arg3 BtDbvtNode, arg4 ICollide) {
	_swig_wrap_btDbvt_collideTT(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btDbvt_collideTTpersistentStack(SwigcptrBtDbvt, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDbvt) CollideTTpersistentStack(arg2 BtDbvtNode, arg3 BtDbvtNode, arg4 ICollide) {
	_swig_wrap_btDbvt_collideTTpersistentStack(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btDbvt_collideTV(SwigcptrBtDbvt, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDbvt) CollideTV(arg2 BtDbvtNode, arg3 BtDbvtAabbMm, arg4 ICollide) {
	_swig_wrap_btDbvt_collideTV(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btDbvt_rayTest(uintptr, uintptr, uintptr, uintptr)

func BtDbvtRayTest(arg1 BtDbvtNode, arg2 BtVector3, arg3 BtVector3, arg4 ICollide) {
	_swig_wrap_btDbvt_rayTest(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btDbvt_rayTestInternal(SwigcptrBtDbvt, uintptr, uintptr, uintptr, uintptr, *uint, float32, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDbvt) RayTestInternal(arg2 BtDbvtNode, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 *uint, arg7 float32, arg8 BtVector3, arg9 BtVector3, arg10 ICollide) {
	_swig_wrap_btDbvt_rayTestInternal(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6, arg7, arg8.Swigcptr(), arg9.Swigcptr(), arg10.Swigcptr())
}

func _swig_wrap_btDbvt_collideKDOP(uintptr, uintptr, *float32, int, uintptr)

func BtDbvtCollideKDOP(arg1 BtDbvtNode, arg2 BtVector3, arg3 *float32, arg4 int, arg5 ICollide) {
	_swig_wrap_btDbvt_collideKDOP(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4, arg5.Swigcptr())
}

func _swig_wrap_btDbvt_collideOCL__SWIG_0(uintptr, uintptr, *float32, uintptr, int, uintptr, bool)

func BtDbvtCollideOCL__SWIG_0(arg1 BtDbvtNode, arg2 BtVector3, arg3 *float32, arg4 BtVector3, arg5 int, arg6 ICollide, arg7 bool) {
	_swig_wrap_btDbvt_collideOCL__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5, arg6.Swigcptr(), arg7)
}

func _swig_wrap_btDbvt_collideOCL__SWIG_1(uintptr, uintptr, *float32, uintptr, int, uintptr)

func BtDbvtCollideOCL__SWIG_1(arg1 BtDbvtNode, arg2 BtVector3, arg3 *float32, arg4 BtVector3, arg5 int, arg6 ICollide) {
	_swig_wrap_btDbvt_collideOCL__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5, arg6.Swigcptr())
}

func BtDbvtCollideOCL(a ...interface{}) {
	argc := len(a)
	if argc == 6 {
		BtDbvtCollideOCL__SWIG_1(a[0].(BtDbvtNode), a[1].(BtVector3), a[2].(*float32), a[3].(BtVector3), a[4].(int), a[5].(ICollide))
		return
	}
	if argc == 7 {
		BtDbvtCollideOCL__SWIG_0(a[0].(BtDbvtNode), a[1].(BtVector3), a[2].(*float32), a[3].(BtVector3), a[4].(int), a[5].(ICollide), a[6].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDbvt_collideTU(uintptr, uintptr)

func BtDbvtCollideTU(arg1 BtDbvtNode, arg2 ICollide) {
	_swig_wrap_btDbvt_collideTU(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btDbvt_nearest(*int, uintptr, float32, int, int) int

func BtDbvtNearest(arg1 *int, arg2 BtDbvt_sStkNPS, arg3 float32, arg4 int, arg5 int) int {
	return _swig_wrap_btDbvt_nearest(arg1, arg2.Swigcptr(), arg3, arg4, arg5)
}

func _swig_wrap_btDbvt_allocate(uintptr, uintptr, uintptr) int

func BtDbvtAllocate(arg1 BtAlignedObjectArray_Sl_int_Sg_, arg2 BtAlignedObjectArray_Sl_sStkNPS_Sg_, arg3 SStkNPS) int {
	return _swig_wrap_btDbvt_allocate(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

type BtDbvt interface {
	Swigcptr() uintptr
	SwigIsBtDbvt()
	SetM_root(arg2 BtDbvtNode)
	GetM_root() BtDbvtNode
	SetM_free(arg2 BtDbvtNode)
	GetM_free() BtDbvtNode
	SetM_lkhd(arg2 int)
	GetM_lkhd() int
	SetM_leaves(arg2 int)
	GetM_leaves() int
	SetM_opath(arg2 uint)
	GetM_opath() uint
	SetM_stkStack(arg2 BtAlignedObjectArray_Sl_sStkNN_Sg_)
	GetM_stkStack() BtAlignedObjectArray_Sl_sStkNN_Sg_
	SetM_rayTestStack(arg2 BtAlignedObjectArray_Sl_btDbvtNode_SS_const_Sm__Sg_)
	GetM_rayTestStack() BtAlignedObjectArray_Sl_btDbvtNode_SS_const_Sm__Sg_
	Clear()
	Empty() bool
	OptimizeBottomUp()
	OptimizeTopDown(a ...interface{})
	OptimizeIncremental(arg2 int)
	Insert(arg2 BtDbvtAabbMm, arg3 uintptr) BtDbvtNode
	Update(a ...interface{}) interface{}
	Remove(arg2 BtDbvtNode)
	Write(arg2 IWriter)
	Clone(a ...interface{})
	CollideTT(arg2 BtDbvtNode, arg3 BtDbvtNode, arg4 ICollide)
	CollideTTpersistentStack(arg2 BtDbvtNode, arg3 BtDbvtNode, arg4 ICollide)
	CollideTV(arg2 BtDbvtNode, arg3 BtDbvtAabbMm, arg4 ICollide)
	RayTestInternal(arg2 BtDbvtNode, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 *uint, arg7 float32, arg8 BtVector3, arg9 BtVector3, arg10 ICollide)
}

const DBVT_BP_PROFILE int = 0
const DBVT_BP_PREVENTFALSEUPDATE int = 0
const DBVT_BP_ACCURATESLEEPING int = 0
const DBVT_BP_ENABLE_BENCHMARK int = 0

type SwigcptrBtDbvtProxy uintptr

func (p SwigcptrBtDbvtProxy) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDbvtProxy) SwigIsBtDbvtProxy() {
}

func _swig_wrap_btDbvtProxy_leaf_set(SwigcptrBtDbvtProxy, uintptr)

func (arg1 SwigcptrBtDbvtProxy) SetLeaf(arg2 BtDbvtNode) {
	_swig_wrap_btDbvtProxy_leaf_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtProxy_leaf_get(SwigcptrBtDbvtProxy) SwigcptrBtDbvtNode

func (arg1 SwigcptrBtDbvtProxy) GetLeaf() BtDbvtNode {
	return _swig_wrap_btDbvtProxy_leaf_get(arg1)
}

func _swig_wrap_btDbvtProxy_links_set(SwigcptrBtDbvtProxy, uintptr)

func (arg1 SwigcptrBtDbvtProxy) SetLinks(arg2 BtDbvtProxy) {
	_swig_wrap_btDbvtProxy_links_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtProxy_links_get(SwigcptrBtDbvtProxy) SwigcptrBtDbvtProxy

func (arg1 SwigcptrBtDbvtProxy) GetLinks() BtDbvtProxy {
	return _swig_wrap_btDbvtProxy_links_get(arg1)
}

func _swig_wrap_btDbvtProxy_stage_set(SwigcptrBtDbvtProxy, int)

func (arg1 SwigcptrBtDbvtProxy) SetStage(arg2 int) {
	_swig_wrap_btDbvtProxy_stage_set(arg1, arg2)
}

func _swig_wrap_btDbvtProxy_stage_get(SwigcptrBtDbvtProxy) int

func (arg1 SwigcptrBtDbvtProxy) GetStage() int {
	return _swig_wrap_btDbvtProxy_stage_get(arg1)
}

func _swig_wrap_new_btDbvtProxy(uintptr, uintptr, uintptr, int16, int16) SwigcptrBtDbvtProxy

func NewBtDbvtProxy(arg1 BtVector3, arg2 BtVector3, arg3 uintptr, arg4 int16, arg5 int16) BtDbvtProxy {
	return _swig_wrap_new_btDbvtProxy(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4, arg5)
}

func _swig_wrap_delete_btDbvtProxy(uintptr)

func DeleteBtDbvtProxy(arg1 BtDbvtProxy) {
	_swig_wrap_delete_btDbvtProxy(arg1.Swigcptr())
}

func _swig_wrap_SetbtDbvtProxy_M_clientObject(SwigcptrBtDbvtProxy, uintptr)

func (_swig_base SwigcptrBtDbvtProxy) SetM_clientObject(arg1 uintptr) {
	_swig_wrap_SetbtDbvtProxy_M_clientObject(_swig_base, arg1)
}

func _swig_wrap_GetbtDbvtProxy_M_clientObject(SwigcptrBtDbvtProxy) uintptr

func (_swig_base SwigcptrBtDbvtProxy) GetM_clientObject() uintptr {
	return _swig_wrap_GetbtDbvtProxy_M_clientObject(_swig_base)
}

func _swig_wrap_SetbtDbvtProxy_M_collisionFilterGroup(SwigcptrBtDbvtProxy, int16)

func (_swig_base SwigcptrBtDbvtProxy) SetM_collisionFilterGroup(arg1 int16) {
	_swig_wrap_SetbtDbvtProxy_M_collisionFilterGroup(_swig_base, arg1)
}

func _swig_wrap_GetbtDbvtProxy_M_collisionFilterGroup(SwigcptrBtDbvtProxy) int16

func (_swig_base SwigcptrBtDbvtProxy) GetM_collisionFilterGroup() int16 {
	return _swig_wrap_GetbtDbvtProxy_M_collisionFilterGroup(_swig_base)
}

func _swig_wrap_SetbtDbvtProxy_M_collisionFilterMask(SwigcptrBtDbvtProxy, int16)

func (_swig_base SwigcptrBtDbvtProxy) SetM_collisionFilterMask(arg1 int16) {
	_swig_wrap_SetbtDbvtProxy_M_collisionFilterMask(_swig_base, arg1)
}

func _swig_wrap_GetbtDbvtProxy_M_collisionFilterMask(SwigcptrBtDbvtProxy) int16

func (_swig_base SwigcptrBtDbvtProxy) GetM_collisionFilterMask() int16 {
	return _swig_wrap_GetbtDbvtProxy_M_collisionFilterMask(_swig_base)
}

func _swig_wrap_SetbtDbvtProxy_M_multiSapParentProxy(SwigcptrBtDbvtProxy, uintptr)

func (_swig_base SwigcptrBtDbvtProxy) SetM_multiSapParentProxy(arg1 uintptr) {
	_swig_wrap_SetbtDbvtProxy_M_multiSapParentProxy(_swig_base, arg1)
}

func _swig_wrap_GetbtDbvtProxy_M_multiSapParentProxy(SwigcptrBtDbvtProxy) uintptr

func (_swig_base SwigcptrBtDbvtProxy) GetM_multiSapParentProxy() uintptr {
	return _swig_wrap_GetbtDbvtProxy_M_multiSapParentProxy(_swig_base)
}

func _swig_wrap_SetbtDbvtProxy_M_uniqueId(SwigcptrBtDbvtProxy, int)

func (_swig_base SwigcptrBtDbvtProxy) SetM_uniqueId(arg1 int) {
	_swig_wrap_SetbtDbvtProxy_M_uniqueId(_swig_base, arg1)
}

func _swig_wrap_GetbtDbvtProxy_M_uniqueId(SwigcptrBtDbvtProxy) int

func (_swig_base SwigcptrBtDbvtProxy) GetM_uniqueId() int {
	return _swig_wrap_GetbtDbvtProxy_M_uniqueId(_swig_base)
}

func _swig_wrap_SetbtDbvtProxy_M_aabbMin(SwigcptrBtDbvtProxy, uintptr)

func (_swig_base SwigcptrBtDbvtProxy) SetM_aabbMin(arg1 BtVector3) {
	_swig_wrap_SetbtDbvtProxy_M_aabbMin(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_GetbtDbvtProxy_M_aabbMin(SwigcptrBtDbvtProxy) SwigcptrBtVector3

func (_swig_base SwigcptrBtDbvtProxy) GetM_aabbMin() BtVector3 {
	return _swig_wrap_GetbtDbvtProxy_M_aabbMin(_swig_base)
}

func _swig_wrap_SetbtDbvtProxy_M_aabbMax(SwigcptrBtDbvtProxy, uintptr)

func (_swig_base SwigcptrBtDbvtProxy) SetM_aabbMax(arg1 BtVector3) {
	_swig_wrap_SetbtDbvtProxy_M_aabbMax(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_GetbtDbvtProxy_M_aabbMax(SwigcptrBtDbvtProxy) SwigcptrBtVector3

func (_swig_base SwigcptrBtDbvtProxy) GetM_aabbMax() BtVector3 {
	return _swig_wrap_GetbtDbvtProxy_M_aabbMax(_swig_base)
}

func _swig_wrap_btDbvtProxy_getUid(SwigcptrBtDbvtProxy) int

func (_swig_base SwigcptrBtDbvtProxy) GetUid() int {
	return _swig_wrap_btDbvtProxy_getUid(_swig_base)
}

func BtDbvtProxyIsPolyhedral(int) bool
func BtDbvtProxyIsConvex(int) bool
func BtDbvtProxyIsNonMoving(int) bool
func BtDbvtProxyIsConcave(int) bool
func BtDbvtProxyIsCompound(int) bool
func BtDbvtProxyIsSoftBody(int) bool
func BtDbvtProxyIsInfinite(int) bool
func BtDbvtProxyIsConvex2d(int) bool
func (p SwigcptrBtDbvtProxy) SwigIsBtBroadphaseProxy() {
}

func (p SwigcptrBtDbvtProxy) SwigGetBtBroadphaseProxy() BtBroadphaseProxy {
	return SwigcptrBtBroadphaseProxy(p.Swigcptr())
}

type BtDbvtProxy interface {
	Swigcptr() uintptr
	SwigIsBtDbvtProxy()
	SetLeaf(arg2 BtDbvtNode)
	GetLeaf() BtDbvtNode
	SetLinks(arg2 BtDbvtProxy)
	GetLinks() BtDbvtProxy
	SetStage(arg2 int)
	GetStage() int
	SetM_clientObject(arg1 uintptr)
	GetM_clientObject() uintptr
	SetM_collisionFilterGroup(arg1 int16)
	GetM_collisionFilterGroup() int16
	SetM_collisionFilterMask(arg1 int16)
	GetM_collisionFilterMask() int16
	SetM_multiSapParentProxy(arg1 uintptr)
	GetM_multiSapParentProxy() uintptr
	SetM_uniqueId(arg1 int)
	GetM_uniqueId() int
	SetM_aabbMin(arg1 BtVector3)
	GetM_aabbMin() BtVector3
	SetM_aabbMax(arg1 BtVector3)
	GetM_aabbMax() BtVector3
	GetUid() int
	SwigIsBtBroadphaseProxy()
	SwigGetBtBroadphaseProxy() BtBroadphaseProxy
}

type SwigcptrBtDbvtBroadphase uintptr

func (p SwigcptrBtDbvtBroadphase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDbvtBroadphase) SwigIsBtDbvtBroadphase() {
}

func _swig_getbtDbvtBroadphase_DYNAMIC_SET_btDbvtBroadphase() int

var BtDbvtBroadphaseDYNAMIC_SET int = _swig_getbtDbvtBroadphase_DYNAMIC_SET_btDbvtBroadphase()

func _swig_getbtDbvtBroadphase_FIXED_SET_btDbvtBroadphase() int

var BtDbvtBroadphaseFIXED_SET int = _swig_getbtDbvtBroadphase_FIXED_SET_btDbvtBroadphase()

func _swig_getbtDbvtBroadphase_STAGECOUNT_btDbvtBroadphase() int

var BtDbvtBroadphaseSTAGECOUNT int = _swig_getbtDbvtBroadphase_STAGECOUNT_btDbvtBroadphase()

func _swig_wrap_btDbvtBroadphase_m_sets_set(SwigcptrBtDbvtBroadphase, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_sets(arg2 BtDbvt) {
	_swig_wrap_btDbvtBroadphase_m_sets_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_m_sets_get(SwigcptrBtDbvtBroadphase) SwigcptrBtDbvt

func (arg1 SwigcptrBtDbvtBroadphase) GetM_sets() BtDbvt {
	return _swig_wrap_btDbvtBroadphase_m_sets_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_stageRoots_set(SwigcptrBtDbvtBroadphase, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_stageRoots(arg2 BtDbvtProxy) {
	_swig_wrap_btDbvtBroadphase_m_stageRoots_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_m_stageRoots_get(SwigcptrBtDbvtBroadphase) SwigcptrBtDbvtProxy

func (arg1 SwigcptrBtDbvtBroadphase) GetM_stageRoots() BtDbvtProxy {
	return _swig_wrap_btDbvtBroadphase_m_stageRoots_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_paircache_set(SwigcptrBtDbvtBroadphase, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_paircache(arg2 BtOverlappingPairCache) {
	_swig_wrap_btDbvtBroadphase_m_paircache_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_m_paircache_get(SwigcptrBtDbvtBroadphase) SwigcptrBtOverlappingPairCache

func (arg1 SwigcptrBtDbvtBroadphase) GetM_paircache() BtOverlappingPairCache {
	return _swig_wrap_btDbvtBroadphase_m_paircache_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_prediction_set(SwigcptrBtDbvtBroadphase, float32)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_prediction(arg2 float32) {
	_swig_wrap_btDbvtBroadphase_m_prediction_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_prediction_get(SwigcptrBtDbvtBroadphase) float32

func (arg1 SwigcptrBtDbvtBroadphase) GetM_prediction() float32 {
	return _swig_wrap_btDbvtBroadphase_m_prediction_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_stageCurrent_set(SwigcptrBtDbvtBroadphase, int)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_stageCurrent(arg2 int) {
	_swig_wrap_btDbvtBroadphase_m_stageCurrent_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_stageCurrent_get(SwigcptrBtDbvtBroadphase) int

func (arg1 SwigcptrBtDbvtBroadphase) GetM_stageCurrent() int {
	return _swig_wrap_btDbvtBroadphase_m_stageCurrent_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_fupdates_set(SwigcptrBtDbvtBroadphase, int)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_fupdates(arg2 int) {
	_swig_wrap_btDbvtBroadphase_m_fupdates_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_fupdates_get(SwigcptrBtDbvtBroadphase) int

func (arg1 SwigcptrBtDbvtBroadphase) GetM_fupdates() int {
	return _swig_wrap_btDbvtBroadphase_m_fupdates_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_dupdates_set(SwigcptrBtDbvtBroadphase, int)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_dupdates(arg2 int) {
	_swig_wrap_btDbvtBroadphase_m_dupdates_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_dupdates_get(SwigcptrBtDbvtBroadphase) int

func (arg1 SwigcptrBtDbvtBroadphase) GetM_dupdates() int {
	return _swig_wrap_btDbvtBroadphase_m_dupdates_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_cupdates_set(SwigcptrBtDbvtBroadphase, int)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_cupdates(arg2 int) {
	_swig_wrap_btDbvtBroadphase_m_cupdates_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_cupdates_get(SwigcptrBtDbvtBroadphase) int

func (arg1 SwigcptrBtDbvtBroadphase) GetM_cupdates() int {
	return _swig_wrap_btDbvtBroadphase_m_cupdates_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_newpairs_set(SwigcptrBtDbvtBroadphase, int)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_newpairs(arg2 int) {
	_swig_wrap_btDbvtBroadphase_m_newpairs_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_newpairs_get(SwigcptrBtDbvtBroadphase) int

func (arg1 SwigcptrBtDbvtBroadphase) GetM_newpairs() int {
	return _swig_wrap_btDbvtBroadphase_m_newpairs_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_fixedleft_set(SwigcptrBtDbvtBroadphase, int)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_fixedleft(arg2 int) {
	_swig_wrap_btDbvtBroadphase_m_fixedleft_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_fixedleft_get(SwigcptrBtDbvtBroadphase) int

func (arg1 SwigcptrBtDbvtBroadphase) GetM_fixedleft() int {
	return _swig_wrap_btDbvtBroadphase_m_fixedleft_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_updates_call_set(SwigcptrBtDbvtBroadphase, uint)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_updates_call(arg2 uint) {
	_swig_wrap_btDbvtBroadphase_m_updates_call_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_updates_call_get(SwigcptrBtDbvtBroadphase) uint

func (arg1 SwigcptrBtDbvtBroadphase) GetM_updates_call() uint {
	return _swig_wrap_btDbvtBroadphase_m_updates_call_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_updates_done_set(SwigcptrBtDbvtBroadphase, uint)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_updates_done(arg2 uint) {
	_swig_wrap_btDbvtBroadphase_m_updates_done_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_updates_done_get(SwigcptrBtDbvtBroadphase) uint

func (arg1 SwigcptrBtDbvtBroadphase) GetM_updates_done() uint {
	return _swig_wrap_btDbvtBroadphase_m_updates_done_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_updates_ratio_set(SwigcptrBtDbvtBroadphase, float32)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_updates_ratio(arg2 float32) {
	_swig_wrap_btDbvtBroadphase_m_updates_ratio_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_updates_ratio_get(SwigcptrBtDbvtBroadphase) float32

func (arg1 SwigcptrBtDbvtBroadphase) GetM_updates_ratio() float32 {
	return _swig_wrap_btDbvtBroadphase_m_updates_ratio_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_pid_set(SwigcptrBtDbvtBroadphase, int)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_pid(arg2 int) {
	_swig_wrap_btDbvtBroadphase_m_pid_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_pid_get(SwigcptrBtDbvtBroadphase) int

func (arg1 SwigcptrBtDbvtBroadphase) GetM_pid() int {
	return _swig_wrap_btDbvtBroadphase_m_pid_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_cid_set(SwigcptrBtDbvtBroadphase, int)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_cid(arg2 int) {
	_swig_wrap_btDbvtBroadphase_m_cid_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_cid_get(SwigcptrBtDbvtBroadphase) int

func (arg1 SwigcptrBtDbvtBroadphase) GetM_cid() int {
	return _swig_wrap_btDbvtBroadphase_m_cid_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_gid_set(SwigcptrBtDbvtBroadphase, int)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_gid(arg2 int) {
	_swig_wrap_btDbvtBroadphase_m_gid_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_gid_get(SwigcptrBtDbvtBroadphase) int

func (arg1 SwigcptrBtDbvtBroadphase) GetM_gid() int {
	return _swig_wrap_btDbvtBroadphase_m_gid_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_releasepaircache_set(SwigcptrBtDbvtBroadphase, bool)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_releasepaircache(arg2 bool) {
	_swig_wrap_btDbvtBroadphase_m_releasepaircache_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_releasepaircache_get(SwigcptrBtDbvtBroadphase) bool

func (arg1 SwigcptrBtDbvtBroadphase) GetM_releasepaircache() bool {
	return _swig_wrap_btDbvtBroadphase_m_releasepaircache_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_deferedcollide_set(SwigcptrBtDbvtBroadphase, bool)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_deferedcollide(arg2 bool) {
	_swig_wrap_btDbvtBroadphase_m_deferedcollide_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_deferedcollide_get(SwigcptrBtDbvtBroadphase) bool

func (arg1 SwigcptrBtDbvtBroadphase) GetM_deferedcollide() bool {
	return _swig_wrap_btDbvtBroadphase_m_deferedcollide_get(arg1)
}

func _swig_wrap_btDbvtBroadphase_m_needcleanup_set(SwigcptrBtDbvtBroadphase, bool)

func (arg1 SwigcptrBtDbvtBroadphase) SetM_needcleanup(arg2 bool) {
	_swig_wrap_btDbvtBroadphase_m_needcleanup_set(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_m_needcleanup_get(SwigcptrBtDbvtBroadphase) bool

func (arg1 SwigcptrBtDbvtBroadphase) GetM_needcleanup() bool {
	return _swig_wrap_btDbvtBroadphase_m_needcleanup_get(arg1)
}

func _swig_wrap_new_btDbvtBroadphase__SWIG_0(uintptr) SwigcptrBtDbvtBroadphase

func NewBtDbvtBroadphase__SWIG_0(arg1 BtOverlappingPairCache) BtDbvtBroadphase {
	return _swig_wrap_new_btDbvtBroadphase__SWIG_0(arg1.Swigcptr())
}

func _swig_wrap_new_btDbvtBroadphase__SWIG_1() SwigcptrBtDbvtBroadphase

func NewBtDbvtBroadphase__SWIG_1() BtDbvtBroadphase {
	return _swig_wrap_new_btDbvtBroadphase__SWIG_1()
}

func NewBtDbvtBroadphase(a ...interface{}) BtDbvtBroadphase {
	argc := len(a)
	if argc == 0 {
		return NewBtDbvtBroadphase__SWIG_1()
	}
	if argc == 1 {
		return NewBtDbvtBroadphase__SWIG_0(a[0].(BtOverlappingPairCache))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_btDbvtBroadphase(uintptr)

func DeleteBtDbvtBroadphase(arg1 BtDbvtBroadphase) {
	_swig_wrap_delete_btDbvtBroadphase(arg1.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_collide(SwigcptrBtDbvtBroadphase, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) Collide(arg2 BtDispatcher) {
	_swig_wrap_btDbvtBroadphase_collide(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_optimize(SwigcptrBtDbvtBroadphase)

func (arg1 SwigcptrBtDbvtBroadphase) Optimize() {
	_swig_wrap_btDbvtBroadphase_optimize(arg1)
}

func _swig_wrap_btDbvtBroadphase_createProxy(SwigcptrBtDbvtBroadphase, uintptr, uintptr, int, uintptr, int16, int16, uintptr, uintptr) SwigcptrBtBroadphaseProxy

func (arg1 SwigcptrBtDbvtBroadphase) CreateProxy(arg2 BtVector3, arg3 BtVector3, arg4 int, arg5 uintptr, arg6 int16, arg7 int16, arg8 BtDispatcher, arg9 uintptr) BtBroadphaseProxy {
	return _swig_wrap_btDbvtBroadphase_createProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5, arg6, arg7, arg8.Swigcptr(), arg9)
}

func _swig_wrap_btDbvtBroadphase_destroyProxy(SwigcptrBtDbvtBroadphase, uintptr, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) DestroyProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btDbvtBroadphase_destroyProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_setAabb(SwigcptrBtDbvtBroadphase, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) SetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3, arg5 BtDispatcher) {
	_swig_wrap_btDbvtBroadphase_setAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_rayTest__SWIG_0(SwigcptrBtDbvtBroadphase, uintptr, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) RayTest__SWIG_0(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btDbvtBroadphase_rayTest__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_rayTest__SWIG_1(SwigcptrBtDbvtBroadphase, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) RayTest__SWIG_1(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback, arg5 BtVector3) {
	_swig_wrap_btDbvtBroadphase_rayTest__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_rayTest__SWIG_2(SwigcptrBtDbvtBroadphase, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) RayTest__SWIG_2(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback) {
	_swig_wrap_btDbvtBroadphase_rayTest__SWIG_2(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func (p SwigcptrBtDbvtBroadphase) RayTest(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.RayTest__SWIG_2(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback))
		return
	}
	if argc == 4 {
		p.RayTest__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback), a[3].(BtVector3))
		return
	}
	if argc == 5 {
		p.RayTest__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback), a[3].(BtVector3), a[4].(BtVector3))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDbvtBroadphase_aabbTest(SwigcptrBtDbvtBroadphase, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) AabbTest(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseAabbCallback) {
	_swig_wrap_btDbvtBroadphase_aabbTest(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_getAabb(SwigcptrBtDbvtBroadphase, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) GetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btDbvtBroadphase_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_calculateOverlappingPairs(SwigcptrBtDbvtBroadphase, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) CalculateOverlappingPairs(arg2 BtDispatcher) {
	_swig_wrap_btDbvtBroadphase_calculateOverlappingPairs(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_getOverlappingPairCache__SWIG_0(SwigcptrBtDbvtBroadphase) SwigcptrBtOverlappingPairCache

func (arg1 SwigcptrBtDbvtBroadphase) GetOverlappingPairCache__SWIG_0() BtOverlappingPairCache {
	return _swig_wrap_btDbvtBroadphase_getOverlappingPairCache__SWIG_0(arg1)
}

func _swig_wrap_btDbvtBroadphase_getOverlappingPairCache__SWIG_1(SwigcptrBtDbvtBroadphase) SwigcptrBtOverlappingPairCache

func (arg1 SwigcptrBtDbvtBroadphase) GetOverlappingPairCache__SWIG_1() BtOverlappingPairCache {
	return _swig_wrap_btDbvtBroadphase_getOverlappingPairCache__SWIG_1(arg1)
}

func (p SwigcptrBtDbvtBroadphase) GetOverlappingPairCache(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetOverlappingPairCache__SWIG_0()
	}
	if argc == 0 {
		return p.GetOverlappingPairCache__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDbvtBroadphase_getBroadphaseAabb(SwigcptrBtDbvtBroadphase, uintptr, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) GetBroadphaseAabb(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btDbvtBroadphase_getBroadphaseAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_printStats(SwigcptrBtDbvtBroadphase)

func (arg1 SwigcptrBtDbvtBroadphase) PrintStats() {
	_swig_wrap_btDbvtBroadphase_printStats(arg1)
}

func _swig_wrap_btDbvtBroadphase_resetPool(SwigcptrBtDbvtBroadphase, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) ResetPool(arg2 BtDispatcher) {
	_swig_wrap_btDbvtBroadphase_resetPool(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_performDeferredRemoval(SwigcptrBtDbvtBroadphase, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) PerformDeferredRemoval(arg2 BtDispatcher) {
	_swig_wrap_btDbvtBroadphase_performDeferredRemoval(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_setVelocityPrediction(SwigcptrBtDbvtBroadphase, float32)

func (arg1 SwigcptrBtDbvtBroadphase) SetVelocityPrediction(arg2 float32) {
	_swig_wrap_btDbvtBroadphase_setVelocityPrediction(arg1, arg2)
}

func _swig_wrap_btDbvtBroadphase_getVelocityPrediction(SwigcptrBtDbvtBroadphase) float32

func (arg1 SwigcptrBtDbvtBroadphase) GetVelocityPrediction() float32 {
	return _swig_wrap_btDbvtBroadphase_getVelocityPrediction(arg1)
}

func _swig_wrap_btDbvtBroadphase_setAabbForceUpdate(SwigcptrBtDbvtBroadphase, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtDbvtBroadphase) SetAabbForceUpdate(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3, arg5 BtDispatcher) {
	_swig_wrap_btDbvtBroadphase_setAabbForceUpdate(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btDbvtBroadphase_benchmark(uintptr)

func BtDbvtBroadphaseBenchmark(arg1 BtBroadphaseInterface) {
	_swig_wrap_btDbvtBroadphase_benchmark(arg1.Swigcptr())
}

func (p SwigcptrBtDbvtBroadphase) SwigIsBtBroadphaseInterface() {
}

func (p SwigcptrBtDbvtBroadphase) SwigGetBtBroadphaseInterface() BtBroadphaseInterface {
	return SwigcptrBtBroadphaseInterface(p.Swigcptr())
}

type BtDbvtBroadphase interface {
	Swigcptr() uintptr
	SwigIsBtDbvtBroadphase()
	SetM_sets(arg2 BtDbvt)
	GetM_sets() BtDbvt
	SetM_stageRoots(arg2 BtDbvtProxy)
	GetM_stageRoots() BtDbvtProxy
	SetM_paircache(arg2 BtOverlappingPairCache)
	GetM_paircache() BtOverlappingPairCache
	SetM_prediction(arg2 float32)
	GetM_prediction() float32
	SetM_stageCurrent(arg2 int)
	GetM_stageCurrent() int
	SetM_fupdates(arg2 int)
	GetM_fupdates() int
	SetM_dupdates(arg2 int)
	GetM_dupdates() int
	SetM_cupdates(arg2 int)
	GetM_cupdates() int
	SetM_newpairs(arg2 int)
	GetM_newpairs() int
	SetM_fixedleft(arg2 int)
	GetM_fixedleft() int
	SetM_updates_call(arg2 uint)
	GetM_updates_call() uint
	SetM_updates_done(arg2 uint)
	GetM_updates_done() uint
	SetM_updates_ratio(arg2 float32)
	GetM_updates_ratio() float32
	SetM_pid(arg2 int)
	GetM_pid() int
	SetM_cid(arg2 int)
	GetM_cid() int
	SetM_gid(arg2 int)
	GetM_gid() int
	SetM_releasepaircache(arg2 bool)
	GetM_releasepaircache() bool
	SetM_deferedcollide(arg2 bool)
	GetM_deferedcollide() bool
	SetM_needcleanup(arg2 bool)
	GetM_needcleanup() bool
	Collide(arg2 BtDispatcher)
	Optimize()
	CreateProxy(arg2 BtVector3, arg3 BtVector3, arg4 int, arg5 uintptr, arg6 int16, arg7 int16, arg8 BtDispatcher, arg9 uintptr) BtBroadphaseProxy
	DestroyProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
	SetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3, arg5 BtDispatcher)
	RayTest(a ...interface{})
	AabbTest(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseAabbCallback)
	GetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3)
	CalculateOverlappingPairs(arg2 BtDispatcher)
	GetOverlappingPairCache(a ...interface{}) interface{}
	GetBroadphaseAabb(arg2 BtVector3, arg3 BtVector3)
	PrintStats()
	ResetPool(arg2 BtDispatcher)
	PerformDeferredRemoval(arg2 BtDispatcher)
	SetVelocityPrediction(arg2 float32)
	GetVelocityPrediction() float32
	SetAabbForceUpdate(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3, arg5 BtDispatcher)
	SwigIsBtBroadphaseInterface()
	SwigGetBtBroadphaseInterface() BtBroadphaseInterface
}

const USE_OVERLAP_TEST_ON_REMOVES int = 1

func _swig_wrap_gOverlappingPairs_set(int)

func SetGOverlappingPairs(arg1 int) {
	_swig_wrap_gOverlappingPairs_set(arg1)
}

func GetGOverlappingPairs() int

type SwigcptrBtAxisSweep3 uintptr

func (p SwigcptrBtAxisSweep3) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtAxisSweep3) SwigIsBtAxisSweep3() {
}

func _swig_wrap_new_btAxisSweep3__SWIG_0(uintptr, uintptr, uint16, uintptr, bool) SwigcptrBtAxisSweep3

func NewBtAxisSweep3__SWIG_0(arg1 BtVector3, arg2 BtVector3, arg3 uint16, arg4 BtOverlappingPairCache, arg5 bool) BtAxisSweep3 {
	return _swig_wrap_new_btAxisSweep3__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5)
}

func _swig_wrap_new_btAxisSweep3__SWIG_1(uintptr, uintptr, uint16, uintptr) SwigcptrBtAxisSweep3

func NewBtAxisSweep3__SWIG_1(arg1 BtVector3, arg2 BtVector3, arg3 uint16, arg4 BtOverlappingPairCache) BtAxisSweep3 {
	return _swig_wrap_new_btAxisSweep3__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4.Swigcptr())
}

func _swig_wrap_new_btAxisSweep3__SWIG_2(uintptr, uintptr, uint16) SwigcptrBtAxisSweep3

func NewBtAxisSweep3__SWIG_2(arg1 BtVector3, arg2 BtVector3, arg3 uint16) BtAxisSweep3 {
	return _swig_wrap_new_btAxisSweep3__SWIG_2(arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_new_btAxisSweep3__SWIG_3(uintptr, uintptr) SwigcptrBtAxisSweep3

func NewBtAxisSweep3__SWIG_3(arg1 BtVector3, arg2 BtVector3) BtAxisSweep3 {
	return _swig_wrap_new_btAxisSweep3__SWIG_3(arg1.Swigcptr(), arg2.Swigcptr())
}

func NewBtAxisSweep3(a ...interface{}) BtAxisSweep3 {
	argc := len(a)
	if argc == 2 {
		return NewBtAxisSweep3__SWIG_3(a[0].(BtVector3), a[1].(BtVector3))
	}
	if argc == 3 {
		return NewBtAxisSweep3__SWIG_2(a[0].(BtVector3), a[1].(BtVector3), a[2].(uint16))
	}
	if argc == 4 {
		return NewBtAxisSweep3__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(uint16), a[3].(BtOverlappingPairCache))
	}
	if argc == 5 {
		return NewBtAxisSweep3__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(uint16), a[3].(BtOverlappingPairCache), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_btAxisSweep3(uintptr)

func DeleteBtAxisSweep3(arg1 BtAxisSweep3) {
	_swig_wrap_delete_btAxisSweep3(arg1.Swigcptr())
}

type BtAxisSweep3 interface {
	Swigcptr() uintptr
	SwigIsBtAxisSweep3()
}

type SwigcptrBt32BitAxisSweep3 uintptr

func (p SwigcptrBt32BitAxisSweep3) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBt32BitAxisSweep3) SwigIsBt32BitAxisSweep3() {
}

func _swig_wrap_new_bt32BitAxisSweep3__SWIG_0(uintptr, uintptr, uint, uintptr, bool) SwigcptrBt32BitAxisSweep3

func NewBt32BitAxisSweep3__SWIG_0(arg1 BtVector3, arg2 BtVector3, arg3 uint, arg4 BtOverlappingPairCache, arg5 bool) Bt32BitAxisSweep3 {
	return _swig_wrap_new_bt32BitAxisSweep3__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5)
}

func _swig_wrap_new_bt32BitAxisSweep3__SWIG_1(uintptr, uintptr, uint, uintptr) SwigcptrBt32BitAxisSweep3

func NewBt32BitAxisSweep3__SWIG_1(arg1 BtVector3, arg2 BtVector3, arg3 uint, arg4 BtOverlappingPairCache) Bt32BitAxisSweep3 {
	return _swig_wrap_new_bt32BitAxisSweep3__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3, arg4.Swigcptr())
}

func _swig_wrap_new_bt32BitAxisSweep3__SWIG_2(uintptr, uintptr, uint) SwigcptrBt32BitAxisSweep3

func NewBt32BitAxisSweep3__SWIG_2(arg1 BtVector3, arg2 BtVector3, arg3 uint) Bt32BitAxisSweep3 {
	return _swig_wrap_new_bt32BitAxisSweep3__SWIG_2(arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_new_bt32BitAxisSweep3__SWIG_3(uintptr, uintptr) SwigcptrBt32BitAxisSweep3

func NewBt32BitAxisSweep3__SWIG_3(arg1 BtVector3, arg2 BtVector3) Bt32BitAxisSweep3 {
	return _swig_wrap_new_bt32BitAxisSweep3__SWIG_3(arg1.Swigcptr(), arg2.Swigcptr())
}

func NewBt32BitAxisSweep3(a ...interface{}) Bt32BitAxisSweep3 {
	argc := len(a)
	if argc == 2 {
		return NewBt32BitAxisSweep3__SWIG_3(a[0].(BtVector3), a[1].(BtVector3))
	}
	if argc == 3 {
		return NewBt32BitAxisSweep3__SWIG_2(a[0].(BtVector3), a[1].(BtVector3), a[2].(uint))
	}
	if argc == 4 {
		return NewBt32BitAxisSweep3__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(uint), a[3].(BtOverlappingPairCache))
	}
	if argc == 5 {
		return NewBt32BitAxisSweep3__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(uint), a[3].(BtOverlappingPairCache), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_bt32BitAxisSweep3(uintptr)

func DeleteBt32BitAxisSweep3(arg1 Bt32BitAxisSweep3) {
	_swig_wrap_delete_bt32BitAxisSweep3(arg1.Swigcptr())
}

type Bt32BitAxisSweep3 interface {
	Swigcptr() uintptr
	SwigIsBt32BitAxisSweep3()
}

type SwigcptrBtMultiSapBroadphase uintptr

func (p SwigcptrBtMultiSapBroadphase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtMultiSapBroadphase) SwigIsBtMultiSapBroadphase() {
}

func _swig_wrap_btMultiSapBroadphase_getBroadphaseArray__SWIG_0(SwigcptrBtMultiSapBroadphase) SwigcptrBtAlignedObjectArray_Sl_btBroadphaseInterface_Sm__Sg_

func (arg1 SwigcptrBtMultiSapBroadphase) GetBroadphaseArray__SWIG_0() BtAlignedObjectArray_Sl_btBroadphaseInterface_Sm__Sg_ {
	return _swig_wrap_btMultiSapBroadphase_getBroadphaseArray__SWIG_0(arg1)
}

func _swig_wrap_btMultiSapBroadphase_getBroadphaseArray__SWIG_1(SwigcptrBtMultiSapBroadphase) SwigcptrBtAlignedObjectArray_Sl_btBroadphaseInterface_Sm__Sg_

func (arg1 SwigcptrBtMultiSapBroadphase) GetBroadphaseArray__SWIG_1() BtAlignedObjectArray_Sl_btBroadphaseInterface_Sm__Sg_ {
	return _swig_wrap_btMultiSapBroadphase_getBroadphaseArray__SWIG_1(arg1)
}

func (p SwigcptrBtMultiSapBroadphase) GetBroadphaseArray(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetBroadphaseArray__SWIG_0()
	}
	if argc == 0 {
		return p.GetBroadphaseArray__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_btMultiSapBroadphase(uintptr)

func DeleteBtMultiSapBroadphase(arg1 BtMultiSapBroadphase) {
	_swig_wrap_delete_btMultiSapBroadphase(arg1.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_createProxy(SwigcptrBtMultiSapBroadphase, uintptr, uintptr, int, uintptr, int16, int16, uintptr, uintptr) SwigcptrBtBroadphaseProxy

func (arg1 SwigcptrBtMultiSapBroadphase) CreateProxy(arg2 BtVector3, arg3 BtVector3, arg4 int, arg5 uintptr, arg6 int16, arg7 int16, arg8 BtDispatcher, arg9 uintptr) BtBroadphaseProxy {
	return _swig_wrap_btMultiSapBroadphase_createProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5, arg6, arg7, arg8.Swigcptr(), arg9)
}

func _swig_wrap_btMultiSapBroadphase_destroyProxy(SwigcptrBtMultiSapBroadphase, uintptr, uintptr)

func (arg1 SwigcptrBtMultiSapBroadphase) DestroyProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher) {
	_swig_wrap_btMultiSapBroadphase_destroyProxy(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_setAabb(SwigcptrBtMultiSapBroadphase, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtMultiSapBroadphase) SetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3, arg5 BtDispatcher) {
	_swig_wrap_btMultiSapBroadphase_setAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_getAabb(SwigcptrBtMultiSapBroadphase, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtMultiSapBroadphase) GetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btMultiSapBroadphase_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_rayTest__SWIG_0(SwigcptrBtMultiSapBroadphase, uintptr, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtMultiSapBroadphase) RayTest__SWIG_0(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btMultiSapBroadphase_rayTest__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_rayTest__SWIG_1(SwigcptrBtMultiSapBroadphase, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtMultiSapBroadphase) RayTest__SWIG_1(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback, arg5 BtVector3) {
	_swig_wrap_btMultiSapBroadphase_rayTest__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_rayTest__SWIG_2(SwigcptrBtMultiSapBroadphase, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtMultiSapBroadphase) RayTest__SWIG_2(arg2 BtVector3, arg3 BtVector3, arg4 BtBroadphaseRayCallback) {
	_swig_wrap_btMultiSapBroadphase_rayTest__SWIG_2(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func (p SwigcptrBtMultiSapBroadphase) RayTest(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.RayTest__SWIG_2(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback))
		return
	}
	if argc == 4 {
		p.RayTest__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback), a[3].(BtVector3))
		return
	}
	if argc == 5 {
		p.RayTest__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtBroadphaseRayCallback), a[3].(BtVector3), a[4].(BtVector3))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btMultiSapBroadphase_addToChildBroadphase(SwigcptrBtMultiSapBroadphase, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtMultiSapBroadphase) AddToChildBroadphase(arg2 BtMultiSapProxy, arg3 BtBroadphaseProxy, arg4 BtBroadphaseInterface) {
	_swig_wrap_btMultiSapBroadphase_addToChildBroadphase(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_calculateOverlappingPairs(SwigcptrBtMultiSapBroadphase, uintptr)

func (arg1 SwigcptrBtMultiSapBroadphase) CalculateOverlappingPairs(arg2 BtDispatcher) {
	_swig_wrap_btMultiSapBroadphase_calculateOverlappingPairs(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_testAabbOverlap(SwigcptrBtMultiSapBroadphase, uintptr, uintptr) bool

func (arg1 SwigcptrBtMultiSapBroadphase) TestAabbOverlap(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) bool {
	return _swig_wrap_btMultiSapBroadphase_testAabbOverlap(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_getOverlappingPairCache__SWIG_0(SwigcptrBtMultiSapBroadphase) SwigcptrBtOverlappingPairCache

func (arg1 SwigcptrBtMultiSapBroadphase) GetOverlappingPairCache__SWIG_0() BtOverlappingPairCache {
	return _swig_wrap_btMultiSapBroadphase_getOverlappingPairCache__SWIG_0(arg1)
}

func _swig_wrap_btMultiSapBroadphase_getOverlappingPairCache__SWIG_1(SwigcptrBtMultiSapBroadphase) SwigcptrBtOverlappingPairCache

func (arg1 SwigcptrBtMultiSapBroadphase) GetOverlappingPairCache__SWIG_1() BtOverlappingPairCache {
	return _swig_wrap_btMultiSapBroadphase_getOverlappingPairCache__SWIG_1(arg1)
}

func (p SwigcptrBtMultiSapBroadphase) GetOverlappingPairCache(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetOverlappingPairCache__SWIG_0()
	}
	if argc == 0 {
		return p.GetOverlappingPairCache__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btMultiSapBroadphase_getBroadphaseAabb(SwigcptrBtMultiSapBroadphase, uintptr, uintptr)

func (arg1 SwigcptrBtMultiSapBroadphase) GetBroadphaseAabb(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btMultiSapBroadphase_getBroadphaseAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_buildTree(SwigcptrBtMultiSapBroadphase, uintptr, uintptr)

func (arg1 SwigcptrBtMultiSapBroadphase) BuildTree(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btMultiSapBroadphase_buildTree(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_printStats(SwigcptrBtMultiSapBroadphase)

func (arg1 SwigcptrBtMultiSapBroadphase) PrintStats() {
	_swig_wrap_btMultiSapBroadphase_printStats(arg1)
}

func _swig_wrap_btMultiSapBroadphase_quicksort(SwigcptrBtMultiSapBroadphase, uintptr, int, int)

func (arg1 SwigcptrBtMultiSapBroadphase) Quicksort(arg2 BtAlignedObjectArray_Sl_btBroadphasePair_Sg_, arg3 int, arg4 int) {
	_swig_wrap_btMultiSapBroadphase_quicksort(arg1, arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btMultiSapBroadphase_resetPool(SwigcptrBtMultiSapBroadphase, uintptr)

func (arg1 SwigcptrBtMultiSapBroadphase) ResetPool(arg2 BtDispatcher) {
	_swig_wrap_btMultiSapBroadphase_resetPool(arg1, arg2.Swigcptr())
}

func _swig_wrap_btMultiSapBroadphase_aabbTest(SwigcptrBtMultiSapBroadphase, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtMultiSapBroadphase) AabbTest(arg1 BtVector3, arg2 BtVector3, arg3 BtBroadphaseAabbCallback) {
	_swig_wrap_btMultiSapBroadphase_aabbTest(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func (p SwigcptrBtMultiSapBroadphase) SwigIsBtBroadphaseInterface() {
}

func (p SwigcptrBtMultiSapBroadphase) SwigGetBtBroadphaseInterface() BtBroadphaseInterface {
	return SwigcptrBtBroadphaseInterface(p.Swigcptr())
}

type BtMultiSapBroadphase interface {
	Swigcptr() uintptr
	SwigIsBtMultiSapBroadphase()
	GetBroadphaseArray(a ...interface{}) interface{}
	CreateProxy(arg2 BtVector3, arg3 BtVector3, arg4 int, arg5 uintptr, arg6 int16, arg7 int16, arg8 BtDispatcher, arg9 uintptr) BtBroadphaseProxy
	DestroyProxy(arg2 BtBroadphaseProxy, arg3 BtDispatcher)
	SetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3, arg5 BtDispatcher)
	GetAabb(arg2 BtBroadphaseProxy, arg3 BtVector3, arg4 BtVector3)
	RayTest(a ...interface{})
	AddToChildBroadphase(arg2 BtMultiSapProxy, arg3 BtBroadphaseProxy, arg4 BtBroadphaseInterface)
	CalculateOverlappingPairs(arg2 BtDispatcher)
	TestAabbOverlap(arg2 BtBroadphaseProxy, arg3 BtBroadphaseProxy) bool
	GetOverlappingPairCache(a ...interface{}) interface{}
	GetBroadphaseAabb(arg2 BtVector3, arg3 BtVector3)
	BuildTree(arg2 BtVector3, arg3 BtVector3)
	PrintStats()
	Quicksort(arg2 BtAlignedObjectArray_Sl_btBroadphasePair_Sg_, arg3 int, arg4 int)
	ResetPool(arg2 BtDispatcher)
	AabbTest(arg1 BtVector3, arg2 BtVector3, arg3 BtBroadphaseAabbCallback)
	SwigIsBtBroadphaseInterface()
	SwigGetBtBroadphaseInterface() BtBroadphaseInterface
}

type SwigcptrBtDefaultMotionState uintptr

func (p SwigcptrBtDefaultMotionState) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDefaultMotionState) SwigIsBtDefaultMotionState() {
}

func _swig_wrap_btDefaultMotionState_m_graphicsWorldTrans_set(SwigcptrBtDefaultMotionState, uintptr)

func (arg1 SwigcptrBtDefaultMotionState) SetM_graphicsWorldTrans(arg2 BtTransform) {
	_swig_wrap_btDefaultMotionState_m_graphicsWorldTrans_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDefaultMotionState_m_graphicsWorldTrans_get(SwigcptrBtDefaultMotionState) SwigcptrBtTransform

func (arg1 SwigcptrBtDefaultMotionState) GetM_graphicsWorldTrans() BtTransform {
	return _swig_wrap_btDefaultMotionState_m_graphicsWorldTrans_get(arg1)
}

func _swig_wrap_btDefaultMotionState_m_centerOfMassOffset_set(SwigcptrBtDefaultMotionState, uintptr)

func (arg1 SwigcptrBtDefaultMotionState) SetM_centerOfMassOffset(arg2 BtTransform) {
	_swig_wrap_btDefaultMotionState_m_centerOfMassOffset_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDefaultMotionState_m_centerOfMassOffset_get(SwigcptrBtDefaultMotionState) SwigcptrBtTransform

func (arg1 SwigcptrBtDefaultMotionState) GetM_centerOfMassOffset() BtTransform {
	return _swig_wrap_btDefaultMotionState_m_centerOfMassOffset_get(arg1)
}

func _swig_wrap_btDefaultMotionState_m_startWorldTrans_set(SwigcptrBtDefaultMotionState, uintptr)

func (arg1 SwigcptrBtDefaultMotionState) SetM_startWorldTrans(arg2 BtTransform) {
	_swig_wrap_btDefaultMotionState_m_startWorldTrans_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDefaultMotionState_m_startWorldTrans_get(SwigcptrBtDefaultMotionState) SwigcptrBtTransform

func (arg1 SwigcptrBtDefaultMotionState) GetM_startWorldTrans() BtTransform {
	return _swig_wrap_btDefaultMotionState_m_startWorldTrans_get(arg1)
}

func _swig_wrap_btDefaultMotionState_m_userPointer_set(SwigcptrBtDefaultMotionState, uintptr)

func (arg1 SwigcptrBtDefaultMotionState) SetM_userPointer(arg2 uintptr) {
	_swig_wrap_btDefaultMotionState_m_userPointer_set(arg1, arg2)
}

func _swig_wrap_btDefaultMotionState_m_userPointer_get(SwigcptrBtDefaultMotionState) uintptr

func (arg1 SwigcptrBtDefaultMotionState) GetM_userPointer() uintptr {
	return _swig_wrap_btDefaultMotionState_m_userPointer_get(arg1)
}

func _swig_wrap_new_btDefaultMotionState__SWIG_0(uintptr, uintptr) SwigcptrBtDefaultMotionState

func NewBtDefaultMotionState__SWIG_0(arg1 BtTransform, arg2 BtTransform) BtDefaultMotionState {
	return _swig_wrap_new_btDefaultMotionState__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_new_btDefaultMotionState__SWIG_1(uintptr) SwigcptrBtDefaultMotionState

func NewBtDefaultMotionState__SWIG_1(arg1 BtTransform) BtDefaultMotionState {
	return _swig_wrap_new_btDefaultMotionState__SWIG_1(arg1.Swigcptr())
}

func _swig_wrap_new_btDefaultMotionState__SWIG_2() SwigcptrBtDefaultMotionState

func NewBtDefaultMotionState__SWIG_2() BtDefaultMotionState {
	return _swig_wrap_new_btDefaultMotionState__SWIG_2()
}

func NewBtDefaultMotionState(a ...interface{}) BtDefaultMotionState {
	argc := len(a)
	if argc == 0 {
		return NewBtDefaultMotionState__SWIG_2()
	}
	if argc == 1 {
		return NewBtDefaultMotionState__SWIG_1(a[0].(BtTransform))
	}
	if argc == 2 {
		return NewBtDefaultMotionState__SWIG_0(a[0].(BtTransform), a[1].(BtTransform))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDefaultMotionState_getWorldTransform(SwigcptrBtDefaultMotionState, uintptr)

func (arg1 SwigcptrBtDefaultMotionState) GetWorldTransform(arg2 BtTransform) {
	_swig_wrap_btDefaultMotionState_getWorldTransform(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDefaultMotionState_setWorldTransform(SwigcptrBtDefaultMotionState, uintptr)

func (arg1 SwigcptrBtDefaultMotionState) SetWorldTransform(arg2 BtTransform) {
	_swig_wrap_btDefaultMotionState_setWorldTransform(arg1, arg2.Swigcptr())
}

func _swig_wrap_delete_btDefaultMotionState(uintptr)

func DeleteBtDefaultMotionState(arg1 BtDefaultMotionState) {
	_swig_wrap_delete_btDefaultMotionState(arg1.Swigcptr())
}

func (p SwigcptrBtDefaultMotionState) SwigIsBtMotionState() {
}

func (p SwigcptrBtDefaultMotionState) SwigGetBtMotionState() BtMotionState {
	return SwigcptrBtMotionState(p.Swigcptr())
}

type BtDefaultMotionState interface {
	Swigcptr() uintptr
	SwigIsBtDefaultMotionState()
	SetM_graphicsWorldTrans(arg2 BtTransform)
	GetM_graphicsWorldTrans() BtTransform
	SetM_centerOfMassOffset(arg2 BtTransform)
	GetM_centerOfMassOffset() BtTransform
	SetM_startWorldTrans(arg2 BtTransform)
	GetM_startWorldTrans() BtTransform
	SetM_userPointer(arg2 uintptr)
	GetM_userPointer() uintptr
	GetWorldTransform(arg2 BtTransform)
	SetWorldTransform(arg2 BtTransform)
	SwigIsBtMotionState()
	SwigGetBtMotionState() BtMotionState
}

const BT_NO_PROFILE int = 1

type SwigcptrBtIDebugDraw uintptr

func (p SwigcptrBtIDebugDraw) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtIDebugDraw) SwigIsBtIDebugDraw() {
}

type BtIDebugDrawDebugDrawModes int

func _swig_getbtIDebugDraw_DBG_NoDebug_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_NoDebug BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_NoDebug_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_DrawWireframe_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_DrawWireframe BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_DrawWireframe_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_DrawAabb_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_DrawAabb BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_DrawAabb_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_DrawFeaturesText_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_DrawFeaturesText BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_DrawFeaturesText_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_DrawContactPoints_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_DrawContactPoints BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_DrawContactPoints_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_NoDeactivation_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_NoDeactivation BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_NoDeactivation_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_NoHelpText_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_NoHelpText BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_NoHelpText_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_DrawText_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_DrawText BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_DrawText_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_ProfileTimings_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_ProfileTimings BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_ProfileTimings_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_EnableSatComparison_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_EnableSatComparison BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_EnableSatComparison_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_DisableBulletLCP_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_DisableBulletLCP BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_DisableBulletLCP_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_EnableCCD_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_EnableCCD BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_EnableCCD_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_DrawConstraints_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_DrawConstraints BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_DrawConstraints_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_DrawConstraintLimits_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_DrawConstraintLimits BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_DrawConstraintLimits_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_FastWireframe_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_FastWireframe BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_FastWireframe_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_DrawNormals_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_DrawNormals BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_DrawNormals_btIDebugDraw()

func _swig_getbtIDebugDraw_DBG_MAX_DEBUG_DRAW_MODE_btIDebugDraw() BtIDebugDrawDebugDrawModes

var BtIDebugDrawDBG_MAX_DEBUG_DRAW_MODE BtIDebugDrawDebugDrawModes = _swig_getbtIDebugDraw_DBG_MAX_DEBUG_DRAW_MODE_btIDebugDraw()

func _swig_wrap_delete_btIDebugDraw(uintptr)

func DeleteBtIDebugDraw(arg1 BtIDebugDraw) {
	_swig_wrap_delete_btIDebugDraw(arg1.Swigcptr())
}

func _swig_wrap_btIDebugDraw_drawLine__SWIG_0(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawLine__SWIG_0(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btIDebugDraw_drawLine__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btIDebugDraw_drawLine__SWIG_1(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawLine__SWIG_1(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3) {
	_swig_wrap_btIDebugDraw_drawLine__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func (p SwigcptrBtIDebugDraw) DrawLine(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.DrawLine__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3))
		return
	}
	if argc == 4 {
		p.DrawLine__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(BtVector3))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btIDebugDraw_drawSphere__SWIG_0(SwigcptrBtIDebugDraw, float32, uintptr, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawSphere__SWIG_0(arg2 float32, arg3 BtTransform, arg4 BtVector3) {
	_swig_wrap_btIDebugDraw_drawSphere__SWIG_0(arg1, arg2, arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btIDebugDraw_drawSphere__SWIG_1(SwigcptrBtIDebugDraw, uintptr, float32, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawSphere__SWIG_1(arg2 BtVector3, arg3 float32, arg4 BtVector3) {
	_swig_wrap_btIDebugDraw_drawSphere__SWIG_1(arg1, arg2.Swigcptr(), arg3, arg4.Swigcptr())
}

func (p SwigcptrBtIDebugDraw) DrawSphere(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		if _, ok := a[1].(float32); !ok {
			goto check_1
		}
		p.DrawSphere__SWIG_1(a[0].(BtVector3), a[1].(float32), a[2].(BtVector3))
		return
	}
check_1:
	if argc == 3 {
		p.DrawSphere__SWIG_0(a[0].(float32), a[1].(BtTransform), a[2].(BtVector3))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btIDebugDraw_drawTriangle__SWIG_0(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, float32)

func (arg1 SwigcptrBtIDebugDraw) DrawTriangle__SWIG_0(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3, arg7 BtVector3, arg8 BtVector3, arg9 float32) {
	_swig_wrap_btIDebugDraw_drawTriangle__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7.Swigcptr(), arg8.Swigcptr(), arg9)
}

func _swig_wrap_btIDebugDraw_drawTriangle__SWIG_1(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr, uintptr, float32)

func (arg1 SwigcptrBtIDebugDraw) DrawTriangle__SWIG_1(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 float32) {
	_swig_wrap_btIDebugDraw_drawTriangle__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6)
}

func (p SwigcptrBtIDebugDraw) DrawTriangle(a ...interface{}) {
	argc := len(a)
	if argc == 5 {
		p.DrawTriangle__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(BtVector3), a[4].(float32))
		return
	}
	if argc == 8 {
		p.DrawTriangle__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(BtVector3), a[4].(BtVector3), a[5].(BtVector3), a[6].(BtVector3), a[7].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btIDebugDraw_drawContactPoint(SwigcptrBtIDebugDraw, uintptr, uintptr, float32, int, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawContactPoint(arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 int, arg6 BtVector3) {
	_swig_wrap_btIDebugDraw_drawContactPoint(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5, arg6.Swigcptr())
}

func _swig_wrap_btIDebugDraw_reportErrorWarning(SwigcptrBtIDebugDraw, string)

func (arg1 SwigcptrBtIDebugDraw) ReportErrorWarning(arg2 string) {
	_swig_wrap_btIDebugDraw_reportErrorWarning(arg1, arg2)
}

func _swig_wrap_btIDebugDraw_draw3dText(SwigcptrBtIDebugDraw, uintptr, string)

func (arg1 SwigcptrBtIDebugDraw) Draw3dText(arg2 BtVector3, arg3 string) {
	_swig_wrap_btIDebugDraw_draw3dText(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btIDebugDraw_setDebugMode(SwigcptrBtIDebugDraw, int)

func (arg1 SwigcptrBtIDebugDraw) SetDebugMode(arg2 int) {
	_swig_wrap_btIDebugDraw_setDebugMode(arg1, arg2)
}

func _swig_wrap_btIDebugDraw_getDebugMode(SwigcptrBtIDebugDraw) int

func (arg1 SwigcptrBtIDebugDraw) GetDebugMode() int {
	return _swig_wrap_btIDebugDraw_getDebugMode(arg1)
}

func _swig_wrap_btIDebugDraw_drawAabb(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawAabb(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btIDebugDraw_drawAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btIDebugDraw_drawTransform(SwigcptrBtIDebugDraw, uintptr, float32)

func (arg1 SwigcptrBtIDebugDraw) DrawTransform(arg2 BtTransform, arg3 float32) {
	_swig_wrap_btIDebugDraw_drawTransform(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btIDebugDraw_drawArc__SWIG_0(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr, float32, float32, float32, float32, uintptr, bool, float32)

func (arg1 SwigcptrBtIDebugDraw) DrawArc__SWIG_0(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 float32, arg6 float32, arg7 float32, arg8 float32, arg9 BtVector3, arg10 bool, arg11 float32) {
	_swig_wrap_btIDebugDraw_drawArc__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5, arg6, arg7, arg8, arg9.Swigcptr(), arg10, arg11)
}

func _swig_wrap_btIDebugDraw_drawArc__SWIG_1(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr, float32, float32, float32, float32, uintptr, bool)

func (arg1 SwigcptrBtIDebugDraw) DrawArc__SWIG_1(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 float32, arg6 float32, arg7 float32, arg8 float32, arg9 BtVector3, arg10 bool) {
	_swig_wrap_btIDebugDraw_drawArc__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5, arg6, arg7, arg8, arg9.Swigcptr(), arg10)
}

func (p SwigcptrBtIDebugDraw) DrawArc(a ...interface{}) {
	argc := len(a)
	if argc == 9 {
		p.DrawArc__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(float32), a[4].(float32), a[5].(float32), a[6].(float32), a[7].(BtVector3), a[8].(bool))
		return
	}
	if argc == 10 {
		p.DrawArc__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(float32), a[4].(float32), a[5].(float32), a[6].(float32), a[7].(BtVector3), a[8].(bool), a[9].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btIDebugDraw_drawSpherePatch__SWIG_0(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr, float32, float32, float32, float32, float32, uintptr, float32, bool)

func (arg1 SwigcptrBtIDebugDraw) DrawSpherePatch__SWIG_0(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 float32, arg6 float32, arg7 float32, arg8 float32, arg9 float32, arg10 BtVector3, arg11 float32, arg12 bool) {
	_swig_wrap_btIDebugDraw_drawSpherePatch__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5, arg6, arg7, arg8, arg9, arg10.Swigcptr(), arg11, arg12)
}

func _swig_wrap_btIDebugDraw_drawSpherePatch__SWIG_1(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr, float32, float32, float32, float32, float32, uintptr, float32)

func (arg1 SwigcptrBtIDebugDraw) DrawSpherePatch__SWIG_1(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 float32, arg6 float32, arg7 float32, arg8 float32, arg9 float32, arg10 BtVector3, arg11 float32) {
	_swig_wrap_btIDebugDraw_drawSpherePatch__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5, arg6, arg7, arg8, arg9, arg10.Swigcptr(), arg11)
}

func _swig_wrap_btIDebugDraw_drawSpherePatch__SWIG_2(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr, float32, float32, float32, float32, float32, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawSpherePatch__SWIG_2(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 float32, arg6 float32, arg7 float32, arg8 float32, arg9 float32, arg10 BtVector3) {
	_swig_wrap_btIDebugDraw_drawSpherePatch__SWIG_2(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5, arg6, arg7, arg8, arg9, arg10.Swigcptr())
}

func (p SwigcptrBtIDebugDraw) DrawSpherePatch(a ...interface{}) {
	argc := len(a)
	if argc == 9 {
		p.DrawSpherePatch__SWIG_2(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(float32), a[4].(float32), a[5].(float32), a[6].(float32), a[7].(float32), a[8].(BtVector3))
		return
	}
	if argc == 10 {
		p.DrawSpherePatch__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(float32), a[4].(float32), a[5].(float32), a[6].(float32), a[7].(float32), a[8].(BtVector3), a[9].(float32))
		return
	}
	if argc == 11 {
		p.DrawSpherePatch__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(float32), a[4].(float32), a[5].(float32), a[6].(float32), a[7].(float32), a[8].(BtVector3), a[9].(float32), a[10].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btIDebugDraw_drawBox__SWIG_0(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawBox__SWIG_0(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3) {
	_swig_wrap_btIDebugDraw_drawBox__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btIDebugDraw_drawBox__SWIG_1(SwigcptrBtIDebugDraw, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawBox__SWIG_1(arg2 BtVector3, arg3 BtVector3, arg4 BtTransform, arg5 BtVector3) {
	_swig_wrap_btIDebugDraw_drawBox__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func (p SwigcptrBtIDebugDraw) DrawBox(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.DrawBox__SWIG_0(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3))
		return
	}
	if argc == 4 {
		p.DrawBox__SWIG_1(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtTransform), a[3].(BtVector3))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btIDebugDraw_drawCapsule(SwigcptrBtIDebugDraw, float32, float32, int, uintptr, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawCapsule(arg2 float32, arg3 float32, arg4 int, arg5 BtTransform, arg6 BtVector3) {
	_swig_wrap_btIDebugDraw_drawCapsule(arg1, arg2, arg3, arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btIDebugDraw_drawCylinder(SwigcptrBtIDebugDraw, float32, float32, int, uintptr, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawCylinder(arg2 float32, arg3 float32, arg4 int, arg5 BtTransform, arg6 BtVector3) {
	_swig_wrap_btIDebugDraw_drawCylinder(arg1, arg2, arg3, arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btIDebugDraw_drawCone(SwigcptrBtIDebugDraw, float32, float32, int, uintptr, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawCone(arg2 float32, arg3 float32, arg4 int, arg5 BtTransform, arg6 BtVector3) {
	_swig_wrap_btIDebugDraw_drawCone(arg1, arg2, arg3, arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btIDebugDraw_drawPlane(SwigcptrBtIDebugDraw, uintptr, float32, uintptr, uintptr)

func (arg1 SwigcptrBtIDebugDraw) DrawPlane(arg2 BtVector3, arg3 float32, arg4 BtTransform, arg5 BtVector3) {
	_swig_wrap_btIDebugDraw_drawPlane(arg1, arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5.Swigcptr())
}

type BtIDebugDraw interface {
	Swigcptr() uintptr
	SwigIsBtIDebugDraw()
	DrawLine(a ...interface{})
	DrawSphere(a ...interface{})
	DrawTriangle(a ...interface{})
	DrawContactPoint(arg2 BtVector3, arg3 BtVector3, arg4 float32, arg5 int, arg6 BtVector3)
	ReportErrorWarning(arg2 string)
	Draw3dText(arg2 BtVector3, arg3 string)
	SetDebugMode(arg2 int)
	GetDebugMode() int
	DrawAabb(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3)
	DrawTransform(arg2 BtTransform, arg3 float32)
	DrawArc(a ...interface{})
	DrawSpherePatch(a ...interface{})
	DrawBox(a ...interface{})
	DrawCapsule(arg2 float32, arg3 float32, arg4 int, arg5 BtTransform, arg6 BtVector3)
	DrawCylinder(arg2 float32, arg3 float32, arg4 int, arg5 BtTransform, arg6 BtVector3)
	DrawCone(arg2 float32, arg3 float32, arg4 int, arg5 BtTransform, arg6 BtVector3)
	DrawPlane(arg2 BtVector3, arg3 float32, arg4 BtTransform, arg5 BtVector3)
}

type BtSolverMode int

func _swig_getSOLVER_RANDMIZE_ORDER() BtSolverMode

var SOLVER_RANDMIZE_ORDER BtSolverMode = _swig_getSOLVER_RANDMIZE_ORDER()

func _swig_getSOLVER_FRICTION_SEPARATE() BtSolverMode

var SOLVER_FRICTION_SEPARATE BtSolverMode = _swig_getSOLVER_FRICTION_SEPARATE()

func _swig_getSOLVER_USE_WARMSTARTING() BtSolverMode

var SOLVER_USE_WARMSTARTING BtSolverMode = _swig_getSOLVER_USE_WARMSTARTING()

func _swig_getSOLVER_USE_2_FRICTION_DIRECTIONS() BtSolverMode

var SOLVER_USE_2_FRICTION_DIRECTIONS BtSolverMode = _swig_getSOLVER_USE_2_FRICTION_DIRECTIONS()

func _swig_getSOLVER_ENABLE_FRICTION_DIRECTION_CACHING() BtSolverMode

var SOLVER_ENABLE_FRICTION_DIRECTION_CACHING BtSolverMode = _swig_getSOLVER_ENABLE_FRICTION_DIRECTION_CACHING()

func _swig_getSOLVER_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION() BtSolverMode

var SOLVER_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION BtSolverMode = _swig_getSOLVER_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION()

func _swig_getSOLVER_CACHE_FRIENDLY() BtSolverMode

var SOLVER_CACHE_FRIENDLY BtSolverMode = _swig_getSOLVER_CACHE_FRIENDLY()

func _swig_getSOLVER_SIMD() BtSolverMode

var SOLVER_SIMD BtSolverMode = _swig_getSOLVER_SIMD()

func _swig_getSOLVER_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS() BtSolverMode

var SOLVER_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS BtSolverMode = _swig_getSOLVER_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS()

func _swig_getSOLVER_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS() BtSolverMode

var SOLVER_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS BtSolverMode = _swig_getSOLVER_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS()

type SwigcptrBtContactSolverInfoData uintptr

func (p SwigcptrBtContactSolverInfoData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtContactSolverInfoData) SwigIsBtContactSolverInfoData() {
}

func _swig_wrap_btContactSolverInfoData_m_tau_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_tau(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_tau_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_tau_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_tau() float32 {
	return _swig_wrap_btContactSolverInfoData_m_tau_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_damping_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_damping(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_damping_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_damping_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_damping() float32 {
	return _swig_wrap_btContactSolverInfoData_m_damping_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_friction_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_friction(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_friction_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_friction_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_friction() float32 {
	return _swig_wrap_btContactSolverInfoData_m_friction_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_timeStep_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_timeStep(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_timeStep_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_timeStep_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_timeStep() float32 {
	return _swig_wrap_btContactSolverInfoData_m_timeStep_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_restitution_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_restitution(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_restitution_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_restitution_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_restitution() float32 {
	return _swig_wrap_btContactSolverInfoData_m_restitution_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_numIterations_set(SwigcptrBtContactSolverInfoData, int)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_numIterations(arg2 int) {
	_swig_wrap_btContactSolverInfoData_m_numIterations_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_numIterations_get(SwigcptrBtContactSolverInfoData) int

func (arg1 SwigcptrBtContactSolverInfoData) GetM_numIterations() int {
	return _swig_wrap_btContactSolverInfoData_m_numIterations_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_maxErrorReduction_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_maxErrorReduction(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_maxErrorReduction_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_maxErrorReduction_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_maxErrorReduction() float32 {
	return _swig_wrap_btContactSolverInfoData_m_maxErrorReduction_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_sor_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_sor(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_sor_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_sor_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_sor() float32 {
	return _swig_wrap_btContactSolverInfoData_m_sor_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_erp_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_erp(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_erp_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_erp_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_erp() float32 {
	return _swig_wrap_btContactSolverInfoData_m_erp_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_erp2_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_erp2(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_erp2_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_erp2_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_erp2() float32 {
	return _swig_wrap_btContactSolverInfoData_m_erp2_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_globalCfm_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_globalCfm(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_globalCfm_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_globalCfm_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_globalCfm() float32 {
	return _swig_wrap_btContactSolverInfoData_m_globalCfm_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_splitImpulse_set(SwigcptrBtContactSolverInfoData, int)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_splitImpulse(arg2 int) {
	_swig_wrap_btContactSolverInfoData_m_splitImpulse_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_splitImpulse_get(SwigcptrBtContactSolverInfoData) int

func (arg1 SwigcptrBtContactSolverInfoData) GetM_splitImpulse() int {
	return _swig_wrap_btContactSolverInfoData_m_splitImpulse_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_splitImpulsePenetrationThreshold_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_splitImpulsePenetrationThreshold(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_splitImpulsePenetrationThreshold_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_splitImpulsePenetrationThreshold_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_splitImpulsePenetrationThreshold() float32 {
	return _swig_wrap_btContactSolverInfoData_m_splitImpulsePenetrationThreshold_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_splitImpulseTurnErp_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_splitImpulseTurnErp(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_splitImpulseTurnErp_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_splitImpulseTurnErp_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_splitImpulseTurnErp() float32 {
	return _swig_wrap_btContactSolverInfoData_m_splitImpulseTurnErp_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_linearSlop_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_linearSlop(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_linearSlop_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_linearSlop_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_linearSlop() float32 {
	return _swig_wrap_btContactSolverInfoData_m_linearSlop_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_warmstartingFactor_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_warmstartingFactor(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_warmstartingFactor_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_warmstartingFactor_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_warmstartingFactor() float32 {
	return _swig_wrap_btContactSolverInfoData_m_warmstartingFactor_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_solverMode_set(SwigcptrBtContactSolverInfoData, int)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_solverMode(arg2 int) {
	_swig_wrap_btContactSolverInfoData_m_solverMode_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_solverMode_get(SwigcptrBtContactSolverInfoData) int

func (arg1 SwigcptrBtContactSolverInfoData) GetM_solverMode() int {
	return _swig_wrap_btContactSolverInfoData_m_solverMode_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_restingContactRestitutionThreshold_set(SwigcptrBtContactSolverInfoData, int)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_restingContactRestitutionThreshold(arg2 int) {
	_swig_wrap_btContactSolverInfoData_m_restingContactRestitutionThreshold_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_restingContactRestitutionThreshold_get(SwigcptrBtContactSolverInfoData) int

func (arg1 SwigcptrBtContactSolverInfoData) GetM_restingContactRestitutionThreshold() int {
	return _swig_wrap_btContactSolverInfoData_m_restingContactRestitutionThreshold_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_minimumSolverBatchSize_set(SwigcptrBtContactSolverInfoData, int)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_minimumSolverBatchSize(arg2 int) {
	_swig_wrap_btContactSolverInfoData_m_minimumSolverBatchSize_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_minimumSolverBatchSize_get(SwigcptrBtContactSolverInfoData) int

func (arg1 SwigcptrBtContactSolverInfoData) GetM_minimumSolverBatchSize() int {
	return _swig_wrap_btContactSolverInfoData_m_minimumSolverBatchSize_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_maxGyroscopicForce_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_maxGyroscopicForce(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_maxGyroscopicForce_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_maxGyroscopicForce_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_maxGyroscopicForce() float32 {
	return _swig_wrap_btContactSolverInfoData_m_maxGyroscopicForce_get(arg1)
}

func _swig_wrap_btContactSolverInfoData_m_singleAxisRollingFrictionThreshold_set(SwigcptrBtContactSolverInfoData, float32)

func (arg1 SwigcptrBtContactSolverInfoData) SetM_singleAxisRollingFrictionThreshold(arg2 float32) {
	_swig_wrap_btContactSolverInfoData_m_singleAxisRollingFrictionThreshold_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoData_m_singleAxisRollingFrictionThreshold_get(SwigcptrBtContactSolverInfoData) float32

func (arg1 SwigcptrBtContactSolverInfoData) GetM_singleAxisRollingFrictionThreshold() float32 {
	return _swig_wrap_btContactSolverInfoData_m_singleAxisRollingFrictionThreshold_get(arg1)
}

func _swig_wrap_new_btContactSolverInfoData() SwigcptrBtContactSolverInfoData

func NewBtContactSolverInfoData() BtContactSolverInfoData {
	return _swig_wrap_new_btContactSolverInfoData()
}

func _swig_wrap_delete_btContactSolverInfoData(uintptr)

func DeleteBtContactSolverInfoData(arg1 BtContactSolverInfoData) {
	_swig_wrap_delete_btContactSolverInfoData(arg1.Swigcptr())
}

type BtContactSolverInfoData interface {
	Swigcptr() uintptr
	SwigIsBtContactSolverInfoData()
	SetM_tau(arg2 float32)
	GetM_tau() float32
	SetM_damping(arg2 float32)
	GetM_damping() float32
	SetM_friction(arg2 float32)
	GetM_friction() float32
	SetM_timeStep(arg2 float32)
	GetM_timeStep() float32
	SetM_restitution(arg2 float32)
	GetM_restitution() float32
	SetM_numIterations(arg2 int)
	GetM_numIterations() int
	SetM_maxErrorReduction(arg2 float32)
	GetM_maxErrorReduction() float32
	SetM_sor(arg2 float32)
	GetM_sor() float32
	SetM_erp(arg2 float32)
	GetM_erp() float32
	SetM_erp2(arg2 float32)
	GetM_erp2() float32
	SetM_globalCfm(arg2 float32)
	GetM_globalCfm() float32
	SetM_splitImpulse(arg2 int)
	GetM_splitImpulse() int
	SetM_splitImpulsePenetrationThreshold(arg2 float32)
	GetM_splitImpulsePenetrationThreshold() float32
	SetM_splitImpulseTurnErp(arg2 float32)
	GetM_splitImpulseTurnErp() float32
	SetM_linearSlop(arg2 float32)
	GetM_linearSlop() float32
	SetM_warmstartingFactor(arg2 float32)
	GetM_warmstartingFactor() float32
	SetM_solverMode(arg2 int)
	GetM_solverMode() int
	SetM_restingContactRestitutionThreshold(arg2 int)
	GetM_restingContactRestitutionThreshold() int
	SetM_minimumSolverBatchSize(arg2 int)
	GetM_minimumSolverBatchSize() int
	SetM_maxGyroscopicForce(arg2 float32)
	GetM_maxGyroscopicForce() float32
	SetM_singleAxisRollingFrictionThreshold(arg2 float32)
	GetM_singleAxisRollingFrictionThreshold() float32
}

type SwigcptrBtContactSolverInfo uintptr

func (p SwigcptrBtContactSolverInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtContactSolverInfo) SwigIsBtContactSolverInfo() {
}

func _swig_wrap_new_btContactSolverInfo() SwigcptrBtContactSolverInfo

func NewBtContactSolverInfo() BtContactSolverInfo {
	return _swig_wrap_new_btContactSolverInfo()
}

func _swig_wrap_delete_btContactSolverInfo(uintptr)

func DeleteBtContactSolverInfo(arg1 BtContactSolverInfo) {
	_swig_wrap_delete_btContactSolverInfo(arg1.Swigcptr())
}

func _swig_wrap_SetbtContactSolverInfo_M_tau(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_tau(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_tau(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_tau(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_tau() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_tau(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_damping(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_damping(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_damping(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_damping(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_damping() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_damping(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_friction(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_friction(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_friction(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_friction(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_friction() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_friction(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_timeStep(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_timeStep(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_timeStep(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_timeStep(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_timeStep() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_timeStep(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_restitution(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_restitution(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_restitution(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_restitution(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_restitution() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_restitution(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_numIterations(SwigcptrBtContactSolverInfo, int)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_numIterations(arg1 int) {
	_swig_wrap_SetbtContactSolverInfo_M_numIterations(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_numIterations(SwigcptrBtContactSolverInfo) int

func (_swig_base SwigcptrBtContactSolverInfo) GetM_numIterations() int {
	return _swig_wrap_GetbtContactSolverInfo_M_numIterations(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_maxErrorReduction(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_maxErrorReduction(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_maxErrorReduction(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_maxErrorReduction(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_maxErrorReduction() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_maxErrorReduction(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_sor(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_sor(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_sor(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_sor(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_sor() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_sor(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_erp(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_erp(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_erp(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_erp(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_erp() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_erp(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_erp2(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_erp2(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_erp2(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_erp2(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_erp2() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_erp2(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_globalCfm(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_globalCfm(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_globalCfm(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_globalCfm(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_globalCfm() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_globalCfm(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_splitImpulse(SwigcptrBtContactSolverInfo, int)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_splitImpulse(arg1 int) {
	_swig_wrap_SetbtContactSolverInfo_M_splitImpulse(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_splitImpulse(SwigcptrBtContactSolverInfo) int

func (_swig_base SwigcptrBtContactSolverInfo) GetM_splitImpulse() int {
	return _swig_wrap_GetbtContactSolverInfo_M_splitImpulse(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_splitImpulsePenetrationThreshold(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_splitImpulsePenetrationThreshold(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_splitImpulsePenetrationThreshold(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_splitImpulsePenetrationThreshold(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_splitImpulsePenetrationThreshold() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_splitImpulsePenetrationThreshold(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_splitImpulseTurnErp(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_splitImpulseTurnErp(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_splitImpulseTurnErp(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_splitImpulseTurnErp(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_splitImpulseTurnErp() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_splitImpulseTurnErp(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_linearSlop(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_linearSlop(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_linearSlop(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_linearSlop(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_linearSlop() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_linearSlop(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_warmstartingFactor(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_warmstartingFactor(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_warmstartingFactor(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_warmstartingFactor(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_warmstartingFactor() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_warmstartingFactor(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_solverMode(SwigcptrBtContactSolverInfo, int)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_solverMode(arg1 int) {
	_swig_wrap_SetbtContactSolverInfo_M_solverMode(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_solverMode(SwigcptrBtContactSolverInfo) int

func (_swig_base SwigcptrBtContactSolverInfo) GetM_solverMode() int {
	return _swig_wrap_GetbtContactSolverInfo_M_solverMode(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_restingContactRestitutionThreshold(SwigcptrBtContactSolverInfo, int)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_restingContactRestitutionThreshold(arg1 int) {
	_swig_wrap_SetbtContactSolverInfo_M_restingContactRestitutionThreshold(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_restingContactRestitutionThreshold(SwigcptrBtContactSolverInfo) int

func (_swig_base SwigcptrBtContactSolverInfo) GetM_restingContactRestitutionThreshold() int {
	return _swig_wrap_GetbtContactSolverInfo_M_restingContactRestitutionThreshold(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_minimumSolverBatchSize(SwigcptrBtContactSolverInfo, int)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_minimumSolverBatchSize(arg1 int) {
	_swig_wrap_SetbtContactSolverInfo_M_minimumSolverBatchSize(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_minimumSolverBatchSize(SwigcptrBtContactSolverInfo) int

func (_swig_base SwigcptrBtContactSolverInfo) GetM_minimumSolverBatchSize() int {
	return _swig_wrap_GetbtContactSolverInfo_M_minimumSolverBatchSize(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_maxGyroscopicForce(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_maxGyroscopicForce(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_maxGyroscopicForce(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_maxGyroscopicForce(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_maxGyroscopicForce() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_maxGyroscopicForce(_swig_base)
}

func _swig_wrap_SetbtContactSolverInfo_M_singleAxisRollingFrictionThreshold(SwigcptrBtContactSolverInfo, float32)

func (_swig_base SwigcptrBtContactSolverInfo) SetM_singleAxisRollingFrictionThreshold(arg1 float32) {
	_swig_wrap_SetbtContactSolverInfo_M_singleAxisRollingFrictionThreshold(_swig_base, arg1)
}

func _swig_wrap_GetbtContactSolverInfo_M_singleAxisRollingFrictionThreshold(SwigcptrBtContactSolverInfo) float32

func (_swig_base SwigcptrBtContactSolverInfo) GetM_singleAxisRollingFrictionThreshold() float32 {
	return _swig_wrap_GetbtContactSolverInfo_M_singleAxisRollingFrictionThreshold(_swig_base)
}

func (p SwigcptrBtContactSolverInfo) SwigIsBtContactSolverInfoData() {
}

func (p SwigcptrBtContactSolverInfo) SwigGetBtContactSolverInfoData() BtContactSolverInfoData {
	return SwigcptrBtContactSolverInfoData(p.Swigcptr())
}

type BtContactSolverInfo interface {
	Swigcptr() uintptr
	SwigIsBtContactSolverInfo()
	SetM_tau(arg1 float32)
	GetM_tau() float32
	SetM_damping(arg1 float32)
	GetM_damping() float32
	SetM_friction(arg1 float32)
	GetM_friction() float32
	SetM_timeStep(arg1 float32)
	GetM_timeStep() float32
	SetM_restitution(arg1 float32)
	GetM_restitution() float32
	SetM_numIterations(arg1 int)
	GetM_numIterations() int
	SetM_maxErrorReduction(arg1 float32)
	GetM_maxErrorReduction() float32
	SetM_sor(arg1 float32)
	GetM_sor() float32
	SetM_erp(arg1 float32)
	GetM_erp() float32
	SetM_erp2(arg1 float32)
	GetM_erp2() float32
	SetM_globalCfm(arg1 float32)
	GetM_globalCfm() float32
	SetM_splitImpulse(arg1 int)
	GetM_splitImpulse() int
	SetM_splitImpulsePenetrationThreshold(arg1 float32)
	GetM_splitImpulsePenetrationThreshold() float32
	SetM_splitImpulseTurnErp(arg1 float32)
	GetM_splitImpulseTurnErp() float32
	SetM_linearSlop(arg1 float32)
	GetM_linearSlop() float32
	SetM_warmstartingFactor(arg1 float32)
	GetM_warmstartingFactor() float32
	SetM_solverMode(arg1 int)
	GetM_solverMode() int
	SetM_restingContactRestitutionThreshold(arg1 int)
	GetM_restingContactRestitutionThreshold() int
	SetM_minimumSolverBatchSize(arg1 int)
	GetM_minimumSolverBatchSize() int
	SetM_maxGyroscopicForce(arg1 float32)
	GetM_maxGyroscopicForce() float32
	SetM_singleAxisRollingFrictionThreshold(arg1 float32)
	GetM_singleAxisRollingFrictionThreshold() float32
	SwigIsBtContactSolverInfoData()
	SwigGetBtContactSolverInfoData() BtContactSolverInfoData
}

type SwigcptrBtContactSolverInfoDoubleData uintptr

func (p SwigcptrBtContactSolverInfoDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtContactSolverInfoDoubleData) SwigIsBtContactSolverInfoDoubleData() {
}

func _swig_wrap_btContactSolverInfoDoubleData_m_tau_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_tau(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_tau_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_tau_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_tau() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_tau_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_damping_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_damping(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_damping_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_damping_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_damping() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_damping_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_friction_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_friction(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_friction_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_friction_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_friction() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_friction_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_timeStep_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_timeStep(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_timeStep_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_timeStep_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_timeStep() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_timeStep_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_restitution_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_restitution(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_restitution_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_restitution_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_restitution() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_restitution_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_maxErrorReduction_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_maxErrorReduction(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_maxErrorReduction_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_maxErrorReduction_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_maxErrorReduction() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_maxErrorReduction_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_sor_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_sor(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_sor_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_sor_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_sor() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_sor_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_erp_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_erp(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_erp_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_erp_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_erp() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_erp_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_erp2_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_erp2(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_erp2_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_erp2_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_erp2() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_erp2_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_globalCfm_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_globalCfm(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_globalCfm_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_globalCfm_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_globalCfm() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_globalCfm_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_splitImpulsePenetrationThreshold_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_splitImpulsePenetrationThreshold(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_splitImpulsePenetrationThreshold_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_splitImpulsePenetrationThreshold_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_splitImpulsePenetrationThreshold() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_splitImpulsePenetrationThreshold_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_splitImpulseTurnErp_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_splitImpulseTurnErp(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_splitImpulseTurnErp_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_splitImpulseTurnErp_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_splitImpulseTurnErp() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_splitImpulseTurnErp_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_linearSlop_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_linearSlop(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_linearSlop_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_linearSlop_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_linearSlop() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_linearSlop_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_warmstartingFactor_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_warmstartingFactor(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_warmstartingFactor_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_warmstartingFactor_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_warmstartingFactor() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_warmstartingFactor_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_maxGyroscopicForce_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_maxGyroscopicForce(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_maxGyroscopicForce_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_maxGyroscopicForce_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_maxGyroscopicForce() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_maxGyroscopicForce_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_singleAxisRollingFrictionThreshold_set(SwigcptrBtContactSolverInfoDoubleData, float64)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_singleAxisRollingFrictionThreshold(arg2 float64) {
	_swig_wrap_btContactSolverInfoDoubleData_m_singleAxisRollingFrictionThreshold_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_singleAxisRollingFrictionThreshold_get(SwigcptrBtContactSolverInfoDoubleData) float64

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_singleAxisRollingFrictionThreshold() float64 {
	return _swig_wrap_btContactSolverInfoDoubleData_m_singleAxisRollingFrictionThreshold_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_numIterations_set(SwigcptrBtContactSolverInfoDoubleData, int)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_numIterations(arg2 int) {
	_swig_wrap_btContactSolverInfoDoubleData_m_numIterations_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_numIterations_get(SwigcptrBtContactSolverInfoDoubleData) int

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_numIterations() int {
	return _swig_wrap_btContactSolverInfoDoubleData_m_numIterations_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_solverMode_set(SwigcptrBtContactSolverInfoDoubleData, int)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_solverMode(arg2 int) {
	_swig_wrap_btContactSolverInfoDoubleData_m_solverMode_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_solverMode_get(SwigcptrBtContactSolverInfoDoubleData) int

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_solverMode() int {
	return _swig_wrap_btContactSolverInfoDoubleData_m_solverMode_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_restingContactRestitutionThreshold_set(SwigcptrBtContactSolverInfoDoubleData, int)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_restingContactRestitutionThreshold(arg2 int) {
	_swig_wrap_btContactSolverInfoDoubleData_m_restingContactRestitutionThreshold_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_restingContactRestitutionThreshold_get(SwigcptrBtContactSolverInfoDoubleData) int

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_restingContactRestitutionThreshold() int {
	return _swig_wrap_btContactSolverInfoDoubleData_m_restingContactRestitutionThreshold_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_minimumSolverBatchSize_set(SwigcptrBtContactSolverInfoDoubleData, int)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_minimumSolverBatchSize(arg2 int) {
	_swig_wrap_btContactSolverInfoDoubleData_m_minimumSolverBatchSize_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_minimumSolverBatchSize_get(SwigcptrBtContactSolverInfoDoubleData) int

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_minimumSolverBatchSize() int {
	return _swig_wrap_btContactSolverInfoDoubleData_m_minimumSolverBatchSize_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_splitImpulse_set(SwigcptrBtContactSolverInfoDoubleData, int)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_splitImpulse(arg2 int) {
	_swig_wrap_btContactSolverInfoDoubleData_m_splitImpulse_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_splitImpulse_get(SwigcptrBtContactSolverInfoDoubleData) int

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_splitImpulse() int {
	return _swig_wrap_btContactSolverInfoDoubleData_m_splitImpulse_get(arg1)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_padding_set(SwigcptrBtContactSolverInfoDoubleData, string)

func (arg1 SwigcptrBtContactSolverInfoDoubleData) SetM_padding(arg2 string) {
	_swig_wrap_btContactSolverInfoDoubleData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoDoubleData_m_padding_get(SwigcptrBtContactSolverInfoDoubleData) string

func (arg1 SwigcptrBtContactSolverInfoDoubleData) GetM_padding() string {
	return _swig_wrap_btContactSolverInfoDoubleData_m_padding_get(arg1)
}

func _swig_wrap_new_btContactSolverInfoDoubleData() SwigcptrBtContactSolverInfoDoubleData

func NewBtContactSolverInfoDoubleData() BtContactSolverInfoDoubleData {
	return _swig_wrap_new_btContactSolverInfoDoubleData()
}

func _swig_wrap_delete_btContactSolverInfoDoubleData(uintptr)

func DeleteBtContactSolverInfoDoubleData(arg1 BtContactSolverInfoDoubleData) {
	_swig_wrap_delete_btContactSolverInfoDoubleData(arg1.Swigcptr())
}

type BtContactSolverInfoDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtContactSolverInfoDoubleData()
	SetM_tau(arg2 float64)
	GetM_tau() float64
	SetM_damping(arg2 float64)
	GetM_damping() float64
	SetM_friction(arg2 float64)
	GetM_friction() float64
	SetM_timeStep(arg2 float64)
	GetM_timeStep() float64
	SetM_restitution(arg2 float64)
	GetM_restitution() float64
	SetM_maxErrorReduction(arg2 float64)
	GetM_maxErrorReduction() float64
	SetM_sor(arg2 float64)
	GetM_sor() float64
	SetM_erp(arg2 float64)
	GetM_erp() float64
	SetM_erp2(arg2 float64)
	GetM_erp2() float64
	SetM_globalCfm(arg2 float64)
	GetM_globalCfm() float64
	SetM_splitImpulsePenetrationThreshold(arg2 float64)
	GetM_splitImpulsePenetrationThreshold() float64
	SetM_splitImpulseTurnErp(arg2 float64)
	GetM_splitImpulseTurnErp() float64
	SetM_linearSlop(arg2 float64)
	GetM_linearSlop() float64
	SetM_warmstartingFactor(arg2 float64)
	GetM_warmstartingFactor() float64
	SetM_maxGyroscopicForce(arg2 float64)
	GetM_maxGyroscopicForce() float64
	SetM_singleAxisRollingFrictionThreshold(arg2 float64)
	GetM_singleAxisRollingFrictionThreshold() float64
	SetM_numIterations(arg2 int)
	GetM_numIterations() int
	SetM_solverMode(arg2 int)
	GetM_solverMode() int
	SetM_restingContactRestitutionThreshold(arg2 int)
	GetM_restingContactRestitutionThreshold() int
	SetM_minimumSolverBatchSize(arg2 int)
	GetM_minimumSolverBatchSize() int
	SetM_splitImpulse(arg2 int)
	GetM_splitImpulse() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtContactSolverInfoFloatData uintptr

func (p SwigcptrBtContactSolverInfoFloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtContactSolverInfoFloatData) SwigIsBtContactSolverInfoFloatData() {
}

func _swig_wrap_btContactSolverInfoFloatData_m_tau_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_tau(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_tau_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_tau_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_tau() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_tau_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_damping_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_damping(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_damping_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_damping_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_damping() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_damping_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_friction_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_friction(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_friction_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_friction_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_friction() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_friction_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_timeStep_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_timeStep(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_timeStep_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_timeStep_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_timeStep() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_timeStep_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_restitution_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_restitution(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_restitution_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_restitution_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_restitution() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_restitution_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_maxErrorReduction_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_maxErrorReduction(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_maxErrorReduction_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_maxErrorReduction_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_maxErrorReduction() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_maxErrorReduction_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_sor_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_sor(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_sor_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_sor_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_sor() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_sor_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_erp_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_erp(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_erp_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_erp_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_erp() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_erp_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_erp2_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_erp2(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_erp2_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_erp2_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_erp2() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_erp2_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_globalCfm_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_globalCfm(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_globalCfm_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_globalCfm_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_globalCfm() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_globalCfm_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_splitImpulsePenetrationThreshold_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_splitImpulsePenetrationThreshold(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_splitImpulsePenetrationThreshold_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_splitImpulsePenetrationThreshold_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_splitImpulsePenetrationThreshold() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_splitImpulsePenetrationThreshold_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_splitImpulseTurnErp_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_splitImpulseTurnErp(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_splitImpulseTurnErp_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_splitImpulseTurnErp_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_splitImpulseTurnErp() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_splitImpulseTurnErp_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_linearSlop_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_linearSlop(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_linearSlop_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_linearSlop_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_linearSlop() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_linearSlop_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_warmstartingFactor_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_warmstartingFactor(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_warmstartingFactor_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_warmstartingFactor_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_warmstartingFactor() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_warmstartingFactor_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_maxGyroscopicForce_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_maxGyroscopicForce(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_maxGyroscopicForce_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_maxGyroscopicForce_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_maxGyroscopicForce() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_maxGyroscopicForce_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_singleAxisRollingFrictionThreshold_set(SwigcptrBtContactSolverInfoFloatData, float32)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_singleAxisRollingFrictionThreshold(arg2 float32) {
	_swig_wrap_btContactSolverInfoFloatData_m_singleAxisRollingFrictionThreshold_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_singleAxisRollingFrictionThreshold_get(SwigcptrBtContactSolverInfoFloatData) float32

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_singleAxisRollingFrictionThreshold() float32 {
	return _swig_wrap_btContactSolverInfoFloatData_m_singleAxisRollingFrictionThreshold_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_numIterations_set(SwigcptrBtContactSolverInfoFloatData, int)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_numIterations(arg2 int) {
	_swig_wrap_btContactSolverInfoFloatData_m_numIterations_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_numIterations_get(SwigcptrBtContactSolverInfoFloatData) int

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_numIterations() int {
	return _swig_wrap_btContactSolverInfoFloatData_m_numIterations_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_solverMode_set(SwigcptrBtContactSolverInfoFloatData, int)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_solverMode(arg2 int) {
	_swig_wrap_btContactSolverInfoFloatData_m_solverMode_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_solverMode_get(SwigcptrBtContactSolverInfoFloatData) int

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_solverMode() int {
	return _swig_wrap_btContactSolverInfoFloatData_m_solverMode_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_restingContactRestitutionThreshold_set(SwigcptrBtContactSolverInfoFloatData, int)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_restingContactRestitutionThreshold(arg2 int) {
	_swig_wrap_btContactSolverInfoFloatData_m_restingContactRestitutionThreshold_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_restingContactRestitutionThreshold_get(SwigcptrBtContactSolverInfoFloatData) int

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_restingContactRestitutionThreshold() int {
	return _swig_wrap_btContactSolverInfoFloatData_m_restingContactRestitutionThreshold_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_minimumSolverBatchSize_set(SwigcptrBtContactSolverInfoFloatData, int)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_minimumSolverBatchSize(arg2 int) {
	_swig_wrap_btContactSolverInfoFloatData_m_minimumSolverBatchSize_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_minimumSolverBatchSize_get(SwigcptrBtContactSolverInfoFloatData) int

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_minimumSolverBatchSize() int {
	return _swig_wrap_btContactSolverInfoFloatData_m_minimumSolverBatchSize_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_splitImpulse_set(SwigcptrBtContactSolverInfoFloatData, int)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_splitImpulse(arg2 int) {
	_swig_wrap_btContactSolverInfoFloatData_m_splitImpulse_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_splitImpulse_get(SwigcptrBtContactSolverInfoFloatData) int

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_splitImpulse() int {
	return _swig_wrap_btContactSolverInfoFloatData_m_splitImpulse_get(arg1)
}

func _swig_wrap_btContactSolverInfoFloatData_m_padding_set(SwigcptrBtContactSolverInfoFloatData, string)

func (arg1 SwigcptrBtContactSolverInfoFloatData) SetM_padding(arg2 string) {
	_swig_wrap_btContactSolverInfoFloatData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btContactSolverInfoFloatData_m_padding_get(SwigcptrBtContactSolverInfoFloatData) string

func (arg1 SwigcptrBtContactSolverInfoFloatData) GetM_padding() string {
	return _swig_wrap_btContactSolverInfoFloatData_m_padding_get(arg1)
}

func _swig_wrap_new_btContactSolverInfoFloatData() SwigcptrBtContactSolverInfoFloatData

func NewBtContactSolverInfoFloatData() BtContactSolverInfoFloatData {
	return _swig_wrap_new_btContactSolverInfoFloatData()
}

func _swig_wrap_delete_btContactSolverInfoFloatData(uintptr)

func DeleteBtContactSolverInfoFloatData(arg1 BtContactSolverInfoFloatData) {
	_swig_wrap_delete_btContactSolverInfoFloatData(arg1.Swigcptr())
}

type BtContactSolverInfoFloatData interface {
	Swigcptr() uintptr
	SwigIsBtContactSolverInfoFloatData()
	SetM_tau(arg2 float32)
	GetM_tau() float32
	SetM_damping(arg2 float32)
	GetM_damping() float32
	SetM_friction(arg2 float32)
	GetM_friction() float32
	SetM_timeStep(arg2 float32)
	GetM_timeStep() float32
	SetM_restitution(arg2 float32)
	GetM_restitution() float32
	SetM_maxErrorReduction(arg2 float32)
	GetM_maxErrorReduction() float32
	SetM_sor(arg2 float32)
	GetM_sor() float32
	SetM_erp(arg2 float32)
	GetM_erp() float32
	SetM_erp2(arg2 float32)
	GetM_erp2() float32
	SetM_globalCfm(arg2 float32)
	GetM_globalCfm() float32
	SetM_splitImpulsePenetrationThreshold(arg2 float32)
	GetM_splitImpulsePenetrationThreshold() float32
	SetM_splitImpulseTurnErp(arg2 float32)
	GetM_splitImpulseTurnErp() float32
	SetM_linearSlop(arg2 float32)
	GetM_linearSlop() float32
	SetM_warmstartingFactor(arg2 float32)
	GetM_warmstartingFactor() float32
	SetM_maxGyroscopicForce(arg2 float32)
	GetM_maxGyroscopicForce() float32
	SetM_singleAxisRollingFrictionThreshold(arg2 float32)
	GetM_singleAxisRollingFrictionThreshold() float32
	SetM_numIterations(arg2 int)
	GetM_numIterations() int
	SetM_solverMode(arg2 int)
	GetM_solverMode() int
	SetM_restingContactRestitutionThreshold(arg2 int)
	GetM_restingContactRestitutionThreshold() int
	SetM_minimumSolverBatchSize(arg2 int)
	GetM_minimumSolverBatchSize() int
	SetM_splitImpulse(arg2 int)
	GetM_splitImpulse() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type BtDynamicsWorldType int

func _swig_getBT_SIMPLE_DYNAMICS_WORLD() BtDynamicsWorldType

var BT_SIMPLE_DYNAMICS_WORLD BtDynamicsWorldType = _swig_getBT_SIMPLE_DYNAMICS_WORLD()

func _swig_getBT_DISCRETE_DYNAMICS_WORLD() BtDynamicsWorldType

var BT_DISCRETE_DYNAMICS_WORLD BtDynamicsWorldType = _swig_getBT_DISCRETE_DYNAMICS_WORLD()

func _swig_getBT_CONTINUOUS_DYNAMICS_WORLD() BtDynamicsWorldType

var BT_CONTINUOUS_DYNAMICS_WORLD BtDynamicsWorldType = _swig_getBT_CONTINUOUS_DYNAMICS_WORLD()

func _swig_getBT_SOFT_RIGID_DYNAMICS_WORLD() BtDynamicsWorldType

var BT_SOFT_RIGID_DYNAMICS_WORLD BtDynamicsWorldType = _swig_getBT_SOFT_RIGID_DYNAMICS_WORLD()

func _swig_getBT_GPU_DYNAMICS_WORLD() BtDynamicsWorldType

var BT_GPU_DYNAMICS_WORLD BtDynamicsWorldType = _swig_getBT_GPU_DYNAMICS_WORLD()

type SwigcptrBtDynamicsWorld uintptr

func (p SwigcptrBtDynamicsWorld) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDynamicsWorld) SwigIsBtDynamicsWorld() {
}

func _swig_wrap_delete_btDynamicsWorld(uintptr)

func DeleteBtDynamicsWorld(arg1 BtDynamicsWorld) {
	_swig_wrap_delete_btDynamicsWorld(arg1.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_stepSimulation__SWIG_0(SwigcptrBtDynamicsWorld, float32, int, float32) int

func (arg1 SwigcptrBtDynamicsWorld) StepSimulation__SWIG_0(arg2 float32, arg3 int, arg4 float32) int {
	return _swig_wrap_btDynamicsWorld_stepSimulation__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btDynamicsWorld_stepSimulation__SWIG_1(SwigcptrBtDynamicsWorld, float32, int) int

func (arg1 SwigcptrBtDynamicsWorld) StepSimulation__SWIG_1(arg2 float32, arg3 int) int {
	return _swig_wrap_btDynamicsWorld_stepSimulation__SWIG_1(arg1, arg2, arg3)
}

func _swig_wrap_btDynamicsWorld_stepSimulation__SWIG_2(SwigcptrBtDynamicsWorld, float32) int

func (arg1 SwigcptrBtDynamicsWorld) StepSimulation__SWIG_2(arg2 float32) int {
	return _swig_wrap_btDynamicsWorld_stepSimulation__SWIG_2(arg1, arg2)
}

func (p SwigcptrBtDynamicsWorld) StepSimulation(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.StepSimulation__SWIG_2(a[0].(float32))
	}
	if argc == 2 {
		return p.StepSimulation__SWIG_1(a[0].(float32), a[1].(int))
	}
	if argc == 3 {
		return p.StepSimulation__SWIG_0(a[0].(float32), a[1].(int), a[2].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDynamicsWorld_debugDrawWorld(SwigcptrBtDynamicsWorld)

func (arg1 SwigcptrBtDynamicsWorld) DebugDrawWorld() {
	_swig_wrap_btDynamicsWorld_debugDrawWorld(arg1)
}

func _swig_wrap_btDynamicsWorld_addConstraint__SWIG_0(SwigcptrBtDynamicsWorld, uintptr, bool)

func (arg1 SwigcptrBtDynamicsWorld) AddConstraint__SWIG_0(arg2 BtTypedConstraint, arg3 bool) {
	_swig_wrap_btDynamicsWorld_addConstraint__SWIG_0(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btDynamicsWorld_addConstraint__SWIG_1(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) AddConstraint__SWIG_1(arg2 BtTypedConstraint) {
	_swig_wrap_btDynamicsWorld_addConstraint__SWIG_1(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtDynamicsWorld) AddConstraint(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddConstraint__SWIG_1(a[0].(BtTypedConstraint))
		return
	}
	if argc == 2 {
		p.AddConstraint__SWIG_0(a[0].(BtTypedConstraint), a[1].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDynamicsWorld_removeConstraint(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) RemoveConstraint(arg2 BtTypedConstraint) {
	_swig_wrap_btDynamicsWorld_removeConstraint(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_addAction(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) AddAction(arg2 BtActionInterface) {
	_swig_wrap_btDynamicsWorld_addAction(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_removeAction(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) RemoveAction(arg2 BtActionInterface) {
	_swig_wrap_btDynamicsWorld_removeAction(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_setGravity(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) SetGravity(arg2 BtVector3) {
	_swig_wrap_btDynamicsWorld_setGravity(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_getGravity(SwigcptrBtDynamicsWorld) SwigcptrBtVector3

func (arg1 SwigcptrBtDynamicsWorld) GetGravity() BtVector3 {
	return _swig_wrap_btDynamicsWorld_getGravity(arg1)
}

func _swig_wrap_btDynamicsWorld_synchronizeMotionStates(SwigcptrBtDynamicsWorld)

func (arg1 SwigcptrBtDynamicsWorld) SynchronizeMotionStates() {
	_swig_wrap_btDynamicsWorld_synchronizeMotionStates(arg1)
}

func _swig_wrap_btDynamicsWorld_addRigidBody__SWIG_0(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) AddRigidBody__SWIG_0(arg2 BtRigidBody) {
	_swig_wrap_btDynamicsWorld_addRigidBody__SWIG_0(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_addRigidBody__SWIG_1(SwigcptrBtDynamicsWorld, uintptr, int16, int16)

func (arg1 SwigcptrBtDynamicsWorld) AddRigidBody__SWIG_1(arg2 BtRigidBody, arg3 int16, arg4 int16) {
	_swig_wrap_btDynamicsWorld_addRigidBody__SWIG_1(arg1, arg2.Swigcptr(), arg3, arg4)
}

func (p SwigcptrBtDynamicsWorld) AddRigidBody(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddRigidBody__SWIG_0(a[0].(BtRigidBody))
		return
	}
	if argc == 3 {
		p.AddRigidBody__SWIG_1(a[0].(BtRigidBody), a[1].(int16), a[2].(int16))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDynamicsWorld_removeRigidBody(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) RemoveRigidBody(arg2 BtRigidBody) {
	_swig_wrap_btDynamicsWorld_removeRigidBody(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_setConstraintSolver(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) SetConstraintSolver(arg2 BtConstraintSolver) {
	_swig_wrap_btDynamicsWorld_setConstraintSolver(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_getConstraintSolver(SwigcptrBtDynamicsWorld) SwigcptrBtConstraintSolver

func (arg1 SwigcptrBtDynamicsWorld) GetConstraintSolver() BtConstraintSolver {
	return _swig_wrap_btDynamicsWorld_getConstraintSolver(arg1)
}

func _swig_wrap_btDynamicsWorld_getNumConstraints(SwigcptrBtDynamicsWorld) int

func (arg1 SwigcptrBtDynamicsWorld) GetNumConstraints() int {
	return _swig_wrap_btDynamicsWorld_getNumConstraints(arg1)
}

func _swig_wrap_btDynamicsWorld_getConstraint__SWIG_0(SwigcptrBtDynamicsWorld, int) SwigcptrBtTypedConstraint

func (arg1 SwigcptrBtDynamicsWorld) GetConstraint__SWIG_0(arg2 int) BtTypedConstraint {
	return _swig_wrap_btDynamicsWorld_getConstraint__SWIG_0(arg1, arg2)
}

func _swig_wrap_btDynamicsWorld_getConstraint__SWIG_1(SwigcptrBtDynamicsWorld, int) SwigcptrBtTypedConstraint

func (arg1 SwigcptrBtDynamicsWorld) GetConstraint__SWIG_1(arg2 int) BtTypedConstraint {
	return _swig_wrap_btDynamicsWorld_getConstraint__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtDynamicsWorld) GetConstraint(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.GetConstraint__SWIG_0(a[0].(int))
	}
	if argc == 1 {
		return p.GetConstraint__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDynamicsWorld_getWorldType(SwigcptrBtDynamicsWorld) BtDynamicsWorldType

func (arg1 SwigcptrBtDynamicsWorld) GetWorldType() BtDynamicsWorldType {
	return _swig_wrap_btDynamicsWorld_getWorldType(arg1)
}

func _swig_wrap_btDynamicsWorld_clearForces(SwigcptrBtDynamicsWorld)

func (arg1 SwigcptrBtDynamicsWorld) ClearForces() {
	_swig_wrap_btDynamicsWorld_clearForces(arg1)
}

func _swig_wrap_btDynamicsWorld_setInternalTickCallback__SWIG_0(SwigcptrBtDynamicsWorld, *_swig_fnptr, uintptr, bool)

func (arg1 SwigcptrBtDynamicsWorld) SetInternalTickCallback__SWIG_0(arg2 *_swig_fnptr, arg3 uintptr, arg4 bool) {
	_swig_wrap_btDynamicsWorld_setInternalTickCallback__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btDynamicsWorld_setInternalTickCallback__SWIG_1(SwigcptrBtDynamicsWorld, *_swig_fnptr, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) SetInternalTickCallback__SWIG_1(arg2 *_swig_fnptr, arg3 uintptr) {
	_swig_wrap_btDynamicsWorld_setInternalTickCallback__SWIG_1(arg1, arg2, arg3)
}

func _swig_wrap_btDynamicsWorld_setInternalTickCallback__SWIG_2(SwigcptrBtDynamicsWorld, *_swig_fnptr)

func (arg1 SwigcptrBtDynamicsWorld) SetInternalTickCallback__SWIG_2(arg2 *_swig_fnptr) {
	_swig_wrap_btDynamicsWorld_setInternalTickCallback__SWIG_2(arg1, arg2)
}

func (p SwigcptrBtDynamicsWorld) SetInternalTickCallback(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.SetInternalTickCallback__SWIG_2(a[0].(*_swig_fnptr))
		return
	}
	if argc == 2 {
		p.SetInternalTickCallback__SWIG_1(a[0].(*_swig_fnptr), a[1].(uintptr))
		return
	}
	if argc == 3 {
		p.SetInternalTickCallback__SWIG_0(a[0].(*_swig_fnptr), a[1].(uintptr), a[2].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDynamicsWorld_setWorldUserInfo(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) SetWorldUserInfo(arg2 uintptr) {
	_swig_wrap_btDynamicsWorld_setWorldUserInfo(arg1, arg2)
}

func _swig_wrap_btDynamicsWorld_getWorldUserInfo(SwigcptrBtDynamicsWorld) uintptr

func (arg1 SwigcptrBtDynamicsWorld) GetWorldUserInfo() uintptr {
	return _swig_wrap_btDynamicsWorld_getWorldUserInfo(arg1)
}

func _swig_wrap_btDynamicsWorld_getSolverInfo(SwigcptrBtDynamicsWorld) SwigcptrBtContactSolverInfo

func (arg1 SwigcptrBtDynamicsWorld) GetSolverInfo() BtContactSolverInfo {
	return _swig_wrap_btDynamicsWorld_getSolverInfo(arg1)
}

func _swig_wrap_btDynamicsWorld_addVehicle(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) AddVehicle(arg2 BtActionInterface) {
	_swig_wrap_btDynamicsWorld_addVehicle(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_removeVehicle(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) RemoveVehicle(arg2 BtActionInterface) {
	_swig_wrap_btDynamicsWorld_removeVehicle(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_addCharacter(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) AddCharacter(arg2 BtActionInterface) {
	_swig_wrap_btDynamicsWorld_addCharacter(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_removeCharacter(SwigcptrBtDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDynamicsWorld) RemoveCharacter(arg2 BtActionInterface) {
	_swig_wrap_btDynamicsWorld_removeCharacter(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_setBroadphase(SwigcptrBtDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtDynamicsWorld) SetBroadphase(arg1 BtBroadphaseInterface) {
	_swig_wrap_btDynamicsWorld_setBroadphase(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_getBroadphase__SWIG_0(SwigcptrBtDynamicsWorld) SwigcptrBtBroadphaseInterface

func (_swig_base SwigcptrBtDynamicsWorld) GetBroadphase__SWIG_0() BtBroadphaseInterface {
	return _swig_wrap_btDynamicsWorld_getBroadphase__SWIG_0(_swig_base)
}

func _swig_wrap_btDynamicsWorld_getBroadphase__SWIG_1(SwigcptrBtDynamicsWorld) SwigcptrBtBroadphaseInterface

func (_swig_base SwigcptrBtDynamicsWorld) GetBroadphase__SWIG_1() BtBroadphaseInterface {
	return _swig_wrap_btDynamicsWorld_getBroadphase__SWIG_1(_swig_base)
}

func (p SwigcptrBtDynamicsWorld) GetBroadphase(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetBroadphase__SWIG_0()
	}
	if argc == 0 {
		return p.GetBroadphase__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDynamicsWorld_getPairCache(SwigcptrBtDynamicsWorld) SwigcptrBtOverlappingPairCache

func (_swig_base SwigcptrBtDynamicsWorld) GetPairCache() BtOverlappingPairCache {
	return _swig_wrap_btDynamicsWorld_getPairCache(_swig_base)
}

func _swig_wrap_btDynamicsWorld_getDispatcher__SWIG_0(SwigcptrBtDynamicsWorld) SwigcptrBtDispatcher

func (_swig_base SwigcptrBtDynamicsWorld) GetDispatcher__SWIG_0() BtDispatcher {
	return _swig_wrap_btDynamicsWorld_getDispatcher__SWIG_0(_swig_base)
}

func _swig_wrap_btDynamicsWorld_getDispatcher__SWIG_1(SwigcptrBtDynamicsWorld) SwigcptrBtDispatcher

func (_swig_base SwigcptrBtDynamicsWorld) GetDispatcher__SWIG_1() BtDispatcher {
	return _swig_wrap_btDynamicsWorld_getDispatcher__SWIG_1(_swig_base)
}

func (p SwigcptrBtDynamicsWorld) GetDispatcher(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetDispatcher__SWIG_0()
	}
	if argc == 0 {
		return p.GetDispatcher__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDynamicsWorld_updateSingleAabb(SwigcptrBtDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtDynamicsWorld) UpdateSingleAabb(arg1 BtCollisionObject) {
	_swig_wrap_btDynamicsWorld_updateSingleAabb(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_updateAabbs(SwigcptrBtDynamicsWorld)

func (_swig_base SwigcptrBtDynamicsWorld) UpdateAabbs() {
	_swig_wrap_btDynamicsWorld_updateAabbs(_swig_base)
}

func _swig_wrap_btDynamicsWorld_computeOverlappingPairs(SwigcptrBtDynamicsWorld)

func (_swig_base SwigcptrBtDynamicsWorld) ComputeOverlappingPairs() {
	_swig_wrap_btDynamicsWorld_computeOverlappingPairs(_swig_base)
}

func _swig_wrap_btDynamicsWorld_setDebugDrawer(SwigcptrBtDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtDynamicsWorld) SetDebugDrawer(arg1 BtIDebugDraw) {
	_swig_wrap_btDynamicsWorld_setDebugDrawer(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_getDebugDrawer(SwigcptrBtDynamicsWorld) SwigcptrBtIDebugDraw

func (_swig_base SwigcptrBtDynamicsWorld) GetDebugDrawer() BtIDebugDraw {
	return _swig_wrap_btDynamicsWorld_getDebugDrawer(_swig_base)
}

func _swig_wrap_btDynamicsWorld_debugDrawObject(SwigcptrBtDynamicsWorld, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtDynamicsWorld) DebugDrawObject(arg1 BtTransform, arg2 BtCollisionShape, arg3 BtVector3) {
	_swig_wrap_btDynamicsWorld_debugDrawObject(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_getNumCollisionObjects(SwigcptrBtDynamicsWorld) int

func (_swig_base SwigcptrBtDynamicsWorld) GetNumCollisionObjects() int {
	return _swig_wrap_btDynamicsWorld_getNumCollisionObjects(_swig_base)
}

func _swig_wrap_btDynamicsWorld_rayTest(SwigcptrBtDynamicsWorld, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtDynamicsWorld) RayTest(arg1 BtVector3, arg2 BtVector3, arg3 RayResultCallback) {
	_swig_wrap_btDynamicsWorld_rayTest(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_convexSweepTest__SWIG_0(SwigcptrBtDynamicsWorld, uintptr, uintptr, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtDynamicsWorld) ConvexSweepTest__SWIG_0(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 ConvexResultCallback, arg5 float32) {
	_swig_wrap_btDynamicsWorld_convexSweepTest__SWIG_0(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_btDynamicsWorld_convexSweepTest__SWIG_1(SwigcptrBtDynamicsWorld, uintptr, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtDynamicsWorld) ConvexSweepTest__SWIG_1(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 ConvexResultCallback) {
	_swig_wrap_btDynamicsWorld_convexSweepTest__SWIG_1(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func (p SwigcptrBtDynamicsWorld) ConvexSweepTest(a ...interface{}) {
	argc := len(a)
	if argc == 4 {
		p.ConvexSweepTest__SWIG_1(a[0].(BtConvexShape), a[1].(BtTransform), a[2].(BtTransform), a[3].(ConvexResultCallback))
		return
	}
	if argc == 5 {
		p.ConvexSweepTest__SWIG_0(a[0].(BtConvexShape), a[1].(BtTransform), a[2].(BtTransform), a[3].(ConvexResultCallback), a[4].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDynamicsWorld_contactTest(SwigcptrBtDynamicsWorld, uintptr, uintptr)

func (_swig_base SwigcptrBtDynamicsWorld) ContactTest(arg1 BtCollisionObject, arg2 ContactResultCallback) {
	_swig_wrap_btDynamicsWorld_contactTest(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_contactPairTest(SwigcptrBtDynamicsWorld, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtDynamicsWorld) ContactPairTest(arg1 BtCollisionObject, arg2 BtCollisionObject, arg3 ContactResultCallback) {
	_swig_wrap_btDynamicsWorld_contactPairTest(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_rayTestSingle(uintptr, uintptr, uintptr, uintptr, uintptr, uintptr)

func BtDynamicsWorldRayTestSingle(arg1 BtTransform, arg2 BtTransform, arg3 BtCollisionObject, arg4 BtCollisionShape, arg5 BtTransform, arg6 RayResultCallback) {
	_swig_wrap_btDynamicsWorld_rayTestSingle(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_rayTestSingleInternal(uintptr, uintptr, uintptr, uintptr)

func BtDynamicsWorldRayTestSingleInternal(arg1 BtTransform, arg2 BtTransform, arg3 BtCollisionObjectWrapper, arg4 RayResultCallback) {
	_swig_wrap_btDynamicsWorld_rayTestSingleInternal(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_objectQuerySingle(uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, float32)

func BtDynamicsWorldObjectQuerySingle(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 BtCollisionObject, arg5 BtCollisionShape, arg6 BtTransform, arg7 ConvexResultCallback, arg8 float32) {
	_swig_wrap_btDynamicsWorld_objectQuerySingle(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7.Swigcptr(), arg8)
}

func _swig_wrap_btDynamicsWorld_objectQuerySingleInternal(uintptr, uintptr, uintptr, uintptr, uintptr, float32)

func BtDynamicsWorldObjectQuerySingleInternal(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 BtCollisionObjectWrapper, arg5 ConvexResultCallback, arg6 float32) {
	_swig_wrap_btDynamicsWorld_objectQuerySingleInternal(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6)
}

func _swig_wrap_btDynamicsWorld_addCollisionObject__SWIG_0(SwigcptrBtDynamicsWorld, uintptr, int16, int16)

func (_swig_base SwigcptrBtDynamicsWorld) AddCollisionObject__SWIG_0(arg1 BtCollisionObject, arg2 int16, arg3 int16) {
	_swig_wrap_btDynamicsWorld_addCollisionObject__SWIG_0(_swig_base, arg1.Swigcptr(), arg2, arg3)
}

func _swig_wrap_btDynamicsWorld_addCollisionObject__SWIG_1(SwigcptrBtDynamicsWorld, uintptr, int16)

func (_swig_base SwigcptrBtDynamicsWorld) AddCollisionObject__SWIG_1(arg1 BtCollisionObject, arg2 int16) {
	_swig_wrap_btDynamicsWorld_addCollisionObject__SWIG_1(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btDynamicsWorld_addCollisionObject__SWIG_2(SwigcptrBtDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtDynamicsWorld) AddCollisionObject__SWIG_2(arg1 BtCollisionObject) {
	_swig_wrap_btDynamicsWorld_addCollisionObject__SWIG_2(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtDynamicsWorld) AddCollisionObject(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddCollisionObject__SWIG_2(a[0].(BtCollisionObject))
		return
	}
	if argc == 2 {
		p.AddCollisionObject__SWIG_1(a[0].(BtCollisionObject), a[1].(int16))
		return
	}
	if argc == 3 {
		p.AddCollisionObject__SWIG_0(a[0].(BtCollisionObject), a[1].(int16), a[2].(int16))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDynamicsWorld_getCollisionObjectArray__SWIG_0(SwigcptrBtDynamicsWorld) SwigcptrBtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_

func (_swig_base SwigcptrBtDynamicsWorld) GetCollisionObjectArray__SWIG_0() BtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_ {
	return _swig_wrap_btDynamicsWorld_getCollisionObjectArray__SWIG_0(_swig_base)
}

func _swig_wrap_btDynamicsWorld_getCollisionObjectArray__SWIG_1(SwigcptrBtDynamicsWorld) SwigcptrBtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_

func (_swig_base SwigcptrBtDynamicsWorld) GetCollisionObjectArray__SWIG_1() BtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_ {
	return _swig_wrap_btDynamicsWorld_getCollisionObjectArray__SWIG_1(_swig_base)
}

func (p SwigcptrBtDynamicsWorld) GetCollisionObjectArray(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetCollisionObjectArray__SWIG_0()
	}
	if argc == 0 {
		return p.GetCollisionObjectArray__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDynamicsWorld_removeCollisionObject(SwigcptrBtDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtDynamicsWorld) RemoveCollisionObject(arg1 BtCollisionObject) {
	_swig_wrap_btDynamicsWorld_removeCollisionObject(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btDynamicsWorld_performDiscreteCollisionDetection(SwigcptrBtDynamicsWorld)

func (_swig_base SwigcptrBtDynamicsWorld) PerformDiscreteCollisionDetection() {
	_swig_wrap_btDynamicsWorld_performDiscreteCollisionDetection(_swig_base)
}

func _swig_wrap_btDynamicsWorld_getDispatchInfo__SWIG_0(SwigcptrBtDynamicsWorld) SwigcptrBtDispatcherInfo

func (_swig_base SwigcptrBtDynamicsWorld) GetDispatchInfo__SWIG_0() BtDispatcherInfo {
	return _swig_wrap_btDynamicsWorld_getDispatchInfo__SWIG_0(_swig_base)
}

func _swig_wrap_btDynamicsWorld_getDispatchInfo__SWIG_1(SwigcptrBtDynamicsWorld) SwigcptrBtDispatcherInfo

func (_swig_base SwigcptrBtDynamicsWorld) GetDispatchInfo__SWIG_1() BtDispatcherInfo {
	return _swig_wrap_btDynamicsWorld_getDispatchInfo__SWIG_1(_swig_base)
}

func (p SwigcptrBtDynamicsWorld) GetDispatchInfo(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetDispatchInfo__SWIG_0()
	}
	if argc == 0 {
		return p.GetDispatchInfo__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDynamicsWorld_getForceUpdateAllAabbs(SwigcptrBtDynamicsWorld) bool

func (_swig_base SwigcptrBtDynamicsWorld) GetForceUpdateAllAabbs() bool {
	return _swig_wrap_btDynamicsWorld_getForceUpdateAllAabbs(_swig_base)
}

func _swig_wrap_btDynamicsWorld_setForceUpdateAllAabbs(SwigcptrBtDynamicsWorld, bool)

func (_swig_base SwigcptrBtDynamicsWorld) SetForceUpdateAllAabbs(arg1 bool) {
	_swig_wrap_btDynamicsWorld_setForceUpdateAllAabbs(_swig_base, arg1)
}

func _swig_wrap_btDynamicsWorld_serialize(SwigcptrBtDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtDynamicsWorld) Serialize(arg1 BtSerializer) {
	_swig_wrap_btDynamicsWorld_serialize(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtDynamicsWorld) SwigIsBtCollisionWorld() {
}

func (p SwigcptrBtDynamicsWorld) SwigGetBtCollisionWorld() BtCollisionWorld {
	return SwigcptrBtCollisionWorld(p.Swigcptr())
}

type BtDynamicsWorld interface {
	Swigcptr() uintptr
	SwigIsBtDynamicsWorld()
	StepSimulation(a ...interface{}) int
	DebugDrawWorld()
	AddConstraint(a ...interface{})
	RemoveConstraint(arg2 BtTypedConstraint)
	AddAction(arg2 BtActionInterface)
	RemoveAction(arg2 BtActionInterface)
	SetGravity(arg2 BtVector3)
	GetGravity() BtVector3
	SynchronizeMotionStates()
	AddRigidBody(a ...interface{})
	RemoveRigidBody(arg2 BtRigidBody)
	SetConstraintSolver(arg2 BtConstraintSolver)
	GetConstraintSolver() BtConstraintSolver
	GetNumConstraints() int
	GetConstraint(a ...interface{}) interface{}
	GetWorldType() BtDynamicsWorldType
	ClearForces()
	SetInternalTickCallback(a ...interface{})
	SetWorldUserInfo(arg2 uintptr)
	GetWorldUserInfo() uintptr
	GetSolverInfo() BtContactSolverInfo
	AddVehicle(arg2 BtActionInterface)
	RemoveVehicle(arg2 BtActionInterface)
	AddCharacter(arg2 BtActionInterface)
	RemoveCharacter(arg2 BtActionInterface)
	SetBroadphase(arg1 BtBroadphaseInterface)
	GetBroadphase(a ...interface{}) interface{}
	GetPairCache() BtOverlappingPairCache
	GetDispatcher(a ...interface{}) interface{}
	UpdateSingleAabb(arg1 BtCollisionObject)
	UpdateAabbs()
	ComputeOverlappingPairs()
	SetDebugDrawer(arg1 BtIDebugDraw)
	GetDebugDrawer() BtIDebugDraw
	DebugDrawObject(arg1 BtTransform, arg2 BtCollisionShape, arg3 BtVector3)
	GetNumCollisionObjects() int
	RayTest(arg1 BtVector3, arg2 BtVector3, arg3 RayResultCallback)
	ConvexSweepTest(a ...interface{})
	ContactTest(arg1 BtCollisionObject, arg2 ContactResultCallback)
	ContactPairTest(arg1 BtCollisionObject, arg2 BtCollisionObject, arg3 ContactResultCallback)
	AddCollisionObject(a ...interface{})
	GetCollisionObjectArray(a ...interface{}) interface{}
	RemoveCollisionObject(arg1 BtCollisionObject)
	PerformDiscreteCollisionDetection()
	GetDispatchInfo(a ...interface{}) interface{}
	GetForceUpdateAllAabbs() bool
	SetForceUpdateAllAabbs(arg1 bool)
	Serialize(arg1 BtSerializer)
	SwigIsBtCollisionWorld()
	SwigGetBtCollisionWorld() BtCollisionWorld
}

type SwigcptrBtDynamicsWorldDoubleData uintptr

func (p SwigcptrBtDynamicsWorldDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDynamicsWorldDoubleData) SwigIsBtDynamicsWorldDoubleData() {
}

func _swig_wrap_btDynamicsWorldDoubleData_m_solverInfo_set(SwigcptrBtDynamicsWorldDoubleData, uintptr)

func (arg1 SwigcptrBtDynamicsWorldDoubleData) SetM_solverInfo(arg2 BtContactSolverInfoDoubleData) {
	_swig_wrap_btDynamicsWorldDoubleData_m_solverInfo_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorldDoubleData_m_solverInfo_get(SwigcptrBtDynamicsWorldDoubleData) SwigcptrBtContactSolverInfoDoubleData

func (arg1 SwigcptrBtDynamicsWorldDoubleData) GetM_solverInfo() BtContactSolverInfoDoubleData {
	return _swig_wrap_btDynamicsWorldDoubleData_m_solverInfo_get(arg1)
}

func _swig_wrap_btDynamicsWorldDoubleData_m_gravity_set(SwigcptrBtDynamicsWorldDoubleData, uintptr)

func (arg1 SwigcptrBtDynamicsWorldDoubleData) SetM_gravity(arg2 BtVector3DoubleData) {
	_swig_wrap_btDynamicsWorldDoubleData_m_gravity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorldDoubleData_m_gravity_get(SwigcptrBtDynamicsWorldDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtDynamicsWorldDoubleData) GetM_gravity() BtVector3DoubleData {
	return _swig_wrap_btDynamicsWorldDoubleData_m_gravity_get(arg1)
}

func _swig_wrap_new_btDynamicsWorldDoubleData() SwigcptrBtDynamicsWorldDoubleData

func NewBtDynamicsWorldDoubleData() BtDynamicsWorldDoubleData {
	return _swig_wrap_new_btDynamicsWorldDoubleData()
}

func _swig_wrap_delete_btDynamicsWorldDoubleData(uintptr)

func DeleteBtDynamicsWorldDoubleData(arg1 BtDynamicsWorldDoubleData) {
	_swig_wrap_delete_btDynamicsWorldDoubleData(arg1.Swigcptr())
}

type BtDynamicsWorldDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtDynamicsWorldDoubleData()
	SetM_solverInfo(arg2 BtContactSolverInfoDoubleData)
	GetM_solverInfo() BtContactSolverInfoDoubleData
	SetM_gravity(arg2 BtVector3DoubleData)
	GetM_gravity() BtVector3DoubleData
}

type SwigcptrBtDynamicsWorldFloatData uintptr

func (p SwigcptrBtDynamicsWorldFloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDynamicsWorldFloatData) SwigIsBtDynamicsWorldFloatData() {
}

func _swig_wrap_btDynamicsWorldFloatData_m_solverInfo_set(SwigcptrBtDynamicsWorldFloatData, uintptr)

func (arg1 SwigcptrBtDynamicsWorldFloatData) SetM_solverInfo(arg2 BtContactSolverInfoFloatData) {
	_swig_wrap_btDynamicsWorldFloatData_m_solverInfo_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorldFloatData_m_solverInfo_get(SwigcptrBtDynamicsWorldFloatData) SwigcptrBtContactSolverInfoFloatData

func (arg1 SwigcptrBtDynamicsWorldFloatData) GetM_solverInfo() BtContactSolverInfoFloatData {
	return _swig_wrap_btDynamicsWorldFloatData_m_solverInfo_get(arg1)
}

func _swig_wrap_btDynamicsWorldFloatData_m_gravity_set(SwigcptrBtDynamicsWorldFloatData, uintptr)

func (arg1 SwigcptrBtDynamicsWorldFloatData) SetM_gravity(arg2 BtVector3FloatData) {
	_swig_wrap_btDynamicsWorldFloatData_m_gravity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDynamicsWorldFloatData_m_gravity_get(SwigcptrBtDynamicsWorldFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtDynamicsWorldFloatData) GetM_gravity() BtVector3FloatData {
	return _swig_wrap_btDynamicsWorldFloatData_m_gravity_get(arg1)
}

func _swig_wrap_new_btDynamicsWorldFloatData() SwigcptrBtDynamicsWorldFloatData

func NewBtDynamicsWorldFloatData() BtDynamicsWorldFloatData {
	return _swig_wrap_new_btDynamicsWorldFloatData()
}

func _swig_wrap_delete_btDynamicsWorldFloatData(uintptr)

func DeleteBtDynamicsWorldFloatData(arg1 BtDynamicsWorldFloatData) {
	_swig_wrap_delete_btDynamicsWorldFloatData(arg1.Swigcptr())
}

type BtDynamicsWorldFloatData interface {
	Swigcptr() uintptr
	SwigIsBtDynamicsWorldFloatData()
	SetM_solverInfo(arg2 BtContactSolverInfoFloatData)
	GetM_solverInfo() BtContactSolverInfoFloatData
	SetM_gravity(arg2 BtVector3FloatData)
	GetM_gravity() BtVector3FloatData
}

type SwigcptrBtDiscreteDynamicsWorld uintptr

func (p SwigcptrBtDiscreteDynamicsWorld) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDiscreteDynamicsWorld) SwigIsBtDiscreteDynamicsWorld() {
}

func _swig_wrap_new_btDiscreteDynamicsWorld(uintptr, uintptr, uintptr, uintptr) SwigcptrBtDiscreteDynamicsWorld

func NewBtDiscreteDynamicsWorld(arg1 BtDispatcher, arg2 BtBroadphaseInterface, arg3 BtConstraintSolver, arg4 BtCollisionConfiguration) BtDiscreteDynamicsWorld {
	return _swig_wrap_new_btDiscreteDynamicsWorld(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_delete_btDiscreteDynamicsWorld(uintptr)

func DeleteBtDiscreteDynamicsWorld(arg1 BtDiscreteDynamicsWorld) {
	_swig_wrap_delete_btDiscreteDynamicsWorld(arg1.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_stepSimulation__SWIG_0(SwigcptrBtDiscreteDynamicsWorld, float32, int, float32) int

func (arg1 SwigcptrBtDiscreteDynamicsWorld) StepSimulation__SWIG_0(arg2 float32, arg3 int, arg4 float32) int {
	return _swig_wrap_btDiscreteDynamicsWorld_stepSimulation__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btDiscreteDynamicsWorld_stepSimulation__SWIG_1(SwigcptrBtDiscreteDynamicsWorld, float32, int) int

func (arg1 SwigcptrBtDiscreteDynamicsWorld) StepSimulation__SWIG_1(arg2 float32, arg3 int) int {
	return _swig_wrap_btDiscreteDynamicsWorld_stepSimulation__SWIG_1(arg1, arg2, arg3)
}

func _swig_wrap_btDiscreteDynamicsWorld_stepSimulation__SWIG_2(SwigcptrBtDiscreteDynamicsWorld, float32) int

func (arg1 SwigcptrBtDiscreteDynamicsWorld) StepSimulation__SWIG_2(arg2 float32) int {
	return _swig_wrap_btDiscreteDynamicsWorld_stepSimulation__SWIG_2(arg1, arg2)
}

func (p SwigcptrBtDiscreteDynamicsWorld) StepSimulation(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.StepSimulation__SWIG_2(a[0].(float32))
	}
	if argc == 2 {
		return p.StepSimulation__SWIG_1(a[0].(float32), a[1].(int))
	}
	if argc == 3 {
		return p.StepSimulation__SWIG_0(a[0].(float32), a[1].(int), a[2].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_synchronizeMotionStates(SwigcptrBtDiscreteDynamicsWorld)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) SynchronizeMotionStates() {
	_swig_wrap_btDiscreteDynamicsWorld_synchronizeMotionStates(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_synchronizeSingleMotionState(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) SynchronizeSingleMotionState(arg2 BtRigidBody) {
	_swig_wrap_btDiscreteDynamicsWorld_synchronizeSingleMotionState(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_addConstraint__SWIG_0(SwigcptrBtDiscreteDynamicsWorld, uintptr, bool)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) AddConstraint__SWIG_0(arg2 BtTypedConstraint, arg3 bool) {
	_swig_wrap_btDiscreteDynamicsWorld_addConstraint__SWIG_0(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btDiscreteDynamicsWorld_addConstraint__SWIG_1(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) AddConstraint__SWIG_1(arg2 BtTypedConstraint) {
	_swig_wrap_btDiscreteDynamicsWorld_addConstraint__SWIG_1(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtDiscreteDynamicsWorld) AddConstraint(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddConstraint__SWIG_1(a[0].(BtTypedConstraint))
		return
	}
	if argc == 2 {
		p.AddConstraint__SWIG_0(a[0].(BtTypedConstraint), a[1].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_removeConstraint(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) RemoveConstraint(arg2 BtTypedConstraint) {
	_swig_wrap_btDiscreteDynamicsWorld_removeConstraint(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_addAction(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) AddAction(arg2 BtActionInterface) {
	_swig_wrap_btDiscreteDynamicsWorld_addAction(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_removeAction(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) RemoveAction(arg2 BtActionInterface) {
	_swig_wrap_btDiscreteDynamicsWorld_removeAction(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_getSimulationIslandManager__SWIG_0(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtSimulationIslandManager

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetSimulationIslandManager__SWIG_0() BtSimulationIslandManager {
	return _swig_wrap_btDiscreteDynamicsWorld_getSimulationIslandManager__SWIG_0(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_getSimulationIslandManager__SWIG_1(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtSimulationIslandManager

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetSimulationIslandManager__SWIG_1() BtSimulationIslandManager {
	return _swig_wrap_btDiscreteDynamicsWorld_getSimulationIslandManager__SWIG_1(arg1)
}

func (p SwigcptrBtDiscreteDynamicsWorld) GetSimulationIslandManager(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetSimulationIslandManager__SWIG_0()
	}
	if argc == 0 {
		return p.GetSimulationIslandManager__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_getCollisionWorld(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtCollisionWorld

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetCollisionWorld() BtCollisionWorld {
	return _swig_wrap_btDiscreteDynamicsWorld_getCollisionWorld(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_setGravity(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) SetGravity(arg2 BtVector3) {
	_swig_wrap_btDiscreteDynamicsWorld_setGravity(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_getGravity(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtVector3

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetGravity() BtVector3 {
	return _swig_wrap_btDiscreteDynamicsWorld_getGravity(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_addCollisionObject__SWIG_0(SwigcptrBtDiscreteDynamicsWorld, uintptr, int16, int16)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) AddCollisionObject__SWIG_0(arg2 BtCollisionObject, arg3 int16, arg4 int16) {
	_swig_wrap_btDiscreteDynamicsWorld_addCollisionObject__SWIG_0(arg1, arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_btDiscreteDynamicsWorld_addCollisionObject__SWIG_1(SwigcptrBtDiscreteDynamicsWorld, uintptr, int16)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) AddCollisionObject__SWIG_1(arg2 BtCollisionObject, arg3 int16) {
	_swig_wrap_btDiscreteDynamicsWorld_addCollisionObject__SWIG_1(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btDiscreteDynamicsWorld_addCollisionObject__SWIG_2(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) AddCollisionObject__SWIG_2(arg2 BtCollisionObject) {
	_swig_wrap_btDiscreteDynamicsWorld_addCollisionObject__SWIG_2(arg1, arg2.Swigcptr())
}

func (p SwigcptrBtDiscreteDynamicsWorld) AddCollisionObject(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddCollisionObject__SWIG_2(a[0].(BtCollisionObject))
		return
	}
	if argc == 2 {
		p.AddCollisionObject__SWIG_1(a[0].(BtCollisionObject), a[1].(int16))
		return
	}
	if argc == 3 {
		p.AddCollisionObject__SWIG_0(a[0].(BtCollisionObject), a[1].(int16), a[2].(int16))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_addRigidBody__SWIG_0(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) AddRigidBody__SWIG_0(arg2 BtRigidBody) {
	_swig_wrap_btDiscreteDynamicsWorld_addRigidBody__SWIG_0(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_addRigidBody__SWIG_1(SwigcptrBtDiscreteDynamicsWorld, uintptr, int16, int16)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) AddRigidBody__SWIG_1(arg2 BtRigidBody, arg3 int16, arg4 int16) {
	_swig_wrap_btDiscreteDynamicsWorld_addRigidBody__SWIG_1(arg1, arg2.Swigcptr(), arg3, arg4)
}

func (p SwigcptrBtDiscreteDynamicsWorld) AddRigidBody(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddRigidBody__SWIG_0(a[0].(BtRigidBody))
		return
	}
	if argc == 3 {
		p.AddRigidBody__SWIG_1(a[0].(BtRigidBody), a[1].(int16), a[2].(int16))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_removeRigidBody(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) RemoveRigidBody(arg2 BtRigidBody) {
	_swig_wrap_btDiscreteDynamicsWorld_removeRigidBody(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_removeCollisionObject(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) RemoveCollisionObject(arg2 BtCollisionObject) {
	_swig_wrap_btDiscreteDynamicsWorld_removeCollisionObject(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_debugDrawConstraint(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) DebugDrawConstraint(arg2 BtTypedConstraint) {
	_swig_wrap_btDiscreteDynamicsWorld_debugDrawConstraint(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_debugDrawWorld(SwigcptrBtDiscreteDynamicsWorld)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) DebugDrawWorld() {
	_swig_wrap_btDiscreteDynamicsWorld_debugDrawWorld(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_setConstraintSolver(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) SetConstraintSolver(arg2 BtConstraintSolver) {
	_swig_wrap_btDiscreteDynamicsWorld_setConstraintSolver(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_getConstraintSolver(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtConstraintSolver

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetConstraintSolver() BtConstraintSolver {
	return _swig_wrap_btDiscreteDynamicsWorld_getConstraintSolver(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_getNumConstraints(SwigcptrBtDiscreteDynamicsWorld) int

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetNumConstraints() int {
	return _swig_wrap_btDiscreteDynamicsWorld_getNumConstraints(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_getConstraint__SWIG_0(SwigcptrBtDiscreteDynamicsWorld, int) SwigcptrBtTypedConstraint

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetConstraint__SWIG_0(arg2 int) BtTypedConstraint {
	return _swig_wrap_btDiscreteDynamicsWorld_getConstraint__SWIG_0(arg1, arg2)
}

func _swig_wrap_btDiscreteDynamicsWorld_getConstraint__SWIG_1(SwigcptrBtDiscreteDynamicsWorld, int) SwigcptrBtTypedConstraint

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetConstraint__SWIG_1(arg2 int) BtTypedConstraint {
	return _swig_wrap_btDiscreteDynamicsWorld_getConstraint__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtDiscreteDynamicsWorld) GetConstraint(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.GetConstraint__SWIG_0(a[0].(int))
	}
	if argc == 1 {
		return p.GetConstraint__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_getWorldType(SwigcptrBtDiscreteDynamicsWorld) BtDynamicsWorldType

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetWorldType() BtDynamicsWorldType {
	return _swig_wrap_btDiscreteDynamicsWorld_getWorldType(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_clearForces(SwigcptrBtDiscreteDynamicsWorld)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) ClearForces() {
	_swig_wrap_btDiscreteDynamicsWorld_clearForces(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_applyGravity(SwigcptrBtDiscreteDynamicsWorld)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) ApplyGravity() {
	_swig_wrap_btDiscreteDynamicsWorld_applyGravity(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_setNumTasks(SwigcptrBtDiscreteDynamicsWorld, int)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) SetNumTasks(arg2 int) {
	_swig_wrap_btDiscreteDynamicsWorld_setNumTasks(arg1, arg2)
}

func _swig_wrap_btDiscreteDynamicsWorld_updateVehicles(SwigcptrBtDiscreteDynamicsWorld, float32)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) UpdateVehicles(arg2 float32) {
	_swig_wrap_btDiscreteDynamicsWorld_updateVehicles(arg1, arg2)
}

func _swig_wrap_btDiscreteDynamicsWorld_addVehicle(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) AddVehicle(arg2 BtActionInterface) {
	_swig_wrap_btDiscreteDynamicsWorld_addVehicle(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_removeVehicle(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) RemoveVehicle(arg2 BtActionInterface) {
	_swig_wrap_btDiscreteDynamicsWorld_removeVehicle(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_addCharacter(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) AddCharacter(arg2 BtActionInterface) {
	_swig_wrap_btDiscreteDynamicsWorld_addCharacter(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_removeCharacter(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) RemoveCharacter(arg2 BtActionInterface) {
	_swig_wrap_btDiscreteDynamicsWorld_removeCharacter(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_setSynchronizeAllMotionStates(SwigcptrBtDiscreteDynamicsWorld, bool)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) SetSynchronizeAllMotionStates(arg2 bool) {
	_swig_wrap_btDiscreteDynamicsWorld_setSynchronizeAllMotionStates(arg1, arg2)
}

func _swig_wrap_btDiscreteDynamicsWorld_getSynchronizeAllMotionStates(SwigcptrBtDiscreteDynamicsWorld) bool

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetSynchronizeAllMotionStates() bool {
	return _swig_wrap_btDiscreteDynamicsWorld_getSynchronizeAllMotionStates(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_setApplySpeculativeContactRestitution(SwigcptrBtDiscreteDynamicsWorld, bool)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) SetApplySpeculativeContactRestitution(arg2 bool) {
	_swig_wrap_btDiscreteDynamicsWorld_setApplySpeculativeContactRestitution(arg1, arg2)
}

func _swig_wrap_btDiscreteDynamicsWorld_getApplySpeculativeContactRestitution(SwigcptrBtDiscreteDynamicsWorld) bool

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetApplySpeculativeContactRestitution() bool {
	return _swig_wrap_btDiscreteDynamicsWorld_getApplySpeculativeContactRestitution(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_serialize(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) Serialize(arg2 BtSerializer) {
	_swig_wrap_btDiscreteDynamicsWorld_serialize(arg1, arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_setLatencyMotionStateInterpolation(SwigcptrBtDiscreteDynamicsWorld, bool)

func (arg1 SwigcptrBtDiscreteDynamicsWorld) SetLatencyMotionStateInterpolation(arg2 bool) {
	_swig_wrap_btDiscreteDynamicsWorld_setLatencyMotionStateInterpolation(arg1, arg2)
}

func _swig_wrap_btDiscreteDynamicsWorld_getLatencyMotionStateInterpolation(SwigcptrBtDiscreteDynamicsWorld) bool

func (arg1 SwigcptrBtDiscreteDynamicsWorld) GetLatencyMotionStateInterpolation() bool {
	return _swig_wrap_btDiscreteDynamicsWorld_getLatencyMotionStateInterpolation(arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_setInternalTickCallback__SWIG_0(SwigcptrBtDiscreteDynamicsWorld, *_swig_fnptr, uintptr, bool)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) SetInternalTickCallback__SWIG_0(arg1 *_swig_fnptr, arg2 uintptr, arg3 bool) {
	_swig_wrap_btDiscreteDynamicsWorld_setInternalTickCallback__SWIG_0(_swig_base, arg1, arg2, arg3)
}

func _swig_wrap_btDiscreteDynamicsWorld_setInternalTickCallback__SWIG_1(SwigcptrBtDiscreteDynamicsWorld, *_swig_fnptr, uintptr)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) SetInternalTickCallback__SWIG_1(arg1 *_swig_fnptr, arg2 uintptr) {
	_swig_wrap_btDiscreteDynamicsWorld_setInternalTickCallback__SWIG_1(_swig_base, arg1, arg2)
}

func _swig_wrap_btDiscreteDynamicsWorld_setInternalTickCallback__SWIG_2(SwigcptrBtDiscreteDynamicsWorld, *_swig_fnptr)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) SetInternalTickCallback__SWIG_2(arg1 *_swig_fnptr) {
	_swig_wrap_btDiscreteDynamicsWorld_setInternalTickCallback__SWIG_2(_swig_base, arg1)
}

func (p SwigcptrBtDiscreteDynamicsWorld) SetInternalTickCallback(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.SetInternalTickCallback__SWIG_2(a[0].(*_swig_fnptr))
		return
	}
	if argc == 2 {
		p.SetInternalTickCallback__SWIG_1(a[0].(*_swig_fnptr), a[1].(uintptr))
		return
	}
	if argc == 3 {
		p.SetInternalTickCallback__SWIG_0(a[0].(*_swig_fnptr), a[1].(uintptr), a[2].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_setWorldUserInfo(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) SetWorldUserInfo(arg1 uintptr) {
	_swig_wrap_btDiscreteDynamicsWorld_setWorldUserInfo(_swig_base, arg1)
}

func _swig_wrap_btDiscreteDynamicsWorld_getWorldUserInfo(SwigcptrBtDiscreteDynamicsWorld) uintptr

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetWorldUserInfo() uintptr {
	return _swig_wrap_btDiscreteDynamicsWorld_getWorldUserInfo(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_getSolverInfo(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtContactSolverInfo

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetSolverInfo() BtContactSolverInfo {
	return _swig_wrap_btDiscreteDynamicsWorld_getSolverInfo(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_setBroadphase(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) SetBroadphase(arg1 BtBroadphaseInterface) {
	_swig_wrap_btDiscreteDynamicsWorld_setBroadphase(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_getBroadphase__SWIG_0(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtBroadphaseInterface

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetBroadphase__SWIG_0() BtBroadphaseInterface {
	return _swig_wrap_btDiscreteDynamicsWorld_getBroadphase__SWIG_0(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_getBroadphase__SWIG_1(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtBroadphaseInterface

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetBroadphase__SWIG_1() BtBroadphaseInterface {
	return _swig_wrap_btDiscreteDynamicsWorld_getBroadphase__SWIG_1(_swig_base)
}

func (p SwigcptrBtDiscreteDynamicsWorld) GetBroadphase(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetBroadphase__SWIG_0()
	}
	if argc == 0 {
		return p.GetBroadphase__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_getPairCache(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtOverlappingPairCache

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetPairCache() BtOverlappingPairCache {
	return _swig_wrap_btDiscreteDynamicsWorld_getPairCache(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_getDispatcher__SWIG_0(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtDispatcher

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetDispatcher__SWIG_0() BtDispatcher {
	return _swig_wrap_btDiscreteDynamicsWorld_getDispatcher__SWIG_0(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_getDispatcher__SWIG_1(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtDispatcher

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetDispatcher__SWIG_1() BtDispatcher {
	return _swig_wrap_btDiscreteDynamicsWorld_getDispatcher__SWIG_1(_swig_base)
}

func (p SwigcptrBtDiscreteDynamicsWorld) GetDispatcher(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetDispatcher__SWIG_0()
	}
	if argc == 0 {
		return p.GetDispatcher__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_updateSingleAabb(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) UpdateSingleAabb(arg1 BtCollisionObject) {
	_swig_wrap_btDiscreteDynamicsWorld_updateSingleAabb(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_updateAabbs(SwigcptrBtDiscreteDynamicsWorld)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) UpdateAabbs() {
	_swig_wrap_btDiscreteDynamicsWorld_updateAabbs(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_computeOverlappingPairs(SwigcptrBtDiscreteDynamicsWorld)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) ComputeOverlappingPairs() {
	_swig_wrap_btDiscreteDynamicsWorld_computeOverlappingPairs(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_setDebugDrawer(SwigcptrBtDiscreteDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) SetDebugDrawer(arg1 BtIDebugDraw) {
	_swig_wrap_btDiscreteDynamicsWorld_setDebugDrawer(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_getDebugDrawer(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtIDebugDraw

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetDebugDrawer() BtIDebugDraw {
	return _swig_wrap_btDiscreteDynamicsWorld_getDebugDrawer(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_debugDrawObject(SwigcptrBtDiscreteDynamicsWorld, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) DebugDrawObject(arg1 BtTransform, arg2 BtCollisionShape, arg3 BtVector3) {
	_swig_wrap_btDiscreteDynamicsWorld_debugDrawObject(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_getNumCollisionObjects(SwigcptrBtDiscreteDynamicsWorld) int

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetNumCollisionObjects() int {
	return _swig_wrap_btDiscreteDynamicsWorld_getNumCollisionObjects(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_rayTest(SwigcptrBtDiscreteDynamicsWorld, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) RayTest(arg1 BtVector3, arg2 BtVector3, arg3 RayResultCallback) {
	_swig_wrap_btDiscreteDynamicsWorld_rayTest(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_convexSweepTest__SWIG_0(SwigcptrBtDiscreteDynamicsWorld, uintptr, uintptr, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) ConvexSweepTest__SWIG_0(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 ConvexResultCallback, arg5 float32) {
	_swig_wrap_btDiscreteDynamicsWorld_convexSweepTest__SWIG_0(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_btDiscreteDynamicsWorld_convexSweepTest__SWIG_1(SwigcptrBtDiscreteDynamicsWorld, uintptr, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) ConvexSweepTest__SWIG_1(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 ConvexResultCallback) {
	_swig_wrap_btDiscreteDynamicsWorld_convexSweepTest__SWIG_1(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func (p SwigcptrBtDiscreteDynamicsWorld) ConvexSweepTest(a ...interface{}) {
	argc := len(a)
	if argc == 4 {
		p.ConvexSweepTest__SWIG_1(a[0].(BtConvexShape), a[1].(BtTransform), a[2].(BtTransform), a[3].(ConvexResultCallback))
		return
	}
	if argc == 5 {
		p.ConvexSweepTest__SWIG_0(a[0].(BtConvexShape), a[1].(BtTransform), a[2].(BtTransform), a[3].(ConvexResultCallback), a[4].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_contactTest(SwigcptrBtDiscreteDynamicsWorld, uintptr, uintptr)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) ContactTest(arg1 BtCollisionObject, arg2 ContactResultCallback) {
	_swig_wrap_btDiscreteDynamicsWorld_contactTest(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_contactPairTest(SwigcptrBtDiscreteDynamicsWorld, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) ContactPairTest(arg1 BtCollisionObject, arg2 BtCollisionObject, arg3 ContactResultCallback) {
	_swig_wrap_btDiscreteDynamicsWorld_contactPairTest(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_rayTestSingle(uintptr, uintptr, uintptr, uintptr, uintptr, uintptr)

func BtDiscreteDynamicsWorldRayTestSingle(arg1 BtTransform, arg2 BtTransform, arg3 BtCollisionObject, arg4 BtCollisionShape, arg5 BtTransform, arg6 RayResultCallback) {
	_swig_wrap_btDiscreteDynamicsWorld_rayTestSingle(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_rayTestSingleInternal(uintptr, uintptr, uintptr, uintptr)

func BtDiscreteDynamicsWorldRayTestSingleInternal(arg1 BtTransform, arg2 BtTransform, arg3 BtCollisionObjectWrapper, arg4 RayResultCallback) {
	_swig_wrap_btDiscreteDynamicsWorld_rayTestSingleInternal(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btDiscreteDynamicsWorld_objectQuerySingle(uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, float32)

func BtDiscreteDynamicsWorldObjectQuerySingle(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 BtCollisionObject, arg5 BtCollisionShape, arg6 BtTransform, arg7 ConvexResultCallback, arg8 float32) {
	_swig_wrap_btDiscreteDynamicsWorld_objectQuerySingle(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7.Swigcptr(), arg8)
}

func _swig_wrap_btDiscreteDynamicsWorld_objectQuerySingleInternal(uintptr, uintptr, uintptr, uintptr, uintptr, float32)

func BtDiscreteDynamicsWorldObjectQuerySingleInternal(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 BtCollisionObjectWrapper, arg5 ConvexResultCallback, arg6 float32) {
	_swig_wrap_btDiscreteDynamicsWorld_objectQuerySingleInternal(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6)
}

func _swig_wrap_btDiscreteDynamicsWorld_getCollisionObjectArray__SWIG_0(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetCollisionObjectArray__SWIG_0() BtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_ {
	return _swig_wrap_btDiscreteDynamicsWorld_getCollisionObjectArray__SWIG_0(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_getCollisionObjectArray__SWIG_1(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetCollisionObjectArray__SWIG_1() BtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_ {
	return _swig_wrap_btDiscreteDynamicsWorld_getCollisionObjectArray__SWIG_1(_swig_base)
}

func (p SwigcptrBtDiscreteDynamicsWorld) GetCollisionObjectArray(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetCollisionObjectArray__SWIG_0()
	}
	if argc == 0 {
		return p.GetCollisionObjectArray__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_performDiscreteCollisionDetection(SwigcptrBtDiscreteDynamicsWorld)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) PerformDiscreteCollisionDetection() {
	_swig_wrap_btDiscreteDynamicsWorld_performDiscreteCollisionDetection(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_getDispatchInfo__SWIG_0(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtDispatcherInfo

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetDispatchInfo__SWIG_0() BtDispatcherInfo {
	return _swig_wrap_btDiscreteDynamicsWorld_getDispatchInfo__SWIG_0(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_getDispatchInfo__SWIG_1(SwigcptrBtDiscreteDynamicsWorld) SwigcptrBtDispatcherInfo

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetDispatchInfo__SWIG_1() BtDispatcherInfo {
	return _swig_wrap_btDiscreteDynamicsWorld_getDispatchInfo__SWIG_1(_swig_base)
}

func (p SwigcptrBtDiscreteDynamicsWorld) GetDispatchInfo(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetDispatchInfo__SWIG_0()
	}
	if argc == 0 {
		return p.GetDispatchInfo__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btDiscreteDynamicsWorld_getForceUpdateAllAabbs(SwigcptrBtDiscreteDynamicsWorld) bool

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) GetForceUpdateAllAabbs() bool {
	return _swig_wrap_btDiscreteDynamicsWorld_getForceUpdateAllAabbs(_swig_base)
}

func _swig_wrap_btDiscreteDynamicsWorld_setForceUpdateAllAabbs(SwigcptrBtDiscreteDynamicsWorld, bool)

func (_swig_base SwigcptrBtDiscreteDynamicsWorld) SetForceUpdateAllAabbs(arg1 bool) {
	_swig_wrap_btDiscreteDynamicsWorld_setForceUpdateAllAabbs(_swig_base, arg1)
}

func (p SwigcptrBtDiscreteDynamicsWorld) SwigIsBtDynamicsWorld() {
}

func (p SwigcptrBtDiscreteDynamicsWorld) SwigGetBtDynamicsWorld() BtDynamicsWorld {
	return SwigcptrBtDynamicsWorld(p.Swigcptr())
}

func (p SwigcptrBtDiscreteDynamicsWorld) SwigIsBtCollisionWorld() {
}

func (p SwigcptrBtDiscreteDynamicsWorld) SwigGetBtCollisionWorld() BtCollisionWorld {
	return SwigcptrBtCollisionWorld(p.Swigcptr())
}

type BtDiscreteDynamicsWorld interface {
	Swigcptr() uintptr
	SwigIsBtDiscreteDynamicsWorld()
	StepSimulation(a ...interface{}) int
	SynchronizeMotionStates()
	SynchronizeSingleMotionState(arg2 BtRigidBody)
	AddConstraint(a ...interface{})
	RemoveConstraint(arg2 BtTypedConstraint)
	AddAction(arg2 BtActionInterface)
	RemoveAction(arg2 BtActionInterface)
	GetSimulationIslandManager(a ...interface{}) interface{}
	GetCollisionWorld() BtCollisionWorld
	SetGravity(arg2 BtVector3)
	GetGravity() BtVector3
	AddCollisionObject(a ...interface{})
	AddRigidBody(a ...interface{})
	RemoveRigidBody(arg2 BtRigidBody)
	RemoveCollisionObject(arg2 BtCollisionObject)
	DebugDrawConstraint(arg2 BtTypedConstraint)
	DebugDrawWorld()
	SetConstraintSolver(arg2 BtConstraintSolver)
	GetConstraintSolver() BtConstraintSolver
	GetNumConstraints() int
	GetConstraint(a ...interface{}) interface{}
	GetWorldType() BtDynamicsWorldType
	ClearForces()
	ApplyGravity()
	SetNumTasks(arg2 int)
	UpdateVehicles(arg2 float32)
	AddVehicle(arg2 BtActionInterface)
	RemoveVehicle(arg2 BtActionInterface)
	AddCharacter(arg2 BtActionInterface)
	RemoveCharacter(arg2 BtActionInterface)
	SetSynchronizeAllMotionStates(arg2 bool)
	GetSynchronizeAllMotionStates() bool
	SetApplySpeculativeContactRestitution(arg2 bool)
	GetApplySpeculativeContactRestitution() bool
	Serialize(arg2 BtSerializer)
	SetLatencyMotionStateInterpolation(arg2 bool)
	GetLatencyMotionStateInterpolation() bool
	SetInternalTickCallback(a ...interface{})
	SetWorldUserInfo(arg1 uintptr)
	GetWorldUserInfo() uintptr
	GetSolverInfo() BtContactSolverInfo
	SetBroadphase(arg1 BtBroadphaseInterface)
	GetBroadphase(a ...interface{}) interface{}
	GetPairCache() BtOverlappingPairCache
	GetDispatcher(a ...interface{}) interface{}
	UpdateSingleAabb(arg1 BtCollisionObject)
	UpdateAabbs()
	ComputeOverlappingPairs()
	SetDebugDrawer(arg1 BtIDebugDraw)
	GetDebugDrawer() BtIDebugDraw
	DebugDrawObject(arg1 BtTransform, arg2 BtCollisionShape, arg3 BtVector3)
	GetNumCollisionObjects() int
	RayTest(arg1 BtVector3, arg2 BtVector3, arg3 RayResultCallback)
	ConvexSweepTest(a ...interface{})
	ContactTest(arg1 BtCollisionObject, arg2 ContactResultCallback)
	ContactPairTest(arg1 BtCollisionObject, arg2 BtCollisionObject, arg3 ContactResultCallback)
	GetCollisionObjectArray(a ...interface{}) interface{}
	PerformDiscreteCollisionDetection()
	GetDispatchInfo(a ...interface{}) interface{}
	GetForceUpdateAllAabbs() bool
	SetForceUpdateAllAabbs(arg1 bool)
	SwigIsBtDynamicsWorld()
	SwigGetBtDynamicsWorld() BtDynamicsWorld
	SwigIsBtCollisionWorld()
	SwigGetBtCollisionWorld() BtCollisionWorld
}

type SwigcptrBtSimpleDynamicsWorld uintptr

func (p SwigcptrBtSimpleDynamicsWorld) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSimpleDynamicsWorld) SwigIsBtSimpleDynamicsWorld() {
}

func _swig_wrap_new_btSimpleDynamicsWorld(uintptr, uintptr, uintptr, uintptr) SwigcptrBtSimpleDynamicsWorld

func NewBtSimpleDynamicsWorld(arg1 BtDispatcher, arg2 BtBroadphaseInterface, arg3 BtConstraintSolver, arg4 BtCollisionConfiguration) BtSimpleDynamicsWorld {
	return _swig_wrap_new_btSimpleDynamicsWorld(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_delete_btSimpleDynamicsWorld(uintptr)

func DeleteBtSimpleDynamicsWorld(arg1 BtSimpleDynamicsWorld) {
	_swig_wrap_delete_btSimpleDynamicsWorld(arg1.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_stepSimulation__SWIG_0(SwigcptrBtSimpleDynamicsWorld, float32, int, float32) int

func (arg1 SwigcptrBtSimpleDynamicsWorld) StepSimulation__SWIG_0(arg2 float32, arg3 int, arg4 float32) int {
	return _swig_wrap_btSimpleDynamicsWorld_stepSimulation__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btSimpleDynamicsWorld_stepSimulation__SWIG_1(SwigcptrBtSimpleDynamicsWorld, float32, int) int

func (arg1 SwigcptrBtSimpleDynamicsWorld) StepSimulation__SWIG_1(arg2 float32, arg3 int) int {
	return _swig_wrap_btSimpleDynamicsWorld_stepSimulation__SWIG_1(arg1, arg2, arg3)
}

func _swig_wrap_btSimpleDynamicsWorld_stepSimulation__SWIG_2(SwigcptrBtSimpleDynamicsWorld, float32) int

func (arg1 SwigcptrBtSimpleDynamicsWorld) StepSimulation__SWIG_2(arg2 float32) int {
	return _swig_wrap_btSimpleDynamicsWorld_stepSimulation__SWIG_2(arg1, arg2)
}

func (p SwigcptrBtSimpleDynamicsWorld) StepSimulation(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.StepSimulation__SWIG_2(a[0].(float32))
	}
	if argc == 2 {
		return p.StepSimulation__SWIG_1(a[0].(float32), a[1].(int))
	}
	if argc == 3 {
		return p.StepSimulation__SWIG_0(a[0].(float32), a[1].(int), a[2].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleDynamicsWorld_setGravity(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (arg1 SwigcptrBtSimpleDynamicsWorld) SetGravity(arg2 BtVector3) {
	_swig_wrap_btSimpleDynamicsWorld_setGravity(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_getGravity(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtVector3

func (arg1 SwigcptrBtSimpleDynamicsWorld) GetGravity() BtVector3 {
	return _swig_wrap_btSimpleDynamicsWorld_getGravity(arg1)
}

func _swig_wrap_btSimpleDynamicsWorld_addRigidBody__SWIG_0(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (arg1 SwigcptrBtSimpleDynamicsWorld) AddRigidBody__SWIG_0(arg2 BtRigidBody) {
	_swig_wrap_btSimpleDynamicsWorld_addRigidBody__SWIG_0(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_addRigidBody__SWIG_1(SwigcptrBtSimpleDynamicsWorld, uintptr, int16, int16)

func (arg1 SwigcptrBtSimpleDynamicsWorld) AddRigidBody__SWIG_1(arg2 BtRigidBody, arg3 int16, arg4 int16) {
	_swig_wrap_btSimpleDynamicsWorld_addRigidBody__SWIG_1(arg1, arg2.Swigcptr(), arg3, arg4)
}

func (p SwigcptrBtSimpleDynamicsWorld) AddRigidBody(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddRigidBody__SWIG_0(a[0].(BtRigidBody))
		return
	}
	if argc == 3 {
		p.AddRigidBody__SWIG_1(a[0].(BtRigidBody), a[1].(int16), a[2].(int16))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleDynamicsWorld_removeRigidBody(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (arg1 SwigcptrBtSimpleDynamicsWorld) RemoveRigidBody(arg2 BtRigidBody) {
	_swig_wrap_btSimpleDynamicsWorld_removeRigidBody(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_debugDrawWorld(SwigcptrBtSimpleDynamicsWorld)

func (arg1 SwigcptrBtSimpleDynamicsWorld) DebugDrawWorld() {
	_swig_wrap_btSimpleDynamicsWorld_debugDrawWorld(arg1)
}

func _swig_wrap_btSimpleDynamicsWorld_addAction(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (arg1 SwigcptrBtSimpleDynamicsWorld) AddAction(arg2 BtActionInterface) {
	_swig_wrap_btSimpleDynamicsWorld_addAction(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_removeAction(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (arg1 SwigcptrBtSimpleDynamicsWorld) RemoveAction(arg2 BtActionInterface) {
	_swig_wrap_btSimpleDynamicsWorld_removeAction(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_removeCollisionObject(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (arg1 SwigcptrBtSimpleDynamicsWorld) RemoveCollisionObject(arg2 BtCollisionObject) {
	_swig_wrap_btSimpleDynamicsWorld_removeCollisionObject(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_updateAabbs(SwigcptrBtSimpleDynamicsWorld)

func (arg1 SwigcptrBtSimpleDynamicsWorld) UpdateAabbs() {
	_swig_wrap_btSimpleDynamicsWorld_updateAabbs(arg1)
}

func _swig_wrap_btSimpleDynamicsWorld_synchronizeMotionStates(SwigcptrBtSimpleDynamicsWorld)

func (arg1 SwigcptrBtSimpleDynamicsWorld) SynchronizeMotionStates() {
	_swig_wrap_btSimpleDynamicsWorld_synchronizeMotionStates(arg1)
}

func _swig_wrap_btSimpleDynamicsWorld_setConstraintSolver(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (arg1 SwigcptrBtSimpleDynamicsWorld) SetConstraintSolver(arg2 BtConstraintSolver) {
	_swig_wrap_btSimpleDynamicsWorld_setConstraintSolver(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_getConstraintSolver(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtConstraintSolver

func (arg1 SwigcptrBtSimpleDynamicsWorld) GetConstraintSolver() BtConstraintSolver {
	return _swig_wrap_btSimpleDynamicsWorld_getConstraintSolver(arg1)
}

func _swig_wrap_btSimpleDynamicsWorld_getWorldType(SwigcptrBtSimpleDynamicsWorld) BtDynamicsWorldType

func (arg1 SwigcptrBtSimpleDynamicsWorld) GetWorldType() BtDynamicsWorldType {
	return _swig_wrap_btSimpleDynamicsWorld_getWorldType(arg1)
}

func _swig_wrap_btSimpleDynamicsWorld_clearForces(SwigcptrBtSimpleDynamicsWorld)

func (arg1 SwigcptrBtSimpleDynamicsWorld) ClearForces() {
	_swig_wrap_btSimpleDynamicsWorld_clearForces(arg1)
}

func _swig_wrap_btSimpleDynamicsWorld_addConstraint__SWIG_0(SwigcptrBtSimpleDynamicsWorld, uintptr, bool)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) AddConstraint__SWIG_0(arg1 BtTypedConstraint, arg2 bool) {
	_swig_wrap_btSimpleDynamicsWorld_addConstraint__SWIG_0(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btSimpleDynamicsWorld_addConstraint__SWIG_1(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) AddConstraint__SWIG_1(arg1 BtTypedConstraint) {
	_swig_wrap_btSimpleDynamicsWorld_addConstraint__SWIG_1(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtSimpleDynamicsWorld) AddConstraint(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddConstraint__SWIG_1(a[0].(BtTypedConstraint))
		return
	}
	if argc == 2 {
		p.AddConstraint__SWIG_0(a[0].(BtTypedConstraint), a[1].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleDynamicsWorld_removeConstraint(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) RemoveConstraint(arg1 BtTypedConstraint) {
	_swig_wrap_btSimpleDynamicsWorld_removeConstraint(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_getNumConstraints(SwigcptrBtSimpleDynamicsWorld) int

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetNumConstraints() int {
	return _swig_wrap_btSimpleDynamicsWorld_getNumConstraints(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_getConstraint__SWIG_0(SwigcptrBtSimpleDynamicsWorld, int) SwigcptrBtTypedConstraint

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetConstraint__SWIG_0(arg1 int) BtTypedConstraint {
	return _swig_wrap_btSimpleDynamicsWorld_getConstraint__SWIG_0(_swig_base, arg1)
}

func _swig_wrap_btSimpleDynamicsWorld_getConstraint__SWIG_1(SwigcptrBtSimpleDynamicsWorld, int) SwigcptrBtTypedConstraint

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetConstraint__SWIG_1(arg1 int) BtTypedConstraint {
	return _swig_wrap_btSimpleDynamicsWorld_getConstraint__SWIG_1(_swig_base, arg1)
}

func (p SwigcptrBtSimpleDynamicsWorld) GetConstraint(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.GetConstraint__SWIG_0(a[0].(int))
	}
	if argc == 1 {
		return p.GetConstraint__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleDynamicsWorld_setInternalTickCallback__SWIG_0(SwigcptrBtSimpleDynamicsWorld, *_swig_fnptr, uintptr, bool)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) SetInternalTickCallback__SWIG_0(arg1 *_swig_fnptr, arg2 uintptr, arg3 bool) {
	_swig_wrap_btSimpleDynamicsWorld_setInternalTickCallback__SWIG_0(_swig_base, arg1, arg2, arg3)
}

func _swig_wrap_btSimpleDynamicsWorld_setInternalTickCallback__SWIG_1(SwigcptrBtSimpleDynamicsWorld, *_swig_fnptr, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) SetInternalTickCallback__SWIG_1(arg1 *_swig_fnptr, arg2 uintptr) {
	_swig_wrap_btSimpleDynamicsWorld_setInternalTickCallback__SWIG_1(_swig_base, arg1, arg2)
}

func _swig_wrap_btSimpleDynamicsWorld_setInternalTickCallback__SWIG_2(SwigcptrBtSimpleDynamicsWorld, *_swig_fnptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) SetInternalTickCallback__SWIG_2(arg1 *_swig_fnptr) {
	_swig_wrap_btSimpleDynamicsWorld_setInternalTickCallback__SWIG_2(_swig_base, arg1)
}

func (p SwigcptrBtSimpleDynamicsWorld) SetInternalTickCallback(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.SetInternalTickCallback__SWIG_2(a[0].(*_swig_fnptr))
		return
	}
	if argc == 2 {
		p.SetInternalTickCallback__SWIG_1(a[0].(*_swig_fnptr), a[1].(uintptr))
		return
	}
	if argc == 3 {
		p.SetInternalTickCallback__SWIG_0(a[0].(*_swig_fnptr), a[1].(uintptr), a[2].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleDynamicsWorld_setWorldUserInfo(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) SetWorldUserInfo(arg1 uintptr) {
	_swig_wrap_btSimpleDynamicsWorld_setWorldUserInfo(_swig_base, arg1)
}

func _swig_wrap_btSimpleDynamicsWorld_getWorldUserInfo(SwigcptrBtSimpleDynamicsWorld) uintptr

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetWorldUserInfo() uintptr {
	return _swig_wrap_btSimpleDynamicsWorld_getWorldUserInfo(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_getSolverInfo(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtContactSolverInfo

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetSolverInfo() BtContactSolverInfo {
	return _swig_wrap_btSimpleDynamicsWorld_getSolverInfo(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_addVehicle(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) AddVehicle(arg1 BtActionInterface) {
	_swig_wrap_btSimpleDynamicsWorld_addVehicle(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_removeVehicle(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) RemoveVehicle(arg1 BtActionInterface) {
	_swig_wrap_btSimpleDynamicsWorld_removeVehicle(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_addCharacter(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) AddCharacter(arg1 BtActionInterface) {
	_swig_wrap_btSimpleDynamicsWorld_addCharacter(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_removeCharacter(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) RemoveCharacter(arg1 BtActionInterface) {
	_swig_wrap_btSimpleDynamicsWorld_removeCharacter(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_setBroadphase(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) SetBroadphase(arg1 BtBroadphaseInterface) {
	_swig_wrap_btSimpleDynamicsWorld_setBroadphase(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_getBroadphase__SWIG_0(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtBroadphaseInterface

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetBroadphase__SWIG_0() BtBroadphaseInterface {
	return _swig_wrap_btSimpleDynamicsWorld_getBroadphase__SWIG_0(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_getBroadphase__SWIG_1(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtBroadphaseInterface

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetBroadphase__SWIG_1() BtBroadphaseInterface {
	return _swig_wrap_btSimpleDynamicsWorld_getBroadphase__SWIG_1(_swig_base)
}

func (p SwigcptrBtSimpleDynamicsWorld) GetBroadphase(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetBroadphase__SWIG_0()
	}
	if argc == 0 {
		return p.GetBroadphase__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleDynamicsWorld_getPairCache(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtOverlappingPairCache

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetPairCache() BtOverlappingPairCache {
	return _swig_wrap_btSimpleDynamicsWorld_getPairCache(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_getDispatcher__SWIG_0(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtDispatcher

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetDispatcher__SWIG_0() BtDispatcher {
	return _swig_wrap_btSimpleDynamicsWorld_getDispatcher__SWIG_0(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_getDispatcher__SWIG_1(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtDispatcher

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetDispatcher__SWIG_1() BtDispatcher {
	return _swig_wrap_btSimpleDynamicsWorld_getDispatcher__SWIG_1(_swig_base)
}

func (p SwigcptrBtSimpleDynamicsWorld) GetDispatcher(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetDispatcher__SWIG_0()
	}
	if argc == 0 {
		return p.GetDispatcher__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleDynamicsWorld_updateSingleAabb(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) UpdateSingleAabb(arg1 BtCollisionObject) {
	_swig_wrap_btSimpleDynamicsWorld_updateSingleAabb(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_computeOverlappingPairs(SwigcptrBtSimpleDynamicsWorld)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) ComputeOverlappingPairs() {
	_swig_wrap_btSimpleDynamicsWorld_computeOverlappingPairs(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_setDebugDrawer(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) SetDebugDrawer(arg1 BtIDebugDraw) {
	_swig_wrap_btSimpleDynamicsWorld_setDebugDrawer(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_getDebugDrawer(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtIDebugDraw

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetDebugDrawer() BtIDebugDraw {
	return _swig_wrap_btSimpleDynamicsWorld_getDebugDrawer(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_debugDrawObject(SwigcptrBtSimpleDynamicsWorld, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) DebugDrawObject(arg1 BtTransform, arg2 BtCollisionShape, arg3 BtVector3) {
	_swig_wrap_btSimpleDynamicsWorld_debugDrawObject(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_getNumCollisionObjects(SwigcptrBtSimpleDynamicsWorld) int

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetNumCollisionObjects() int {
	return _swig_wrap_btSimpleDynamicsWorld_getNumCollisionObjects(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_rayTest(SwigcptrBtSimpleDynamicsWorld, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) RayTest(arg1 BtVector3, arg2 BtVector3, arg3 RayResultCallback) {
	_swig_wrap_btSimpleDynamicsWorld_rayTest(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_convexSweepTest__SWIG_0(SwigcptrBtSimpleDynamicsWorld, uintptr, uintptr, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) ConvexSweepTest__SWIG_0(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 ConvexResultCallback, arg5 float32) {
	_swig_wrap_btSimpleDynamicsWorld_convexSweepTest__SWIG_0(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_btSimpleDynamicsWorld_convexSweepTest__SWIG_1(SwigcptrBtSimpleDynamicsWorld, uintptr, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) ConvexSweepTest__SWIG_1(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 ConvexResultCallback) {
	_swig_wrap_btSimpleDynamicsWorld_convexSweepTest__SWIG_1(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func (p SwigcptrBtSimpleDynamicsWorld) ConvexSweepTest(a ...interface{}) {
	argc := len(a)
	if argc == 4 {
		p.ConvexSweepTest__SWIG_1(a[0].(BtConvexShape), a[1].(BtTransform), a[2].(BtTransform), a[3].(ConvexResultCallback))
		return
	}
	if argc == 5 {
		p.ConvexSweepTest__SWIG_0(a[0].(BtConvexShape), a[1].(BtTransform), a[2].(BtTransform), a[3].(ConvexResultCallback), a[4].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleDynamicsWorld_contactTest(SwigcptrBtSimpleDynamicsWorld, uintptr, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) ContactTest(arg1 BtCollisionObject, arg2 ContactResultCallback) {
	_swig_wrap_btSimpleDynamicsWorld_contactTest(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_contactPairTest(SwigcptrBtSimpleDynamicsWorld, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) ContactPairTest(arg1 BtCollisionObject, arg2 BtCollisionObject, arg3 ContactResultCallback) {
	_swig_wrap_btSimpleDynamicsWorld_contactPairTest(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_rayTestSingle(uintptr, uintptr, uintptr, uintptr, uintptr, uintptr)

func BtSimpleDynamicsWorldRayTestSingle(arg1 BtTransform, arg2 BtTransform, arg3 BtCollisionObject, arg4 BtCollisionShape, arg5 BtTransform, arg6 RayResultCallback) {
	_swig_wrap_btSimpleDynamicsWorld_rayTestSingle(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_rayTestSingleInternal(uintptr, uintptr, uintptr, uintptr)

func BtSimpleDynamicsWorldRayTestSingleInternal(arg1 BtTransform, arg2 BtTransform, arg3 BtCollisionObjectWrapper, arg4 RayResultCallback) {
	_swig_wrap_btSimpleDynamicsWorld_rayTestSingleInternal(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btSimpleDynamicsWorld_objectQuerySingle(uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, float32)

func BtSimpleDynamicsWorldObjectQuerySingle(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 BtCollisionObject, arg5 BtCollisionShape, arg6 BtTransform, arg7 ConvexResultCallback, arg8 float32) {
	_swig_wrap_btSimpleDynamicsWorld_objectQuerySingle(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7.Swigcptr(), arg8)
}

func _swig_wrap_btSimpleDynamicsWorld_objectQuerySingleInternal(uintptr, uintptr, uintptr, uintptr, uintptr, float32)

func BtSimpleDynamicsWorldObjectQuerySingleInternal(arg1 BtConvexShape, arg2 BtTransform, arg3 BtTransform, arg4 BtCollisionObjectWrapper, arg5 ConvexResultCallback, arg6 float32) {
	_swig_wrap_btSimpleDynamicsWorld_objectQuerySingleInternal(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6)
}

func _swig_wrap_btSimpleDynamicsWorld_addCollisionObject__SWIG_0(SwigcptrBtSimpleDynamicsWorld, uintptr, int16, int16)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) AddCollisionObject__SWIG_0(arg1 BtCollisionObject, arg2 int16, arg3 int16) {
	_swig_wrap_btSimpleDynamicsWorld_addCollisionObject__SWIG_0(_swig_base, arg1.Swigcptr(), arg2, arg3)
}

func _swig_wrap_btSimpleDynamicsWorld_addCollisionObject__SWIG_1(SwigcptrBtSimpleDynamicsWorld, uintptr, int16)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) AddCollisionObject__SWIG_1(arg1 BtCollisionObject, arg2 int16) {
	_swig_wrap_btSimpleDynamicsWorld_addCollisionObject__SWIG_1(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btSimpleDynamicsWorld_addCollisionObject__SWIG_2(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) AddCollisionObject__SWIG_2(arg1 BtCollisionObject) {
	_swig_wrap_btSimpleDynamicsWorld_addCollisionObject__SWIG_2(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtSimpleDynamicsWorld) AddCollisionObject(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddCollisionObject__SWIG_2(a[0].(BtCollisionObject))
		return
	}
	if argc == 2 {
		p.AddCollisionObject__SWIG_1(a[0].(BtCollisionObject), a[1].(int16))
		return
	}
	if argc == 3 {
		p.AddCollisionObject__SWIG_0(a[0].(BtCollisionObject), a[1].(int16), a[2].(int16))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleDynamicsWorld_getCollisionObjectArray__SWIG_0(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetCollisionObjectArray__SWIG_0() BtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_ {
	return _swig_wrap_btSimpleDynamicsWorld_getCollisionObjectArray__SWIG_0(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_getCollisionObjectArray__SWIG_1(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetCollisionObjectArray__SWIG_1() BtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_ {
	return _swig_wrap_btSimpleDynamicsWorld_getCollisionObjectArray__SWIG_1(_swig_base)
}

func (p SwigcptrBtSimpleDynamicsWorld) GetCollisionObjectArray(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetCollisionObjectArray__SWIG_0()
	}
	if argc == 0 {
		return p.GetCollisionObjectArray__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleDynamicsWorld_performDiscreteCollisionDetection(SwigcptrBtSimpleDynamicsWorld)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) PerformDiscreteCollisionDetection() {
	_swig_wrap_btSimpleDynamicsWorld_performDiscreteCollisionDetection(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_getDispatchInfo__SWIG_0(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtDispatcherInfo

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetDispatchInfo__SWIG_0() BtDispatcherInfo {
	return _swig_wrap_btSimpleDynamicsWorld_getDispatchInfo__SWIG_0(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_getDispatchInfo__SWIG_1(SwigcptrBtSimpleDynamicsWorld) SwigcptrBtDispatcherInfo

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetDispatchInfo__SWIG_1() BtDispatcherInfo {
	return _swig_wrap_btSimpleDynamicsWorld_getDispatchInfo__SWIG_1(_swig_base)
}

func (p SwigcptrBtSimpleDynamicsWorld) GetDispatchInfo(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetDispatchInfo__SWIG_0()
	}
	if argc == 0 {
		return p.GetDispatchInfo__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSimpleDynamicsWorld_getForceUpdateAllAabbs(SwigcptrBtSimpleDynamicsWorld) bool

func (_swig_base SwigcptrBtSimpleDynamicsWorld) GetForceUpdateAllAabbs() bool {
	return _swig_wrap_btSimpleDynamicsWorld_getForceUpdateAllAabbs(_swig_base)
}

func _swig_wrap_btSimpleDynamicsWorld_setForceUpdateAllAabbs(SwigcptrBtSimpleDynamicsWorld, bool)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) SetForceUpdateAllAabbs(arg1 bool) {
	_swig_wrap_btSimpleDynamicsWorld_setForceUpdateAllAabbs(_swig_base, arg1)
}

func _swig_wrap_btSimpleDynamicsWorld_serialize(SwigcptrBtSimpleDynamicsWorld, uintptr)

func (_swig_base SwigcptrBtSimpleDynamicsWorld) Serialize(arg1 BtSerializer) {
	_swig_wrap_btSimpleDynamicsWorld_serialize(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtSimpleDynamicsWorld) SwigIsBtDynamicsWorld() {
}

func (p SwigcptrBtSimpleDynamicsWorld) SwigGetBtDynamicsWorld() BtDynamicsWorld {
	return SwigcptrBtDynamicsWorld(p.Swigcptr())
}

func (p SwigcptrBtSimpleDynamicsWorld) SwigIsBtCollisionWorld() {
}

func (p SwigcptrBtSimpleDynamicsWorld) SwigGetBtCollisionWorld() BtCollisionWorld {
	return SwigcptrBtCollisionWorld(p.Swigcptr())
}

type BtSimpleDynamicsWorld interface {
	Swigcptr() uintptr
	SwigIsBtSimpleDynamicsWorld()
	StepSimulation(a ...interface{}) int
	SetGravity(arg2 BtVector3)
	GetGravity() BtVector3
	AddRigidBody(a ...interface{})
	RemoveRigidBody(arg2 BtRigidBody)
	DebugDrawWorld()
	AddAction(arg2 BtActionInterface)
	RemoveAction(arg2 BtActionInterface)
	RemoveCollisionObject(arg2 BtCollisionObject)
	UpdateAabbs()
	SynchronizeMotionStates()
	SetConstraintSolver(arg2 BtConstraintSolver)
	GetConstraintSolver() BtConstraintSolver
	GetWorldType() BtDynamicsWorldType
	ClearForces()
	AddConstraint(a ...interface{})
	RemoveConstraint(arg1 BtTypedConstraint)
	GetNumConstraints() int
	GetConstraint(a ...interface{}) interface{}
	SetInternalTickCallback(a ...interface{})
	SetWorldUserInfo(arg1 uintptr)
	GetWorldUserInfo() uintptr
	GetSolverInfo() BtContactSolverInfo
	AddVehicle(arg1 BtActionInterface)
	RemoveVehicle(arg1 BtActionInterface)
	AddCharacter(arg1 BtActionInterface)
	RemoveCharacter(arg1 BtActionInterface)
	SetBroadphase(arg1 BtBroadphaseInterface)
	GetBroadphase(a ...interface{}) interface{}
	GetPairCache() BtOverlappingPairCache
	GetDispatcher(a ...interface{}) interface{}
	UpdateSingleAabb(arg1 BtCollisionObject)
	ComputeOverlappingPairs()
	SetDebugDrawer(arg1 BtIDebugDraw)
	GetDebugDrawer() BtIDebugDraw
	DebugDrawObject(arg1 BtTransform, arg2 BtCollisionShape, arg3 BtVector3)
	GetNumCollisionObjects() int
	RayTest(arg1 BtVector3, arg2 BtVector3, arg3 RayResultCallback)
	ConvexSweepTest(a ...interface{})
	ContactTest(arg1 BtCollisionObject, arg2 ContactResultCallback)
	ContactPairTest(arg1 BtCollisionObject, arg2 BtCollisionObject, arg3 ContactResultCallback)
	AddCollisionObject(a ...interface{})
	GetCollisionObjectArray(a ...interface{}) interface{}
	PerformDiscreteCollisionDetection()
	GetDispatchInfo(a ...interface{}) interface{}
	GetForceUpdateAllAabbs() bool
	SetForceUpdateAllAabbs(arg1 bool)
	Serialize(arg1 BtSerializer)
	SwigIsBtDynamicsWorld()
	SwigGetBtDynamicsWorld() BtDynamicsWorld
	SwigIsBtCollisionWorld()
	SwigGetBtCollisionWorld() BtCollisionWorld
}

func _swig_wrap_gDeactivationTime_set(float32)

func SetGDeactivationTime(arg1 float32) {
	_swig_wrap_gDeactivationTime_set(arg1)
}

func GetGDeactivationTime() float32
func _swig_wrap_gDisableDeactivation_set(bool)

func SetGDisableDeactivation(arg1 bool) {
	_swig_wrap_gDisableDeactivation_set(arg1)
}

func GetGDisableDeactivation() bool

const BtRigidBodyDataName string = "btRigidBodyFloatData"

type BtRigidBodyFlags int

func _swig_getBT_DISABLE_WORLD_GRAVITY() BtRigidBodyFlags

var BT_DISABLE_WORLD_GRAVITY BtRigidBodyFlags = _swig_getBT_DISABLE_WORLD_GRAVITY()

func _swig_getBT_ENABLE_GYROPSCOPIC_FORCE() BtRigidBodyFlags

var BT_ENABLE_GYROPSCOPIC_FORCE BtRigidBodyFlags = _swig_getBT_ENABLE_GYROPSCOPIC_FORCE()

type SwigcptrBtRigidBody uintptr

func (p SwigcptrBtRigidBody) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtRigidBody) SwigIsBtRigidBody() {
}

func _swig_wrap_new_btRigidBody__SWIG_0(uintptr) SwigcptrBtRigidBody

func NewBtRigidBody__SWIG_0(arg1 BtRigidBodyConstructionInfo) BtRigidBody {
	return _swig_wrap_new_btRigidBody__SWIG_0(arg1.Swigcptr())
}

func _swig_wrap_new_btRigidBody__SWIG_1(float32, uintptr, uintptr, uintptr) SwigcptrBtRigidBody

func NewBtRigidBody__SWIG_1(arg1 float32, arg2 BtMotionState, arg3 BtCollisionShape, arg4 BtVector3) BtRigidBody {
	return _swig_wrap_new_btRigidBody__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_new_btRigidBody__SWIG_2(float32, uintptr, uintptr) SwigcptrBtRigidBody

func NewBtRigidBody__SWIG_2(arg1 float32, arg2 BtMotionState, arg3 BtCollisionShape) BtRigidBody {
	return _swig_wrap_new_btRigidBody__SWIG_2(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func NewBtRigidBody(a ...interface{}) BtRigidBody {
	argc := len(a)
	if argc == 1 {
		return NewBtRigidBody__SWIG_0(a[0].(BtRigidBodyConstructionInfo))
	}
	if argc == 3 {
		return NewBtRigidBody__SWIG_2(a[0].(float32), a[1].(BtMotionState), a[2].(BtCollisionShape))
	}
	if argc == 4 {
		return NewBtRigidBody__SWIG_1(a[0].(float32), a[1].(BtMotionState), a[2].(BtCollisionShape), a[3].(BtVector3))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_btRigidBody(uintptr)

func DeleteBtRigidBody(arg1 BtRigidBody) {
	_swig_wrap_delete_btRigidBody(arg1.Swigcptr())
}

func _swig_wrap_btRigidBody_proceedToTransform(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) ProceedToTransform(arg2 BtTransform) {
	_swig_wrap_btRigidBody_proceedToTransform(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_upcast__SWIG_0(uintptr) SwigcptrBtRigidBody

func BtRigidBodyUpcast__SWIG_0(arg1 BtCollisionObject) BtRigidBody {
	return _swig_wrap_btRigidBody_upcast__SWIG_0(arg1.Swigcptr())
}

func _swig_wrap_btRigidBody_upcast__SWIG_1(uintptr) SwigcptrBtRigidBody

func BtRigidBodyUpcast__SWIG_1(arg1 BtCollisionObject) BtRigidBody {
	return _swig_wrap_btRigidBody_upcast__SWIG_1(arg1.Swigcptr())
}

func BtRigidBodyUpcast(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return BtRigidBodyUpcast__SWIG_0(a[0].(BtCollisionObject))
	}
	if argc == 1 {
		return BtRigidBodyUpcast__SWIG_1(a[0].(BtCollisionObject))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRigidBody_predictIntegratedTransform(SwigcptrBtRigidBody, float32, uintptr)

func (arg1 SwigcptrBtRigidBody) PredictIntegratedTransform(arg2 float32, arg3 BtTransform) {
	_swig_wrap_btRigidBody_predictIntegratedTransform(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btRigidBody_saveKinematicState(SwigcptrBtRigidBody, float32)

func (arg1 SwigcptrBtRigidBody) SaveKinematicState(arg2 float32) {
	_swig_wrap_btRigidBody_saveKinematicState(arg1, arg2)
}

func _swig_wrap_btRigidBody_applyGravity(SwigcptrBtRigidBody)

func (arg1 SwigcptrBtRigidBody) ApplyGravity() {
	_swig_wrap_btRigidBody_applyGravity(arg1)
}

func _swig_wrap_btRigidBody_setGravity(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) SetGravity(arg2 BtVector3) {
	_swig_wrap_btRigidBody_setGravity(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_getGravity(SwigcptrBtRigidBody) SwigcptrBtVector3

func (arg1 SwigcptrBtRigidBody) GetGravity() BtVector3 {
	return _swig_wrap_btRigidBody_getGravity(arg1)
}

func _swig_wrap_btRigidBody_setDamping(SwigcptrBtRigidBody, float32, float32)

func (arg1 SwigcptrBtRigidBody) SetDamping(arg2 float32, arg3 float32) {
	_swig_wrap_btRigidBody_setDamping(arg1, arg2, arg3)
}

func _swig_wrap_btRigidBody_getLinearDamping(SwigcptrBtRigidBody) float32

func (arg1 SwigcptrBtRigidBody) GetLinearDamping() float32 {
	return _swig_wrap_btRigidBody_getLinearDamping(arg1)
}

func _swig_wrap_btRigidBody_getAngularDamping(SwigcptrBtRigidBody) float32

func (arg1 SwigcptrBtRigidBody) GetAngularDamping() float32 {
	return _swig_wrap_btRigidBody_getAngularDamping(arg1)
}

func _swig_wrap_btRigidBody_getLinearSleepingThreshold(SwigcptrBtRigidBody) float32

func (arg1 SwigcptrBtRigidBody) GetLinearSleepingThreshold() float32 {
	return _swig_wrap_btRigidBody_getLinearSleepingThreshold(arg1)
}

func _swig_wrap_btRigidBody_getAngularSleepingThreshold(SwigcptrBtRigidBody) float32

func (arg1 SwigcptrBtRigidBody) GetAngularSleepingThreshold() float32 {
	return _swig_wrap_btRigidBody_getAngularSleepingThreshold(arg1)
}

func _swig_wrap_btRigidBody_applyDamping(SwigcptrBtRigidBody, float32)

func (arg1 SwigcptrBtRigidBody) ApplyDamping(arg2 float32) {
	_swig_wrap_btRigidBody_applyDamping(arg1, arg2)
}

func _swig_wrap_btRigidBody_getCollisionShape__SWIG_0(SwigcptrBtRigidBody) SwigcptrBtCollisionShape

func (arg1 SwigcptrBtRigidBody) GetCollisionShape__SWIG_0() BtCollisionShape {
	return _swig_wrap_btRigidBody_getCollisionShape__SWIG_0(arg1)
}

func _swig_wrap_btRigidBody_getCollisionShape__SWIG_1(SwigcptrBtRigidBody) SwigcptrBtCollisionShape

func (arg1 SwigcptrBtRigidBody) GetCollisionShape__SWIG_1() BtCollisionShape {
	return _swig_wrap_btRigidBody_getCollisionShape__SWIG_1(arg1)
}

func (p SwigcptrBtRigidBody) GetCollisionShape(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetCollisionShape__SWIG_0()
	}
	if argc == 0 {
		return p.GetCollisionShape__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRigidBody_setMassProps(SwigcptrBtRigidBody, float32, uintptr)

func (arg1 SwigcptrBtRigidBody) SetMassProps(arg2 float32, arg3 BtVector3) {
	_swig_wrap_btRigidBody_setMassProps(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btRigidBody_getLinearFactor(SwigcptrBtRigidBody) SwigcptrBtVector3

func (arg1 SwigcptrBtRigidBody) GetLinearFactor() BtVector3 {
	return _swig_wrap_btRigidBody_getLinearFactor(arg1)
}

func _swig_wrap_btRigidBody_setLinearFactor(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) SetLinearFactor(arg2 BtVector3) {
	_swig_wrap_btRigidBody_setLinearFactor(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_getInvMass(SwigcptrBtRigidBody) float32

func (arg1 SwigcptrBtRigidBody) GetInvMass() float32 {
	return _swig_wrap_btRigidBody_getInvMass(arg1)
}

func _swig_wrap_btRigidBody_getInvInertiaTensorWorld(SwigcptrBtRigidBody) SwigcptrBtMatrix3x3

func (arg1 SwigcptrBtRigidBody) GetInvInertiaTensorWorld() BtMatrix3x3 {
	return _swig_wrap_btRigidBody_getInvInertiaTensorWorld(arg1)
}

func _swig_wrap_btRigidBody_integrateVelocities(SwigcptrBtRigidBody, float32)

func (arg1 SwigcptrBtRigidBody) IntegrateVelocities(arg2 float32) {
	_swig_wrap_btRigidBody_integrateVelocities(arg1, arg2)
}

func _swig_wrap_btRigidBody_setCenterOfMassTransform(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) SetCenterOfMassTransform(arg2 BtTransform) {
	_swig_wrap_btRigidBody_setCenterOfMassTransform(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_applyCentralForce(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) ApplyCentralForce(arg2 BtVector3) {
	_swig_wrap_btRigidBody_applyCentralForce(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_getTotalForce(SwigcptrBtRigidBody) SwigcptrBtVector3

func (arg1 SwigcptrBtRigidBody) GetTotalForce() BtVector3 {
	return _swig_wrap_btRigidBody_getTotalForce(arg1)
}

func _swig_wrap_btRigidBody_getTotalTorque(SwigcptrBtRigidBody) SwigcptrBtVector3

func (arg1 SwigcptrBtRigidBody) GetTotalTorque() BtVector3 {
	return _swig_wrap_btRigidBody_getTotalTorque(arg1)
}

func _swig_wrap_btRigidBody_getInvInertiaDiagLocal(SwigcptrBtRigidBody) SwigcptrBtVector3

func (arg1 SwigcptrBtRigidBody) GetInvInertiaDiagLocal() BtVector3 {
	return _swig_wrap_btRigidBody_getInvInertiaDiagLocal(arg1)
}

func _swig_wrap_btRigidBody_setInvInertiaDiagLocal(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) SetInvInertiaDiagLocal(arg2 BtVector3) {
	_swig_wrap_btRigidBody_setInvInertiaDiagLocal(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_setSleepingThresholds(SwigcptrBtRigidBody, float32, float32)

func (arg1 SwigcptrBtRigidBody) SetSleepingThresholds(arg2 float32, arg3 float32) {
	_swig_wrap_btRigidBody_setSleepingThresholds(arg1, arg2, arg3)
}

func _swig_wrap_btRigidBody_applyTorque(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) ApplyTorque(arg2 BtVector3) {
	_swig_wrap_btRigidBody_applyTorque(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_applyForce(SwigcptrBtRigidBody, uintptr, uintptr)

func (arg1 SwigcptrBtRigidBody) ApplyForce(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btRigidBody_applyForce(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btRigidBody_applyCentralImpulse(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) ApplyCentralImpulse(arg2 BtVector3) {
	_swig_wrap_btRigidBody_applyCentralImpulse(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_applyTorqueImpulse(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) ApplyTorqueImpulse(arg2 BtVector3) {
	_swig_wrap_btRigidBody_applyTorqueImpulse(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_applyImpulse(SwigcptrBtRigidBody, uintptr, uintptr)

func (arg1 SwigcptrBtRigidBody) ApplyImpulse(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btRigidBody_applyImpulse(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btRigidBody_clearForces(SwigcptrBtRigidBody)

func (arg1 SwigcptrBtRigidBody) ClearForces() {
	_swig_wrap_btRigidBody_clearForces(arg1)
}

func _swig_wrap_btRigidBody_updateInertiaTensor(SwigcptrBtRigidBody)

func (arg1 SwigcptrBtRigidBody) UpdateInertiaTensor() {
	_swig_wrap_btRigidBody_updateInertiaTensor(arg1)
}

func _swig_wrap_btRigidBody_getCenterOfMassPosition(SwigcptrBtRigidBody) SwigcptrBtVector3

func (arg1 SwigcptrBtRigidBody) GetCenterOfMassPosition() BtVector3 {
	return _swig_wrap_btRigidBody_getCenterOfMassPosition(arg1)
}

func _swig_wrap_btRigidBody_getOrientation(SwigcptrBtRigidBody) SwigcptrBtQuaternion

func (arg1 SwigcptrBtRigidBody) GetOrientation() BtQuaternion {
	return _swig_wrap_btRigidBody_getOrientation(arg1)
}

func _swig_wrap_btRigidBody_getCenterOfMassTransform(SwigcptrBtRigidBody) SwigcptrBtTransform

func (arg1 SwigcptrBtRigidBody) GetCenterOfMassTransform() BtTransform {
	return _swig_wrap_btRigidBody_getCenterOfMassTransform(arg1)
}

func _swig_wrap_btRigidBody_getLinearVelocity(SwigcptrBtRigidBody) SwigcptrBtVector3

func (arg1 SwigcptrBtRigidBody) GetLinearVelocity() BtVector3 {
	return _swig_wrap_btRigidBody_getLinearVelocity(arg1)
}

func _swig_wrap_btRigidBody_getAngularVelocity(SwigcptrBtRigidBody) SwigcptrBtVector3

func (arg1 SwigcptrBtRigidBody) GetAngularVelocity() BtVector3 {
	return _swig_wrap_btRigidBody_getAngularVelocity(arg1)
}

func _swig_wrap_btRigidBody_setLinearVelocity(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) SetLinearVelocity(arg2 BtVector3) {
	_swig_wrap_btRigidBody_setLinearVelocity(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_setAngularVelocity(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) SetAngularVelocity(arg2 BtVector3) {
	_swig_wrap_btRigidBody_setAngularVelocity(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_getVelocityInLocalPoint(SwigcptrBtRigidBody, uintptr) SwigcptrBtVector3

func (arg1 SwigcptrBtRigidBody) GetVelocityInLocalPoint(arg2 BtVector3) BtVector3 {
	return _swig_wrap_btRigidBody_getVelocityInLocalPoint(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_translate(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) Translate(arg2 BtVector3) {
	_swig_wrap_btRigidBody_translate(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_getAabb(SwigcptrBtRigidBody, uintptr, uintptr)

func (arg1 SwigcptrBtRigidBody) GetAabb(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btRigidBody_getAabb(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btRigidBody_computeImpulseDenominator(SwigcptrBtRigidBody, uintptr, uintptr) float32

func (arg1 SwigcptrBtRigidBody) ComputeImpulseDenominator(arg2 BtVector3, arg3 BtVector3) float32 {
	return _swig_wrap_btRigidBody_computeImpulseDenominator(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btRigidBody_computeAngularImpulseDenominator(SwigcptrBtRigidBody, uintptr) float32

func (arg1 SwigcptrBtRigidBody) ComputeAngularImpulseDenominator(arg2 BtVector3) float32 {
	return _swig_wrap_btRigidBody_computeAngularImpulseDenominator(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_updateDeactivation(SwigcptrBtRigidBody, float32)

func (arg1 SwigcptrBtRigidBody) UpdateDeactivation(arg2 float32) {
	_swig_wrap_btRigidBody_updateDeactivation(arg1, arg2)
}

func _swig_wrap_btRigidBody_wantsSleeping(SwigcptrBtRigidBody) bool

func (arg1 SwigcptrBtRigidBody) WantsSleeping() bool {
	return _swig_wrap_btRigidBody_wantsSleeping(arg1)
}

func _swig_wrap_btRigidBody_getBroadphaseProxy__SWIG_0(SwigcptrBtRigidBody) SwigcptrBtBroadphaseProxy

func (arg1 SwigcptrBtRigidBody) GetBroadphaseProxy__SWIG_0() BtBroadphaseProxy {
	return _swig_wrap_btRigidBody_getBroadphaseProxy__SWIG_0(arg1)
}

func _swig_wrap_btRigidBody_getBroadphaseProxy__SWIG_1(SwigcptrBtRigidBody) SwigcptrBtBroadphaseProxy

func (arg1 SwigcptrBtRigidBody) GetBroadphaseProxy__SWIG_1() BtBroadphaseProxy {
	return _swig_wrap_btRigidBody_getBroadphaseProxy__SWIG_1(arg1)
}

func (p SwigcptrBtRigidBody) GetBroadphaseProxy(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetBroadphaseProxy__SWIG_0()
	}
	if argc == 0 {
		return p.GetBroadphaseProxy__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRigidBody_setNewBroadphaseProxy(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) SetNewBroadphaseProxy(arg2 BtBroadphaseProxy) {
	_swig_wrap_btRigidBody_setNewBroadphaseProxy(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_getMotionState__SWIG_0(SwigcptrBtRigidBody) SwigcptrBtMotionState

func (arg1 SwigcptrBtRigidBody) GetMotionState__SWIG_0() BtMotionState {
	return _swig_wrap_btRigidBody_getMotionState__SWIG_0(arg1)
}

func _swig_wrap_btRigidBody_getMotionState__SWIG_1(SwigcptrBtRigidBody) SwigcptrBtMotionState

func (arg1 SwigcptrBtRigidBody) GetMotionState__SWIG_1() BtMotionState {
	return _swig_wrap_btRigidBody_getMotionState__SWIG_1(arg1)
}

func (p SwigcptrBtRigidBody) GetMotionState(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetMotionState__SWIG_0()
	}
	if argc == 0 {
		return p.GetMotionState__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRigidBody_setMotionState(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) SetMotionState(arg2 BtMotionState) {
	_swig_wrap_btRigidBody_setMotionState(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_m_contactSolverType_set(SwigcptrBtRigidBody, int)

func (arg1 SwigcptrBtRigidBody) SetM_contactSolverType(arg2 int) {
	_swig_wrap_btRigidBody_m_contactSolverType_set(arg1, arg2)
}

func _swig_wrap_btRigidBody_m_contactSolverType_get(SwigcptrBtRigidBody) int

func (arg1 SwigcptrBtRigidBody) GetM_contactSolverType() int {
	return _swig_wrap_btRigidBody_m_contactSolverType_get(arg1)
}

func _swig_wrap_btRigidBody_m_frictionSolverType_set(SwigcptrBtRigidBody, int)

func (arg1 SwigcptrBtRigidBody) SetM_frictionSolverType(arg2 int) {
	_swig_wrap_btRigidBody_m_frictionSolverType_set(arg1, arg2)
}

func _swig_wrap_btRigidBody_m_frictionSolverType_get(SwigcptrBtRigidBody) int

func (arg1 SwigcptrBtRigidBody) GetM_frictionSolverType() int {
	return _swig_wrap_btRigidBody_m_frictionSolverType_get(arg1)
}

func _swig_wrap_btRigidBody_setAngularFactor__SWIG_0(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) SetAngularFactor__SWIG_0(arg2 BtVector3) {
	_swig_wrap_btRigidBody_setAngularFactor__SWIG_0(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_setAngularFactor__SWIG_1(SwigcptrBtRigidBody, float32)

func (arg1 SwigcptrBtRigidBody) SetAngularFactor__SWIG_1(arg2 float32) {
	_swig_wrap_btRigidBody_setAngularFactor__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtRigidBody) SetAngularFactor(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBtVector3); !ok {
			goto check_1
		}
		p.SetAngularFactor__SWIG_0(a[0].(BtVector3))
		return
	}
check_1:
	if argc == 1 {
		p.SetAngularFactor__SWIG_1(a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRigidBody_getAngularFactor(SwigcptrBtRigidBody) SwigcptrBtVector3

func (arg1 SwigcptrBtRigidBody) GetAngularFactor() BtVector3 {
	return _swig_wrap_btRigidBody_getAngularFactor(arg1)
}

func _swig_wrap_btRigidBody_isInWorld(SwigcptrBtRigidBody) bool

func (arg1 SwigcptrBtRigidBody) IsInWorld() bool {
	return _swig_wrap_btRigidBody_isInWorld(arg1)
}

func _swig_wrap_btRigidBody_checkCollideWithOverride(SwigcptrBtRigidBody, uintptr) bool

func (arg1 SwigcptrBtRigidBody) CheckCollideWithOverride(arg2 BtCollisionObject) bool {
	return _swig_wrap_btRigidBody_checkCollideWithOverride(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_addConstraintRef(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) AddConstraintRef(arg2 BtTypedConstraint) {
	_swig_wrap_btRigidBody_addConstraintRef(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_removeConstraintRef(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) RemoveConstraintRef(arg2 BtTypedConstraint) {
	_swig_wrap_btRigidBody_removeConstraintRef(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_getConstraintRef(SwigcptrBtRigidBody, int) SwigcptrBtTypedConstraint

func (arg1 SwigcptrBtRigidBody) GetConstraintRef(arg2 int) BtTypedConstraint {
	return _swig_wrap_btRigidBody_getConstraintRef(arg1, arg2)
}

func _swig_wrap_btRigidBody_getNumConstraintRefs(SwigcptrBtRigidBody) int

func (arg1 SwigcptrBtRigidBody) GetNumConstraintRefs() int {
	return _swig_wrap_btRigidBody_getNumConstraintRefs(arg1)
}

func _swig_wrap_btRigidBody_setFlags(SwigcptrBtRigidBody, int)

func (arg1 SwigcptrBtRigidBody) SetFlags(arg2 int) {
	_swig_wrap_btRigidBody_setFlags(arg1, arg2)
}

func _swig_wrap_btRigidBody_getFlags(SwigcptrBtRigidBody) int

func (arg1 SwigcptrBtRigidBody) GetFlags() int {
	return _swig_wrap_btRigidBody_getFlags(arg1)
}

func _swig_wrap_btRigidBody_computeGyroscopicForce(SwigcptrBtRigidBody, float32) SwigcptrBtVector3

func (arg1 SwigcptrBtRigidBody) ComputeGyroscopicForce(arg2 float32) BtVector3 {
	return _swig_wrap_btRigidBody_computeGyroscopicForce(arg1, arg2)
}

func _swig_wrap_btRigidBody_calculateSerializeBufferSize(SwigcptrBtRigidBody) int

func (arg1 SwigcptrBtRigidBody) CalculateSerializeBufferSize() int {
	return _swig_wrap_btRigidBody_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btRigidBody_serialize(SwigcptrBtRigidBody, uintptr, uintptr) string

func (arg1 SwigcptrBtRigidBody) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btRigidBody_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btRigidBody_serializeSingleObject(SwigcptrBtRigidBody, uintptr)

func (arg1 SwigcptrBtRigidBody) SerializeSingleObject(arg2 BtSerializer) {
	_swig_wrap_btRigidBody_serializeSingleObject(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBody_mergesSimulationIslands(SwigcptrBtRigidBody) bool

func (_swig_base SwigcptrBtRigidBody) MergesSimulationIslands() bool {
	return _swig_wrap_btRigidBody_mergesSimulationIslands(_swig_base)
}

func _swig_wrap_btRigidBody_getAnisotropicFriction(SwigcptrBtRigidBody) SwigcptrBtVector3

func (_swig_base SwigcptrBtRigidBody) GetAnisotropicFriction() BtVector3 {
	return _swig_wrap_btRigidBody_getAnisotropicFriction(_swig_base)
}

func _swig_wrap_btRigidBody_setAnisotropicFriction__SWIG_0(SwigcptrBtRigidBody, uintptr, int)

func (_swig_base SwigcptrBtRigidBody) SetAnisotropicFriction__SWIG_0(arg1 BtVector3, arg2 int) {
	_swig_wrap_btRigidBody_setAnisotropicFriction__SWIG_0(_swig_base, arg1.Swigcptr(), arg2)
}

func _swig_wrap_btRigidBody_setAnisotropicFriction__SWIG_1(SwigcptrBtRigidBody, uintptr)

func (_swig_base SwigcptrBtRigidBody) SetAnisotropicFriction__SWIG_1(arg1 BtVector3) {
	_swig_wrap_btRigidBody_setAnisotropicFriction__SWIG_1(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtRigidBody) SetAnisotropicFriction(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.SetAnisotropicFriction__SWIG_1(a[0].(BtVector3))
		return
	}
	if argc == 2 {
		p.SetAnisotropicFriction__SWIG_0(a[0].(BtVector3), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRigidBody_hasAnisotropicFriction__SWIG_0(SwigcptrBtRigidBody, int) bool

func (_swig_base SwigcptrBtRigidBody) HasAnisotropicFriction__SWIG_0(arg1 int) bool {
	return _swig_wrap_btRigidBody_hasAnisotropicFriction__SWIG_0(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_hasAnisotropicFriction__SWIG_1(SwigcptrBtRigidBody) bool

func (_swig_base SwigcptrBtRigidBody) HasAnisotropicFriction__SWIG_1() bool {
	return _swig_wrap_btRigidBody_hasAnisotropicFriction__SWIG_1(_swig_base)
}

func (p SwigcptrBtRigidBody) HasAnisotropicFriction(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.HasAnisotropicFriction__SWIG_1()
	}
	if argc == 1 {
		return p.HasAnisotropicFriction__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRigidBody_setContactProcessingThreshold(SwigcptrBtRigidBody, float32)

func (_swig_base SwigcptrBtRigidBody) SetContactProcessingThreshold(arg1 float32) {
	_swig_wrap_btRigidBody_setContactProcessingThreshold(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getContactProcessingThreshold(SwigcptrBtRigidBody) float32

func (_swig_base SwigcptrBtRigidBody) GetContactProcessingThreshold() float32 {
	return _swig_wrap_btRigidBody_getContactProcessingThreshold(_swig_base)
}

func _swig_wrap_btRigidBody_isStaticObject(SwigcptrBtRigidBody) bool

func (_swig_base SwigcptrBtRigidBody) IsStaticObject() bool {
	return _swig_wrap_btRigidBody_isStaticObject(_swig_base)
}

func _swig_wrap_btRigidBody_isKinematicObject(SwigcptrBtRigidBody) bool

func (_swig_base SwigcptrBtRigidBody) IsKinematicObject() bool {
	return _swig_wrap_btRigidBody_isKinematicObject(_swig_base)
}

func _swig_wrap_btRigidBody_isStaticOrKinematicObject(SwigcptrBtRigidBody) bool

func (_swig_base SwigcptrBtRigidBody) IsStaticOrKinematicObject() bool {
	return _swig_wrap_btRigidBody_isStaticOrKinematicObject(_swig_base)
}

func _swig_wrap_btRigidBody_hasContactResponse(SwigcptrBtRigidBody) bool

func (_swig_base SwigcptrBtRigidBody) HasContactResponse() bool {
	return _swig_wrap_btRigidBody_hasContactResponse(_swig_base)
}

func _swig_wrap_btRigidBody_setCollisionShape(SwigcptrBtRigidBody, uintptr)

func (_swig_base SwigcptrBtRigidBody) SetCollisionShape(arg1 BtCollisionShape) {
	_swig_wrap_btRigidBody_setCollisionShape(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btRigidBody_internalGetExtensionPointer(SwigcptrBtRigidBody) uintptr

func (_swig_base SwigcptrBtRigidBody) InternalGetExtensionPointer() uintptr {
	return _swig_wrap_btRigidBody_internalGetExtensionPointer(_swig_base)
}

func _swig_wrap_btRigidBody_internalSetExtensionPointer(SwigcptrBtRigidBody, uintptr)

func (_swig_base SwigcptrBtRigidBody) InternalSetExtensionPointer(arg1 uintptr) {
	_swig_wrap_btRigidBody_internalSetExtensionPointer(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getActivationState(SwigcptrBtRigidBody) int

func (_swig_base SwigcptrBtRigidBody) GetActivationState() int {
	return _swig_wrap_btRigidBody_getActivationState(_swig_base)
}

func _swig_wrap_btRigidBody_setActivationState(SwigcptrBtRigidBody, int)

func (_swig_base SwigcptrBtRigidBody) SetActivationState(arg1 int) {
	_swig_wrap_btRigidBody_setActivationState(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_setDeactivationTime(SwigcptrBtRigidBody, float32)

func (_swig_base SwigcptrBtRigidBody) SetDeactivationTime(arg1 float32) {
	_swig_wrap_btRigidBody_setDeactivationTime(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getDeactivationTime(SwigcptrBtRigidBody) float32

func (_swig_base SwigcptrBtRigidBody) GetDeactivationTime() float32 {
	return _swig_wrap_btRigidBody_getDeactivationTime(_swig_base)
}

func _swig_wrap_btRigidBody_forceActivationState(SwigcptrBtRigidBody, int)

func (_swig_base SwigcptrBtRigidBody) ForceActivationState(arg1 int) {
	_swig_wrap_btRigidBody_forceActivationState(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_activate__SWIG_0(SwigcptrBtRigidBody, bool)

func (_swig_base SwigcptrBtRigidBody) Activate__SWIG_0(arg1 bool) {
	_swig_wrap_btRigidBody_activate__SWIG_0(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_activate__SWIG_1(SwigcptrBtRigidBody)

func (_swig_base SwigcptrBtRigidBody) Activate__SWIG_1() {
	_swig_wrap_btRigidBody_activate__SWIG_1(_swig_base)
}

func (p SwigcptrBtRigidBody) Activate(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Activate__SWIG_1()
		return
	}
	if argc == 1 {
		p.Activate__SWIG_0(a[0].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRigidBody_isActive(SwigcptrBtRigidBody) bool

func (_swig_base SwigcptrBtRigidBody) IsActive() bool {
	return _swig_wrap_btRigidBody_isActive(_swig_base)
}

func _swig_wrap_btRigidBody_setRestitution(SwigcptrBtRigidBody, float32)

func (_swig_base SwigcptrBtRigidBody) SetRestitution(arg1 float32) {
	_swig_wrap_btRigidBody_setRestitution(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getRestitution(SwigcptrBtRigidBody) float32

func (_swig_base SwigcptrBtRigidBody) GetRestitution() float32 {
	return _swig_wrap_btRigidBody_getRestitution(_swig_base)
}

func _swig_wrap_btRigidBody_setFriction(SwigcptrBtRigidBody, float32)

func (_swig_base SwigcptrBtRigidBody) SetFriction(arg1 float32) {
	_swig_wrap_btRigidBody_setFriction(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getFriction(SwigcptrBtRigidBody) float32

func (_swig_base SwigcptrBtRigidBody) GetFriction() float32 {
	return _swig_wrap_btRigidBody_getFriction(_swig_base)
}

func _swig_wrap_btRigidBody_setRollingFriction(SwigcptrBtRigidBody, float32)

func (_swig_base SwigcptrBtRigidBody) SetRollingFriction(arg1 float32) {
	_swig_wrap_btRigidBody_setRollingFriction(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getRollingFriction(SwigcptrBtRigidBody) float32

func (_swig_base SwigcptrBtRigidBody) GetRollingFriction() float32 {
	return _swig_wrap_btRigidBody_getRollingFriction(_swig_base)
}

func _swig_wrap_btRigidBody_getInternalType(SwigcptrBtRigidBody) int

func (_swig_base SwigcptrBtRigidBody) GetInternalType() int {
	return _swig_wrap_btRigidBody_getInternalType(_swig_base)
}

func _swig_wrap_btRigidBody_getWorldTransform__SWIG_0(SwigcptrBtRigidBody) SwigcptrBtTransform

func (_swig_base SwigcptrBtRigidBody) GetWorldTransform__SWIG_0() BtTransform {
	return _swig_wrap_btRigidBody_getWorldTransform__SWIG_0(_swig_base)
}

func _swig_wrap_btRigidBody_getWorldTransform__SWIG_1(SwigcptrBtRigidBody) SwigcptrBtTransform

func (_swig_base SwigcptrBtRigidBody) GetWorldTransform__SWIG_1() BtTransform {
	return _swig_wrap_btRigidBody_getWorldTransform__SWIG_1(_swig_base)
}

func (p SwigcptrBtRigidBody) GetWorldTransform(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetWorldTransform__SWIG_0()
	}
	if argc == 0 {
		return p.GetWorldTransform__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRigidBody_setWorldTransform(SwigcptrBtRigidBody, uintptr)

func (_swig_base SwigcptrBtRigidBody) SetWorldTransform(arg1 BtTransform) {
	_swig_wrap_btRigidBody_setWorldTransform(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btRigidBody_getBroadphaseHandle__SWIG_0(SwigcptrBtRigidBody) SwigcptrBtBroadphaseProxy

func (_swig_base SwigcptrBtRigidBody) GetBroadphaseHandle__SWIG_0() BtBroadphaseProxy {
	return _swig_wrap_btRigidBody_getBroadphaseHandle__SWIG_0(_swig_base)
}

func _swig_wrap_btRigidBody_getBroadphaseHandle__SWIG_1(SwigcptrBtRigidBody) SwigcptrBtBroadphaseProxy

func (_swig_base SwigcptrBtRigidBody) GetBroadphaseHandle__SWIG_1() BtBroadphaseProxy {
	return _swig_wrap_btRigidBody_getBroadphaseHandle__SWIG_1(_swig_base)
}

func (p SwigcptrBtRigidBody) GetBroadphaseHandle(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetBroadphaseHandle__SWIG_0()
	}
	if argc == 0 {
		return p.GetBroadphaseHandle__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRigidBody_setBroadphaseHandle(SwigcptrBtRigidBody, uintptr)

func (_swig_base SwigcptrBtRigidBody) SetBroadphaseHandle(arg1 BtBroadphaseProxy) {
	_swig_wrap_btRigidBody_setBroadphaseHandle(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btRigidBody_getInterpolationWorldTransform__SWIG_0(SwigcptrBtRigidBody) SwigcptrBtTransform

func (_swig_base SwigcptrBtRigidBody) GetInterpolationWorldTransform__SWIG_0() BtTransform {
	return _swig_wrap_btRigidBody_getInterpolationWorldTransform__SWIG_0(_swig_base)
}

func _swig_wrap_btRigidBody_getInterpolationWorldTransform__SWIG_1(SwigcptrBtRigidBody) SwigcptrBtTransform

func (_swig_base SwigcptrBtRigidBody) GetInterpolationWorldTransform__SWIG_1() BtTransform {
	return _swig_wrap_btRigidBody_getInterpolationWorldTransform__SWIG_1(_swig_base)
}

func (p SwigcptrBtRigidBody) GetInterpolationWorldTransform(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetInterpolationWorldTransform__SWIG_0()
	}
	if argc == 0 {
		return p.GetInterpolationWorldTransform__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRigidBody_setInterpolationWorldTransform(SwigcptrBtRigidBody, uintptr)

func (_swig_base SwigcptrBtRigidBody) SetInterpolationWorldTransform(arg1 BtTransform) {
	_swig_wrap_btRigidBody_setInterpolationWorldTransform(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btRigidBody_setInterpolationLinearVelocity(SwigcptrBtRigidBody, uintptr)

func (_swig_base SwigcptrBtRigidBody) SetInterpolationLinearVelocity(arg1 BtVector3) {
	_swig_wrap_btRigidBody_setInterpolationLinearVelocity(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btRigidBody_setInterpolationAngularVelocity(SwigcptrBtRigidBody, uintptr)

func (_swig_base SwigcptrBtRigidBody) SetInterpolationAngularVelocity(arg1 BtVector3) {
	_swig_wrap_btRigidBody_setInterpolationAngularVelocity(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btRigidBody_getInterpolationLinearVelocity(SwigcptrBtRigidBody) SwigcptrBtVector3

func (_swig_base SwigcptrBtRigidBody) GetInterpolationLinearVelocity() BtVector3 {
	return _swig_wrap_btRigidBody_getInterpolationLinearVelocity(_swig_base)
}

func _swig_wrap_btRigidBody_getInterpolationAngularVelocity(SwigcptrBtRigidBody) SwigcptrBtVector3

func (_swig_base SwigcptrBtRigidBody) GetInterpolationAngularVelocity() BtVector3 {
	return _swig_wrap_btRigidBody_getInterpolationAngularVelocity(_swig_base)
}

func _swig_wrap_btRigidBody_getIslandTag(SwigcptrBtRigidBody) int

func (_swig_base SwigcptrBtRigidBody) GetIslandTag() int {
	return _swig_wrap_btRigidBody_getIslandTag(_swig_base)
}

func _swig_wrap_btRigidBody_setIslandTag(SwigcptrBtRigidBody, int)

func (_swig_base SwigcptrBtRigidBody) SetIslandTag(arg1 int) {
	_swig_wrap_btRigidBody_setIslandTag(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getCompanionId(SwigcptrBtRigidBody) int

func (_swig_base SwigcptrBtRigidBody) GetCompanionId() int {
	return _swig_wrap_btRigidBody_getCompanionId(_swig_base)
}

func _swig_wrap_btRigidBody_setCompanionId(SwigcptrBtRigidBody, int)

func (_swig_base SwigcptrBtRigidBody) SetCompanionId(arg1 int) {
	_swig_wrap_btRigidBody_setCompanionId(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getHitFraction(SwigcptrBtRigidBody) float32

func (_swig_base SwigcptrBtRigidBody) GetHitFraction() float32 {
	return _swig_wrap_btRigidBody_getHitFraction(_swig_base)
}

func _swig_wrap_btRigidBody_setHitFraction(SwigcptrBtRigidBody, float32)

func (_swig_base SwigcptrBtRigidBody) SetHitFraction(arg1 float32) {
	_swig_wrap_btRigidBody_setHitFraction(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getCollisionFlags(SwigcptrBtRigidBody) int

func (_swig_base SwigcptrBtRigidBody) GetCollisionFlags() int {
	return _swig_wrap_btRigidBody_getCollisionFlags(_swig_base)
}

func _swig_wrap_btRigidBody_setCollisionFlags(SwigcptrBtRigidBody, int)

func (_swig_base SwigcptrBtRigidBody) SetCollisionFlags(arg1 int) {
	_swig_wrap_btRigidBody_setCollisionFlags(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getCcdSweptSphereRadius(SwigcptrBtRigidBody) float32

func (_swig_base SwigcptrBtRigidBody) GetCcdSweptSphereRadius() float32 {
	return _swig_wrap_btRigidBody_getCcdSweptSphereRadius(_swig_base)
}

func _swig_wrap_btRigidBody_setCcdSweptSphereRadius(SwigcptrBtRigidBody, float32)

func (_swig_base SwigcptrBtRigidBody) SetCcdSweptSphereRadius(arg1 float32) {
	_swig_wrap_btRigidBody_setCcdSweptSphereRadius(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getCcdMotionThreshold(SwigcptrBtRigidBody) float32

func (_swig_base SwigcptrBtRigidBody) GetCcdMotionThreshold() float32 {
	return _swig_wrap_btRigidBody_getCcdMotionThreshold(_swig_base)
}

func _swig_wrap_btRigidBody_getCcdSquareMotionThreshold(SwigcptrBtRigidBody) float32

func (_swig_base SwigcptrBtRigidBody) GetCcdSquareMotionThreshold() float32 {
	return _swig_wrap_btRigidBody_getCcdSquareMotionThreshold(_swig_base)
}

func _swig_wrap_btRigidBody_setCcdMotionThreshold(SwigcptrBtRigidBody, float32)

func (_swig_base SwigcptrBtRigidBody) SetCcdMotionThreshold(arg1 float32) {
	_swig_wrap_btRigidBody_setCcdMotionThreshold(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getUserPointer(SwigcptrBtRigidBody) uintptr

func (_swig_base SwigcptrBtRigidBody) GetUserPointer() uintptr {
	return _swig_wrap_btRigidBody_getUserPointer(_swig_base)
}

func _swig_wrap_btRigidBody_getUserIndex(SwigcptrBtRigidBody) int

func (_swig_base SwigcptrBtRigidBody) GetUserIndex() int {
	return _swig_wrap_btRigidBody_getUserIndex(_swig_base)
}

func _swig_wrap_btRigidBody_setUserPointer(SwigcptrBtRigidBody, uintptr)

func (_swig_base SwigcptrBtRigidBody) SetUserPointer(arg1 uintptr) {
	_swig_wrap_btRigidBody_setUserPointer(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_setUserIndex(SwigcptrBtRigidBody, int)

func (_swig_base SwigcptrBtRigidBody) SetUserIndex(arg1 int) {
	_swig_wrap_btRigidBody_setUserIndex(_swig_base, arg1)
}

func _swig_wrap_btRigidBody_getUpdateRevisionInternal(SwigcptrBtRigidBody) int

func (_swig_base SwigcptrBtRigidBody) GetUpdateRevisionInternal() int {
	return _swig_wrap_btRigidBody_getUpdateRevisionInternal(_swig_base)
}

func _swig_wrap_btRigidBody_checkCollideWith(SwigcptrBtRigidBody, uintptr) bool

func (_swig_base SwigcptrBtRigidBody) CheckCollideWith(arg1 BtCollisionObject) bool {
	return _swig_wrap_btRigidBody_checkCollideWith(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrBtRigidBody) SwigIsBtCollisionObject() {
}

func (p SwigcptrBtRigidBody) SwigGetBtCollisionObject() BtCollisionObject {
	return SwigcptrBtCollisionObject(p.Swigcptr())
}

type BtRigidBody interface {
	Swigcptr() uintptr
	SwigIsBtRigidBody()
	ProceedToTransform(arg2 BtTransform)
	PredictIntegratedTransform(arg2 float32, arg3 BtTransform)
	SaveKinematicState(arg2 float32)
	ApplyGravity()
	SetGravity(arg2 BtVector3)
	GetGravity() BtVector3
	SetDamping(arg2 float32, arg3 float32)
	GetLinearDamping() float32
	GetAngularDamping() float32
	GetLinearSleepingThreshold() float32
	GetAngularSleepingThreshold() float32
	ApplyDamping(arg2 float32)
	GetCollisionShape(a ...interface{}) interface{}
	SetMassProps(arg2 float32, arg3 BtVector3)
	GetLinearFactor() BtVector3
	SetLinearFactor(arg2 BtVector3)
	GetInvMass() float32
	GetInvInertiaTensorWorld() BtMatrix3x3
	IntegrateVelocities(arg2 float32)
	SetCenterOfMassTransform(arg2 BtTransform)
	ApplyCentralForce(arg2 BtVector3)
	GetTotalForce() BtVector3
	GetTotalTorque() BtVector3
	GetInvInertiaDiagLocal() BtVector3
	SetInvInertiaDiagLocal(arg2 BtVector3)
	SetSleepingThresholds(arg2 float32, arg3 float32)
	ApplyTorque(arg2 BtVector3)
	ApplyForce(arg2 BtVector3, arg3 BtVector3)
	ApplyCentralImpulse(arg2 BtVector3)
	ApplyTorqueImpulse(arg2 BtVector3)
	ApplyImpulse(arg2 BtVector3, arg3 BtVector3)
	ClearForces()
	UpdateInertiaTensor()
	GetCenterOfMassPosition() BtVector3
	GetOrientation() BtQuaternion
	GetCenterOfMassTransform() BtTransform
	GetLinearVelocity() BtVector3
	GetAngularVelocity() BtVector3
	SetLinearVelocity(arg2 BtVector3)
	SetAngularVelocity(arg2 BtVector3)
	GetVelocityInLocalPoint(arg2 BtVector3) BtVector3
	Translate(arg2 BtVector3)
	GetAabb(arg2 BtVector3, arg3 BtVector3)
	ComputeImpulseDenominator(arg2 BtVector3, arg3 BtVector3) float32
	ComputeAngularImpulseDenominator(arg2 BtVector3) float32
	UpdateDeactivation(arg2 float32)
	WantsSleeping() bool
	GetBroadphaseProxy(a ...interface{}) interface{}
	SetNewBroadphaseProxy(arg2 BtBroadphaseProxy)
	GetMotionState(a ...interface{}) interface{}
	SetMotionState(arg2 BtMotionState)
	SetM_contactSolverType(arg2 int)
	GetM_contactSolverType() int
	SetM_frictionSolverType(arg2 int)
	GetM_frictionSolverType() int
	SetAngularFactor(a ...interface{})
	GetAngularFactor() BtVector3
	IsInWorld() bool
	CheckCollideWithOverride(arg2 BtCollisionObject) bool
	AddConstraintRef(arg2 BtTypedConstraint)
	RemoveConstraintRef(arg2 BtTypedConstraint)
	GetConstraintRef(arg2 int) BtTypedConstraint
	GetNumConstraintRefs() int
	SetFlags(arg2 int)
	GetFlags() int
	ComputeGyroscopicForce(arg2 float32) BtVector3
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	SerializeSingleObject(arg2 BtSerializer)
	MergesSimulationIslands() bool
	GetAnisotropicFriction() BtVector3
	SetAnisotropicFriction(a ...interface{})
	HasAnisotropicFriction(a ...interface{}) bool
	SetContactProcessingThreshold(arg1 float32)
	GetContactProcessingThreshold() float32
	IsStaticObject() bool
	IsKinematicObject() bool
	IsStaticOrKinematicObject() bool
	HasContactResponse() bool
	SetCollisionShape(arg1 BtCollisionShape)
	InternalGetExtensionPointer() uintptr
	InternalSetExtensionPointer(arg1 uintptr)
	GetActivationState() int
	SetActivationState(arg1 int)
	SetDeactivationTime(arg1 float32)
	GetDeactivationTime() float32
	ForceActivationState(arg1 int)
	Activate(a ...interface{})
	IsActive() bool
	SetRestitution(arg1 float32)
	GetRestitution() float32
	SetFriction(arg1 float32)
	GetFriction() float32
	SetRollingFriction(arg1 float32)
	GetRollingFriction() float32
	GetInternalType() int
	GetWorldTransform(a ...interface{}) interface{}
	SetWorldTransform(arg1 BtTransform)
	GetBroadphaseHandle(a ...interface{}) interface{}
	SetBroadphaseHandle(arg1 BtBroadphaseProxy)
	GetInterpolationWorldTransform(a ...interface{}) interface{}
	SetInterpolationWorldTransform(arg1 BtTransform)
	SetInterpolationLinearVelocity(arg1 BtVector3)
	SetInterpolationAngularVelocity(arg1 BtVector3)
	GetInterpolationLinearVelocity() BtVector3
	GetInterpolationAngularVelocity() BtVector3
	GetIslandTag() int
	SetIslandTag(arg1 int)
	GetCompanionId() int
	SetCompanionId(arg1 int)
	GetHitFraction() float32
	SetHitFraction(arg1 float32)
	GetCollisionFlags() int
	SetCollisionFlags(arg1 int)
	GetCcdSweptSphereRadius() float32
	SetCcdSweptSphereRadius(arg1 float32)
	GetCcdMotionThreshold() float32
	GetCcdSquareMotionThreshold() float32
	SetCcdMotionThreshold(arg1 float32)
	GetUserPointer() uintptr
	GetUserIndex() int
	SetUserPointer(arg1 uintptr)
	SetUserIndex(arg1 int)
	GetUpdateRevisionInternal() int
	CheckCollideWith(arg1 BtCollisionObject) bool
	SwigIsBtCollisionObject()
	SwigGetBtCollisionObject() BtCollisionObject
}

type SwigcptrBtRigidBodyFloatData uintptr

func (p SwigcptrBtRigidBodyFloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtRigidBodyFloatData) SwigIsBtRigidBodyFloatData() {
}

func _swig_wrap_btRigidBodyFloatData_m_collisionObjectData_set(SwigcptrBtRigidBodyFloatData, uintptr)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_collisionObjectData(arg2 BtCollisionObjectFloatData) {
	_swig_wrap_btRigidBodyFloatData_m_collisionObjectData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyFloatData_m_collisionObjectData_get(SwigcptrBtRigidBodyFloatData) SwigcptrBtCollisionObjectFloatData

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_collisionObjectData() BtCollisionObjectFloatData {
	return _swig_wrap_btRigidBodyFloatData_m_collisionObjectData_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_invInertiaTensorWorld_set(SwigcptrBtRigidBodyFloatData, uintptr)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_invInertiaTensorWorld(arg2 BtMatrix3x3FloatData) {
	_swig_wrap_btRigidBodyFloatData_m_invInertiaTensorWorld_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyFloatData_m_invInertiaTensorWorld_get(SwigcptrBtRigidBodyFloatData) SwigcptrBtMatrix3x3FloatData

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_invInertiaTensorWorld() BtMatrix3x3FloatData {
	return _swig_wrap_btRigidBodyFloatData_m_invInertiaTensorWorld_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_linearVelocity_set(SwigcptrBtRigidBodyFloatData, uintptr)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_linearVelocity(arg2 BtVector3FloatData) {
	_swig_wrap_btRigidBodyFloatData_m_linearVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyFloatData_m_linearVelocity_get(SwigcptrBtRigidBodyFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_linearVelocity() BtVector3FloatData {
	return _swig_wrap_btRigidBodyFloatData_m_linearVelocity_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_angularVelocity_set(SwigcptrBtRigidBodyFloatData, uintptr)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_angularVelocity(arg2 BtVector3FloatData) {
	_swig_wrap_btRigidBodyFloatData_m_angularVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyFloatData_m_angularVelocity_get(SwigcptrBtRigidBodyFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_angularVelocity() BtVector3FloatData {
	return _swig_wrap_btRigidBodyFloatData_m_angularVelocity_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_angularFactor_set(SwigcptrBtRigidBodyFloatData, uintptr)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_angularFactor(arg2 BtVector3FloatData) {
	_swig_wrap_btRigidBodyFloatData_m_angularFactor_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyFloatData_m_angularFactor_get(SwigcptrBtRigidBodyFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_angularFactor() BtVector3FloatData {
	return _swig_wrap_btRigidBodyFloatData_m_angularFactor_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_linearFactor_set(SwigcptrBtRigidBodyFloatData, uintptr)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_linearFactor(arg2 BtVector3FloatData) {
	_swig_wrap_btRigidBodyFloatData_m_linearFactor_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyFloatData_m_linearFactor_get(SwigcptrBtRigidBodyFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_linearFactor() BtVector3FloatData {
	return _swig_wrap_btRigidBodyFloatData_m_linearFactor_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_gravity_set(SwigcptrBtRigidBodyFloatData, uintptr)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_gravity(arg2 BtVector3FloatData) {
	_swig_wrap_btRigidBodyFloatData_m_gravity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyFloatData_m_gravity_get(SwigcptrBtRigidBodyFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_gravity() BtVector3FloatData {
	return _swig_wrap_btRigidBodyFloatData_m_gravity_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_gravity_acceleration_set(SwigcptrBtRigidBodyFloatData, uintptr)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_gravity_acceleration(arg2 BtVector3FloatData) {
	_swig_wrap_btRigidBodyFloatData_m_gravity_acceleration_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyFloatData_m_gravity_acceleration_get(SwigcptrBtRigidBodyFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_gravity_acceleration() BtVector3FloatData {
	return _swig_wrap_btRigidBodyFloatData_m_gravity_acceleration_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_invInertiaLocal_set(SwigcptrBtRigidBodyFloatData, uintptr)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_invInertiaLocal(arg2 BtVector3FloatData) {
	_swig_wrap_btRigidBodyFloatData_m_invInertiaLocal_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyFloatData_m_invInertiaLocal_get(SwigcptrBtRigidBodyFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_invInertiaLocal() BtVector3FloatData {
	return _swig_wrap_btRigidBodyFloatData_m_invInertiaLocal_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_totalForce_set(SwigcptrBtRigidBodyFloatData, uintptr)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_totalForce(arg2 BtVector3FloatData) {
	_swig_wrap_btRigidBodyFloatData_m_totalForce_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyFloatData_m_totalForce_get(SwigcptrBtRigidBodyFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_totalForce() BtVector3FloatData {
	return _swig_wrap_btRigidBodyFloatData_m_totalForce_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_totalTorque_set(SwigcptrBtRigidBodyFloatData, uintptr)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_totalTorque(arg2 BtVector3FloatData) {
	_swig_wrap_btRigidBodyFloatData_m_totalTorque_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyFloatData_m_totalTorque_get(SwigcptrBtRigidBodyFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_totalTorque() BtVector3FloatData {
	return _swig_wrap_btRigidBodyFloatData_m_totalTorque_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_inverseMass_set(SwigcptrBtRigidBodyFloatData, float32)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_inverseMass(arg2 float32) {
	_swig_wrap_btRigidBodyFloatData_m_inverseMass_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyFloatData_m_inverseMass_get(SwigcptrBtRigidBodyFloatData) float32

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_inverseMass() float32 {
	return _swig_wrap_btRigidBodyFloatData_m_inverseMass_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_linearDamping_set(SwigcptrBtRigidBodyFloatData, float32)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_linearDamping(arg2 float32) {
	_swig_wrap_btRigidBodyFloatData_m_linearDamping_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyFloatData_m_linearDamping_get(SwigcptrBtRigidBodyFloatData) float32

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_linearDamping() float32 {
	return _swig_wrap_btRigidBodyFloatData_m_linearDamping_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_angularDamping_set(SwigcptrBtRigidBodyFloatData, float32)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_angularDamping(arg2 float32) {
	_swig_wrap_btRigidBodyFloatData_m_angularDamping_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyFloatData_m_angularDamping_get(SwigcptrBtRigidBodyFloatData) float32

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_angularDamping() float32 {
	return _swig_wrap_btRigidBodyFloatData_m_angularDamping_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_additionalDampingFactor_set(SwigcptrBtRigidBodyFloatData, float32)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_additionalDampingFactor(arg2 float32) {
	_swig_wrap_btRigidBodyFloatData_m_additionalDampingFactor_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyFloatData_m_additionalDampingFactor_get(SwigcptrBtRigidBodyFloatData) float32

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_additionalDampingFactor() float32 {
	return _swig_wrap_btRigidBodyFloatData_m_additionalDampingFactor_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_additionalLinearDampingThresholdSqr_set(SwigcptrBtRigidBodyFloatData, float32)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_additionalLinearDampingThresholdSqr(arg2 float32) {
	_swig_wrap_btRigidBodyFloatData_m_additionalLinearDampingThresholdSqr_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyFloatData_m_additionalLinearDampingThresholdSqr_get(SwigcptrBtRigidBodyFloatData) float32

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_additionalLinearDampingThresholdSqr() float32 {
	return _swig_wrap_btRigidBodyFloatData_m_additionalLinearDampingThresholdSqr_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_additionalAngularDampingThresholdSqr_set(SwigcptrBtRigidBodyFloatData, float32)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_additionalAngularDampingThresholdSqr(arg2 float32) {
	_swig_wrap_btRigidBodyFloatData_m_additionalAngularDampingThresholdSqr_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyFloatData_m_additionalAngularDampingThresholdSqr_get(SwigcptrBtRigidBodyFloatData) float32

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_additionalAngularDampingThresholdSqr() float32 {
	return _swig_wrap_btRigidBodyFloatData_m_additionalAngularDampingThresholdSqr_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_additionalAngularDampingFactor_set(SwigcptrBtRigidBodyFloatData, float32)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_additionalAngularDampingFactor(arg2 float32) {
	_swig_wrap_btRigidBodyFloatData_m_additionalAngularDampingFactor_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyFloatData_m_additionalAngularDampingFactor_get(SwigcptrBtRigidBodyFloatData) float32

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_additionalAngularDampingFactor() float32 {
	return _swig_wrap_btRigidBodyFloatData_m_additionalAngularDampingFactor_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_linearSleepingThreshold_set(SwigcptrBtRigidBodyFloatData, float32)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_linearSleepingThreshold(arg2 float32) {
	_swig_wrap_btRigidBodyFloatData_m_linearSleepingThreshold_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyFloatData_m_linearSleepingThreshold_get(SwigcptrBtRigidBodyFloatData) float32

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_linearSleepingThreshold() float32 {
	return _swig_wrap_btRigidBodyFloatData_m_linearSleepingThreshold_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_angularSleepingThreshold_set(SwigcptrBtRigidBodyFloatData, float32)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_angularSleepingThreshold(arg2 float32) {
	_swig_wrap_btRigidBodyFloatData_m_angularSleepingThreshold_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyFloatData_m_angularSleepingThreshold_get(SwigcptrBtRigidBodyFloatData) float32

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_angularSleepingThreshold() float32 {
	return _swig_wrap_btRigidBodyFloatData_m_angularSleepingThreshold_get(arg1)
}

func _swig_wrap_btRigidBodyFloatData_m_additionalDamping_set(SwigcptrBtRigidBodyFloatData, int)

func (arg1 SwigcptrBtRigidBodyFloatData) SetM_additionalDamping(arg2 int) {
	_swig_wrap_btRigidBodyFloatData_m_additionalDamping_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyFloatData_m_additionalDamping_get(SwigcptrBtRigidBodyFloatData) int

func (arg1 SwigcptrBtRigidBodyFloatData) GetM_additionalDamping() int {
	return _swig_wrap_btRigidBodyFloatData_m_additionalDamping_get(arg1)
}

func _swig_wrap_new_btRigidBodyFloatData() SwigcptrBtRigidBodyFloatData

func NewBtRigidBodyFloatData() BtRigidBodyFloatData {
	return _swig_wrap_new_btRigidBodyFloatData()
}

func _swig_wrap_delete_btRigidBodyFloatData(uintptr)

func DeleteBtRigidBodyFloatData(arg1 BtRigidBodyFloatData) {
	_swig_wrap_delete_btRigidBodyFloatData(arg1.Swigcptr())
}

type BtRigidBodyFloatData interface {
	Swigcptr() uintptr
	SwigIsBtRigidBodyFloatData()
	SetM_collisionObjectData(arg2 BtCollisionObjectFloatData)
	GetM_collisionObjectData() BtCollisionObjectFloatData
	SetM_invInertiaTensorWorld(arg2 BtMatrix3x3FloatData)
	GetM_invInertiaTensorWorld() BtMatrix3x3FloatData
	SetM_linearVelocity(arg2 BtVector3FloatData)
	GetM_linearVelocity() BtVector3FloatData
	SetM_angularVelocity(arg2 BtVector3FloatData)
	GetM_angularVelocity() BtVector3FloatData
	SetM_angularFactor(arg2 BtVector3FloatData)
	GetM_angularFactor() BtVector3FloatData
	SetM_linearFactor(arg2 BtVector3FloatData)
	GetM_linearFactor() BtVector3FloatData
	SetM_gravity(arg2 BtVector3FloatData)
	GetM_gravity() BtVector3FloatData
	SetM_gravity_acceleration(arg2 BtVector3FloatData)
	GetM_gravity_acceleration() BtVector3FloatData
	SetM_invInertiaLocal(arg2 BtVector3FloatData)
	GetM_invInertiaLocal() BtVector3FloatData
	SetM_totalForce(arg2 BtVector3FloatData)
	GetM_totalForce() BtVector3FloatData
	SetM_totalTorque(arg2 BtVector3FloatData)
	GetM_totalTorque() BtVector3FloatData
	SetM_inverseMass(arg2 float32)
	GetM_inverseMass() float32
	SetM_linearDamping(arg2 float32)
	GetM_linearDamping() float32
	SetM_angularDamping(arg2 float32)
	GetM_angularDamping() float32
	SetM_additionalDampingFactor(arg2 float32)
	GetM_additionalDampingFactor() float32
	SetM_additionalLinearDampingThresholdSqr(arg2 float32)
	GetM_additionalLinearDampingThresholdSqr() float32
	SetM_additionalAngularDampingThresholdSqr(arg2 float32)
	GetM_additionalAngularDampingThresholdSqr() float32
	SetM_additionalAngularDampingFactor(arg2 float32)
	GetM_additionalAngularDampingFactor() float32
	SetM_linearSleepingThreshold(arg2 float32)
	GetM_linearSleepingThreshold() float32
	SetM_angularSleepingThreshold(arg2 float32)
	GetM_angularSleepingThreshold() float32
	SetM_additionalDamping(arg2 int)
	GetM_additionalDamping() int
}

type SwigcptrBtRigidBodyDoubleData uintptr

func (p SwigcptrBtRigidBodyDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtRigidBodyDoubleData) SwigIsBtRigidBodyDoubleData() {
}

func _swig_wrap_btRigidBodyDoubleData_m_collisionObjectData_set(SwigcptrBtRigidBodyDoubleData, uintptr)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_collisionObjectData(arg2 BtCollisionObjectDoubleData) {
	_swig_wrap_btRigidBodyDoubleData_m_collisionObjectData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyDoubleData_m_collisionObjectData_get(SwigcptrBtRigidBodyDoubleData) SwigcptrBtCollisionObjectDoubleData

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_collisionObjectData() BtCollisionObjectDoubleData {
	return _swig_wrap_btRigidBodyDoubleData_m_collisionObjectData_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_invInertiaTensorWorld_set(SwigcptrBtRigidBodyDoubleData, uintptr)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_invInertiaTensorWorld(arg2 BtMatrix3x3DoubleData) {
	_swig_wrap_btRigidBodyDoubleData_m_invInertiaTensorWorld_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyDoubleData_m_invInertiaTensorWorld_get(SwigcptrBtRigidBodyDoubleData) SwigcptrBtMatrix3x3DoubleData

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_invInertiaTensorWorld() BtMatrix3x3DoubleData {
	return _swig_wrap_btRigidBodyDoubleData_m_invInertiaTensorWorld_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_linearVelocity_set(SwigcptrBtRigidBodyDoubleData, uintptr)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_linearVelocity(arg2 BtVector3DoubleData) {
	_swig_wrap_btRigidBodyDoubleData_m_linearVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyDoubleData_m_linearVelocity_get(SwigcptrBtRigidBodyDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_linearVelocity() BtVector3DoubleData {
	return _swig_wrap_btRigidBodyDoubleData_m_linearVelocity_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_angularVelocity_set(SwigcptrBtRigidBodyDoubleData, uintptr)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_angularVelocity(arg2 BtVector3DoubleData) {
	_swig_wrap_btRigidBodyDoubleData_m_angularVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyDoubleData_m_angularVelocity_get(SwigcptrBtRigidBodyDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_angularVelocity() BtVector3DoubleData {
	return _swig_wrap_btRigidBodyDoubleData_m_angularVelocity_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_angularFactor_set(SwigcptrBtRigidBodyDoubleData, uintptr)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_angularFactor(arg2 BtVector3DoubleData) {
	_swig_wrap_btRigidBodyDoubleData_m_angularFactor_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyDoubleData_m_angularFactor_get(SwigcptrBtRigidBodyDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_angularFactor() BtVector3DoubleData {
	return _swig_wrap_btRigidBodyDoubleData_m_angularFactor_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_linearFactor_set(SwigcptrBtRigidBodyDoubleData, uintptr)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_linearFactor(arg2 BtVector3DoubleData) {
	_swig_wrap_btRigidBodyDoubleData_m_linearFactor_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyDoubleData_m_linearFactor_get(SwigcptrBtRigidBodyDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_linearFactor() BtVector3DoubleData {
	return _swig_wrap_btRigidBodyDoubleData_m_linearFactor_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_gravity_set(SwigcptrBtRigidBodyDoubleData, uintptr)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_gravity(arg2 BtVector3DoubleData) {
	_swig_wrap_btRigidBodyDoubleData_m_gravity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyDoubleData_m_gravity_get(SwigcptrBtRigidBodyDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_gravity() BtVector3DoubleData {
	return _swig_wrap_btRigidBodyDoubleData_m_gravity_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_gravity_acceleration_set(SwigcptrBtRigidBodyDoubleData, uintptr)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_gravity_acceleration(arg2 BtVector3DoubleData) {
	_swig_wrap_btRigidBodyDoubleData_m_gravity_acceleration_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyDoubleData_m_gravity_acceleration_get(SwigcptrBtRigidBodyDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_gravity_acceleration() BtVector3DoubleData {
	return _swig_wrap_btRigidBodyDoubleData_m_gravity_acceleration_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_invInertiaLocal_set(SwigcptrBtRigidBodyDoubleData, uintptr)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_invInertiaLocal(arg2 BtVector3DoubleData) {
	_swig_wrap_btRigidBodyDoubleData_m_invInertiaLocal_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyDoubleData_m_invInertiaLocal_get(SwigcptrBtRigidBodyDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_invInertiaLocal() BtVector3DoubleData {
	return _swig_wrap_btRigidBodyDoubleData_m_invInertiaLocal_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_totalForce_set(SwigcptrBtRigidBodyDoubleData, uintptr)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_totalForce(arg2 BtVector3DoubleData) {
	_swig_wrap_btRigidBodyDoubleData_m_totalForce_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyDoubleData_m_totalForce_get(SwigcptrBtRigidBodyDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_totalForce() BtVector3DoubleData {
	return _swig_wrap_btRigidBodyDoubleData_m_totalForce_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_totalTorque_set(SwigcptrBtRigidBodyDoubleData, uintptr)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_totalTorque(arg2 BtVector3DoubleData) {
	_swig_wrap_btRigidBodyDoubleData_m_totalTorque_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btRigidBodyDoubleData_m_totalTorque_get(SwigcptrBtRigidBodyDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_totalTorque() BtVector3DoubleData {
	return _swig_wrap_btRigidBodyDoubleData_m_totalTorque_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_inverseMass_set(SwigcptrBtRigidBodyDoubleData, float64)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_inverseMass(arg2 float64) {
	_swig_wrap_btRigidBodyDoubleData_m_inverseMass_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyDoubleData_m_inverseMass_get(SwigcptrBtRigidBodyDoubleData) float64

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_inverseMass() float64 {
	return _swig_wrap_btRigidBodyDoubleData_m_inverseMass_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_linearDamping_set(SwigcptrBtRigidBodyDoubleData, float64)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_linearDamping(arg2 float64) {
	_swig_wrap_btRigidBodyDoubleData_m_linearDamping_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyDoubleData_m_linearDamping_get(SwigcptrBtRigidBodyDoubleData) float64

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_linearDamping() float64 {
	return _swig_wrap_btRigidBodyDoubleData_m_linearDamping_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_angularDamping_set(SwigcptrBtRigidBodyDoubleData, float64)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_angularDamping(arg2 float64) {
	_swig_wrap_btRigidBodyDoubleData_m_angularDamping_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyDoubleData_m_angularDamping_get(SwigcptrBtRigidBodyDoubleData) float64

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_angularDamping() float64 {
	return _swig_wrap_btRigidBodyDoubleData_m_angularDamping_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_additionalDampingFactor_set(SwigcptrBtRigidBodyDoubleData, float64)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_additionalDampingFactor(arg2 float64) {
	_swig_wrap_btRigidBodyDoubleData_m_additionalDampingFactor_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyDoubleData_m_additionalDampingFactor_get(SwigcptrBtRigidBodyDoubleData) float64

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_additionalDampingFactor() float64 {
	return _swig_wrap_btRigidBodyDoubleData_m_additionalDampingFactor_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_additionalLinearDampingThresholdSqr_set(SwigcptrBtRigidBodyDoubleData, float64)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_additionalLinearDampingThresholdSqr(arg2 float64) {
	_swig_wrap_btRigidBodyDoubleData_m_additionalLinearDampingThresholdSqr_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyDoubleData_m_additionalLinearDampingThresholdSqr_get(SwigcptrBtRigidBodyDoubleData) float64

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_additionalLinearDampingThresholdSqr() float64 {
	return _swig_wrap_btRigidBodyDoubleData_m_additionalLinearDampingThresholdSqr_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_additionalAngularDampingThresholdSqr_set(SwigcptrBtRigidBodyDoubleData, float64)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_additionalAngularDampingThresholdSqr(arg2 float64) {
	_swig_wrap_btRigidBodyDoubleData_m_additionalAngularDampingThresholdSqr_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyDoubleData_m_additionalAngularDampingThresholdSqr_get(SwigcptrBtRigidBodyDoubleData) float64

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_additionalAngularDampingThresholdSqr() float64 {
	return _swig_wrap_btRigidBodyDoubleData_m_additionalAngularDampingThresholdSqr_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_additionalAngularDampingFactor_set(SwigcptrBtRigidBodyDoubleData, float64)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_additionalAngularDampingFactor(arg2 float64) {
	_swig_wrap_btRigidBodyDoubleData_m_additionalAngularDampingFactor_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyDoubleData_m_additionalAngularDampingFactor_get(SwigcptrBtRigidBodyDoubleData) float64

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_additionalAngularDampingFactor() float64 {
	return _swig_wrap_btRigidBodyDoubleData_m_additionalAngularDampingFactor_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_linearSleepingThreshold_set(SwigcptrBtRigidBodyDoubleData, float64)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_linearSleepingThreshold(arg2 float64) {
	_swig_wrap_btRigidBodyDoubleData_m_linearSleepingThreshold_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyDoubleData_m_linearSleepingThreshold_get(SwigcptrBtRigidBodyDoubleData) float64

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_linearSleepingThreshold() float64 {
	return _swig_wrap_btRigidBodyDoubleData_m_linearSleepingThreshold_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_angularSleepingThreshold_set(SwigcptrBtRigidBodyDoubleData, float64)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_angularSleepingThreshold(arg2 float64) {
	_swig_wrap_btRigidBodyDoubleData_m_angularSleepingThreshold_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyDoubleData_m_angularSleepingThreshold_get(SwigcptrBtRigidBodyDoubleData) float64

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_angularSleepingThreshold() float64 {
	return _swig_wrap_btRigidBodyDoubleData_m_angularSleepingThreshold_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_additionalDamping_set(SwigcptrBtRigidBodyDoubleData, int)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_additionalDamping(arg2 int) {
	_swig_wrap_btRigidBodyDoubleData_m_additionalDamping_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyDoubleData_m_additionalDamping_get(SwigcptrBtRigidBodyDoubleData) int

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_additionalDamping() int {
	return _swig_wrap_btRigidBodyDoubleData_m_additionalDamping_get(arg1)
}

func _swig_wrap_btRigidBodyDoubleData_m_padding_set(SwigcptrBtRigidBodyDoubleData, string)

func (arg1 SwigcptrBtRigidBodyDoubleData) SetM_padding(arg2 string) {
	_swig_wrap_btRigidBodyDoubleData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btRigidBodyDoubleData_m_padding_get(SwigcptrBtRigidBodyDoubleData) string

func (arg1 SwigcptrBtRigidBodyDoubleData) GetM_padding() string {
	return _swig_wrap_btRigidBodyDoubleData_m_padding_get(arg1)
}

func _swig_wrap_new_btRigidBodyDoubleData() SwigcptrBtRigidBodyDoubleData

func NewBtRigidBodyDoubleData() BtRigidBodyDoubleData {
	return _swig_wrap_new_btRigidBodyDoubleData()
}

func _swig_wrap_delete_btRigidBodyDoubleData(uintptr)

func DeleteBtRigidBodyDoubleData(arg1 BtRigidBodyDoubleData) {
	_swig_wrap_delete_btRigidBodyDoubleData(arg1.Swigcptr())
}

type BtRigidBodyDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtRigidBodyDoubleData()
	SetM_collisionObjectData(arg2 BtCollisionObjectDoubleData)
	GetM_collisionObjectData() BtCollisionObjectDoubleData
	SetM_invInertiaTensorWorld(arg2 BtMatrix3x3DoubleData)
	GetM_invInertiaTensorWorld() BtMatrix3x3DoubleData
	SetM_linearVelocity(arg2 BtVector3DoubleData)
	GetM_linearVelocity() BtVector3DoubleData
	SetM_angularVelocity(arg2 BtVector3DoubleData)
	GetM_angularVelocity() BtVector3DoubleData
	SetM_angularFactor(arg2 BtVector3DoubleData)
	GetM_angularFactor() BtVector3DoubleData
	SetM_linearFactor(arg2 BtVector3DoubleData)
	GetM_linearFactor() BtVector3DoubleData
	SetM_gravity(arg2 BtVector3DoubleData)
	GetM_gravity() BtVector3DoubleData
	SetM_gravity_acceleration(arg2 BtVector3DoubleData)
	GetM_gravity_acceleration() BtVector3DoubleData
	SetM_invInertiaLocal(arg2 BtVector3DoubleData)
	GetM_invInertiaLocal() BtVector3DoubleData
	SetM_totalForce(arg2 BtVector3DoubleData)
	GetM_totalForce() BtVector3DoubleData
	SetM_totalTorque(arg2 BtVector3DoubleData)
	GetM_totalTorque() BtVector3DoubleData
	SetM_inverseMass(arg2 float64)
	GetM_inverseMass() float64
	SetM_linearDamping(arg2 float64)
	GetM_linearDamping() float64
	SetM_angularDamping(arg2 float64)
	GetM_angularDamping() float64
	SetM_additionalDampingFactor(arg2 float64)
	GetM_additionalDampingFactor() float64
	SetM_additionalLinearDampingThresholdSqr(arg2 float64)
	GetM_additionalLinearDampingThresholdSqr() float64
	SetM_additionalAngularDampingThresholdSqr(arg2 float64)
	GetM_additionalAngularDampingThresholdSqr() float64
	SetM_additionalAngularDampingFactor(arg2 float64)
	GetM_additionalAngularDampingFactor() float64
	SetM_linearSleepingThreshold(arg2 float64)
	GetM_linearSleepingThreshold() float64
	SetM_angularSleepingThreshold(arg2 float64)
	GetM_angularSleepingThreshold() float64
	SetM_additionalDamping(arg2 int)
	GetM_additionalDamping() int
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtJacobianEntry uintptr

func (p SwigcptrBtJacobianEntry) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtJacobianEntry) SwigIsBtJacobianEntry() {
}

func _swig_wrap_new_btJacobianEntry__SWIG_0() SwigcptrBtJacobianEntry

func NewBtJacobianEntry__SWIG_0() BtJacobianEntry {
	return _swig_wrap_new_btJacobianEntry__SWIG_0()
}

func _swig_wrap_new_btJacobianEntry__SWIG_1(uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, float32, uintptr, float32) SwigcptrBtJacobianEntry

func NewBtJacobianEntry__SWIG_1(arg1 BtMatrix3x3, arg2 BtMatrix3x3, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3, arg7 float32, arg8 BtVector3, arg9 float32) BtJacobianEntry {
	return _swig_wrap_new_btJacobianEntry__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7, arg8.Swigcptr(), arg9)
}

func _swig_wrap_new_btJacobianEntry__SWIG_2(uintptr, uintptr, uintptr, uintptr, uintptr) SwigcptrBtJacobianEntry

func NewBtJacobianEntry__SWIG_2(arg1 BtVector3, arg2 BtMatrix3x3, arg3 BtMatrix3x3, arg4 BtVector3, arg5 BtVector3) BtJacobianEntry {
	return _swig_wrap_new_btJacobianEntry__SWIG_2(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_new_btJacobianEntry__SWIG_3(uintptr, uintptr, uintptr, uintptr) SwigcptrBtJacobianEntry

func NewBtJacobianEntry__SWIG_3(arg1 BtVector3, arg2 BtVector3, arg3 BtVector3, arg4 BtVector3) BtJacobianEntry {
	return _swig_wrap_new_btJacobianEntry__SWIG_3(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_new_btJacobianEntry__SWIG_4(uintptr, uintptr, uintptr, uintptr, uintptr, float32) SwigcptrBtJacobianEntry

func NewBtJacobianEntry__SWIG_4(arg1 BtMatrix3x3, arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 float32) BtJacobianEntry {
	return _swig_wrap_new_btJacobianEntry__SWIG_4(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6)
}

func NewBtJacobianEntry(a ...interface{}) BtJacobianEntry {
	argc := len(a)
	if argc == 0 {
		return NewBtJacobianEntry__SWIG_0()
	}
	if argc == 4 {
		return NewBtJacobianEntry__SWIG_3(a[0].(BtVector3), a[1].(BtVector3), a[2].(BtVector3), a[3].(BtVector3))
	}
	if argc == 5 {
		return NewBtJacobianEntry__SWIG_2(a[0].(BtVector3), a[1].(BtMatrix3x3), a[2].(BtMatrix3x3), a[3].(BtVector3), a[4].(BtVector3))
	}
	if argc == 6 {
		return NewBtJacobianEntry__SWIG_4(a[0].(BtMatrix3x3), a[1].(BtVector3), a[2].(BtVector3), a[3].(BtVector3), a[4].(BtVector3), a[5].(float32))
	}
	if argc == 9 {
		return NewBtJacobianEntry__SWIG_1(a[0].(BtMatrix3x3), a[1].(BtMatrix3x3), a[2].(BtVector3), a[3].(BtVector3), a[4].(BtVector3), a[5].(BtVector3), a[6].(float32), a[7].(BtVector3), a[8].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btJacobianEntry_getDiagonal(SwigcptrBtJacobianEntry) float32

func (arg1 SwigcptrBtJacobianEntry) GetDiagonal() float32 {
	return _swig_wrap_btJacobianEntry_getDiagonal(arg1)
}

func _swig_wrap_btJacobianEntry_getNonDiagonal__SWIG_0(SwigcptrBtJacobianEntry, uintptr, float32) float32

func (arg1 SwigcptrBtJacobianEntry) GetNonDiagonal__SWIG_0(arg2 BtJacobianEntry, arg3 float32) float32 {
	return _swig_wrap_btJacobianEntry_getNonDiagonal__SWIG_0(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btJacobianEntry_getNonDiagonal__SWIG_1(SwigcptrBtJacobianEntry, uintptr, float32, float32) float32

func (arg1 SwigcptrBtJacobianEntry) GetNonDiagonal__SWIG_1(arg2 BtJacobianEntry, arg3 float32, arg4 float32) float32 {
	return _swig_wrap_btJacobianEntry_getNonDiagonal__SWIG_1(arg1, arg2.Swigcptr(), arg3, arg4)
}

func (p SwigcptrBtJacobianEntry) GetNonDiagonal(a ...interface{}) float32 {
	argc := len(a)
	if argc == 2 {
		return p.GetNonDiagonal__SWIG_0(a[0].(BtJacobianEntry), a[1].(float32))
	}
	if argc == 3 {
		return p.GetNonDiagonal__SWIG_1(a[0].(BtJacobianEntry), a[1].(float32), a[2].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btJacobianEntry_getRelativeVelocity(SwigcptrBtJacobianEntry, uintptr, uintptr, uintptr, uintptr) float32

func (arg1 SwigcptrBtJacobianEntry) GetRelativeVelocity(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3) float32 {
	return _swig_wrap_btJacobianEntry_getRelativeVelocity(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btJacobianEntry_m_linearJointAxis_set(SwigcptrBtJacobianEntry, uintptr)

func (arg1 SwigcptrBtJacobianEntry) SetM_linearJointAxis(arg2 BtVector3) {
	_swig_wrap_btJacobianEntry_m_linearJointAxis_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btJacobianEntry_m_linearJointAxis_get(SwigcptrBtJacobianEntry) SwigcptrBtVector3

func (arg1 SwigcptrBtJacobianEntry) GetM_linearJointAxis() BtVector3 {
	return _swig_wrap_btJacobianEntry_m_linearJointAxis_get(arg1)
}

func _swig_wrap_btJacobianEntry_m_aJ_set(SwigcptrBtJacobianEntry, uintptr)

func (arg1 SwigcptrBtJacobianEntry) SetM_aJ(arg2 BtVector3) {
	_swig_wrap_btJacobianEntry_m_aJ_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btJacobianEntry_m_aJ_get(SwigcptrBtJacobianEntry) SwigcptrBtVector3

func (arg1 SwigcptrBtJacobianEntry) GetM_aJ() BtVector3 {
	return _swig_wrap_btJacobianEntry_m_aJ_get(arg1)
}

func _swig_wrap_btJacobianEntry_m_bJ_set(SwigcptrBtJacobianEntry, uintptr)

func (arg1 SwigcptrBtJacobianEntry) SetM_bJ(arg2 BtVector3) {
	_swig_wrap_btJacobianEntry_m_bJ_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btJacobianEntry_m_bJ_get(SwigcptrBtJacobianEntry) SwigcptrBtVector3

func (arg1 SwigcptrBtJacobianEntry) GetM_bJ() BtVector3 {
	return _swig_wrap_btJacobianEntry_m_bJ_get(arg1)
}

func _swig_wrap_btJacobianEntry_m_0MinvJt_set(SwigcptrBtJacobianEntry, uintptr)

func (arg1 SwigcptrBtJacobianEntry) SetM_0MinvJt(arg2 BtVector3) {
	_swig_wrap_btJacobianEntry_m_0MinvJt_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btJacobianEntry_m_0MinvJt_get(SwigcptrBtJacobianEntry) SwigcptrBtVector3

func (arg1 SwigcptrBtJacobianEntry) GetM_0MinvJt() BtVector3 {
	return _swig_wrap_btJacobianEntry_m_0MinvJt_get(arg1)
}

func _swig_wrap_btJacobianEntry_m_1MinvJt_set(SwigcptrBtJacobianEntry, uintptr)

func (arg1 SwigcptrBtJacobianEntry) SetM_1MinvJt(arg2 BtVector3) {
	_swig_wrap_btJacobianEntry_m_1MinvJt_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btJacobianEntry_m_1MinvJt_get(SwigcptrBtJacobianEntry) SwigcptrBtVector3

func (arg1 SwigcptrBtJacobianEntry) GetM_1MinvJt() BtVector3 {
	return _swig_wrap_btJacobianEntry_m_1MinvJt_get(arg1)
}

func _swig_wrap_btJacobianEntry_m_Adiag_set(SwigcptrBtJacobianEntry, float32)

func (arg1 SwigcptrBtJacobianEntry) SetM_Adiag(arg2 float32) {
	_swig_wrap_btJacobianEntry_m_Adiag_set(arg1, arg2)
}

func _swig_wrap_btJacobianEntry_m_Adiag_get(SwigcptrBtJacobianEntry) float32

func (arg1 SwigcptrBtJacobianEntry) GetM_Adiag() float32 {
	return _swig_wrap_btJacobianEntry_m_Adiag_get(arg1)
}

func _swig_wrap_delete_btJacobianEntry(uintptr)

func DeleteBtJacobianEntry(arg1 BtJacobianEntry) {
	_swig_wrap_delete_btJacobianEntry(arg1.Swigcptr())
}

type BtJacobianEntry interface {
	Swigcptr() uintptr
	SwigIsBtJacobianEntry()
	GetDiagonal() float32
	GetNonDiagonal(a ...interface{}) float32
	GetRelativeVelocity(arg2 BtVector3, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3) float32
	SetM_linearJointAxis(arg2 BtVector3)
	GetM_linearJointAxis() BtVector3
	SetM_aJ(arg2 BtVector3)
	GetM_aJ() BtVector3
	SetM_bJ(arg2 BtVector3)
	GetM_bJ() BtVector3
	SetM_0MinvJt(arg2 BtVector3)
	GetM_0MinvJt() BtVector3
	SetM_1MinvJt(arg2 BtVector3)
	GetM_1MinvJt() BtVector3
	SetM_Adiag(arg2 float32)
	GetM_Adiag() float32
}

type SwigcptrBtSolverBody uintptr

func (p SwigcptrBtSolverBody) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSolverBody) SwigIsBtSolverBody() {
}

func _swig_wrap_btSolverBody_m_worldTransform_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_worldTransform(arg2 BtTransform) {
	_swig_wrap_btSolverBody_m_worldTransform_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_worldTransform_get(SwigcptrBtSolverBody) SwigcptrBtTransform

func (arg1 SwigcptrBtSolverBody) GetM_worldTransform() BtTransform {
	return _swig_wrap_btSolverBody_m_worldTransform_get(arg1)
}

func _swig_wrap_btSolverBody_m_deltaLinearVelocity_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_deltaLinearVelocity(arg2 BtVector3) {
	_swig_wrap_btSolverBody_m_deltaLinearVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_deltaLinearVelocity_get(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetM_deltaLinearVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_m_deltaLinearVelocity_get(arg1)
}

func _swig_wrap_btSolverBody_m_deltaAngularVelocity_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_deltaAngularVelocity(arg2 BtVector3) {
	_swig_wrap_btSolverBody_m_deltaAngularVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_deltaAngularVelocity_get(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetM_deltaAngularVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_m_deltaAngularVelocity_get(arg1)
}

func _swig_wrap_btSolverBody_m_angularFactor_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_angularFactor(arg2 BtVector3) {
	_swig_wrap_btSolverBody_m_angularFactor_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_angularFactor_get(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetM_angularFactor() BtVector3 {
	return _swig_wrap_btSolverBody_m_angularFactor_get(arg1)
}

func _swig_wrap_btSolverBody_m_linearFactor_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_linearFactor(arg2 BtVector3) {
	_swig_wrap_btSolverBody_m_linearFactor_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_linearFactor_get(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetM_linearFactor() BtVector3 {
	return _swig_wrap_btSolverBody_m_linearFactor_get(arg1)
}

func _swig_wrap_btSolverBody_m_invMass_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_invMass(arg2 BtVector3) {
	_swig_wrap_btSolverBody_m_invMass_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_invMass_get(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetM_invMass() BtVector3 {
	return _swig_wrap_btSolverBody_m_invMass_get(arg1)
}

func _swig_wrap_btSolverBody_m_pushVelocity_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_pushVelocity(arg2 BtVector3) {
	_swig_wrap_btSolverBody_m_pushVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_pushVelocity_get(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetM_pushVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_m_pushVelocity_get(arg1)
}

func _swig_wrap_btSolverBody_m_turnVelocity_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_turnVelocity(arg2 BtVector3) {
	_swig_wrap_btSolverBody_m_turnVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_turnVelocity_get(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetM_turnVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_m_turnVelocity_get(arg1)
}

func _swig_wrap_btSolverBody_m_linearVelocity_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_linearVelocity(arg2 BtVector3) {
	_swig_wrap_btSolverBody_m_linearVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_linearVelocity_get(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetM_linearVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_m_linearVelocity_get(arg1)
}

func _swig_wrap_btSolverBody_m_angularVelocity_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_angularVelocity(arg2 BtVector3) {
	_swig_wrap_btSolverBody_m_angularVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_angularVelocity_get(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetM_angularVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_m_angularVelocity_get(arg1)
}

func _swig_wrap_btSolverBody_m_externalForceImpulse_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_externalForceImpulse(arg2 BtVector3) {
	_swig_wrap_btSolverBody_m_externalForceImpulse_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_externalForceImpulse_get(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetM_externalForceImpulse() BtVector3 {
	return _swig_wrap_btSolverBody_m_externalForceImpulse_get(arg1)
}

func _swig_wrap_btSolverBody_m_externalTorqueImpulse_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_externalTorqueImpulse(arg2 BtVector3) {
	_swig_wrap_btSolverBody_m_externalTorqueImpulse_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_externalTorqueImpulse_get(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetM_externalTorqueImpulse() BtVector3 {
	return _swig_wrap_btSolverBody_m_externalTorqueImpulse_get(arg1)
}

func _swig_wrap_btSolverBody_m_originalBody_set(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetM_originalBody(arg2 BtRigidBody) {
	_swig_wrap_btSolverBody_m_originalBody_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_m_originalBody_get(SwigcptrBtSolverBody) SwigcptrBtRigidBody

func (arg1 SwigcptrBtSolverBody) GetM_originalBody() BtRigidBody {
	return _swig_wrap_btSolverBody_m_originalBody_get(arg1)
}

func _swig_wrap_btSolverBody_setWorldTransform(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) SetWorldTransform(arg2 BtTransform) {
	_swig_wrap_btSolverBody_setWorldTransform(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_getWorldTransform(SwigcptrBtSolverBody) SwigcptrBtTransform

func (arg1 SwigcptrBtSolverBody) GetWorldTransform() BtTransform {
	return _swig_wrap_btSolverBody_getWorldTransform(arg1)
}

func _swig_wrap_btSolverBody_getVelocityInLocalPointNoDelta(SwigcptrBtSolverBody, uintptr, uintptr)

func (arg1 SwigcptrBtSolverBody) GetVelocityInLocalPointNoDelta(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btSolverBody_getVelocityInLocalPointNoDelta(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSolverBody_getVelocityInLocalPointObsolete(SwigcptrBtSolverBody, uintptr, uintptr)

func (arg1 SwigcptrBtSolverBody) GetVelocityInLocalPointObsolete(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btSolverBody_getVelocityInLocalPointObsolete(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSolverBody_getAngularVelocity(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) GetAngularVelocity(arg2 BtVector3) {
	_swig_wrap_btSolverBody_getAngularVelocity(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_applyImpulse(SwigcptrBtSolverBody, uintptr, uintptr, float32)

func (arg1 SwigcptrBtSolverBody) ApplyImpulse(arg2 BtVector3, arg3 BtVector3, arg4 float32) {
	_swig_wrap_btSolverBody_applyImpulse(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btSolverBody_internalApplyPushImpulse(SwigcptrBtSolverBody, uintptr, uintptr, float32)

func (arg1 SwigcptrBtSolverBody) InternalApplyPushImpulse(arg2 BtVector3, arg3 BtVector3, arg4 float32) {
	_swig_wrap_btSolverBody_internalApplyPushImpulse(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btSolverBody_getDeltaLinearVelocity(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetDeltaLinearVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_getDeltaLinearVelocity(arg1)
}

func _swig_wrap_btSolverBody_getDeltaAngularVelocity(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetDeltaAngularVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_getDeltaAngularVelocity(arg1)
}

func _swig_wrap_btSolverBody_getPushVelocity(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetPushVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_getPushVelocity(arg1)
}

func _swig_wrap_btSolverBody_getTurnVelocity(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) GetTurnVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_getTurnVelocity(arg1)
}

func _swig_wrap_btSolverBody_internalGetDeltaLinearVelocity(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) InternalGetDeltaLinearVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_internalGetDeltaLinearVelocity(arg1)
}

func _swig_wrap_btSolverBody_internalGetDeltaAngularVelocity(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) InternalGetDeltaAngularVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_internalGetDeltaAngularVelocity(arg1)
}

func _swig_wrap_btSolverBody_internalGetAngularFactor(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) InternalGetAngularFactor() BtVector3 {
	return _swig_wrap_btSolverBody_internalGetAngularFactor(arg1)
}

func _swig_wrap_btSolverBody_internalGetInvMass(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) InternalGetInvMass() BtVector3 {
	return _swig_wrap_btSolverBody_internalGetInvMass(arg1)
}

func _swig_wrap_btSolverBody_internalSetInvMass(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) InternalSetInvMass(arg2 BtVector3) {
	_swig_wrap_btSolverBody_internalSetInvMass(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_internalGetPushVelocity(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) InternalGetPushVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_internalGetPushVelocity(arg1)
}

func _swig_wrap_btSolverBody_internalGetTurnVelocity(SwigcptrBtSolverBody) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverBody) InternalGetTurnVelocity() BtVector3 {
	return _swig_wrap_btSolverBody_internalGetTurnVelocity(arg1)
}

func _swig_wrap_btSolverBody_internalGetVelocityInLocalPointObsolete(SwigcptrBtSolverBody, uintptr, uintptr)

func (arg1 SwigcptrBtSolverBody) InternalGetVelocityInLocalPointObsolete(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btSolverBody_internalGetVelocityInLocalPointObsolete(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSolverBody_internalGetAngularVelocity(SwigcptrBtSolverBody, uintptr)

func (arg1 SwigcptrBtSolverBody) InternalGetAngularVelocity(arg2 BtVector3) {
	_swig_wrap_btSolverBody_internalGetAngularVelocity(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverBody_internalApplyImpulse(SwigcptrBtSolverBody, uintptr, uintptr, float32)

func (arg1 SwigcptrBtSolverBody) InternalApplyImpulse(arg2 BtVector3, arg3 BtVector3, arg4 float32) {
	_swig_wrap_btSolverBody_internalApplyImpulse(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btSolverBody_writebackVelocity(SwigcptrBtSolverBody)

func (arg1 SwigcptrBtSolverBody) WritebackVelocity() {
	_swig_wrap_btSolverBody_writebackVelocity(arg1)
}

func _swig_wrap_btSolverBody_writebackVelocityAndTransform(SwigcptrBtSolverBody, float32, float32)

func (arg1 SwigcptrBtSolverBody) WritebackVelocityAndTransform(arg2 float32, arg3 float32) {
	_swig_wrap_btSolverBody_writebackVelocityAndTransform(arg1, arg2, arg3)
}

func _swig_wrap_delete_btSolverBody(uintptr)

func DeleteBtSolverBody(arg1 BtSolverBody) {
	_swig_wrap_delete_btSolverBody(arg1.Swigcptr())
}

type BtSolverBody interface {
	Swigcptr() uintptr
	SwigIsBtSolverBody()
	SetM_worldTransform(arg2 BtTransform)
	GetM_worldTransform() BtTransform
	SetM_deltaLinearVelocity(arg2 BtVector3)
	GetM_deltaLinearVelocity() BtVector3
	SetM_deltaAngularVelocity(arg2 BtVector3)
	GetM_deltaAngularVelocity() BtVector3
	SetM_angularFactor(arg2 BtVector3)
	GetM_angularFactor() BtVector3
	SetM_linearFactor(arg2 BtVector3)
	GetM_linearFactor() BtVector3
	SetM_invMass(arg2 BtVector3)
	GetM_invMass() BtVector3
	SetM_pushVelocity(arg2 BtVector3)
	GetM_pushVelocity() BtVector3
	SetM_turnVelocity(arg2 BtVector3)
	GetM_turnVelocity() BtVector3
	SetM_linearVelocity(arg2 BtVector3)
	GetM_linearVelocity() BtVector3
	SetM_angularVelocity(arg2 BtVector3)
	GetM_angularVelocity() BtVector3
	SetM_externalForceImpulse(arg2 BtVector3)
	GetM_externalForceImpulse() BtVector3
	SetM_externalTorqueImpulse(arg2 BtVector3)
	GetM_externalTorqueImpulse() BtVector3
	SetM_originalBody(arg2 BtRigidBody)
	GetM_originalBody() BtRigidBody
	SetWorldTransform(arg2 BtTransform)
	GetWorldTransform() BtTransform
	GetVelocityInLocalPointNoDelta(arg2 BtVector3, arg3 BtVector3)
	GetVelocityInLocalPointObsolete(arg2 BtVector3, arg3 BtVector3)
	GetAngularVelocity(arg2 BtVector3)
	ApplyImpulse(arg2 BtVector3, arg3 BtVector3, arg4 float32)
	InternalApplyPushImpulse(arg2 BtVector3, arg3 BtVector3, arg4 float32)
	GetDeltaLinearVelocity() BtVector3
	GetDeltaAngularVelocity() BtVector3
	GetPushVelocity() BtVector3
	GetTurnVelocity() BtVector3
	InternalGetDeltaLinearVelocity() BtVector3
	InternalGetDeltaAngularVelocity() BtVector3
	InternalGetAngularFactor() BtVector3
	InternalGetInvMass() BtVector3
	InternalSetInvMass(arg2 BtVector3)
	InternalGetPushVelocity() BtVector3
	InternalGetTurnVelocity() BtVector3
	InternalGetVelocityInLocalPointObsolete(arg2 BtVector3, arg3 BtVector3)
	InternalGetAngularVelocity(arg2 BtVector3)
	InternalApplyImpulse(arg2 BtVector3, arg3 BtVector3, arg4 float32)
	WritebackVelocity()
	WritebackVelocityAndTransform(arg2 float32, arg3 float32)
}

type SwigcptrBtSolverConstraint uintptr

func (p SwigcptrBtSolverConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSolverConstraint) SwigIsBtSolverConstraint() {
}

func _swig_wrap_btSolverConstraint_m_relpos1CrossNormal_set(SwigcptrBtSolverConstraint, uintptr)

func (arg1 SwigcptrBtSolverConstraint) SetM_relpos1CrossNormal(arg2 BtVector3) {
	_swig_wrap_btSolverConstraint_m_relpos1CrossNormal_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverConstraint_m_relpos1CrossNormal_get(SwigcptrBtSolverConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverConstraint) GetM_relpos1CrossNormal() BtVector3 {
	return _swig_wrap_btSolverConstraint_m_relpos1CrossNormal_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_contactNormal1_set(SwigcptrBtSolverConstraint, uintptr)

func (arg1 SwigcptrBtSolverConstraint) SetM_contactNormal1(arg2 BtVector3) {
	_swig_wrap_btSolverConstraint_m_contactNormal1_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverConstraint_m_contactNormal1_get(SwigcptrBtSolverConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverConstraint) GetM_contactNormal1() BtVector3 {
	return _swig_wrap_btSolverConstraint_m_contactNormal1_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_relpos2CrossNormal_set(SwigcptrBtSolverConstraint, uintptr)

func (arg1 SwigcptrBtSolverConstraint) SetM_relpos2CrossNormal(arg2 BtVector3) {
	_swig_wrap_btSolverConstraint_m_relpos2CrossNormal_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverConstraint_m_relpos2CrossNormal_get(SwigcptrBtSolverConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverConstraint) GetM_relpos2CrossNormal() BtVector3 {
	return _swig_wrap_btSolverConstraint_m_relpos2CrossNormal_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_contactNormal2_set(SwigcptrBtSolverConstraint, uintptr)

func (arg1 SwigcptrBtSolverConstraint) SetM_contactNormal2(arg2 BtVector3) {
	_swig_wrap_btSolverConstraint_m_contactNormal2_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverConstraint_m_contactNormal2_get(SwigcptrBtSolverConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverConstraint) GetM_contactNormal2() BtVector3 {
	return _swig_wrap_btSolverConstraint_m_contactNormal2_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_angularComponentA_set(SwigcptrBtSolverConstraint, uintptr)

func (arg1 SwigcptrBtSolverConstraint) SetM_angularComponentA(arg2 BtVector3) {
	_swig_wrap_btSolverConstraint_m_angularComponentA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverConstraint_m_angularComponentA_get(SwigcptrBtSolverConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverConstraint) GetM_angularComponentA() BtVector3 {
	return _swig_wrap_btSolverConstraint_m_angularComponentA_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_angularComponentB_set(SwigcptrBtSolverConstraint, uintptr)

func (arg1 SwigcptrBtSolverConstraint) SetM_angularComponentB(arg2 BtVector3) {
	_swig_wrap_btSolverConstraint_m_angularComponentB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSolverConstraint_m_angularComponentB_get(SwigcptrBtSolverConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtSolverConstraint) GetM_angularComponentB() BtVector3 {
	return _swig_wrap_btSolverConstraint_m_angularComponentB_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_appliedPushImpulse_set(SwigcptrBtSolverConstraint, float32)

func (arg1 SwigcptrBtSolverConstraint) SetM_appliedPushImpulse(arg2 float32) {
	_swig_wrap_btSolverConstraint_m_appliedPushImpulse_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_appliedPushImpulse_get(SwigcptrBtSolverConstraint) float32

func (arg1 SwigcptrBtSolverConstraint) GetM_appliedPushImpulse() float32 {
	return _swig_wrap_btSolverConstraint_m_appliedPushImpulse_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_appliedImpulse_set(SwigcptrBtSolverConstraint, float32)

func (arg1 SwigcptrBtSolverConstraint) SetM_appliedImpulse(arg2 float32) {
	_swig_wrap_btSolverConstraint_m_appliedImpulse_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_appliedImpulse_get(SwigcptrBtSolverConstraint) float32

func (arg1 SwigcptrBtSolverConstraint) GetM_appliedImpulse() float32 {
	return _swig_wrap_btSolverConstraint_m_appliedImpulse_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_friction_set(SwigcptrBtSolverConstraint, float32)

func (arg1 SwigcptrBtSolverConstraint) SetM_friction(arg2 float32) {
	_swig_wrap_btSolverConstraint_m_friction_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_friction_get(SwigcptrBtSolverConstraint) float32

func (arg1 SwigcptrBtSolverConstraint) GetM_friction() float32 {
	return _swig_wrap_btSolverConstraint_m_friction_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_jacDiagABInv_set(SwigcptrBtSolverConstraint, float32)

func (arg1 SwigcptrBtSolverConstraint) SetM_jacDiagABInv(arg2 float32) {
	_swig_wrap_btSolverConstraint_m_jacDiagABInv_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_jacDiagABInv_get(SwigcptrBtSolverConstraint) float32

func (arg1 SwigcptrBtSolverConstraint) GetM_jacDiagABInv() float32 {
	return _swig_wrap_btSolverConstraint_m_jacDiagABInv_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_rhs_set(SwigcptrBtSolverConstraint, float32)

func (arg1 SwigcptrBtSolverConstraint) SetM_rhs(arg2 float32) {
	_swig_wrap_btSolverConstraint_m_rhs_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_rhs_get(SwigcptrBtSolverConstraint) float32

func (arg1 SwigcptrBtSolverConstraint) GetM_rhs() float32 {
	return _swig_wrap_btSolverConstraint_m_rhs_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_cfm_set(SwigcptrBtSolverConstraint, float32)

func (arg1 SwigcptrBtSolverConstraint) SetM_cfm(arg2 float32) {
	_swig_wrap_btSolverConstraint_m_cfm_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_cfm_get(SwigcptrBtSolverConstraint) float32

func (arg1 SwigcptrBtSolverConstraint) GetM_cfm() float32 {
	return _swig_wrap_btSolverConstraint_m_cfm_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_lowerLimit_set(SwigcptrBtSolverConstraint, float32)

func (arg1 SwigcptrBtSolverConstraint) SetM_lowerLimit(arg2 float32) {
	_swig_wrap_btSolverConstraint_m_lowerLimit_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_lowerLimit_get(SwigcptrBtSolverConstraint) float32

func (arg1 SwigcptrBtSolverConstraint) GetM_lowerLimit() float32 {
	return _swig_wrap_btSolverConstraint_m_lowerLimit_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_upperLimit_set(SwigcptrBtSolverConstraint, float32)

func (arg1 SwigcptrBtSolverConstraint) SetM_upperLimit(arg2 float32) {
	_swig_wrap_btSolverConstraint_m_upperLimit_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_upperLimit_get(SwigcptrBtSolverConstraint) float32

func (arg1 SwigcptrBtSolverConstraint) GetM_upperLimit() float32 {
	return _swig_wrap_btSolverConstraint_m_upperLimit_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_rhsPenetration_set(SwigcptrBtSolverConstraint, float32)

func (arg1 SwigcptrBtSolverConstraint) SetM_rhsPenetration(arg2 float32) {
	_swig_wrap_btSolverConstraint_m_rhsPenetration_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_rhsPenetration_get(SwigcptrBtSolverConstraint) float32

func (arg1 SwigcptrBtSolverConstraint) GetM_rhsPenetration() float32 {
	return _swig_wrap_btSolverConstraint_m_rhsPenetration_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_overrideNumSolverIterations_set(SwigcptrBtSolverConstraint, int)

func (arg1 SwigcptrBtSolverConstraint) SetM_overrideNumSolverIterations(arg2 int) {
	_swig_wrap_btSolverConstraint_m_overrideNumSolverIterations_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_overrideNumSolverIterations_get(SwigcptrBtSolverConstraint) int

func (arg1 SwigcptrBtSolverConstraint) GetM_overrideNumSolverIterations() int {
	return _swig_wrap_btSolverConstraint_m_overrideNumSolverIterations_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_frictionIndex_set(SwigcptrBtSolverConstraint, int)

func (arg1 SwigcptrBtSolverConstraint) SetM_frictionIndex(arg2 int) {
	_swig_wrap_btSolverConstraint_m_frictionIndex_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_frictionIndex_get(SwigcptrBtSolverConstraint) int

func (arg1 SwigcptrBtSolverConstraint) GetM_frictionIndex() int {
	return _swig_wrap_btSolverConstraint_m_frictionIndex_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_solverBodyIdA_set(SwigcptrBtSolverConstraint, int)

func (arg1 SwigcptrBtSolverConstraint) SetM_solverBodyIdA(arg2 int) {
	_swig_wrap_btSolverConstraint_m_solverBodyIdA_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_solverBodyIdA_get(SwigcptrBtSolverConstraint) int

func (arg1 SwigcptrBtSolverConstraint) GetM_solverBodyIdA() int {
	return _swig_wrap_btSolverConstraint_m_solverBodyIdA_get(arg1)
}

func _swig_wrap_btSolverConstraint_m_solverBodyIdB_set(SwigcptrBtSolverConstraint, int)

func (arg1 SwigcptrBtSolverConstraint) SetM_solverBodyIdB(arg2 int) {
	_swig_wrap_btSolverConstraint_m_solverBodyIdB_set(arg1, arg2)
}

func _swig_wrap_btSolverConstraint_m_solverBodyIdB_get(SwigcptrBtSolverConstraint) int

func (arg1 SwigcptrBtSolverConstraint) GetM_solverBodyIdB() int {
	return _swig_wrap_btSolverConstraint_m_solverBodyIdB_get(arg1)
}

type BtSolverConstraintBtSolverConstraintType int

func _swig_getbtSolverConstraint_BT_SOLVER_CONTACT_1D_btSolverConstraint() BtSolverConstraintBtSolverConstraintType

var BtSolverConstraintBT_SOLVER_CONTACT_1D BtSolverConstraintBtSolverConstraintType = _swig_getbtSolverConstraint_BT_SOLVER_CONTACT_1D_btSolverConstraint()

func _swig_getbtSolverConstraint_BT_SOLVER_FRICTION_1D_btSolverConstraint() BtSolverConstraintBtSolverConstraintType

var BtSolverConstraintBT_SOLVER_FRICTION_1D BtSolverConstraintBtSolverConstraintType = _swig_getbtSolverConstraint_BT_SOLVER_FRICTION_1D_btSolverConstraint()

func _swig_wrap_delete_btSolverConstraint(uintptr)

func DeleteBtSolverConstraint(arg1 BtSolverConstraint) {
	_swig_wrap_delete_btSolverConstraint(arg1.Swigcptr())
}

type BtSolverConstraint interface {
	Swigcptr() uintptr
	SwigIsBtSolverConstraint()
	SetM_relpos1CrossNormal(arg2 BtVector3)
	GetM_relpos1CrossNormal() BtVector3
	SetM_contactNormal1(arg2 BtVector3)
	GetM_contactNormal1() BtVector3
	SetM_relpos2CrossNormal(arg2 BtVector3)
	GetM_relpos2CrossNormal() BtVector3
	SetM_contactNormal2(arg2 BtVector3)
	GetM_contactNormal2() BtVector3
	SetM_angularComponentA(arg2 BtVector3)
	GetM_angularComponentA() BtVector3
	SetM_angularComponentB(arg2 BtVector3)
	GetM_angularComponentB() BtVector3
	SetM_appliedPushImpulse(arg2 float32)
	GetM_appliedPushImpulse() float32
	SetM_appliedImpulse(arg2 float32)
	GetM_appliedImpulse() float32
	SetM_friction(arg2 float32)
	GetM_friction() float32
	SetM_jacDiagABInv(arg2 float32)
	GetM_jacDiagABInv() float32
	SetM_rhs(arg2 float32)
	GetM_rhs() float32
	SetM_cfm(arg2 float32)
	GetM_cfm() float32
	SetM_lowerLimit(arg2 float32)
	GetM_lowerLimit() float32
	SetM_upperLimit(arg2 float32)
	GetM_upperLimit() float32
	SetM_rhsPenetration(arg2 float32)
	GetM_rhsPenetration() float32
	SetM_overrideNumSolverIterations(arg2 int)
	GetM_overrideNumSolverIterations() int
	SetM_frictionIndex(arg2 int)
	GetM_frictionIndex() int
	SetM_solverBodyIdA(arg2 int)
	GetM_solverBodyIdA() int
	SetM_solverBodyIdB(arg2 int)
	GetM_solverBodyIdB() int
}

const BtTypedConstraintDataName string = "btTypedConstraintFloatData"

type BtTypedConstraintType int

func _swig_getPOINT2POINT_CONSTRAINT_TYPE() BtTypedConstraintType

var POINT2POINT_CONSTRAINT_TYPE BtTypedConstraintType = _swig_getPOINT2POINT_CONSTRAINT_TYPE()

func _swig_getHINGE_CONSTRAINT_TYPE() BtTypedConstraintType

var HINGE_CONSTRAINT_TYPE BtTypedConstraintType = _swig_getHINGE_CONSTRAINT_TYPE()

func _swig_getCONETWIST_CONSTRAINT_TYPE() BtTypedConstraintType

var CONETWIST_CONSTRAINT_TYPE BtTypedConstraintType = _swig_getCONETWIST_CONSTRAINT_TYPE()

func _swig_getD6_CONSTRAINT_TYPE() BtTypedConstraintType

var D6_CONSTRAINT_TYPE BtTypedConstraintType = _swig_getD6_CONSTRAINT_TYPE()

func _swig_getSLIDER_CONSTRAINT_TYPE() BtTypedConstraintType

var SLIDER_CONSTRAINT_TYPE BtTypedConstraintType = _swig_getSLIDER_CONSTRAINT_TYPE()

func _swig_getCONTACT_CONSTRAINT_TYPE() BtTypedConstraintType

var CONTACT_CONSTRAINT_TYPE BtTypedConstraintType = _swig_getCONTACT_CONSTRAINT_TYPE()

func _swig_getD6_SPRING_CONSTRAINT_TYPE() BtTypedConstraintType

var D6_SPRING_CONSTRAINT_TYPE BtTypedConstraintType = _swig_getD6_SPRING_CONSTRAINT_TYPE()

func _swig_getGEAR_CONSTRAINT_TYPE() BtTypedConstraintType

var GEAR_CONSTRAINT_TYPE BtTypedConstraintType = _swig_getGEAR_CONSTRAINT_TYPE()

func _swig_getFIXED_CONSTRAINT_TYPE() BtTypedConstraintType

var FIXED_CONSTRAINT_TYPE BtTypedConstraintType = _swig_getFIXED_CONSTRAINT_TYPE()

func _swig_getMAX_CONSTRAINT_TYPE() BtTypedConstraintType

var MAX_CONSTRAINT_TYPE BtTypedConstraintType = _swig_getMAX_CONSTRAINT_TYPE()

type BtConstraintParams int

func _swig_getBT_CONSTRAINT_ERP() BtConstraintParams

var BT_CONSTRAINT_ERP BtConstraintParams = _swig_getBT_CONSTRAINT_ERP()

func _swig_getBT_CONSTRAINT_STOP_ERP() BtConstraintParams

var BT_CONSTRAINT_STOP_ERP BtConstraintParams = _swig_getBT_CONSTRAINT_STOP_ERP()

func _swig_getBT_CONSTRAINT_CFM() BtConstraintParams

var BT_CONSTRAINT_CFM BtConstraintParams = _swig_getBT_CONSTRAINT_CFM()

func _swig_getBT_CONSTRAINT_STOP_CFM() BtConstraintParams

var BT_CONSTRAINT_STOP_CFM BtConstraintParams = _swig_getBT_CONSTRAINT_STOP_CFM()

type SwigcptrBtJointFeedback uintptr

func (p SwigcptrBtJointFeedback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtJointFeedback) SwigIsBtJointFeedback() {
}

func _swig_wrap_btJointFeedback_m_appliedForceBodyA_set(SwigcptrBtJointFeedback, uintptr)

func (arg1 SwigcptrBtJointFeedback) SetM_appliedForceBodyA(arg2 BtVector3) {
	_swig_wrap_btJointFeedback_m_appliedForceBodyA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btJointFeedback_m_appliedForceBodyA_get(SwigcptrBtJointFeedback) SwigcptrBtVector3

func (arg1 SwigcptrBtJointFeedback) GetM_appliedForceBodyA() BtVector3 {
	return _swig_wrap_btJointFeedback_m_appliedForceBodyA_get(arg1)
}

func _swig_wrap_btJointFeedback_m_appliedTorqueBodyA_set(SwigcptrBtJointFeedback, uintptr)

func (arg1 SwigcptrBtJointFeedback) SetM_appliedTorqueBodyA(arg2 BtVector3) {
	_swig_wrap_btJointFeedback_m_appliedTorqueBodyA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btJointFeedback_m_appliedTorqueBodyA_get(SwigcptrBtJointFeedback) SwigcptrBtVector3

func (arg1 SwigcptrBtJointFeedback) GetM_appliedTorqueBodyA() BtVector3 {
	return _swig_wrap_btJointFeedback_m_appliedTorqueBodyA_get(arg1)
}

func _swig_wrap_btJointFeedback_m_appliedForceBodyB_set(SwigcptrBtJointFeedback, uintptr)

func (arg1 SwigcptrBtJointFeedback) SetM_appliedForceBodyB(arg2 BtVector3) {
	_swig_wrap_btJointFeedback_m_appliedForceBodyB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btJointFeedback_m_appliedForceBodyB_get(SwigcptrBtJointFeedback) SwigcptrBtVector3

func (arg1 SwigcptrBtJointFeedback) GetM_appliedForceBodyB() BtVector3 {
	return _swig_wrap_btJointFeedback_m_appliedForceBodyB_get(arg1)
}

func _swig_wrap_btJointFeedback_m_appliedTorqueBodyB_set(SwigcptrBtJointFeedback, uintptr)

func (arg1 SwigcptrBtJointFeedback) SetM_appliedTorqueBodyB(arg2 BtVector3) {
	_swig_wrap_btJointFeedback_m_appliedTorqueBodyB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btJointFeedback_m_appliedTorqueBodyB_get(SwigcptrBtJointFeedback) SwigcptrBtVector3

func (arg1 SwigcptrBtJointFeedback) GetM_appliedTorqueBodyB() BtVector3 {
	return _swig_wrap_btJointFeedback_m_appliedTorqueBodyB_get(arg1)
}

func _swig_wrap_new_btJointFeedback() SwigcptrBtJointFeedback

func NewBtJointFeedback() BtJointFeedback {
	return _swig_wrap_new_btJointFeedback()
}

func _swig_wrap_delete_btJointFeedback(uintptr)

func DeleteBtJointFeedback(arg1 BtJointFeedback) {
	_swig_wrap_delete_btJointFeedback(arg1.Swigcptr())
}

type BtJointFeedback interface {
	Swigcptr() uintptr
	SwigIsBtJointFeedback()
	SetM_appliedForceBodyA(arg2 BtVector3)
	GetM_appliedForceBodyA() BtVector3
	SetM_appliedTorqueBodyA(arg2 BtVector3)
	GetM_appliedTorqueBodyA() BtVector3
	SetM_appliedForceBodyB(arg2 BtVector3)
	GetM_appliedForceBodyB() BtVector3
	SetM_appliedTorqueBodyB(arg2 BtVector3)
	GetM_appliedTorqueBodyB() BtVector3
}

type SwigcptrBtTypedConstraint uintptr

func (p SwigcptrBtTypedConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTypedConstraint) SwigIsBtTypedConstraint() {
}

func _swig_wrap_delete_btTypedConstraint(uintptr)

func DeleteBtTypedConstraint(arg1 BtTypedConstraint) {
	_swig_wrap_delete_btTypedConstraint(arg1.Swigcptr())
}

func _swig_wrap_btTypedConstraint_getFixedBody() SwigcptrBtRigidBody

func BtTypedConstraintGetFixedBody() BtRigidBody {
	return _swig_wrap_btTypedConstraint_getFixedBody()
}

func _swig_wrap_btTypedConstraint_getOverrideNumSolverIterations(SwigcptrBtTypedConstraint) int

func (arg1 SwigcptrBtTypedConstraint) GetOverrideNumSolverIterations() int {
	return _swig_wrap_btTypedConstraint_getOverrideNumSolverIterations(arg1)
}

func _swig_wrap_btTypedConstraint_setOverrideNumSolverIterations(SwigcptrBtTypedConstraint, int)

func (arg1 SwigcptrBtTypedConstraint) SetOverrideNumSolverIterations(arg2 int) {
	_swig_wrap_btTypedConstraint_setOverrideNumSolverIterations(arg1, arg2)
}

func _swig_wrap_btTypedConstraint_buildJacobian(SwigcptrBtTypedConstraint)

func (arg1 SwigcptrBtTypedConstraint) BuildJacobian() {
	_swig_wrap_btTypedConstraint_buildJacobian(arg1)
}

func _swig_wrap_btTypedConstraint_setupSolverConstraint(SwigcptrBtTypedConstraint, uintptr, int, int, float32)

func (arg1 SwigcptrBtTypedConstraint) SetupSolverConstraint(arg2 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg3 int, arg4 int, arg5 float32) {
	_swig_wrap_btTypedConstraint_setupSolverConstraint(arg1, arg2.Swigcptr(), arg3, arg4, arg5)
}

func _swig_wrap_btTypedConstraint_getInfo1(SwigcptrBtTypedConstraint, uintptr)

func (arg1 SwigcptrBtTypedConstraint) GetInfo1(arg2 BtConstraintInfo1) {
	_swig_wrap_btTypedConstraint_getInfo1(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTypedConstraint_getInfo2(SwigcptrBtTypedConstraint, uintptr)

func (arg1 SwigcptrBtTypedConstraint) GetInfo2(arg2 BtConstraintInfo2) {
	_swig_wrap_btTypedConstraint_getInfo2(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTypedConstraint_internalSetAppliedImpulse(SwigcptrBtTypedConstraint, float32)

func (arg1 SwigcptrBtTypedConstraint) InternalSetAppliedImpulse(arg2 float32) {
	_swig_wrap_btTypedConstraint_internalSetAppliedImpulse(arg1, arg2)
}

func _swig_wrap_btTypedConstraint_internalGetAppliedImpulse(SwigcptrBtTypedConstraint) float32

func (arg1 SwigcptrBtTypedConstraint) InternalGetAppliedImpulse() float32 {
	return _swig_wrap_btTypedConstraint_internalGetAppliedImpulse(arg1)
}

func _swig_wrap_btTypedConstraint_getBreakingImpulseThreshold(SwigcptrBtTypedConstraint) float32

func (arg1 SwigcptrBtTypedConstraint) GetBreakingImpulseThreshold() float32 {
	return _swig_wrap_btTypedConstraint_getBreakingImpulseThreshold(arg1)
}

func _swig_wrap_btTypedConstraint_setBreakingImpulseThreshold(SwigcptrBtTypedConstraint, float32)

func (arg1 SwigcptrBtTypedConstraint) SetBreakingImpulseThreshold(arg2 float32) {
	_swig_wrap_btTypedConstraint_setBreakingImpulseThreshold(arg1, arg2)
}

func _swig_wrap_btTypedConstraint_isEnabled(SwigcptrBtTypedConstraint) bool

func (arg1 SwigcptrBtTypedConstraint) IsEnabled() bool {
	return _swig_wrap_btTypedConstraint_isEnabled(arg1)
}

func _swig_wrap_btTypedConstraint_setEnabled(SwigcptrBtTypedConstraint, bool)

func (arg1 SwigcptrBtTypedConstraint) SetEnabled(arg2 bool) {
	_swig_wrap_btTypedConstraint_setEnabled(arg1, arg2)
}

func _swig_wrap_btTypedConstraint_solveConstraintObsolete(SwigcptrBtTypedConstraint, uintptr, uintptr, float32)

func (arg1 SwigcptrBtTypedConstraint) SolveConstraintObsolete(arg2 BtSolverBody, arg3 BtSolverBody, arg4 float32) {
	_swig_wrap_btTypedConstraint_solveConstraintObsolete(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btTypedConstraint_getRigidBodyA__SWIG_0(SwigcptrBtTypedConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtTypedConstraint) GetRigidBodyA__SWIG_0() BtRigidBody {
	return _swig_wrap_btTypedConstraint_getRigidBodyA__SWIG_0(arg1)
}

func _swig_wrap_btTypedConstraint_getRigidBodyB__SWIG_0(SwigcptrBtTypedConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtTypedConstraint) GetRigidBodyB__SWIG_0() BtRigidBody {
	return _swig_wrap_btTypedConstraint_getRigidBodyB__SWIG_0(arg1)
}

func _swig_wrap_btTypedConstraint_getRigidBodyA__SWIG_1(SwigcptrBtTypedConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtTypedConstraint) GetRigidBodyA__SWIG_1() BtRigidBody {
	return _swig_wrap_btTypedConstraint_getRigidBodyA__SWIG_1(arg1)
}

func (p SwigcptrBtTypedConstraint) GetRigidBodyA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTypedConstraint_getRigidBodyB__SWIG_1(SwigcptrBtTypedConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtTypedConstraint) GetRigidBodyB__SWIG_1() BtRigidBody {
	return _swig_wrap_btTypedConstraint_getRigidBodyB__SWIG_1(arg1)
}

func (p SwigcptrBtTypedConstraint) GetRigidBodyB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTypedConstraint_getUserConstraintType(SwigcptrBtTypedConstraint) int

func (arg1 SwigcptrBtTypedConstraint) GetUserConstraintType() int {
	return _swig_wrap_btTypedConstraint_getUserConstraintType(arg1)
}

func _swig_wrap_btTypedConstraint_setUserConstraintType(SwigcptrBtTypedConstraint, int)

func (arg1 SwigcptrBtTypedConstraint) SetUserConstraintType(arg2 int) {
	_swig_wrap_btTypedConstraint_setUserConstraintType(arg1, arg2)
}

func _swig_wrap_btTypedConstraint_setUserConstraintId(SwigcptrBtTypedConstraint, int)

func (arg1 SwigcptrBtTypedConstraint) SetUserConstraintId(arg2 int) {
	_swig_wrap_btTypedConstraint_setUserConstraintId(arg1, arg2)
}

func _swig_wrap_btTypedConstraint_getUserConstraintId(SwigcptrBtTypedConstraint) int

func (arg1 SwigcptrBtTypedConstraint) GetUserConstraintId() int {
	return _swig_wrap_btTypedConstraint_getUserConstraintId(arg1)
}

func _swig_wrap_btTypedConstraint_setUserConstraintPtr(SwigcptrBtTypedConstraint, uintptr)

func (arg1 SwigcptrBtTypedConstraint) SetUserConstraintPtr(arg2 uintptr) {
	_swig_wrap_btTypedConstraint_setUserConstraintPtr(arg1, arg2)
}

func _swig_wrap_btTypedConstraint_getUserConstraintPtr(SwigcptrBtTypedConstraint) uintptr

func (arg1 SwigcptrBtTypedConstraint) GetUserConstraintPtr() uintptr {
	return _swig_wrap_btTypedConstraint_getUserConstraintPtr(arg1)
}

func _swig_wrap_btTypedConstraint_setJointFeedback(SwigcptrBtTypedConstraint, uintptr)

func (arg1 SwigcptrBtTypedConstraint) SetJointFeedback(arg2 BtJointFeedback) {
	_swig_wrap_btTypedConstraint_setJointFeedback(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTypedConstraint_getJointFeedback__SWIG_0(SwigcptrBtTypedConstraint) SwigcptrBtJointFeedback

func (arg1 SwigcptrBtTypedConstraint) GetJointFeedback__SWIG_0() BtJointFeedback {
	return _swig_wrap_btTypedConstraint_getJointFeedback__SWIG_0(arg1)
}

func _swig_wrap_btTypedConstraint_getJointFeedback__SWIG_1(SwigcptrBtTypedConstraint) SwigcptrBtJointFeedback

func (arg1 SwigcptrBtTypedConstraint) GetJointFeedback__SWIG_1() BtJointFeedback {
	return _swig_wrap_btTypedConstraint_getJointFeedback__SWIG_1(arg1)
}

func (p SwigcptrBtTypedConstraint) GetJointFeedback(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetJointFeedback__SWIG_0()
	}
	if argc == 0 {
		return p.GetJointFeedback__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTypedConstraint_getUid(SwigcptrBtTypedConstraint) int

func (arg1 SwigcptrBtTypedConstraint) GetUid() int {
	return _swig_wrap_btTypedConstraint_getUid(arg1)
}

func _swig_wrap_btTypedConstraint_needsFeedback(SwigcptrBtTypedConstraint) bool

func (arg1 SwigcptrBtTypedConstraint) NeedsFeedback() bool {
	return _swig_wrap_btTypedConstraint_needsFeedback(arg1)
}

func _swig_wrap_btTypedConstraint_enableFeedback(SwigcptrBtTypedConstraint, bool)

func (arg1 SwigcptrBtTypedConstraint) EnableFeedback(arg2 bool) {
	_swig_wrap_btTypedConstraint_enableFeedback(arg1, arg2)
}

func _swig_wrap_btTypedConstraint_getAppliedImpulse(SwigcptrBtTypedConstraint) float32

func (arg1 SwigcptrBtTypedConstraint) GetAppliedImpulse() float32 {
	return _swig_wrap_btTypedConstraint_getAppliedImpulse(arg1)
}

func _swig_wrap_btTypedConstraint_getConstraintType(SwigcptrBtTypedConstraint) BtTypedConstraintType

func (arg1 SwigcptrBtTypedConstraint) GetConstraintType() BtTypedConstraintType {
	return _swig_wrap_btTypedConstraint_getConstraintType(arg1)
}

func _swig_wrap_btTypedConstraint_setDbgDrawSize(SwigcptrBtTypedConstraint, float32)

func (arg1 SwigcptrBtTypedConstraint) SetDbgDrawSize(arg2 float32) {
	_swig_wrap_btTypedConstraint_setDbgDrawSize(arg1, arg2)
}

func _swig_wrap_btTypedConstraint_getDbgDrawSize(SwigcptrBtTypedConstraint) float32

func (arg1 SwigcptrBtTypedConstraint) GetDbgDrawSize() float32 {
	return _swig_wrap_btTypedConstraint_getDbgDrawSize(arg1)
}

func _swig_wrap_btTypedConstraint_setParam__SWIG_0(SwigcptrBtTypedConstraint, int, float32, int)

func (arg1 SwigcptrBtTypedConstraint) SetParam__SWIG_0(arg2 int, arg3 float32, arg4 int) {
	_swig_wrap_btTypedConstraint_setParam__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btTypedConstraint_setParam__SWIG_1(SwigcptrBtTypedConstraint, int, float32)

func (arg1 SwigcptrBtTypedConstraint) SetParam__SWIG_1(arg2 int, arg3 float32) {
	_swig_wrap_btTypedConstraint_setParam__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBtTypedConstraint) SetParam(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetParam__SWIG_1(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetParam__SWIG_0(a[0].(int), a[1].(float32), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTypedConstraint_getParam__SWIG_0(SwigcptrBtTypedConstraint, int, int) float32

func (arg1 SwigcptrBtTypedConstraint) GetParam__SWIG_0(arg2 int, arg3 int) float32 {
	return _swig_wrap_btTypedConstraint_getParam__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btTypedConstraint_getParam__SWIG_1(SwigcptrBtTypedConstraint, int) float32

func (arg1 SwigcptrBtTypedConstraint) GetParam__SWIG_1(arg2 int) float32 {
	return _swig_wrap_btTypedConstraint_getParam__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtTypedConstraint) GetParam(a ...interface{}) float32 {
	argc := len(a)
	if argc == 1 {
		return p.GetParam__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.GetParam__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTypedConstraint_calculateSerializeBufferSize(SwigcptrBtTypedConstraint) int

func (arg1 SwigcptrBtTypedConstraint) CalculateSerializeBufferSize() int {
	return _swig_wrap_btTypedConstraint_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btTypedConstraint_serialize(SwigcptrBtTypedConstraint, uintptr, uintptr) string

func (arg1 SwigcptrBtTypedConstraint) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btTypedConstraint_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_SetbtTypedConstraint_M_objectType(SwigcptrBtTypedConstraint, int)

func (_swig_base SwigcptrBtTypedConstraint) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtTypedConstraint_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtTypedConstraint_M_objectType(SwigcptrBtTypedConstraint) int

func (_swig_base SwigcptrBtTypedConstraint) GetM_objectType() int {
	return _swig_wrap_GetbtTypedConstraint_M_objectType(_swig_base)
}

func _swig_wrap_btTypedConstraint_getObjectType(SwigcptrBtTypedConstraint) int

func (_swig_base SwigcptrBtTypedConstraint) GetObjectType() int {
	return _swig_wrap_btTypedConstraint_getObjectType(_swig_base)
}

func (p SwigcptrBtTypedConstraint) SwigIsBtTypedObject() {
}

func (p SwigcptrBtTypedConstraint) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtTypedConstraint interface {
	Swigcptr() uintptr
	SwigIsBtTypedConstraint()
	GetOverrideNumSolverIterations() int
	SetOverrideNumSolverIterations(arg2 int)
	BuildJacobian()
	SetupSolverConstraint(arg2 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg3 int, arg4 int, arg5 float32)
	GetInfo1(arg2 BtConstraintInfo1)
	GetInfo2(arg2 BtConstraintInfo2)
	InternalSetAppliedImpulse(arg2 float32)
	InternalGetAppliedImpulse() float32
	GetBreakingImpulseThreshold() float32
	SetBreakingImpulseThreshold(arg2 float32)
	IsEnabled() bool
	SetEnabled(arg2 bool)
	SolveConstraintObsolete(arg2 BtSolverBody, arg3 BtSolverBody, arg4 float32)
	GetRigidBodyA(a ...interface{}) interface{}
	GetRigidBodyB(a ...interface{}) interface{}
	GetUserConstraintType() int
	SetUserConstraintType(arg2 int)
	SetUserConstraintId(arg2 int)
	GetUserConstraintId() int
	SetUserConstraintPtr(arg2 uintptr)
	GetUserConstraintPtr() uintptr
	SetJointFeedback(arg2 BtJointFeedback)
	GetJointFeedback(a ...interface{}) interface{}
	GetUid() int
	NeedsFeedback() bool
	EnableFeedback(arg2 bool)
	GetAppliedImpulse() float32
	GetConstraintType() BtTypedConstraintType
	SetDbgDrawSize(arg2 float32)
	GetDbgDrawSize() float32
	SetParam(a ...interface{})
	GetParam(a ...interface{}) float32
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

func BtAdjustAngleToLimits(float32, float32, float32) float32

type SwigcptrBtTypedConstraintFloatData uintptr

func (p SwigcptrBtTypedConstraintFloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTypedConstraintFloatData) SwigIsBtTypedConstraintFloatData() {
}

func _swig_wrap_btTypedConstraintFloatData_m_rbA_set(SwigcptrBtTypedConstraintFloatData, uintptr)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_rbA(arg2 BtRigidBodyFloatData) {
	_swig_wrap_btTypedConstraintFloatData_m_rbA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTypedConstraintFloatData_m_rbA_get(SwigcptrBtTypedConstraintFloatData) SwigcptrBtRigidBodyFloatData

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_rbA() BtRigidBodyFloatData {
	return _swig_wrap_btTypedConstraintFloatData_m_rbA_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_rbB_set(SwigcptrBtTypedConstraintFloatData, uintptr)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_rbB(arg2 BtRigidBodyFloatData) {
	_swig_wrap_btTypedConstraintFloatData_m_rbB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTypedConstraintFloatData_m_rbB_get(SwigcptrBtTypedConstraintFloatData) SwigcptrBtRigidBodyFloatData

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_rbB() BtRigidBodyFloatData {
	return _swig_wrap_btTypedConstraintFloatData_m_rbB_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_name_set(SwigcptrBtTypedConstraintFloatData, string)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_name(arg2 string) {
	_swig_wrap_btTypedConstraintFloatData_m_name_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintFloatData_m_name_get(SwigcptrBtTypedConstraintFloatData) string

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_name() string {
	return _swig_wrap_btTypedConstraintFloatData_m_name_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_objectType_set(SwigcptrBtTypedConstraintFloatData, int)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_objectType(arg2 int) {
	_swig_wrap_btTypedConstraintFloatData_m_objectType_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintFloatData_m_objectType_get(SwigcptrBtTypedConstraintFloatData) int

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_objectType() int {
	return _swig_wrap_btTypedConstraintFloatData_m_objectType_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_userConstraintType_set(SwigcptrBtTypedConstraintFloatData, int)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_userConstraintType(arg2 int) {
	_swig_wrap_btTypedConstraintFloatData_m_userConstraintType_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintFloatData_m_userConstraintType_get(SwigcptrBtTypedConstraintFloatData) int

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_userConstraintType() int {
	return _swig_wrap_btTypedConstraintFloatData_m_userConstraintType_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_userConstraintId_set(SwigcptrBtTypedConstraintFloatData, int)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_userConstraintId(arg2 int) {
	_swig_wrap_btTypedConstraintFloatData_m_userConstraintId_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintFloatData_m_userConstraintId_get(SwigcptrBtTypedConstraintFloatData) int

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_userConstraintId() int {
	return _swig_wrap_btTypedConstraintFloatData_m_userConstraintId_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_needsFeedback_set(SwigcptrBtTypedConstraintFloatData, int)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_needsFeedback(arg2 int) {
	_swig_wrap_btTypedConstraintFloatData_m_needsFeedback_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintFloatData_m_needsFeedback_get(SwigcptrBtTypedConstraintFloatData) int

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_needsFeedback() int {
	return _swig_wrap_btTypedConstraintFloatData_m_needsFeedback_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_appliedImpulse_set(SwigcptrBtTypedConstraintFloatData, float32)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_appliedImpulse(arg2 float32) {
	_swig_wrap_btTypedConstraintFloatData_m_appliedImpulse_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintFloatData_m_appliedImpulse_get(SwigcptrBtTypedConstraintFloatData) float32

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_appliedImpulse() float32 {
	return _swig_wrap_btTypedConstraintFloatData_m_appliedImpulse_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_dbgDrawSize_set(SwigcptrBtTypedConstraintFloatData, float32)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_dbgDrawSize(arg2 float32) {
	_swig_wrap_btTypedConstraintFloatData_m_dbgDrawSize_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintFloatData_m_dbgDrawSize_get(SwigcptrBtTypedConstraintFloatData) float32

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_dbgDrawSize() float32 {
	return _swig_wrap_btTypedConstraintFloatData_m_dbgDrawSize_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_disableCollisionsBetweenLinkedBodies_set(SwigcptrBtTypedConstraintFloatData, int)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_disableCollisionsBetweenLinkedBodies(arg2 int) {
	_swig_wrap_btTypedConstraintFloatData_m_disableCollisionsBetweenLinkedBodies_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintFloatData_m_disableCollisionsBetweenLinkedBodies_get(SwigcptrBtTypedConstraintFloatData) int

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_disableCollisionsBetweenLinkedBodies() int {
	return _swig_wrap_btTypedConstraintFloatData_m_disableCollisionsBetweenLinkedBodies_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_overrideNumSolverIterations_set(SwigcptrBtTypedConstraintFloatData, int)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_overrideNumSolverIterations(arg2 int) {
	_swig_wrap_btTypedConstraintFloatData_m_overrideNumSolverIterations_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintFloatData_m_overrideNumSolverIterations_get(SwigcptrBtTypedConstraintFloatData) int

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_overrideNumSolverIterations() int {
	return _swig_wrap_btTypedConstraintFloatData_m_overrideNumSolverIterations_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_breakingImpulseThreshold_set(SwigcptrBtTypedConstraintFloatData, float32)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_breakingImpulseThreshold(arg2 float32) {
	_swig_wrap_btTypedConstraintFloatData_m_breakingImpulseThreshold_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintFloatData_m_breakingImpulseThreshold_get(SwigcptrBtTypedConstraintFloatData) float32

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_breakingImpulseThreshold() float32 {
	return _swig_wrap_btTypedConstraintFloatData_m_breakingImpulseThreshold_get(arg1)
}

func _swig_wrap_btTypedConstraintFloatData_m_isEnabled_set(SwigcptrBtTypedConstraintFloatData, int)

func (arg1 SwigcptrBtTypedConstraintFloatData) SetM_isEnabled(arg2 int) {
	_swig_wrap_btTypedConstraintFloatData_m_isEnabled_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintFloatData_m_isEnabled_get(SwigcptrBtTypedConstraintFloatData) int

func (arg1 SwigcptrBtTypedConstraintFloatData) GetM_isEnabled() int {
	return _swig_wrap_btTypedConstraintFloatData_m_isEnabled_get(arg1)
}

func _swig_wrap_new_btTypedConstraintFloatData() SwigcptrBtTypedConstraintFloatData

func NewBtTypedConstraintFloatData() BtTypedConstraintFloatData {
	return _swig_wrap_new_btTypedConstraintFloatData()
}

func _swig_wrap_delete_btTypedConstraintFloatData(uintptr)

func DeleteBtTypedConstraintFloatData(arg1 BtTypedConstraintFloatData) {
	_swig_wrap_delete_btTypedConstraintFloatData(arg1.Swigcptr())
}

type BtTypedConstraintFloatData interface {
	Swigcptr() uintptr
	SwigIsBtTypedConstraintFloatData()
	SetM_rbA(arg2 BtRigidBodyFloatData)
	GetM_rbA() BtRigidBodyFloatData
	SetM_rbB(arg2 BtRigidBodyFloatData)
	GetM_rbB() BtRigidBodyFloatData
	SetM_name(arg2 string)
	GetM_name() string
	SetM_objectType(arg2 int)
	GetM_objectType() int
	SetM_userConstraintType(arg2 int)
	GetM_userConstraintType() int
	SetM_userConstraintId(arg2 int)
	GetM_userConstraintId() int
	SetM_needsFeedback(arg2 int)
	GetM_needsFeedback() int
	SetM_appliedImpulse(arg2 float32)
	GetM_appliedImpulse() float32
	SetM_dbgDrawSize(arg2 float32)
	GetM_dbgDrawSize() float32
	SetM_disableCollisionsBetweenLinkedBodies(arg2 int)
	GetM_disableCollisionsBetweenLinkedBodies() int
	SetM_overrideNumSolverIterations(arg2 int)
	GetM_overrideNumSolverIterations() int
	SetM_breakingImpulseThreshold(arg2 float32)
	GetM_breakingImpulseThreshold() float32
	SetM_isEnabled(arg2 int)
	GetM_isEnabled() int
}

type SwigcptrBtTypedConstraintData uintptr

func (p SwigcptrBtTypedConstraintData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTypedConstraintData) SwigIsBtTypedConstraintData() {
}

func _swig_wrap_btTypedConstraintData_m_rbA_set(SwigcptrBtTypedConstraintData, uintptr)

func (arg1 SwigcptrBtTypedConstraintData) SetM_rbA(arg2 BtRigidBodyFloatData) {
	_swig_wrap_btTypedConstraintData_m_rbA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTypedConstraintData_m_rbA_get(SwigcptrBtTypedConstraintData) SwigcptrBtRigidBodyFloatData

func (arg1 SwigcptrBtTypedConstraintData) GetM_rbA() BtRigidBodyFloatData {
	return _swig_wrap_btTypedConstraintData_m_rbA_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_rbB_set(SwigcptrBtTypedConstraintData, uintptr)

func (arg1 SwigcptrBtTypedConstraintData) SetM_rbB(arg2 BtRigidBodyFloatData) {
	_swig_wrap_btTypedConstraintData_m_rbB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTypedConstraintData_m_rbB_get(SwigcptrBtTypedConstraintData) SwigcptrBtRigidBodyFloatData

func (arg1 SwigcptrBtTypedConstraintData) GetM_rbB() BtRigidBodyFloatData {
	return _swig_wrap_btTypedConstraintData_m_rbB_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_name_set(SwigcptrBtTypedConstraintData, string)

func (arg1 SwigcptrBtTypedConstraintData) SetM_name(arg2 string) {
	_swig_wrap_btTypedConstraintData_m_name_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintData_m_name_get(SwigcptrBtTypedConstraintData) string

func (arg1 SwigcptrBtTypedConstraintData) GetM_name() string {
	return _swig_wrap_btTypedConstraintData_m_name_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_objectType_set(SwigcptrBtTypedConstraintData, int)

func (arg1 SwigcptrBtTypedConstraintData) SetM_objectType(arg2 int) {
	_swig_wrap_btTypedConstraintData_m_objectType_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintData_m_objectType_get(SwigcptrBtTypedConstraintData) int

func (arg1 SwigcptrBtTypedConstraintData) GetM_objectType() int {
	return _swig_wrap_btTypedConstraintData_m_objectType_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_userConstraintType_set(SwigcptrBtTypedConstraintData, int)

func (arg1 SwigcptrBtTypedConstraintData) SetM_userConstraintType(arg2 int) {
	_swig_wrap_btTypedConstraintData_m_userConstraintType_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintData_m_userConstraintType_get(SwigcptrBtTypedConstraintData) int

func (arg1 SwigcptrBtTypedConstraintData) GetM_userConstraintType() int {
	return _swig_wrap_btTypedConstraintData_m_userConstraintType_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_userConstraintId_set(SwigcptrBtTypedConstraintData, int)

func (arg1 SwigcptrBtTypedConstraintData) SetM_userConstraintId(arg2 int) {
	_swig_wrap_btTypedConstraintData_m_userConstraintId_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintData_m_userConstraintId_get(SwigcptrBtTypedConstraintData) int

func (arg1 SwigcptrBtTypedConstraintData) GetM_userConstraintId() int {
	return _swig_wrap_btTypedConstraintData_m_userConstraintId_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_needsFeedback_set(SwigcptrBtTypedConstraintData, int)

func (arg1 SwigcptrBtTypedConstraintData) SetM_needsFeedback(arg2 int) {
	_swig_wrap_btTypedConstraintData_m_needsFeedback_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintData_m_needsFeedback_get(SwigcptrBtTypedConstraintData) int

func (arg1 SwigcptrBtTypedConstraintData) GetM_needsFeedback() int {
	return _swig_wrap_btTypedConstraintData_m_needsFeedback_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_appliedImpulse_set(SwigcptrBtTypedConstraintData, float32)

func (arg1 SwigcptrBtTypedConstraintData) SetM_appliedImpulse(arg2 float32) {
	_swig_wrap_btTypedConstraintData_m_appliedImpulse_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintData_m_appliedImpulse_get(SwigcptrBtTypedConstraintData) float32

func (arg1 SwigcptrBtTypedConstraintData) GetM_appliedImpulse() float32 {
	return _swig_wrap_btTypedConstraintData_m_appliedImpulse_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_dbgDrawSize_set(SwigcptrBtTypedConstraintData, float32)

func (arg1 SwigcptrBtTypedConstraintData) SetM_dbgDrawSize(arg2 float32) {
	_swig_wrap_btTypedConstraintData_m_dbgDrawSize_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintData_m_dbgDrawSize_get(SwigcptrBtTypedConstraintData) float32

func (arg1 SwigcptrBtTypedConstraintData) GetM_dbgDrawSize() float32 {
	return _swig_wrap_btTypedConstraintData_m_dbgDrawSize_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_disableCollisionsBetweenLinkedBodies_set(SwigcptrBtTypedConstraintData, int)

func (arg1 SwigcptrBtTypedConstraintData) SetM_disableCollisionsBetweenLinkedBodies(arg2 int) {
	_swig_wrap_btTypedConstraintData_m_disableCollisionsBetweenLinkedBodies_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintData_m_disableCollisionsBetweenLinkedBodies_get(SwigcptrBtTypedConstraintData) int

func (arg1 SwigcptrBtTypedConstraintData) GetM_disableCollisionsBetweenLinkedBodies() int {
	return _swig_wrap_btTypedConstraintData_m_disableCollisionsBetweenLinkedBodies_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_overrideNumSolverIterations_set(SwigcptrBtTypedConstraintData, int)

func (arg1 SwigcptrBtTypedConstraintData) SetM_overrideNumSolverIterations(arg2 int) {
	_swig_wrap_btTypedConstraintData_m_overrideNumSolverIterations_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintData_m_overrideNumSolverIterations_get(SwigcptrBtTypedConstraintData) int

func (arg1 SwigcptrBtTypedConstraintData) GetM_overrideNumSolverIterations() int {
	return _swig_wrap_btTypedConstraintData_m_overrideNumSolverIterations_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_breakingImpulseThreshold_set(SwigcptrBtTypedConstraintData, float32)

func (arg1 SwigcptrBtTypedConstraintData) SetM_breakingImpulseThreshold(arg2 float32) {
	_swig_wrap_btTypedConstraintData_m_breakingImpulseThreshold_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintData_m_breakingImpulseThreshold_get(SwigcptrBtTypedConstraintData) float32

func (arg1 SwigcptrBtTypedConstraintData) GetM_breakingImpulseThreshold() float32 {
	return _swig_wrap_btTypedConstraintData_m_breakingImpulseThreshold_get(arg1)
}

func _swig_wrap_btTypedConstraintData_m_isEnabled_set(SwigcptrBtTypedConstraintData, int)

func (arg1 SwigcptrBtTypedConstraintData) SetM_isEnabled(arg2 int) {
	_swig_wrap_btTypedConstraintData_m_isEnabled_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintData_m_isEnabled_get(SwigcptrBtTypedConstraintData) int

func (arg1 SwigcptrBtTypedConstraintData) GetM_isEnabled() int {
	return _swig_wrap_btTypedConstraintData_m_isEnabled_get(arg1)
}

func _swig_wrap_new_btTypedConstraintData() SwigcptrBtTypedConstraintData

func NewBtTypedConstraintData() BtTypedConstraintData {
	return _swig_wrap_new_btTypedConstraintData()
}

func _swig_wrap_delete_btTypedConstraintData(uintptr)

func DeleteBtTypedConstraintData(arg1 BtTypedConstraintData) {
	_swig_wrap_delete_btTypedConstraintData(arg1.Swigcptr())
}

type BtTypedConstraintData interface {
	Swigcptr() uintptr
	SwigIsBtTypedConstraintData()
	SetM_rbA(arg2 BtRigidBodyFloatData)
	GetM_rbA() BtRigidBodyFloatData
	SetM_rbB(arg2 BtRigidBodyFloatData)
	GetM_rbB() BtRigidBodyFloatData
	SetM_name(arg2 string)
	GetM_name() string
	SetM_objectType(arg2 int)
	GetM_objectType() int
	SetM_userConstraintType(arg2 int)
	GetM_userConstraintType() int
	SetM_userConstraintId(arg2 int)
	GetM_userConstraintId() int
	SetM_needsFeedback(arg2 int)
	GetM_needsFeedback() int
	SetM_appliedImpulse(arg2 float32)
	GetM_appliedImpulse() float32
	SetM_dbgDrawSize(arg2 float32)
	GetM_dbgDrawSize() float32
	SetM_disableCollisionsBetweenLinkedBodies(arg2 int)
	GetM_disableCollisionsBetweenLinkedBodies() int
	SetM_overrideNumSolverIterations(arg2 int)
	GetM_overrideNumSolverIterations() int
	SetM_breakingImpulseThreshold(arg2 float32)
	GetM_breakingImpulseThreshold() float32
	SetM_isEnabled(arg2 int)
	GetM_isEnabled() int
}

type SwigcptrBtTypedConstraintDoubleData uintptr

func (p SwigcptrBtTypedConstraintDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTypedConstraintDoubleData) SwigIsBtTypedConstraintDoubleData() {
}

func _swig_wrap_btTypedConstraintDoubleData_m_rbA_set(SwigcptrBtTypedConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_rbA(arg2 BtRigidBodyDoubleData) {
	_swig_wrap_btTypedConstraintDoubleData_m_rbA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTypedConstraintDoubleData_m_rbA_get(SwigcptrBtTypedConstraintDoubleData) SwigcptrBtRigidBodyDoubleData

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_rbA() BtRigidBodyDoubleData {
	return _swig_wrap_btTypedConstraintDoubleData_m_rbA_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_rbB_set(SwigcptrBtTypedConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_rbB(arg2 BtRigidBodyDoubleData) {
	_swig_wrap_btTypedConstraintDoubleData_m_rbB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTypedConstraintDoubleData_m_rbB_get(SwigcptrBtTypedConstraintDoubleData) SwigcptrBtRigidBodyDoubleData

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_rbB() BtRigidBodyDoubleData {
	return _swig_wrap_btTypedConstraintDoubleData_m_rbB_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_name_set(SwigcptrBtTypedConstraintDoubleData, string)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_name(arg2 string) {
	_swig_wrap_btTypedConstraintDoubleData_m_name_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_m_name_get(SwigcptrBtTypedConstraintDoubleData) string

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_name() string {
	return _swig_wrap_btTypedConstraintDoubleData_m_name_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_objectType_set(SwigcptrBtTypedConstraintDoubleData, int)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_objectType(arg2 int) {
	_swig_wrap_btTypedConstraintDoubleData_m_objectType_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_m_objectType_get(SwigcptrBtTypedConstraintDoubleData) int

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_objectType() int {
	return _swig_wrap_btTypedConstraintDoubleData_m_objectType_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_userConstraintType_set(SwigcptrBtTypedConstraintDoubleData, int)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_userConstraintType(arg2 int) {
	_swig_wrap_btTypedConstraintDoubleData_m_userConstraintType_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_m_userConstraintType_get(SwigcptrBtTypedConstraintDoubleData) int

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_userConstraintType() int {
	return _swig_wrap_btTypedConstraintDoubleData_m_userConstraintType_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_userConstraintId_set(SwigcptrBtTypedConstraintDoubleData, int)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_userConstraintId(arg2 int) {
	_swig_wrap_btTypedConstraintDoubleData_m_userConstraintId_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_m_userConstraintId_get(SwigcptrBtTypedConstraintDoubleData) int

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_userConstraintId() int {
	return _swig_wrap_btTypedConstraintDoubleData_m_userConstraintId_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_needsFeedback_set(SwigcptrBtTypedConstraintDoubleData, int)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_needsFeedback(arg2 int) {
	_swig_wrap_btTypedConstraintDoubleData_m_needsFeedback_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_m_needsFeedback_get(SwigcptrBtTypedConstraintDoubleData) int

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_needsFeedback() int {
	return _swig_wrap_btTypedConstraintDoubleData_m_needsFeedback_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_appliedImpulse_set(SwigcptrBtTypedConstraintDoubleData, float64)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_appliedImpulse(arg2 float64) {
	_swig_wrap_btTypedConstraintDoubleData_m_appliedImpulse_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_m_appliedImpulse_get(SwigcptrBtTypedConstraintDoubleData) float64

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_appliedImpulse() float64 {
	return _swig_wrap_btTypedConstraintDoubleData_m_appliedImpulse_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_dbgDrawSize_set(SwigcptrBtTypedConstraintDoubleData, float64)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_dbgDrawSize(arg2 float64) {
	_swig_wrap_btTypedConstraintDoubleData_m_dbgDrawSize_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_m_dbgDrawSize_get(SwigcptrBtTypedConstraintDoubleData) float64

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_dbgDrawSize() float64 {
	return _swig_wrap_btTypedConstraintDoubleData_m_dbgDrawSize_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_disableCollisionsBetweenLinkedBodies_set(SwigcptrBtTypedConstraintDoubleData, int)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_disableCollisionsBetweenLinkedBodies(arg2 int) {
	_swig_wrap_btTypedConstraintDoubleData_m_disableCollisionsBetweenLinkedBodies_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_m_disableCollisionsBetweenLinkedBodies_get(SwigcptrBtTypedConstraintDoubleData) int

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_disableCollisionsBetweenLinkedBodies() int {
	return _swig_wrap_btTypedConstraintDoubleData_m_disableCollisionsBetweenLinkedBodies_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_overrideNumSolverIterations_set(SwigcptrBtTypedConstraintDoubleData, int)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_overrideNumSolverIterations(arg2 int) {
	_swig_wrap_btTypedConstraintDoubleData_m_overrideNumSolverIterations_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_m_overrideNumSolverIterations_get(SwigcptrBtTypedConstraintDoubleData) int

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_overrideNumSolverIterations() int {
	return _swig_wrap_btTypedConstraintDoubleData_m_overrideNumSolverIterations_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_breakingImpulseThreshold_set(SwigcptrBtTypedConstraintDoubleData, float64)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_breakingImpulseThreshold(arg2 float64) {
	_swig_wrap_btTypedConstraintDoubleData_m_breakingImpulseThreshold_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_m_breakingImpulseThreshold_get(SwigcptrBtTypedConstraintDoubleData) float64

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_breakingImpulseThreshold() float64 {
	return _swig_wrap_btTypedConstraintDoubleData_m_breakingImpulseThreshold_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_m_isEnabled_set(SwigcptrBtTypedConstraintDoubleData, int)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetM_isEnabled(arg2 int) {
	_swig_wrap_btTypedConstraintDoubleData_m_isEnabled_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_m_isEnabled_get(SwigcptrBtTypedConstraintDoubleData) int

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetM_isEnabled() int {
	return _swig_wrap_btTypedConstraintDoubleData_m_isEnabled_get(arg1)
}

func _swig_wrap_btTypedConstraintDoubleData_padding_set(SwigcptrBtTypedConstraintDoubleData, string)

func (arg1 SwigcptrBtTypedConstraintDoubleData) SetPadding(arg2 string) {
	_swig_wrap_btTypedConstraintDoubleData_padding_set(arg1, arg2)
}

func _swig_wrap_btTypedConstraintDoubleData_padding_get(SwigcptrBtTypedConstraintDoubleData) string

func (arg1 SwigcptrBtTypedConstraintDoubleData) GetPadding() string {
	return _swig_wrap_btTypedConstraintDoubleData_padding_get(arg1)
}

func _swig_wrap_new_btTypedConstraintDoubleData() SwigcptrBtTypedConstraintDoubleData

func NewBtTypedConstraintDoubleData() BtTypedConstraintDoubleData {
	return _swig_wrap_new_btTypedConstraintDoubleData()
}

func _swig_wrap_delete_btTypedConstraintDoubleData(uintptr)

func DeleteBtTypedConstraintDoubleData(arg1 BtTypedConstraintDoubleData) {
	_swig_wrap_delete_btTypedConstraintDoubleData(arg1.Swigcptr())
}

type BtTypedConstraintDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtTypedConstraintDoubleData()
	SetM_rbA(arg2 BtRigidBodyDoubleData)
	GetM_rbA() BtRigidBodyDoubleData
	SetM_rbB(arg2 BtRigidBodyDoubleData)
	GetM_rbB() BtRigidBodyDoubleData
	SetM_name(arg2 string)
	GetM_name() string
	SetM_objectType(arg2 int)
	GetM_objectType() int
	SetM_userConstraintType(arg2 int)
	GetM_userConstraintType() int
	SetM_userConstraintId(arg2 int)
	GetM_userConstraintId() int
	SetM_needsFeedback(arg2 int)
	GetM_needsFeedback() int
	SetM_appliedImpulse(arg2 float64)
	GetM_appliedImpulse() float64
	SetM_dbgDrawSize(arg2 float64)
	GetM_dbgDrawSize() float64
	SetM_disableCollisionsBetweenLinkedBodies(arg2 int)
	GetM_disableCollisionsBetweenLinkedBodies() int
	SetM_overrideNumSolverIterations(arg2 int)
	GetM_overrideNumSolverIterations() int
	SetM_breakingImpulseThreshold(arg2 float64)
	GetM_breakingImpulseThreshold() float64
	SetM_isEnabled(arg2 int)
	GetM_isEnabled() int
	SetPadding(arg2 string)
	GetPadding() string
}

type SwigcptrBtAngularLimit uintptr

func (p SwigcptrBtAngularLimit) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtAngularLimit) SwigIsBtAngularLimit() {
}

func _swig_wrap_new_btAngularLimit() SwigcptrBtAngularLimit

func NewBtAngularLimit() BtAngularLimit {
	return _swig_wrap_new_btAngularLimit()
}

func _swig_wrap_btAngularLimit_set__SWIG_0(SwigcptrBtAngularLimit, float32, float32, float32, float32, float32)

func (arg1 SwigcptrBtAngularLimit) Set__SWIG_0(arg2 float32, arg3 float32, arg4 float32, arg5 float32, arg6 float32) {
	_swig_wrap_btAngularLimit_set__SWIG_0(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_btAngularLimit_set__SWIG_1(SwigcptrBtAngularLimit, float32, float32, float32, float32)

func (arg1 SwigcptrBtAngularLimit) Set__SWIG_1(arg2 float32, arg3 float32, arg4 float32, arg5 float32) {
	_swig_wrap_btAngularLimit_set__SWIG_1(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_btAngularLimit_set__SWIG_2(SwigcptrBtAngularLimit, float32, float32, float32)

func (arg1 SwigcptrBtAngularLimit) Set__SWIG_2(arg2 float32, arg3 float32, arg4 float32) {
	_swig_wrap_btAngularLimit_set__SWIG_2(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btAngularLimit_set__SWIG_3(SwigcptrBtAngularLimit, float32, float32)

func (arg1 SwigcptrBtAngularLimit) Set__SWIG_3(arg2 float32, arg3 float32) {
	_swig_wrap_btAngularLimit_set__SWIG_3(arg1, arg2, arg3)
}

func (p SwigcptrBtAngularLimit) Set(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.Set__SWIG_3(a[0].(float32), a[1].(float32))
		return
	}
	if argc == 3 {
		p.Set__SWIG_2(a[0].(float32), a[1].(float32), a[2].(float32))
		return
	}
	if argc == 4 {
		p.Set__SWIG_1(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32))
		return
	}
	if argc == 5 {
		p.Set__SWIG_0(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32), a[4].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btAngularLimit_test(SwigcptrBtAngularLimit, float32)

func (arg1 SwigcptrBtAngularLimit) Test(arg2 float32) {
	_swig_wrap_btAngularLimit_test(arg1, arg2)
}

func _swig_wrap_btAngularLimit_getSoftness(SwigcptrBtAngularLimit) float32

func (arg1 SwigcptrBtAngularLimit) GetSoftness() float32 {
	return _swig_wrap_btAngularLimit_getSoftness(arg1)
}

func _swig_wrap_btAngularLimit_getBiasFactor(SwigcptrBtAngularLimit) float32

func (arg1 SwigcptrBtAngularLimit) GetBiasFactor() float32 {
	return _swig_wrap_btAngularLimit_getBiasFactor(arg1)
}

func _swig_wrap_btAngularLimit_getRelaxationFactor(SwigcptrBtAngularLimit) float32

func (arg1 SwigcptrBtAngularLimit) GetRelaxationFactor() float32 {
	return _swig_wrap_btAngularLimit_getRelaxationFactor(arg1)
}

func _swig_wrap_btAngularLimit_getCorrection(SwigcptrBtAngularLimit) float32

func (arg1 SwigcptrBtAngularLimit) GetCorrection() float32 {
	return _swig_wrap_btAngularLimit_getCorrection(arg1)
}

func _swig_wrap_btAngularLimit_getSign(SwigcptrBtAngularLimit) float32

func (arg1 SwigcptrBtAngularLimit) GetSign() float32 {
	return _swig_wrap_btAngularLimit_getSign(arg1)
}

func _swig_wrap_btAngularLimit_getHalfRange(SwigcptrBtAngularLimit) float32

func (arg1 SwigcptrBtAngularLimit) GetHalfRange() float32 {
	return _swig_wrap_btAngularLimit_getHalfRange(arg1)
}

func _swig_wrap_btAngularLimit_isLimit(SwigcptrBtAngularLimit) bool

func (arg1 SwigcptrBtAngularLimit) IsLimit() bool {
	return _swig_wrap_btAngularLimit_isLimit(arg1)
}

func _swig_wrap_btAngularLimit_fit(SwigcptrBtAngularLimit, *float32)

func (arg1 SwigcptrBtAngularLimit) Fit(arg2 *float32) {
	_swig_wrap_btAngularLimit_fit(arg1, arg2)
}

func _swig_wrap_btAngularLimit_getError(SwigcptrBtAngularLimit) float32

func (arg1 SwigcptrBtAngularLimit) GetError() float32 {
	return _swig_wrap_btAngularLimit_getError(arg1)
}

func _swig_wrap_btAngularLimit_getLow(SwigcptrBtAngularLimit) float32

func (arg1 SwigcptrBtAngularLimit) GetLow() float32 {
	return _swig_wrap_btAngularLimit_getLow(arg1)
}

func _swig_wrap_btAngularLimit_getHigh(SwigcptrBtAngularLimit) float32

func (arg1 SwigcptrBtAngularLimit) GetHigh() float32 {
	return _swig_wrap_btAngularLimit_getHigh(arg1)
}

func _swig_wrap_delete_btAngularLimit(uintptr)

func DeleteBtAngularLimit(arg1 BtAngularLimit) {
	_swig_wrap_delete_btAngularLimit(arg1.Swigcptr())
}

type BtAngularLimit interface {
	Swigcptr() uintptr
	SwigIsBtAngularLimit()
	Set(a ...interface{})
	Test(arg2 float32)
	GetSoftness() float32
	GetBiasFactor() float32
	GetRelaxationFactor() float32
	GetCorrection() float32
	GetSign() float32
	GetHalfRange() float32
	IsLimit() bool
	Fit(arg2 *float32)
	GetError() float32
	GetLow() float32
	GetHigh() float32
}

const BtPoint2PointConstraintDataName string = "btPoint2PointConstraintFloatData"

type SwigcptrBtConstraintSetting uintptr

func (p SwigcptrBtConstraintSetting) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConstraintSetting) SwigIsBtConstraintSetting() {
}

func _swig_wrap_new_btConstraintSetting() SwigcptrBtConstraintSetting

func NewBtConstraintSetting() BtConstraintSetting {
	return _swig_wrap_new_btConstraintSetting()
}

func _swig_wrap_btConstraintSetting_m_tau_set(SwigcptrBtConstraintSetting, float32)

func (arg1 SwigcptrBtConstraintSetting) SetM_tau(arg2 float32) {
	_swig_wrap_btConstraintSetting_m_tau_set(arg1, arg2)
}

func _swig_wrap_btConstraintSetting_m_tau_get(SwigcptrBtConstraintSetting) float32

func (arg1 SwigcptrBtConstraintSetting) GetM_tau() float32 {
	return _swig_wrap_btConstraintSetting_m_tau_get(arg1)
}

func _swig_wrap_btConstraintSetting_m_damping_set(SwigcptrBtConstraintSetting, float32)

func (arg1 SwigcptrBtConstraintSetting) SetM_damping(arg2 float32) {
	_swig_wrap_btConstraintSetting_m_damping_set(arg1, arg2)
}

func _swig_wrap_btConstraintSetting_m_damping_get(SwigcptrBtConstraintSetting) float32

func (arg1 SwigcptrBtConstraintSetting) GetM_damping() float32 {
	return _swig_wrap_btConstraintSetting_m_damping_get(arg1)
}

func _swig_wrap_btConstraintSetting_m_impulseClamp_set(SwigcptrBtConstraintSetting, float32)

func (arg1 SwigcptrBtConstraintSetting) SetM_impulseClamp(arg2 float32) {
	_swig_wrap_btConstraintSetting_m_impulseClamp_set(arg1, arg2)
}

func _swig_wrap_btConstraintSetting_m_impulseClamp_get(SwigcptrBtConstraintSetting) float32

func (arg1 SwigcptrBtConstraintSetting) GetM_impulseClamp() float32 {
	return _swig_wrap_btConstraintSetting_m_impulseClamp_get(arg1)
}

func _swig_wrap_delete_btConstraintSetting(uintptr)

func DeleteBtConstraintSetting(arg1 BtConstraintSetting) {
	_swig_wrap_delete_btConstraintSetting(arg1.Swigcptr())
}

type BtConstraintSetting interface {
	Swigcptr() uintptr
	SwigIsBtConstraintSetting()
	SetM_tau(arg2 float32)
	GetM_tau() float32
	SetM_damping(arg2 float32)
	GetM_damping() float32
	SetM_impulseClamp(arg2 float32)
	GetM_impulseClamp() float32
}

type BtPoint2PointFlags int

func _swig_getBT_P2P_FLAGS_ERP() BtPoint2PointFlags

var BT_P2P_FLAGS_ERP BtPoint2PointFlags = _swig_getBT_P2P_FLAGS_ERP()

func _swig_getBT_P2P_FLAGS_CFM() BtPoint2PointFlags

var BT_P2P_FLAGS_CFM BtPoint2PointFlags = _swig_getBT_P2P_FLAGS_CFM()

type SwigcptrBtPoint2PointConstraint uintptr

func (p SwigcptrBtPoint2PointConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtPoint2PointConstraint) SwigIsBtPoint2PointConstraint() {
}

func _swig_wrap_btPoint2PointConstraint_m_useSolveConstraintObsolete_set(SwigcptrBtPoint2PointConstraint, bool)

func (arg1 SwigcptrBtPoint2PointConstraint) SetM_useSolveConstraintObsolete(arg2 bool) {
	_swig_wrap_btPoint2PointConstraint_m_useSolveConstraintObsolete_set(arg1, arg2)
}

func _swig_wrap_btPoint2PointConstraint_m_useSolveConstraintObsolete_get(SwigcptrBtPoint2PointConstraint) bool

func (arg1 SwigcptrBtPoint2PointConstraint) GetM_useSolveConstraintObsolete() bool {
	return _swig_wrap_btPoint2PointConstraint_m_useSolveConstraintObsolete_get(arg1)
}

func _swig_wrap_btPoint2PointConstraint_m_setting_set(SwigcptrBtPoint2PointConstraint, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraint) SetM_setting(arg2 BtConstraintSetting) {
	_swig_wrap_btPoint2PointConstraint_m_setting_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraint_m_setting_get(SwigcptrBtPoint2PointConstraint) SwigcptrBtConstraintSetting

func (arg1 SwigcptrBtPoint2PointConstraint) GetM_setting() BtConstraintSetting {
	return _swig_wrap_btPoint2PointConstraint_m_setting_get(arg1)
}

func _swig_wrap_new_btPoint2PointConstraint__SWIG_0(uintptr, uintptr, uintptr, uintptr) SwigcptrBtPoint2PointConstraint

func NewBtPoint2PointConstraint__SWIG_0(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtVector3, arg4 BtVector3) BtPoint2PointConstraint {
	return _swig_wrap_new_btPoint2PointConstraint__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_new_btPoint2PointConstraint__SWIG_1(uintptr, uintptr) SwigcptrBtPoint2PointConstraint

func NewBtPoint2PointConstraint__SWIG_1(arg1 BtRigidBody, arg2 BtVector3) BtPoint2PointConstraint {
	return _swig_wrap_new_btPoint2PointConstraint__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr())
}

func NewBtPoint2PointConstraint(a ...interface{}) BtPoint2PointConstraint {
	argc := len(a)
	if argc == 2 {
		return NewBtPoint2PointConstraint__SWIG_1(a[0].(BtRigidBody), a[1].(BtVector3))
	}
	if argc == 4 {
		return NewBtPoint2PointConstraint__SWIG_0(a[0].(BtRigidBody), a[1].(BtRigidBody), a[2].(BtVector3), a[3].(BtVector3))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPoint2PointConstraint_buildJacobian(SwigcptrBtPoint2PointConstraint)

func (arg1 SwigcptrBtPoint2PointConstraint) BuildJacobian() {
	_swig_wrap_btPoint2PointConstraint_buildJacobian(arg1)
}

func _swig_wrap_btPoint2PointConstraint_getInfo1(SwigcptrBtPoint2PointConstraint, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraint) GetInfo1(arg2 BtConstraintInfo1) {
	_swig_wrap_btPoint2PointConstraint_getInfo1(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraint_getInfo1NonVirtual(SwigcptrBtPoint2PointConstraint, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraint) GetInfo1NonVirtual(arg2 BtConstraintInfo1) {
	_swig_wrap_btPoint2PointConstraint_getInfo1NonVirtual(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraint_getInfo2(SwigcptrBtPoint2PointConstraint, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraint) GetInfo2(arg2 BtConstraintInfo2) {
	_swig_wrap_btPoint2PointConstraint_getInfo2(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraint_getInfo2NonVirtual(SwigcptrBtPoint2PointConstraint, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraint) GetInfo2NonVirtual(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform) {
	_swig_wrap_btPoint2PointConstraint_getInfo2NonVirtual(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraint_updateRHS(SwigcptrBtPoint2PointConstraint, float32)

func (arg1 SwigcptrBtPoint2PointConstraint) UpdateRHS(arg2 float32) {
	_swig_wrap_btPoint2PointConstraint_updateRHS(arg1, arg2)
}

func _swig_wrap_btPoint2PointConstraint_setPivotA(SwigcptrBtPoint2PointConstraint, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraint) SetPivotA(arg2 BtVector3) {
	_swig_wrap_btPoint2PointConstraint_setPivotA(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraint_setPivotB(SwigcptrBtPoint2PointConstraint, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraint) SetPivotB(arg2 BtVector3) {
	_swig_wrap_btPoint2PointConstraint_setPivotB(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraint_getPivotInA(SwigcptrBtPoint2PointConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtPoint2PointConstraint) GetPivotInA() BtVector3 {
	return _swig_wrap_btPoint2PointConstraint_getPivotInA(arg1)
}

func _swig_wrap_btPoint2PointConstraint_getPivotInB(SwigcptrBtPoint2PointConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtPoint2PointConstraint) GetPivotInB() BtVector3 {
	return _swig_wrap_btPoint2PointConstraint_getPivotInB(arg1)
}

func _swig_wrap_btPoint2PointConstraint_setParam__SWIG_0(SwigcptrBtPoint2PointConstraint, int, float32, int)

func (arg1 SwigcptrBtPoint2PointConstraint) SetParam__SWIG_0(arg2 int, arg3 float32, arg4 int) {
	_swig_wrap_btPoint2PointConstraint_setParam__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btPoint2PointConstraint_setParam__SWIG_1(SwigcptrBtPoint2PointConstraint, int, float32)

func (arg1 SwigcptrBtPoint2PointConstraint) SetParam__SWIG_1(arg2 int, arg3 float32) {
	_swig_wrap_btPoint2PointConstraint_setParam__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBtPoint2PointConstraint) SetParam(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetParam__SWIG_1(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetParam__SWIG_0(a[0].(int), a[1].(float32), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPoint2PointConstraint_getParam__SWIG_0(SwigcptrBtPoint2PointConstraint, int, int) float32

func (arg1 SwigcptrBtPoint2PointConstraint) GetParam__SWIG_0(arg2 int, arg3 int) float32 {
	return _swig_wrap_btPoint2PointConstraint_getParam__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btPoint2PointConstraint_getParam__SWIG_1(SwigcptrBtPoint2PointConstraint, int) float32

func (arg1 SwigcptrBtPoint2PointConstraint) GetParam__SWIG_1(arg2 int) float32 {
	return _swig_wrap_btPoint2PointConstraint_getParam__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtPoint2PointConstraint) GetParam(a ...interface{}) float32 {
	argc := len(a)
	if argc == 1 {
		return p.GetParam__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.GetParam__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPoint2PointConstraint_calculateSerializeBufferSize(SwigcptrBtPoint2PointConstraint) int

func (arg1 SwigcptrBtPoint2PointConstraint) CalculateSerializeBufferSize() int {
	return _swig_wrap_btPoint2PointConstraint_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btPoint2PointConstraint_serialize(SwigcptrBtPoint2PointConstraint, uintptr, uintptr) string

func (arg1 SwigcptrBtPoint2PointConstraint) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btPoint2PointConstraint_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btPoint2PointConstraint(uintptr)

func DeleteBtPoint2PointConstraint(arg1 BtPoint2PointConstraint) {
	_swig_wrap_delete_btPoint2PointConstraint(arg1.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraint_getFixedBody() SwigcptrBtRigidBody

func BtPoint2PointConstraintGetFixedBody() BtRigidBody {
	return _swig_wrap_btPoint2PointConstraint_getFixedBody()
}

func _swig_wrap_btPoint2PointConstraint_getOverrideNumSolverIterations(SwigcptrBtPoint2PointConstraint) int

func (_swig_base SwigcptrBtPoint2PointConstraint) GetOverrideNumSolverIterations() int {
	return _swig_wrap_btPoint2PointConstraint_getOverrideNumSolverIterations(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_setOverrideNumSolverIterations(SwigcptrBtPoint2PointConstraint, int)

func (_swig_base SwigcptrBtPoint2PointConstraint) SetOverrideNumSolverIterations(arg1 int) {
	_swig_wrap_btPoint2PointConstraint_setOverrideNumSolverIterations(_swig_base, arg1)
}

func _swig_wrap_btPoint2PointConstraint_setupSolverConstraint(SwigcptrBtPoint2PointConstraint, uintptr, int, int, float32)

func (_swig_base SwigcptrBtPoint2PointConstraint) SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32) {
	_swig_wrap_btPoint2PointConstraint_setupSolverConstraint(_swig_base, arg1.Swigcptr(), arg2, arg3, arg4)
}

func _swig_wrap_btPoint2PointConstraint_internalSetAppliedImpulse(SwigcptrBtPoint2PointConstraint, float32)

func (_swig_base SwigcptrBtPoint2PointConstraint) InternalSetAppliedImpulse(arg1 float32) {
	_swig_wrap_btPoint2PointConstraint_internalSetAppliedImpulse(_swig_base, arg1)
}

func _swig_wrap_btPoint2PointConstraint_internalGetAppliedImpulse(SwigcptrBtPoint2PointConstraint) float32

func (_swig_base SwigcptrBtPoint2PointConstraint) InternalGetAppliedImpulse() float32 {
	return _swig_wrap_btPoint2PointConstraint_internalGetAppliedImpulse(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_getBreakingImpulseThreshold(SwigcptrBtPoint2PointConstraint) float32

func (_swig_base SwigcptrBtPoint2PointConstraint) GetBreakingImpulseThreshold() float32 {
	return _swig_wrap_btPoint2PointConstraint_getBreakingImpulseThreshold(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_setBreakingImpulseThreshold(SwigcptrBtPoint2PointConstraint, float32)

func (_swig_base SwigcptrBtPoint2PointConstraint) SetBreakingImpulseThreshold(arg1 float32) {
	_swig_wrap_btPoint2PointConstraint_setBreakingImpulseThreshold(_swig_base, arg1)
}

func _swig_wrap_btPoint2PointConstraint_isEnabled(SwigcptrBtPoint2PointConstraint) bool

func (_swig_base SwigcptrBtPoint2PointConstraint) IsEnabled() bool {
	return _swig_wrap_btPoint2PointConstraint_isEnabled(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_setEnabled(SwigcptrBtPoint2PointConstraint, bool)

func (_swig_base SwigcptrBtPoint2PointConstraint) SetEnabled(arg1 bool) {
	_swig_wrap_btPoint2PointConstraint_setEnabled(_swig_base, arg1)
}

func _swig_wrap_btPoint2PointConstraint_solveConstraintObsolete(SwigcptrBtPoint2PointConstraint, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtPoint2PointConstraint) SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32) {
	_swig_wrap_btPoint2PointConstraint_solveConstraintObsolete(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btPoint2PointConstraint_getRigidBodyA__SWIG_0(SwigcptrBtPoint2PointConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtPoint2PointConstraint) GetRigidBodyA__SWIG_0() BtRigidBody {
	return _swig_wrap_btPoint2PointConstraint_getRigidBodyA__SWIG_0(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_getRigidBodyA__SWIG_1(SwigcptrBtPoint2PointConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtPoint2PointConstraint) GetRigidBodyA__SWIG_1() BtRigidBody {
	return _swig_wrap_btPoint2PointConstraint_getRigidBodyA__SWIG_1(_swig_base)
}

func (p SwigcptrBtPoint2PointConstraint) GetRigidBodyA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPoint2PointConstraint_getRigidBodyB__SWIG_0(SwigcptrBtPoint2PointConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtPoint2PointConstraint) GetRigidBodyB__SWIG_0() BtRigidBody {
	return _swig_wrap_btPoint2PointConstraint_getRigidBodyB__SWIG_0(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_getRigidBodyB__SWIG_1(SwigcptrBtPoint2PointConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtPoint2PointConstraint) GetRigidBodyB__SWIG_1() BtRigidBody {
	return _swig_wrap_btPoint2PointConstraint_getRigidBodyB__SWIG_1(_swig_base)
}

func (p SwigcptrBtPoint2PointConstraint) GetRigidBodyB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPoint2PointConstraint_getUserConstraintType(SwigcptrBtPoint2PointConstraint) int

func (_swig_base SwigcptrBtPoint2PointConstraint) GetUserConstraintType() int {
	return _swig_wrap_btPoint2PointConstraint_getUserConstraintType(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_setUserConstraintType(SwigcptrBtPoint2PointConstraint, int)

func (_swig_base SwigcptrBtPoint2PointConstraint) SetUserConstraintType(arg1 int) {
	_swig_wrap_btPoint2PointConstraint_setUserConstraintType(_swig_base, arg1)
}

func _swig_wrap_btPoint2PointConstraint_setUserConstraintId(SwigcptrBtPoint2PointConstraint, int)

func (_swig_base SwigcptrBtPoint2PointConstraint) SetUserConstraintId(arg1 int) {
	_swig_wrap_btPoint2PointConstraint_setUserConstraintId(_swig_base, arg1)
}

func _swig_wrap_btPoint2PointConstraint_getUserConstraintId(SwigcptrBtPoint2PointConstraint) int

func (_swig_base SwigcptrBtPoint2PointConstraint) GetUserConstraintId() int {
	return _swig_wrap_btPoint2PointConstraint_getUserConstraintId(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_setUserConstraintPtr(SwigcptrBtPoint2PointConstraint, uintptr)

func (_swig_base SwigcptrBtPoint2PointConstraint) SetUserConstraintPtr(arg1 uintptr) {
	_swig_wrap_btPoint2PointConstraint_setUserConstraintPtr(_swig_base, arg1)
}

func _swig_wrap_btPoint2PointConstraint_getUserConstraintPtr(SwigcptrBtPoint2PointConstraint) uintptr

func (_swig_base SwigcptrBtPoint2PointConstraint) GetUserConstraintPtr() uintptr {
	return _swig_wrap_btPoint2PointConstraint_getUserConstraintPtr(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_setJointFeedback(SwigcptrBtPoint2PointConstraint, uintptr)

func (_swig_base SwigcptrBtPoint2PointConstraint) SetJointFeedback(arg1 BtJointFeedback) {
	_swig_wrap_btPoint2PointConstraint_setJointFeedback(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraint_getJointFeedback__SWIG_0(SwigcptrBtPoint2PointConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtPoint2PointConstraint) GetJointFeedback__SWIG_0() BtJointFeedback {
	return _swig_wrap_btPoint2PointConstraint_getJointFeedback__SWIG_0(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_getJointFeedback__SWIG_1(SwigcptrBtPoint2PointConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtPoint2PointConstraint) GetJointFeedback__SWIG_1() BtJointFeedback {
	return _swig_wrap_btPoint2PointConstraint_getJointFeedback__SWIG_1(_swig_base)
}

func (p SwigcptrBtPoint2PointConstraint) GetJointFeedback(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetJointFeedback__SWIG_0()
	}
	if argc == 0 {
		return p.GetJointFeedback__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btPoint2PointConstraint_getUid(SwigcptrBtPoint2PointConstraint) int

func (_swig_base SwigcptrBtPoint2PointConstraint) GetUid() int {
	return _swig_wrap_btPoint2PointConstraint_getUid(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_needsFeedback(SwigcptrBtPoint2PointConstraint) bool

func (_swig_base SwigcptrBtPoint2PointConstraint) NeedsFeedback() bool {
	return _swig_wrap_btPoint2PointConstraint_needsFeedback(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_enableFeedback(SwigcptrBtPoint2PointConstraint, bool)

func (_swig_base SwigcptrBtPoint2PointConstraint) EnableFeedback(arg1 bool) {
	_swig_wrap_btPoint2PointConstraint_enableFeedback(_swig_base, arg1)
}

func _swig_wrap_btPoint2PointConstraint_getAppliedImpulse(SwigcptrBtPoint2PointConstraint) float32

func (_swig_base SwigcptrBtPoint2PointConstraint) GetAppliedImpulse() float32 {
	return _swig_wrap_btPoint2PointConstraint_getAppliedImpulse(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_getConstraintType(SwigcptrBtPoint2PointConstraint) BtTypedConstraintType

func (_swig_base SwigcptrBtPoint2PointConstraint) GetConstraintType() BtTypedConstraintType {
	return _swig_wrap_btPoint2PointConstraint_getConstraintType(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_setDbgDrawSize(SwigcptrBtPoint2PointConstraint, float32)

func (_swig_base SwigcptrBtPoint2PointConstraint) SetDbgDrawSize(arg1 float32) {
	_swig_wrap_btPoint2PointConstraint_setDbgDrawSize(_swig_base, arg1)
}

func _swig_wrap_btPoint2PointConstraint_getDbgDrawSize(SwigcptrBtPoint2PointConstraint) float32

func (_swig_base SwigcptrBtPoint2PointConstraint) GetDbgDrawSize() float32 {
	return _swig_wrap_btPoint2PointConstraint_getDbgDrawSize(_swig_base)
}

func _swig_wrap_SetbtPoint2PointConstraint_M_objectType(SwigcptrBtPoint2PointConstraint, int)

func (_swig_base SwigcptrBtPoint2PointConstraint) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtPoint2PointConstraint_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtPoint2PointConstraint_M_objectType(SwigcptrBtPoint2PointConstraint) int

func (_swig_base SwigcptrBtPoint2PointConstraint) GetM_objectType() int {
	return _swig_wrap_GetbtPoint2PointConstraint_M_objectType(_swig_base)
}

func _swig_wrap_btPoint2PointConstraint_getObjectType(SwigcptrBtPoint2PointConstraint) int

func (_swig_base SwigcptrBtPoint2PointConstraint) GetObjectType() int {
	return _swig_wrap_btPoint2PointConstraint_getObjectType(_swig_base)
}

func (p SwigcptrBtPoint2PointConstraint) SwigIsBtTypedConstraint() {
}

func (p SwigcptrBtPoint2PointConstraint) SwigGetBtTypedConstraint() BtTypedConstraint {
	return SwigcptrBtTypedConstraint(p.Swigcptr())
}

func (p SwigcptrBtPoint2PointConstraint) SwigIsBtTypedObject() {
}

func (p SwigcptrBtPoint2PointConstraint) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtPoint2PointConstraint interface {
	Swigcptr() uintptr
	SwigIsBtPoint2PointConstraint()
	SetM_useSolveConstraintObsolete(arg2 bool)
	GetM_useSolveConstraintObsolete() bool
	SetM_setting(arg2 BtConstraintSetting)
	GetM_setting() BtConstraintSetting
	BuildJacobian()
	GetInfo1(arg2 BtConstraintInfo1)
	GetInfo1NonVirtual(arg2 BtConstraintInfo1)
	GetInfo2(arg2 BtConstraintInfo2)
	GetInfo2NonVirtual(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform)
	UpdateRHS(arg2 float32)
	SetPivotA(arg2 BtVector3)
	SetPivotB(arg2 BtVector3)
	GetPivotInA() BtVector3
	GetPivotInB() BtVector3
	SetParam(a ...interface{})
	GetParam(a ...interface{}) float32
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetOverrideNumSolverIterations() int
	SetOverrideNumSolverIterations(arg1 int)
	SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32)
	InternalSetAppliedImpulse(arg1 float32)
	InternalGetAppliedImpulse() float32
	GetBreakingImpulseThreshold() float32
	SetBreakingImpulseThreshold(arg1 float32)
	IsEnabled() bool
	SetEnabled(arg1 bool)
	SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32)
	GetRigidBodyA(a ...interface{}) interface{}
	GetRigidBodyB(a ...interface{}) interface{}
	GetUserConstraintType() int
	SetUserConstraintType(arg1 int)
	SetUserConstraintId(arg1 int)
	GetUserConstraintId() int
	SetUserConstraintPtr(arg1 uintptr)
	GetUserConstraintPtr() uintptr
	SetJointFeedback(arg1 BtJointFeedback)
	GetJointFeedback(a ...interface{}) interface{}
	GetUid() int
	NeedsFeedback() bool
	EnableFeedback(arg1 bool)
	GetAppliedImpulse() float32
	GetConstraintType() BtTypedConstraintType
	SetDbgDrawSize(arg1 float32)
	GetDbgDrawSize() float32
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtTypedConstraint()
	SwigGetBtTypedConstraint() BtTypedConstraint
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

type SwigcptrBtPoint2PointConstraintFloatData uintptr

func (p SwigcptrBtPoint2PointConstraintFloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtPoint2PointConstraintFloatData) SwigIsBtPoint2PointConstraintFloatData() {
}

func _swig_wrap_btPoint2PointConstraintFloatData_m_typeConstraintData_set(SwigcptrBtPoint2PointConstraintFloatData, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraintFloatData) SetM_typeConstraintData(arg2 BtTypedConstraintData) {
	_swig_wrap_btPoint2PointConstraintFloatData_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraintFloatData_m_typeConstraintData_get(SwigcptrBtPoint2PointConstraintFloatData) SwigcptrBtTypedConstraintData

func (arg1 SwigcptrBtPoint2PointConstraintFloatData) GetM_typeConstraintData() BtTypedConstraintData {
	return _swig_wrap_btPoint2PointConstraintFloatData_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btPoint2PointConstraintFloatData_m_pivotInA_set(SwigcptrBtPoint2PointConstraintFloatData, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraintFloatData) SetM_pivotInA(arg2 BtVector3FloatData) {
	_swig_wrap_btPoint2PointConstraintFloatData_m_pivotInA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraintFloatData_m_pivotInA_get(SwigcptrBtPoint2PointConstraintFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtPoint2PointConstraintFloatData) GetM_pivotInA() BtVector3FloatData {
	return _swig_wrap_btPoint2PointConstraintFloatData_m_pivotInA_get(arg1)
}

func _swig_wrap_btPoint2PointConstraintFloatData_m_pivotInB_set(SwigcptrBtPoint2PointConstraintFloatData, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraintFloatData) SetM_pivotInB(arg2 BtVector3FloatData) {
	_swig_wrap_btPoint2PointConstraintFloatData_m_pivotInB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraintFloatData_m_pivotInB_get(SwigcptrBtPoint2PointConstraintFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtPoint2PointConstraintFloatData) GetM_pivotInB() BtVector3FloatData {
	return _swig_wrap_btPoint2PointConstraintFloatData_m_pivotInB_get(arg1)
}

func _swig_wrap_new_btPoint2PointConstraintFloatData() SwigcptrBtPoint2PointConstraintFloatData

func NewBtPoint2PointConstraintFloatData() BtPoint2PointConstraintFloatData {
	return _swig_wrap_new_btPoint2PointConstraintFloatData()
}

func _swig_wrap_delete_btPoint2PointConstraintFloatData(uintptr)

func DeleteBtPoint2PointConstraintFloatData(arg1 BtPoint2PointConstraintFloatData) {
	_swig_wrap_delete_btPoint2PointConstraintFloatData(arg1.Swigcptr())
}

type BtPoint2PointConstraintFloatData interface {
	Swigcptr() uintptr
	SwigIsBtPoint2PointConstraintFloatData()
	SetM_typeConstraintData(arg2 BtTypedConstraintData)
	GetM_typeConstraintData() BtTypedConstraintData
	SetM_pivotInA(arg2 BtVector3FloatData)
	GetM_pivotInA() BtVector3FloatData
	SetM_pivotInB(arg2 BtVector3FloatData)
	GetM_pivotInB() BtVector3FloatData
}

type SwigcptrBtPoint2PointConstraintDoubleData2 uintptr

func (p SwigcptrBtPoint2PointConstraintDoubleData2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtPoint2PointConstraintDoubleData2) SwigIsBtPoint2PointConstraintDoubleData2() {
}

func _swig_wrap_btPoint2PointConstraintDoubleData2_m_typeConstraintData_set(SwigcptrBtPoint2PointConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData2) SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData) {
	_swig_wrap_btPoint2PointConstraintDoubleData2_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraintDoubleData2_m_typeConstraintData_get(SwigcptrBtPoint2PointConstraintDoubleData2) SwigcptrBtTypedConstraintDoubleData

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData2) GetM_typeConstraintData() BtTypedConstraintDoubleData {
	return _swig_wrap_btPoint2PointConstraintDoubleData2_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btPoint2PointConstraintDoubleData2_m_pivotInA_set(SwigcptrBtPoint2PointConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData2) SetM_pivotInA(arg2 BtVector3DoubleData) {
	_swig_wrap_btPoint2PointConstraintDoubleData2_m_pivotInA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraintDoubleData2_m_pivotInA_get(SwigcptrBtPoint2PointConstraintDoubleData2) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData2) GetM_pivotInA() BtVector3DoubleData {
	return _swig_wrap_btPoint2PointConstraintDoubleData2_m_pivotInA_get(arg1)
}

func _swig_wrap_btPoint2PointConstraintDoubleData2_m_pivotInB_set(SwigcptrBtPoint2PointConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData2) SetM_pivotInB(arg2 BtVector3DoubleData) {
	_swig_wrap_btPoint2PointConstraintDoubleData2_m_pivotInB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraintDoubleData2_m_pivotInB_get(SwigcptrBtPoint2PointConstraintDoubleData2) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData2) GetM_pivotInB() BtVector3DoubleData {
	return _swig_wrap_btPoint2PointConstraintDoubleData2_m_pivotInB_get(arg1)
}

func _swig_wrap_new_btPoint2PointConstraintDoubleData2() SwigcptrBtPoint2PointConstraintDoubleData2

func NewBtPoint2PointConstraintDoubleData2() BtPoint2PointConstraintDoubleData2 {
	return _swig_wrap_new_btPoint2PointConstraintDoubleData2()
}

func _swig_wrap_delete_btPoint2PointConstraintDoubleData2(uintptr)

func DeleteBtPoint2PointConstraintDoubleData2(arg1 BtPoint2PointConstraintDoubleData2) {
	_swig_wrap_delete_btPoint2PointConstraintDoubleData2(arg1.Swigcptr())
}

type BtPoint2PointConstraintDoubleData2 interface {
	Swigcptr() uintptr
	SwigIsBtPoint2PointConstraintDoubleData2()
	SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData)
	GetM_typeConstraintData() BtTypedConstraintDoubleData
	SetM_pivotInA(arg2 BtVector3DoubleData)
	GetM_pivotInA() BtVector3DoubleData
	SetM_pivotInB(arg2 BtVector3DoubleData)
	GetM_pivotInB() BtVector3DoubleData
}

type SwigcptrBtPoint2PointConstraintDoubleData uintptr

func (p SwigcptrBtPoint2PointConstraintDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtPoint2PointConstraintDoubleData) SwigIsBtPoint2PointConstraintDoubleData() {
}

func _swig_wrap_btPoint2PointConstraintDoubleData_m_typeConstraintData_set(SwigcptrBtPoint2PointConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData) SetM_typeConstraintData(arg2 BtTypedConstraintData) {
	_swig_wrap_btPoint2PointConstraintDoubleData_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraintDoubleData_m_typeConstraintData_get(SwigcptrBtPoint2PointConstraintDoubleData) SwigcptrBtTypedConstraintData

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData) GetM_typeConstraintData() BtTypedConstraintData {
	return _swig_wrap_btPoint2PointConstraintDoubleData_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btPoint2PointConstraintDoubleData_m_pivotInA_set(SwigcptrBtPoint2PointConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData) SetM_pivotInA(arg2 BtVector3DoubleData) {
	_swig_wrap_btPoint2PointConstraintDoubleData_m_pivotInA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraintDoubleData_m_pivotInA_get(SwigcptrBtPoint2PointConstraintDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData) GetM_pivotInA() BtVector3DoubleData {
	return _swig_wrap_btPoint2PointConstraintDoubleData_m_pivotInA_get(arg1)
}

func _swig_wrap_btPoint2PointConstraintDoubleData_m_pivotInB_set(SwigcptrBtPoint2PointConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData) SetM_pivotInB(arg2 BtVector3DoubleData) {
	_swig_wrap_btPoint2PointConstraintDoubleData_m_pivotInB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btPoint2PointConstraintDoubleData_m_pivotInB_get(SwigcptrBtPoint2PointConstraintDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtPoint2PointConstraintDoubleData) GetM_pivotInB() BtVector3DoubleData {
	return _swig_wrap_btPoint2PointConstraintDoubleData_m_pivotInB_get(arg1)
}

func _swig_wrap_new_btPoint2PointConstraintDoubleData() SwigcptrBtPoint2PointConstraintDoubleData

func NewBtPoint2PointConstraintDoubleData() BtPoint2PointConstraintDoubleData {
	return _swig_wrap_new_btPoint2PointConstraintDoubleData()
}

func _swig_wrap_delete_btPoint2PointConstraintDoubleData(uintptr)

func DeleteBtPoint2PointConstraintDoubleData(arg1 BtPoint2PointConstraintDoubleData) {
	_swig_wrap_delete_btPoint2PointConstraintDoubleData(arg1.Swigcptr())
}

type BtPoint2PointConstraintDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtPoint2PointConstraintDoubleData()
	SetM_typeConstraintData(arg2 BtTypedConstraintData)
	GetM_typeConstraintData() BtTypedConstraintData
	SetM_pivotInA(arg2 BtVector3DoubleData)
	GetM_pivotInA() BtVector3DoubleData
	SetM_pivotInB(arg2 BtVector3DoubleData)
	GetM_pivotInB() BtVector3DoubleData
}

const X_BT_USE_CENTER_LIMIT_ int = 1
const BtHingeConstraintDataName string = "btHingeConstraintFloatData"

type BtHingeFlags int

func _swig_getBT_HINGE_FLAGS_CFM_STOP() BtHingeFlags

var BT_HINGE_FLAGS_CFM_STOP BtHingeFlags = _swig_getBT_HINGE_FLAGS_CFM_STOP()

func _swig_getBT_HINGE_FLAGS_ERP_STOP() BtHingeFlags

var BT_HINGE_FLAGS_ERP_STOP BtHingeFlags = _swig_getBT_HINGE_FLAGS_ERP_STOP()

func _swig_getBT_HINGE_FLAGS_CFM_NORM() BtHingeFlags

var BT_HINGE_FLAGS_CFM_NORM BtHingeFlags = _swig_getBT_HINGE_FLAGS_CFM_NORM()

type SwigcptrBtHingeConstraint uintptr

func (p SwigcptrBtHingeConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtHingeConstraint) SwigIsBtHingeConstraint() {
}

func _swig_wrap_new_btHingeConstraint__SWIG_0(uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, bool) SwigcptrBtHingeConstraint

func NewBtHingeConstraint__SWIG_0(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3, arg7 bool) BtHingeConstraint {
	return _swig_wrap_new_btHingeConstraint__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7)
}

func _swig_wrap_new_btHingeConstraint__SWIG_1(uintptr, uintptr, uintptr, uintptr, uintptr, uintptr) SwigcptrBtHingeConstraint

func NewBtHingeConstraint__SWIG_1(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3) BtHingeConstraint {
	return _swig_wrap_new_btHingeConstraint__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_new_btHingeConstraint__SWIG_2(uintptr, uintptr, uintptr, bool) SwigcptrBtHingeConstraint

func NewBtHingeConstraint__SWIG_2(arg1 BtRigidBody, arg2 BtVector3, arg3 BtVector3, arg4 bool) BtHingeConstraint {
	return _swig_wrap_new_btHingeConstraint__SWIG_2(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_new_btHingeConstraint__SWIG_3(uintptr, uintptr, uintptr) SwigcptrBtHingeConstraint

func NewBtHingeConstraint__SWIG_3(arg1 BtRigidBody, arg2 BtVector3, arg3 BtVector3) BtHingeConstraint {
	return _swig_wrap_new_btHingeConstraint__SWIG_3(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_new_btHingeConstraint__SWIG_4(uintptr, uintptr, uintptr, uintptr, bool) SwigcptrBtHingeConstraint

func NewBtHingeConstraint__SWIG_4(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtTransform, arg4 BtTransform, arg5 bool) BtHingeConstraint {
	return _swig_wrap_new_btHingeConstraint__SWIG_4(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_new_btHingeConstraint__SWIG_5(uintptr, uintptr, uintptr, uintptr) SwigcptrBtHingeConstraint

func NewBtHingeConstraint__SWIG_5(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtTransform, arg4 BtTransform) BtHingeConstraint {
	return _swig_wrap_new_btHingeConstraint__SWIG_5(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_new_btHingeConstraint__SWIG_6(uintptr, uintptr, bool) SwigcptrBtHingeConstraint

func NewBtHingeConstraint__SWIG_6(arg1 BtRigidBody, arg2 BtTransform, arg3 bool) BtHingeConstraint {
	return _swig_wrap_new_btHingeConstraint__SWIG_6(arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_new_btHingeConstraint__SWIG_7(uintptr, uintptr) SwigcptrBtHingeConstraint

func NewBtHingeConstraint__SWIG_7(arg1 BtRigidBody, arg2 BtTransform) BtHingeConstraint {
	return _swig_wrap_new_btHingeConstraint__SWIG_7(arg1.Swigcptr(), arg2.Swigcptr())
}

func NewBtHingeConstraint(a ...interface{}) BtHingeConstraint {
	argc := len(a)
	if argc == 2 {
		return NewBtHingeConstraint__SWIG_7(a[0].(BtRigidBody), a[1].(BtTransform))
	}
	if argc == 3 {
		if _, ok := a[1].(SwigcptrBtTransform); !ok {
			goto check_2
		}
		if _, ok := a[2].(bool); !ok {
			goto check_2
		}
		return NewBtHingeConstraint__SWIG_6(a[0].(BtRigidBody), a[1].(BtTransform), a[2].(bool))
	}
check_2:
	if argc == 3 {
		return NewBtHingeConstraint__SWIG_3(a[0].(BtRigidBody), a[1].(BtVector3), a[2].(BtVector3))
	}
	if argc == 4 {
		if _, ok := a[1].(SwigcptrBtVector3); !ok {
			goto check_4
		}
		if _, ok := a[2].(SwigcptrBtVector3); !ok {
			goto check_4
		}
		if _, ok := a[3].(bool); !ok {
			goto check_4
		}
		return NewBtHingeConstraint__SWIG_2(a[0].(BtRigidBody), a[1].(BtVector3), a[2].(BtVector3), a[3].(bool))
	}
check_4:
	if argc == 4 {
		return NewBtHingeConstraint__SWIG_5(a[0].(BtRigidBody), a[1].(BtRigidBody), a[2].(BtTransform), a[3].(BtTransform))
	}
	if argc == 5 {
		return NewBtHingeConstraint__SWIG_4(a[0].(BtRigidBody), a[1].(BtRigidBody), a[2].(BtTransform), a[3].(BtTransform), a[4].(bool))
	}
	if argc == 6 {
		return NewBtHingeConstraint__SWIG_1(a[0].(BtRigidBody), a[1].(BtRigidBody), a[2].(BtVector3), a[3].(BtVector3), a[4].(BtVector3), a[5].(BtVector3))
	}
	if argc == 7 {
		return NewBtHingeConstraint__SWIG_0(a[0].(BtRigidBody), a[1].(BtRigidBody), a[2].(BtVector3), a[3].(BtVector3), a[4].(BtVector3), a[5].(BtVector3), a[6].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHingeConstraint_buildJacobian(SwigcptrBtHingeConstraint)

func (arg1 SwigcptrBtHingeConstraint) BuildJacobian() {
	_swig_wrap_btHingeConstraint_buildJacobian(arg1)
}

func _swig_wrap_btHingeConstraint_getInfo1(SwigcptrBtHingeConstraint, uintptr)

func (arg1 SwigcptrBtHingeConstraint) GetInfo1(arg2 BtConstraintInfo1) {
	_swig_wrap_btHingeConstraint_getInfo1(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraint_getInfo1NonVirtual(SwigcptrBtHingeConstraint, uintptr)

func (arg1 SwigcptrBtHingeConstraint) GetInfo1NonVirtual(arg2 BtConstraintInfo1) {
	_swig_wrap_btHingeConstraint_getInfo1NonVirtual(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraint_getInfo2(SwigcptrBtHingeConstraint, uintptr)

func (arg1 SwigcptrBtHingeConstraint) GetInfo2(arg2 BtConstraintInfo2) {
	_swig_wrap_btHingeConstraint_getInfo2(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraint_getInfo2NonVirtual(SwigcptrBtHingeConstraint, uintptr, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtHingeConstraint) GetInfo2NonVirtual(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btHingeConstraint_getInfo2NonVirtual(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btHingeConstraint_getInfo2Internal(SwigcptrBtHingeConstraint, uintptr, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtHingeConstraint) GetInfo2Internal(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btHingeConstraint_getInfo2Internal(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btHingeConstraint_getInfo2InternalUsingFrameOffset(SwigcptrBtHingeConstraint, uintptr, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtHingeConstraint) GetInfo2InternalUsingFrameOffset(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtVector3, arg6 BtVector3) {
	_swig_wrap_btHingeConstraint_getInfo2InternalUsingFrameOffset(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btHingeConstraint_updateRHS(SwigcptrBtHingeConstraint, float32)

func (arg1 SwigcptrBtHingeConstraint) UpdateRHS(arg2 float32) {
	_swig_wrap_btHingeConstraint_updateRHS(arg1, arg2)
}

func _swig_wrap_btHingeConstraint_getRigidBodyA__SWIG_0(SwigcptrBtHingeConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtHingeConstraint) GetRigidBodyA__SWIG_0() BtRigidBody {
	return _swig_wrap_btHingeConstraint_getRigidBodyA__SWIG_0(arg1)
}

func _swig_wrap_btHingeConstraint_getRigidBodyB__SWIG_0(SwigcptrBtHingeConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtHingeConstraint) GetRigidBodyB__SWIG_0() BtRigidBody {
	return _swig_wrap_btHingeConstraint_getRigidBodyB__SWIG_0(arg1)
}

func _swig_wrap_btHingeConstraint_getRigidBodyA__SWIG_1(SwigcptrBtHingeConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtHingeConstraint) GetRigidBodyA__SWIG_1() BtRigidBody {
	return _swig_wrap_btHingeConstraint_getRigidBodyA__SWIG_1(arg1)
}

func (p SwigcptrBtHingeConstraint) GetRigidBodyA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHingeConstraint_getRigidBodyB__SWIG_1(SwigcptrBtHingeConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtHingeConstraint) GetRigidBodyB__SWIG_1() BtRigidBody {
	return _swig_wrap_btHingeConstraint_getRigidBodyB__SWIG_1(arg1)
}

func (p SwigcptrBtHingeConstraint) GetRigidBodyB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHingeConstraint_getFrameOffsetA(SwigcptrBtHingeConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtHingeConstraint) GetFrameOffsetA() BtTransform {
	return _swig_wrap_btHingeConstraint_getFrameOffsetA(arg1)
}

func _swig_wrap_btHingeConstraint_getFrameOffsetB(SwigcptrBtHingeConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtHingeConstraint) GetFrameOffsetB() BtTransform {
	return _swig_wrap_btHingeConstraint_getFrameOffsetB(arg1)
}

func _swig_wrap_btHingeConstraint_setFrames(SwigcptrBtHingeConstraint, uintptr, uintptr)

func (arg1 SwigcptrBtHingeConstraint) SetFrames(arg2 BtTransform, arg3 BtTransform) {
	_swig_wrap_btHingeConstraint_setFrames(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btHingeConstraint_setAngularOnly(SwigcptrBtHingeConstraint, bool)

func (arg1 SwigcptrBtHingeConstraint) SetAngularOnly(arg2 bool) {
	_swig_wrap_btHingeConstraint_setAngularOnly(arg1, arg2)
}

func _swig_wrap_btHingeConstraint_enableAngularMotor(SwigcptrBtHingeConstraint, bool, float32, float32)

func (arg1 SwigcptrBtHingeConstraint) EnableAngularMotor(arg2 bool, arg3 float32, arg4 float32) {
	_swig_wrap_btHingeConstraint_enableAngularMotor(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btHingeConstraint_enableMotor(SwigcptrBtHingeConstraint, bool)

func (arg1 SwigcptrBtHingeConstraint) EnableMotor(arg2 bool) {
	_swig_wrap_btHingeConstraint_enableMotor(arg1, arg2)
}

func _swig_wrap_btHingeConstraint_setMaxMotorImpulse(SwigcptrBtHingeConstraint, float32)

func (arg1 SwigcptrBtHingeConstraint) SetMaxMotorImpulse(arg2 float32) {
	_swig_wrap_btHingeConstraint_setMaxMotorImpulse(arg1, arg2)
}

func _swig_wrap_btHingeConstraint_setMotorTarget__SWIG_0(SwigcptrBtHingeConstraint, uintptr, float32)

func (arg1 SwigcptrBtHingeConstraint) SetMotorTarget__SWIG_0(arg2 BtQuaternion, arg3 float32) {
	_swig_wrap_btHingeConstraint_setMotorTarget__SWIG_0(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btHingeConstraint_setMotorTarget__SWIG_1(SwigcptrBtHingeConstraint, float32, float32)

func (arg1 SwigcptrBtHingeConstraint) SetMotorTarget__SWIG_1(arg2 float32, arg3 float32) {
	_swig_wrap_btHingeConstraint_setMotorTarget__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBtHingeConstraint) SetMotorTarget(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(SwigcptrBtQuaternion); !ok {
			goto check_1
		}
		p.SetMotorTarget__SWIG_0(a[0].(BtQuaternion), a[1].(float32))
		return
	}
check_1:
	if argc == 2 {
		p.SetMotorTarget__SWIG_1(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHingeConstraint_setLimit__SWIG_0(SwigcptrBtHingeConstraint, float32, float32, float32, float32, float32)

func (arg1 SwigcptrBtHingeConstraint) SetLimit__SWIG_0(arg2 float32, arg3 float32, arg4 float32, arg5 float32, arg6 float32) {
	_swig_wrap_btHingeConstraint_setLimit__SWIG_0(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_btHingeConstraint_setLimit__SWIG_1(SwigcptrBtHingeConstraint, float32, float32, float32, float32)

func (arg1 SwigcptrBtHingeConstraint) SetLimit__SWIG_1(arg2 float32, arg3 float32, arg4 float32, arg5 float32) {
	_swig_wrap_btHingeConstraint_setLimit__SWIG_1(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_btHingeConstraint_setLimit__SWIG_2(SwigcptrBtHingeConstraint, float32, float32, float32)

func (arg1 SwigcptrBtHingeConstraint) SetLimit__SWIG_2(arg2 float32, arg3 float32, arg4 float32) {
	_swig_wrap_btHingeConstraint_setLimit__SWIG_2(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btHingeConstraint_setLimit__SWIG_3(SwigcptrBtHingeConstraint, float32, float32)

func (arg1 SwigcptrBtHingeConstraint) SetLimit__SWIG_3(arg2 float32, arg3 float32) {
	_swig_wrap_btHingeConstraint_setLimit__SWIG_3(arg1, arg2, arg3)
}

func (p SwigcptrBtHingeConstraint) SetLimit(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetLimit__SWIG_3(a[0].(float32), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetLimit__SWIG_2(a[0].(float32), a[1].(float32), a[2].(float32))
		return
	}
	if argc == 4 {
		p.SetLimit__SWIG_1(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32))
		return
	}
	if argc == 5 {
		p.SetLimit__SWIG_0(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32), a[4].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHingeConstraint_setAxis(SwigcptrBtHingeConstraint, uintptr)

func (arg1 SwigcptrBtHingeConstraint) SetAxis(arg2 BtVector3) {
	_swig_wrap_btHingeConstraint_setAxis(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraint_getLowerLimit(SwigcptrBtHingeConstraint) float32

func (arg1 SwigcptrBtHingeConstraint) GetLowerLimit() float32 {
	return _swig_wrap_btHingeConstraint_getLowerLimit(arg1)
}

func _swig_wrap_btHingeConstraint_getUpperLimit(SwigcptrBtHingeConstraint) float32

func (arg1 SwigcptrBtHingeConstraint) GetUpperLimit() float32 {
	return _swig_wrap_btHingeConstraint_getUpperLimit(arg1)
}

func _swig_wrap_btHingeConstraint_getHingeAngle__SWIG_0(SwigcptrBtHingeConstraint) float32

func (arg1 SwigcptrBtHingeConstraint) GetHingeAngle__SWIG_0() float32 {
	return _swig_wrap_btHingeConstraint_getHingeAngle__SWIG_0(arg1)
}

func _swig_wrap_btHingeConstraint_getHingeAngle__SWIG_1(SwigcptrBtHingeConstraint, uintptr, uintptr) float32

func (arg1 SwigcptrBtHingeConstraint) GetHingeAngle__SWIG_1(arg2 BtTransform, arg3 BtTransform) float32 {
	return _swig_wrap_btHingeConstraint_getHingeAngle__SWIG_1(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func (p SwigcptrBtHingeConstraint) GetHingeAngle(a ...interface{}) float32 {
	argc := len(a)
	if argc == 0 {
		return p.GetHingeAngle__SWIG_0()
	}
	if argc == 2 {
		return p.GetHingeAngle__SWIG_1(a[0].(BtTransform), a[1].(BtTransform))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHingeConstraint_testLimit(SwigcptrBtHingeConstraint, uintptr, uintptr)

func (arg1 SwigcptrBtHingeConstraint) TestLimit(arg2 BtTransform, arg3 BtTransform) {
	_swig_wrap_btHingeConstraint_testLimit(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btHingeConstraint_getAFrame__SWIG_0(SwigcptrBtHingeConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtHingeConstraint) GetAFrame__SWIG_0() BtTransform {
	return _swig_wrap_btHingeConstraint_getAFrame__SWIG_0(arg1)
}

func _swig_wrap_btHingeConstraint_getBFrame__SWIG_0(SwigcptrBtHingeConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtHingeConstraint) GetBFrame__SWIG_0() BtTransform {
	return _swig_wrap_btHingeConstraint_getBFrame__SWIG_0(arg1)
}

func _swig_wrap_btHingeConstraint_getAFrame__SWIG_1(SwigcptrBtHingeConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtHingeConstraint) GetAFrame__SWIG_1() BtTransform {
	return _swig_wrap_btHingeConstraint_getAFrame__SWIG_1(arg1)
}

func (p SwigcptrBtHingeConstraint) GetAFrame(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetAFrame__SWIG_0()
	}
	if argc == 0 {
		return p.GetAFrame__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHingeConstraint_getBFrame__SWIG_1(SwigcptrBtHingeConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtHingeConstraint) GetBFrame__SWIG_1() BtTransform {
	return _swig_wrap_btHingeConstraint_getBFrame__SWIG_1(arg1)
}

func (p SwigcptrBtHingeConstraint) GetBFrame(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetBFrame__SWIG_0()
	}
	if argc == 0 {
		return p.GetBFrame__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHingeConstraint_getSolveLimit(SwigcptrBtHingeConstraint) int

func (arg1 SwigcptrBtHingeConstraint) GetSolveLimit() int {
	return _swig_wrap_btHingeConstraint_getSolveLimit(arg1)
}

func _swig_wrap_btHingeConstraint_getLimitSign(SwigcptrBtHingeConstraint) float32

func (arg1 SwigcptrBtHingeConstraint) GetLimitSign() float32 {
	return _swig_wrap_btHingeConstraint_getLimitSign(arg1)
}

func _swig_wrap_btHingeConstraint_getAngularOnly(SwigcptrBtHingeConstraint) bool

func (arg1 SwigcptrBtHingeConstraint) GetAngularOnly() bool {
	return _swig_wrap_btHingeConstraint_getAngularOnly(arg1)
}

func _swig_wrap_btHingeConstraint_getEnableAngularMotor(SwigcptrBtHingeConstraint) bool

func (arg1 SwigcptrBtHingeConstraint) GetEnableAngularMotor() bool {
	return _swig_wrap_btHingeConstraint_getEnableAngularMotor(arg1)
}

func _swig_wrap_btHingeConstraint_getMotorTargetVelosity(SwigcptrBtHingeConstraint) float32

func (arg1 SwigcptrBtHingeConstraint) GetMotorTargetVelosity() float32 {
	return _swig_wrap_btHingeConstraint_getMotorTargetVelosity(arg1)
}

func _swig_wrap_btHingeConstraint_getMaxMotorImpulse(SwigcptrBtHingeConstraint) float32

func (arg1 SwigcptrBtHingeConstraint) GetMaxMotorImpulse() float32 {
	return _swig_wrap_btHingeConstraint_getMaxMotorImpulse(arg1)
}

func _swig_wrap_btHingeConstraint_getUseFrameOffset(SwigcptrBtHingeConstraint) bool

func (arg1 SwigcptrBtHingeConstraint) GetUseFrameOffset() bool {
	return _swig_wrap_btHingeConstraint_getUseFrameOffset(arg1)
}

func _swig_wrap_btHingeConstraint_setUseFrameOffset(SwigcptrBtHingeConstraint, bool)

func (arg1 SwigcptrBtHingeConstraint) SetUseFrameOffset(arg2 bool) {
	_swig_wrap_btHingeConstraint_setUseFrameOffset(arg1, arg2)
}

func _swig_wrap_btHingeConstraint_setParam__SWIG_0(SwigcptrBtHingeConstraint, int, float32, int)

func (arg1 SwigcptrBtHingeConstraint) SetParam__SWIG_0(arg2 int, arg3 float32, arg4 int) {
	_swig_wrap_btHingeConstraint_setParam__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btHingeConstraint_setParam__SWIG_1(SwigcptrBtHingeConstraint, int, float32)

func (arg1 SwigcptrBtHingeConstraint) SetParam__SWIG_1(arg2 int, arg3 float32) {
	_swig_wrap_btHingeConstraint_setParam__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBtHingeConstraint) SetParam(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetParam__SWIG_1(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetParam__SWIG_0(a[0].(int), a[1].(float32), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHingeConstraint_getParam__SWIG_0(SwigcptrBtHingeConstraint, int, int) float32

func (arg1 SwigcptrBtHingeConstraint) GetParam__SWIG_0(arg2 int, arg3 int) float32 {
	return _swig_wrap_btHingeConstraint_getParam__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btHingeConstraint_getParam__SWIG_1(SwigcptrBtHingeConstraint, int) float32

func (arg1 SwigcptrBtHingeConstraint) GetParam__SWIG_1(arg2 int) float32 {
	return _swig_wrap_btHingeConstraint_getParam__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtHingeConstraint) GetParam(a ...interface{}) float32 {
	argc := len(a)
	if argc == 1 {
		return p.GetParam__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.GetParam__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHingeConstraint_calculateSerializeBufferSize(SwigcptrBtHingeConstraint) int

func (arg1 SwigcptrBtHingeConstraint) CalculateSerializeBufferSize() int {
	return _swig_wrap_btHingeConstraint_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btHingeConstraint_serialize(SwigcptrBtHingeConstraint, uintptr, uintptr) string

func (arg1 SwigcptrBtHingeConstraint) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btHingeConstraint_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btHingeConstraint(uintptr)

func DeleteBtHingeConstraint(arg1 BtHingeConstraint) {
	_swig_wrap_delete_btHingeConstraint(arg1.Swigcptr())
}

func _swig_wrap_btHingeConstraint_getFixedBody() SwigcptrBtRigidBody

func BtHingeConstraintGetFixedBody() BtRigidBody {
	return _swig_wrap_btHingeConstraint_getFixedBody()
}

func _swig_wrap_btHingeConstraint_getOverrideNumSolverIterations(SwigcptrBtHingeConstraint) int

func (_swig_base SwigcptrBtHingeConstraint) GetOverrideNumSolverIterations() int {
	return _swig_wrap_btHingeConstraint_getOverrideNumSolverIterations(_swig_base)
}

func _swig_wrap_btHingeConstraint_setOverrideNumSolverIterations(SwigcptrBtHingeConstraint, int)

func (_swig_base SwigcptrBtHingeConstraint) SetOverrideNumSolverIterations(arg1 int) {
	_swig_wrap_btHingeConstraint_setOverrideNumSolverIterations(_swig_base, arg1)
}

func _swig_wrap_btHingeConstraint_setupSolverConstraint(SwigcptrBtHingeConstraint, uintptr, int, int, float32)

func (_swig_base SwigcptrBtHingeConstraint) SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32) {
	_swig_wrap_btHingeConstraint_setupSolverConstraint(_swig_base, arg1.Swigcptr(), arg2, arg3, arg4)
}

func _swig_wrap_btHingeConstraint_internalSetAppliedImpulse(SwigcptrBtHingeConstraint, float32)

func (_swig_base SwigcptrBtHingeConstraint) InternalSetAppliedImpulse(arg1 float32) {
	_swig_wrap_btHingeConstraint_internalSetAppliedImpulse(_swig_base, arg1)
}

func _swig_wrap_btHingeConstraint_internalGetAppliedImpulse(SwigcptrBtHingeConstraint) float32

func (_swig_base SwigcptrBtHingeConstraint) InternalGetAppliedImpulse() float32 {
	return _swig_wrap_btHingeConstraint_internalGetAppliedImpulse(_swig_base)
}

func _swig_wrap_btHingeConstraint_getBreakingImpulseThreshold(SwigcptrBtHingeConstraint) float32

func (_swig_base SwigcptrBtHingeConstraint) GetBreakingImpulseThreshold() float32 {
	return _swig_wrap_btHingeConstraint_getBreakingImpulseThreshold(_swig_base)
}

func _swig_wrap_btHingeConstraint_setBreakingImpulseThreshold(SwigcptrBtHingeConstraint, float32)

func (_swig_base SwigcptrBtHingeConstraint) SetBreakingImpulseThreshold(arg1 float32) {
	_swig_wrap_btHingeConstraint_setBreakingImpulseThreshold(_swig_base, arg1)
}

func _swig_wrap_btHingeConstraint_isEnabled(SwigcptrBtHingeConstraint) bool

func (_swig_base SwigcptrBtHingeConstraint) IsEnabled() bool {
	return _swig_wrap_btHingeConstraint_isEnabled(_swig_base)
}

func _swig_wrap_btHingeConstraint_setEnabled(SwigcptrBtHingeConstraint, bool)

func (_swig_base SwigcptrBtHingeConstraint) SetEnabled(arg1 bool) {
	_swig_wrap_btHingeConstraint_setEnabled(_swig_base, arg1)
}

func _swig_wrap_btHingeConstraint_solveConstraintObsolete(SwigcptrBtHingeConstraint, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtHingeConstraint) SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32) {
	_swig_wrap_btHingeConstraint_solveConstraintObsolete(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btHingeConstraint_getUserConstraintType(SwigcptrBtHingeConstraint) int

func (_swig_base SwigcptrBtHingeConstraint) GetUserConstraintType() int {
	return _swig_wrap_btHingeConstraint_getUserConstraintType(_swig_base)
}

func _swig_wrap_btHingeConstraint_setUserConstraintType(SwigcptrBtHingeConstraint, int)

func (_swig_base SwigcptrBtHingeConstraint) SetUserConstraintType(arg1 int) {
	_swig_wrap_btHingeConstraint_setUserConstraintType(_swig_base, arg1)
}

func _swig_wrap_btHingeConstraint_setUserConstraintId(SwigcptrBtHingeConstraint, int)

func (_swig_base SwigcptrBtHingeConstraint) SetUserConstraintId(arg1 int) {
	_swig_wrap_btHingeConstraint_setUserConstraintId(_swig_base, arg1)
}

func _swig_wrap_btHingeConstraint_getUserConstraintId(SwigcptrBtHingeConstraint) int

func (_swig_base SwigcptrBtHingeConstraint) GetUserConstraintId() int {
	return _swig_wrap_btHingeConstraint_getUserConstraintId(_swig_base)
}

func _swig_wrap_btHingeConstraint_setUserConstraintPtr(SwigcptrBtHingeConstraint, uintptr)

func (_swig_base SwigcptrBtHingeConstraint) SetUserConstraintPtr(arg1 uintptr) {
	_swig_wrap_btHingeConstraint_setUserConstraintPtr(_swig_base, arg1)
}

func _swig_wrap_btHingeConstraint_getUserConstraintPtr(SwigcptrBtHingeConstraint) uintptr

func (_swig_base SwigcptrBtHingeConstraint) GetUserConstraintPtr() uintptr {
	return _swig_wrap_btHingeConstraint_getUserConstraintPtr(_swig_base)
}

func _swig_wrap_btHingeConstraint_setJointFeedback(SwigcptrBtHingeConstraint, uintptr)

func (_swig_base SwigcptrBtHingeConstraint) SetJointFeedback(arg1 BtJointFeedback) {
	_swig_wrap_btHingeConstraint_setJointFeedback(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHingeConstraint_getJointFeedback__SWIG_0(SwigcptrBtHingeConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtHingeConstraint) GetJointFeedback__SWIG_0() BtJointFeedback {
	return _swig_wrap_btHingeConstraint_getJointFeedback__SWIG_0(_swig_base)
}

func _swig_wrap_btHingeConstraint_getJointFeedback__SWIG_1(SwigcptrBtHingeConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtHingeConstraint) GetJointFeedback__SWIG_1() BtJointFeedback {
	return _swig_wrap_btHingeConstraint_getJointFeedback__SWIG_1(_swig_base)
}

func (p SwigcptrBtHingeConstraint) GetJointFeedback(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetJointFeedback__SWIG_0()
	}
	if argc == 0 {
		return p.GetJointFeedback__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHingeConstraint_getUid(SwigcptrBtHingeConstraint) int

func (_swig_base SwigcptrBtHingeConstraint) GetUid() int {
	return _swig_wrap_btHingeConstraint_getUid(_swig_base)
}

func _swig_wrap_btHingeConstraint_needsFeedback(SwigcptrBtHingeConstraint) bool

func (_swig_base SwigcptrBtHingeConstraint) NeedsFeedback() bool {
	return _swig_wrap_btHingeConstraint_needsFeedback(_swig_base)
}

func _swig_wrap_btHingeConstraint_enableFeedback(SwigcptrBtHingeConstraint, bool)

func (_swig_base SwigcptrBtHingeConstraint) EnableFeedback(arg1 bool) {
	_swig_wrap_btHingeConstraint_enableFeedback(_swig_base, arg1)
}

func _swig_wrap_btHingeConstraint_getAppliedImpulse(SwigcptrBtHingeConstraint) float32

func (_swig_base SwigcptrBtHingeConstraint) GetAppliedImpulse() float32 {
	return _swig_wrap_btHingeConstraint_getAppliedImpulse(_swig_base)
}

func _swig_wrap_btHingeConstraint_getConstraintType(SwigcptrBtHingeConstraint) BtTypedConstraintType

func (_swig_base SwigcptrBtHingeConstraint) GetConstraintType() BtTypedConstraintType {
	return _swig_wrap_btHingeConstraint_getConstraintType(_swig_base)
}

func _swig_wrap_btHingeConstraint_setDbgDrawSize(SwigcptrBtHingeConstraint, float32)

func (_swig_base SwigcptrBtHingeConstraint) SetDbgDrawSize(arg1 float32) {
	_swig_wrap_btHingeConstraint_setDbgDrawSize(_swig_base, arg1)
}

func _swig_wrap_btHingeConstraint_getDbgDrawSize(SwigcptrBtHingeConstraint) float32

func (_swig_base SwigcptrBtHingeConstraint) GetDbgDrawSize() float32 {
	return _swig_wrap_btHingeConstraint_getDbgDrawSize(_swig_base)
}

func _swig_wrap_SetbtHingeConstraint_M_objectType(SwigcptrBtHingeConstraint, int)

func (_swig_base SwigcptrBtHingeConstraint) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtHingeConstraint_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtHingeConstraint_M_objectType(SwigcptrBtHingeConstraint) int

func (_swig_base SwigcptrBtHingeConstraint) GetM_objectType() int {
	return _swig_wrap_GetbtHingeConstraint_M_objectType(_swig_base)
}

func _swig_wrap_btHingeConstraint_getObjectType(SwigcptrBtHingeConstraint) int

func (_swig_base SwigcptrBtHingeConstraint) GetObjectType() int {
	return _swig_wrap_btHingeConstraint_getObjectType(_swig_base)
}

func (p SwigcptrBtHingeConstraint) SwigIsBtTypedConstraint() {
}

func (p SwigcptrBtHingeConstraint) SwigGetBtTypedConstraint() BtTypedConstraint {
	return SwigcptrBtTypedConstraint(p.Swigcptr())
}

func (p SwigcptrBtHingeConstraint) SwigIsBtTypedObject() {
}

func (p SwigcptrBtHingeConstraint) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtHingeConstraint interface {
	Swigcptr() uintptr
	SwigIsBtHingeConstraint()
	BuildJacobian()
	GetInfo1(arg2 BtConstraintInfo1)
	GetInfo1NonVirtual(arg2 BtConstraintInfo1)
	GetInfo2(arg2 BtConstraintInfo2)
	GetInfo2NonVirtual(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtVector3, arg6 BtVector3)
	GetInfo2Internal(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtVector3, arg6 BtVector3)
	GetInfo2InternalUsingFrameOffset(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtVector3, arg6 BtVector3)
	UpdateRHS(arg2 float32)
	GetRigidBodyA(a ...interface{}) interface{}
	GetRigidBodyB(a ...interface{}) interface{}
	GetFrameOffsetA() BtTransform
	GetFrameOffsetB() BtTransform
	SetFrames(arg2 BtTransform, arg3 BtTransform)
	SetAngularOnly(arg2 bool)
	EnableAngularMotor(arg2 bool, arg3 float32, arg4 float32)
	EnableMotor(arg2 bool)
	SetMaxMotorImpulse(arg2 float32)
	SetMotorTarget(a ...interface{})
	SetLimit(a ...interface{})
	SetAxis(arg2 BtVector3)
	GetLowerLimit() float32
	GetUpperLimit() float32
	GetHingeAngle(a ...interface{}) float32
	TestLimit(arg2 BtTransform, arg3 BtTransform)
	GetAFrame(a ...interface{}) interface{}
	GetBFrame(a ...interface{}) interface{}
	GetSolveLimit() int
	GetLimitSign() float32
	GetAngularOnly() bool
	GetEnableAngularMotor() bool
	GetMotorTargetVelosity() float32
	GetMaxMotorImpulse() float32
	GetUseFrameOffset() bool
	SetUseFrameOffset(arg2 bool)
	SetParam(a ...interface{})
	GetParam(a ...interface{}) float32
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetOverrideNumSolverIterations() int
	SetOverrideNumSolverIterations(arg1 int)
	SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32)
	InternalSetAppliedImpulse(arg1 float32)
	InternalGetAppliedImpulse() float32
	GetBreakingImpulseThreshold() float32
	SetBreakingImpulseThreshold(arg1 float32)
	IsEnabled() bool
	SetEnabled(arg1 bool)
	SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32)
	GetUserConstraintType() int
	SetUserConstraintType(arg1 int)
	SetUserConstraintId(arg1 int)
	GetUserConstraintId() int
	SetUserConstraintPtr(arg1 uintptr)
	GetUserConstraintPtr() uintptr
	SetJointFeedback(arg1 BtJointFeedback)
	GetJointFeedback(a ...interface{}) interface{}
	GetUid() int
	NeedsFeedback() bool
	EnableFeedback(arg1 bool)
	GetAppliedImpulse() float32
	GetConstraintType() BtTypedConstraintType
	SetDbgDrawSize(arg1 float32)
	GetDbgDrawSize() float32
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtTypedConstraint()
	SwigGetBtTypedConstraint() BtTypedConstraint
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

type SwigcptrBtHingeConstraintDoubleData uintptr

func (p SwigcptrBtHingeConstraintDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtHingeConstraintDoubleData) SwigIsBtHingeConstraintDoubleData() {
}

func _swig_wrap_btHingeConstraintDoubleData_m_typeConstraintData_set(SwigcptrBtHingeConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_typeConstraintData(arg2 BtTypedConstraintData) {
	_swig_wrap_btHingeConstraintDoubleData_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraintDoubleData_m_typeConstraintData_get(SwigcptrBtHingeConstraintDoubleData) SwigcptrBtTypedConstraintData

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_typeConstraintData() BtTypedConstraintData {
	return _swig_wrap_btHingeConstraintDoubleData_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_rbAFrame_set(SwigcptrBtHingeConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_rbAFrame(arg2 BtTransformDoubleData) {
	_swig_wrap_btHingeConstraintDoubleData_m_rbAFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraintDoubleData_m_rbAFrame_get(SwigcptrBtHingeConstraintDoubleData) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_rbAFrame() BtTransformDoubleData {
	return _swig_wrap_btHingeConstraintDoubleData_m_rbAFrame_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_rbBFrame_set(SwigcptrBtHingeConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_rbBFrame(arg2 BtTransformDoubleData) {
	_swig_wrap_btHingeConstraintDoubleData_m_rbBFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraintDoubleData_m_rbBFrame_get(SwigcptrBtHingeConstraintDoubleData) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_rbBFrame() BtTransformDoubleData {
	return _swig_wrap_btHingeConstraintDoubleData_m_rbBFrame_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_useReferenceFrameA_set(SwigcptrBtHingeConstraintDoubleData, int)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_useReferenceFrameA(arg2 int) {
	_swig_wrap_btHingeConstraintDoubleData_m_useReferenceFrameA_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData_m_useReferenceFrameA_get(SwigcptrBtHingeConstraintDoubleData) int

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_useReferenceFrameA() int {
	return _swig_wrap_btHingeConstraintDoubleData_m_useReferenceFrameA_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_angularOnly_set(SwigcptrBtHingeConstraintDoubleData, int)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_angularOnly(arg2 int) {
	_swig_wrap_btHingeConstraintDoubleData_m_angularOnly_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData_m_angularOnly_get(SwigcptrBtHingeConstraintDoubleData) int

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_angularOnly() int {
	return _swig_wrap_btHingeConstraintDoubleData_m_angularOnly_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_enableAngularMotor_set(SwigcptrBtHingeConstraintDoubleData, int)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_enableAngularMotor(arg2 int) {
	_swig_wrap_btHingeConstraintDoubleData_m_enableAngularMotor_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData_m_enableAngularMotor_get(SwigcptrBtHingeConstraintDoubleData) int

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_enableAngularMotor() int {
	return _swig_wrap_btHingeConstraintDoubleData_m_enableAngularMotor_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_motorTargetVelocity_set(SwigcptrBtHingeConstraintDoubleData, float32)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_motorTargetVelocity(arg2 float32) {
	_swig_wrap_btHingeConstraintDoubleData_m_motorTargetVelocity_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData_m_motorTargetVelocity_get(SwigcptrBtHingeConstraintDoubleData) float32

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_motorTargetVelocity() float32 {
	return _swig_wrap_btHingeConstraintDoubleData_m_motorTargetVelocity_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_maxMotorImpulse_set(SwigcptrBtHingeConstraintDoubleData, float32)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_maxMotorImpulse(arg2 float32) {
	_swig_wrap_btHingeConstraintDoubleData_m_maxMotorImpulse_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData_m_maxMotorImpulse_get(SwigcptrBtHingeConstraintDoubleData) float32

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_maxMotorImpulse() float32 {
	return _swig_wrap_btHingeConstraintDoubleData_m_maxMotorImpulse_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_lowerLimit_set(SwigcptrBtHingeConstraintDoubleData, float32)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_lowerLimit(arg2 float32) {
	_swig_wrap_btHingeConstraintDoubleData_m_lowerLimit_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData_m_lowerLimit_get(SwigcptrBtHingeConstraintDoubleData) float32

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_lowerLimit() float32 {
	return _swig_wrap_btHingeConstraintDoubleData_m_lowerLimit_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_upperLimit_set(SwigcptrBtHingeConstraintDoubleData, float32)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_upperLimit(arg2 float32) {
	_swig_wrap_btHingeConstraintDoubleData_m_upperLimit_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData_m_upperLimit_get(SwigcptrBtHingeConstraintDoubleData) float32

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_upperLimit() float32 {
	return _swig_wrap_btHingeConstraintDoubleData_m_upperLimit_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_limitSoftness_set(SwigcptrBtHingeConstraintDoubleData, float32)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_limitSoftness(arg2 float32) {
	_swig_wrap_btHingeConstraintDoubleData_m_limitSoftness_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData_m_limitSoftness_get(SwigcptrBtHingeConstraintDoubleData) float32

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_limitSoftness() float32 {
	return _swig_wrap_btHingeConstraintDoubleData_m_limitSoftness_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_biasFactor_set(SwigcptrBtHingeConstraintDoubleData, float32)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_biasFactor(arg2 float32) {
	_swig_wrap_btHingeConstraintDoubleData_m_biasFactor_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData_m_biasFactor_get(SwigcptrBtHingeConstraintDoubleData) float32

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_biasFactor() float32 {
	return _swig_wrap_btHingeConstraintDoubleData_m_biasFactor_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData_m_relaxationFactor_set(SwigcptrBtHingeConstraintDoubleData, float32)

func (arg1 SwigcptrBtHingeConstraintDoubleData) SetM_relaxationFactor(arg2 float32) {
	_swig_wrap_btHingeConstraintDoubleData_m_relaxationFactor_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData_m_relaxationFactor_get(SwigcptrBtHingeConstraintDoubleData) float32

func (arg1 SwigcptrBtHingeConstraintDoubleData) GetM_relaxationFactor() float32 {
	return _swig_wrap_btHingeConstraintDoubleData_m_relaxationFactor_get(arg1)
}

func _swig_wrap_new_btHingeConstraintDoubleData() SwigcptrBtHingeConstraintDoubleData

func NewBtHingeConstraintDoubleData() BtHingeConstraintDoubleData {
	return _swig_wrap_new_btHingeConstraintDoubleData()
}

func _swig_wrap_delete_btHingeConstraintDoubleData(uintptr)

func DeleteBtHingeConstraintDoubleData(arg1 BtHingeConstraintDoubleData) {
	_swig_wrap_delete_btHingeConstraintDoubleData(arg1.Swigcptr())
}

type BtHingeConstraintDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtHingeConstraintDoubleData()
	SetM_typeConstraintData(arg2 BtTypedConstraintData)
	GetM_typeConstraintData() BtTypedConstraintData
	SetM_rbAFrame(arg2 BtTransformDoubleData)
	GetM_rbAFrame() BtTransformDoubleData
	SetM_rbBFrame(arg2 BtTransformDoubleData)
	GetM_rbBFrame() BtTransformDoubleData
	SetM_useReferenceFrameA(arg2 int)
	GetM_useReferenceFrameA() int
	SetM_angularOnly(arg2 int)
	GetM_angularOnly() int
	SetM_enableAngularMotor(arg2 int)
	GetM_enableAngularMotor() int
	SetM_motorTargetVelocity(arg2 float32)
	GetM_motorTargetVelocity() float32
	SetM_maxMotorImpulse(arg2 float32)
	GetM_maxMotorImpulse() float32
	SetM_lowerLimit(arg2 float32)
	GetM_lowerLimit() float32
	SetM_upperLimit(arg2 float32)
	GetM_upperLimit() float32
	SetM_limitSoftness(arg2 float32)
	GetM_limitSoftness() float32
	SetM_biasFactor(arg2 float32)
	GetM_biasFactor() float32
	SetM_relaxationFactor(arg2 float32)
	GetM_relaxationFactor() float32
}

type SwigcptrBtHingeConstraintFloatData uintptr

func (p SwigcptrBtHingeConstraintFloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtHingeConstraintFloatData) SwigIsBtHingeConstraintFloatData() {
}

func _swig_wrap_btHingeConstraintFloatData_m_typeConstraintData_set(SwigcptrBtHingeConstraintFloatData, uintptr)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_typeConstraintData(arg2 BtTypedConstraintData) {
	_swig_wrap_btHingeConstraintFloatData_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraintFloatData_m_typeConstraintData_get(SwigcptrBtHingeConstraintFloatData) SwigcptrBtTypedConstraintData

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_typeConstraintData() BtTypedConstraintData {
	return _swig_wrap_btHingeConstraintFloatData_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_rbAFrame_set(SwigcptrBtHingeConstraintFloatData, uintptr)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_rbAFrame(arg2 BtTransformFloatData) {
	_swig_wrap_btHingeConstraintFloatData_m_rbAFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraintFloatData_m_rbAFrame_get(SwigcptrBtHingeConstraintFloatData) SwigcptrBtTransformFloatData

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_rbAFrame() BtTransformFloatData {
	return _swig_wrap_btHingeConstraintFloatData_m_rbAFrame_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_rbBFrame_set(SwigcptrBtHingeConstraintFloatData, uintptr)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_rbBFrame(arg2 BtTransformFloatData) {
	_swig_wrap_btHingeConstraintFloatData_m_rbBFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraintFloatData_m_rbBFrame_get(SwigcptrBtHingeConstraintFloatData) SwigcptrBtTransformFloatData

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_rbBFrame() BtTransformFloatData {
	return _swig_wrap_btHingeConstraintFloatData_m_rbBFrame_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_useReferenceFrameA_set(SwigcptrBtHingeConstraintFloatData, int)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_useReferenceFrameA(arg2 int) {
	_swig_wrap_btHingeConstraintFloatData_m_useReferenceFrameA_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintFloatData_m_useReferenceFrameA_get(SwigcptrBtHingeConstraintFloatData) int

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_useReferenceFrameA() int {
	return _swig_wrap_btHingeConstraintFloatData_m_useReferenceFrameA_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_angularOnly_set(SwigcptrBtHingeConstraintFloatData, int)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_angularOnly(arg2 int) {
	_swig_wrap_btHingeConstraintFloatData_m_angularOnly_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintFloatData_m_angularOnly_get(SwigcptrBtHingeConstraintFloatData) int

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_angularOnly() int {
	return _swig_wrap_btHingeConstraintFloatData_m_angularOnly_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_enableAngularMotor_set(SwigcptrBtHingeConstraintFloatData, int)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_enableAngularMotor(arg2 int) {
	_swig_wrap_btHingeConstraintFloatData_m_enableAngularMotor_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintFloatData_m_enableAngularMotor_get(SwigcptrBtHingeConstraintFloatData) int

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_enableAngularMotor() int {
	return _swig_wrap_btHingeConstraintFloatData_m_enableAngularMotor_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_motorTargetVelocity_set(SwigcptrBtHingeConstraintFloatData, float32)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_motorTargetVelocity(arg2 float32) {
	_swig_wrap_btHingeConstraintFloatData_m_motorTargetVelocity_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintFloatData_m_motorTargetVelocity_get(SwigcptrBtHingeConstraintFloatData) float32

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_motorTargetVelocity() float32 {
	return _swig_wrap_btHingeConstraintFloatData_m_motorTargetVelocity_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_maxMotorImpulse_set(SwigcptrBtHingeConstraintFloatData, float32)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_maxMotorImpulse(arg2 float32) {
	_swig_wrap_btHingeConstraintFloatData_m_maxMotorImpulse_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintFloatData_m_maxMotorImpulse_get(SwigcptrBtHingeConstraintFloatData) float32

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_maxMotorImpulse() float32 {
	return _swig_wrap_btHingeConstraintFloatData_m_maxMotorImpulse_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_lowerLimit_set(SwigcptrBtHingeConstraintFloatData, float32)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_lowerLimit(arg2 float32) {
	_swig_wrap_btHingeConstraintFloatData_m_lowerLimit_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintFloatData_m_lowerLimit_get(SwigcptrBtHingeConstraintFloatData) float32

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_lowerLimit() float32 {
	return _swig_wrap_btHingeConstraintFloatData_m_lowerLimit_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_upperLimit_set(SwigcptrBtHingeConstraintFloatData, float32)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_upperLimit(arg2 float32) {
	_swig_wrap_btHingeConstraintFloatData_m_upperLimit_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintFloatData_m_upperLimit_get(SwigcptrBtHingeConstraintFloatData) float32

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_upperLimit() float32 {
	return _swig_wrap_btHingeConstraintFloatData_m_upperLimit_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_limitSoftness_set(SwigcptrBtHingeConstraintFloatData, float32)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_limitSoftness(arg2 float32) {
	_swig_wrap_btHingeConstraintFloatData_m_limitSoftness_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintFloatData_m_limitSoftness_get(SwigcptrBtHingeConstraintFloatData) float32

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_limitSoftness() float32 {
	return _swig_wrap_btHingeConstraintFloatData_m_limitSoftness_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_biasFactor_set(SwigcptrBtHingeConstraintFloatData, float32)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_biasFactor(arg2 float32) {
	_swig_wrap_btHingeConstraintFloatData_m_biasFactor_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintFloatData_m_biasFactor_get(SwigcptrBtHingeConstraintFloatData) float32

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_biasFactor() float32 {
	return _swig_wrap_btHingeConstraintFloatData_m_biasFactor_get(arg1)
}

func _swig_wrap_btHingeConstraintFloatData_m_relaxationFactor_set(SwigcptrBtHingeConstraintFloatData, float32)

func (arg1 SwigcptrBtHingeConstraintFloatData) SetM_relaxationFactor(arg2 float32) {
	_swig_wrap_btHingeConstraintFloatData_m_relaxationFactor_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintFloatData_m_relaxationFactor_get(SwigcptrBtHingeConstraintFloatData) float32

func (arg1 SwigcptrBtHingeConstraintFloatData) GetM_relaxationFactor() float32 {
	return _swig_wrap_btHingeConstraintFloatData_m_relaxationFactor_get(arg1)
}

func _swig_wrap_new_btHingeConstraintFloatData() SwigcptrBtHingeConstraintFloatData

func NewBtHingeConstraintFloatData() BtHingeConstraintFloatData {
	return _swig_wrap_new_btHingeConstraintFloatData()
}

func _swig_wrap_delete_btHingeConstraintFloatData(uintptr)

func DeleteBtHingeConstraintFloatData(arg1 BtHingeConstraintFloatData) {
	_swig_wrap_delete_btHingeConstraintFloatData(arg1.Swigcptr())
}

type BtHingeConstraintFloatData interface {
	Swigcptr() uintptr
	SwigIsBtHingeConstraintFloatData()
	SetM_typeConstraintData(arg2 BtTypedConstraintData)
	GetM_typeConstraintData() BtTypedConstraintData
	SetM_rbAFrame(arg2 BtTransformFloatData)
	GetM_rbAFrame() BtTransformFloatData
	SetM_rbBFrame(arg2 BtTransformFloatData)
	GetM_rbBFrame() BtTransformFloatData
	SetM_useReferenceFrameA(arg2 int)
	GetM_useReferenceFrameA() int
	SetM_angularOnly(arg2 int)
	GetM_angularOnly() int
	SetM_enableAngularMotor(arg2 int)
	GetM_enableAngularMotor() int
	SetM_motorTargetVelocity(arg2 float32)
	GetM_motorTargetVelocity() float32
	SetM_maxMotorImpulse(arg2 float32)
	GetM_maxMotorImpulse() float32
	SetM_lowerLimit(arg2 float32)
	GetM_lowerLimit() float32
	SetM_upperLimit(arg2 float32)
	GetM_upperLimit() float32
	SetM_limitSoftness(arg2 float32)
	GetM_limitSoftness() float32
	SetM_biasFactor(arg2 float32)
	GetM_biasFactor() float32
	SetM_relaxationFactor(arg2 float32)
	GetM_relaxationFactor() float32
}

type SwigcptrBtHingeConstraintDoubleData2 uintptr

func (p SwigcptrBtHingeConstraintDoubleData2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtHingeConstraintDoubleData2) SwigIsBtHingeConstraintDoubleData2() {
}

func _swig_wrap_btHingeConstraintDoubleData2_m_typeConstraintData_set(SwigcptrBtHingeConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData) {
	_swig_wrap_btHingeConstraintDoubleData2_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraintDoubleData2_m_typeConstraintData_get(SwigcptrBtHingeConstraintDoubleData2) SwigcptrBtTypedConstraintDoubleData

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_typeConstraintData() BtTypedConstraintDoubleData {
	return _swig_wrap_btHingeConstraintDoubleData2_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_rbAFrame_set(SwigcptrBtHingeConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_rbAFrame(arg2 BtTransformDoubleData) {
	_swig_wrap_btHingeConstraintDoubleData2_m_rbAFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraintDoubleData2_m_rbAFrame_get(SwigcptrBtHingeConstraintDoubleData2) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_rbAFrame() BtTransformDoubleData {
	return _swig_wrap_btHingeConstraintDoubleData2_m_rbAFrame_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_rbBFrame_set(SwigcptrBtHingeConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_rbBFrame(arg2 BtTransformDoubleData) {
	_swig_wrap_btHingeConstraintDoubleData2_m_rbBFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btHingeConstraintDoubleData2_m_rbBFrame_get(SwigcptrBtHingeConstraintDoubleData2) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_rbBFrame() BtTransformDoubleData {
	return _swig_wrap_btHingeConstraintDoubleData2_m_rbBFrame_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_useReferenceFrameA_set(SwigcptrBtHingeConstraintDoubleData2, int)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_useReferenceFrameA(arg2 int) {
	_swig_wrap_btHingeConstraintDoubleData2_m_useReferenceFrameA_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_useReferenceFrameA_get(SwigcptrBtHingeConstraintDoubleData2) int

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_useReferenceFrameA() int {
	return _swig_wrap_btHingeConstraintDoubleData2_m_useReferenceFrameA_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_angularOnly_set(SwigcptrBtHingeConstraintDoubleData2, int)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_angularOnly(arg2 int) {
	_swig_wrap_btHingeConstraintDoubleData2_m_angularOnly_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_angularOnly_get(SwigcptrBtHingeConstraintDoubleData2) int

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_angularOnly() int {
	return _swig_wrap_btHingeConstraintDoubleData2_m_angularOnly_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_enableAngularMotor_set(SwigcptrBtHingeConstraintDoubleData2, int)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_enableAngularMotor(arg2 int) {
	_swig_wrap_btHingeConstraintDoubleData2_m_enableAngularMotor_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_enableAngularMotor_get(SwigcptrBtHingeConstraintDoubleData2) int

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_enableAngularMotor() int {
	return _swig_wrap_btHingeConstraintDoubleData2_m_enableAngularMotor_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_motorTargetVelocity_set(SwigcptrBtHingeConstraintDoubleData2, float64)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_motorTargetVelocity(arg2 float64) {
	_swig_wrap_btHingeConstraintDoubleData2_m_motorTargetVelocity_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_motorTargetVelocity_get(SwigcptrBtHingeConstraintDoubleData2) float64

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_motorTargetVelocity() float64 {
	return _swig_wrap_btHingeConstraintDoubleData2_m_motorTargetVelocity_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_maxMotorImpulse_set(SwigcptrBtHingeConstraintDoubleData2, float64)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_maxMotorImpulse(arg2 float64) {
	_swig_wrap_btHingeConstraintDoubleData2_m_maxMotorImpulse_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_maxMotorImpulse_get(SwigcptrBtHingeConstraintDoubleData2) float64

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_maxMotorImpulse() float64 {
	return _swig_wrap_btHingeConstraintDoubleData2_m_maxMotorImpulse_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_lowerLimit_set(SwigcptrBtHingeConstraintDoubleData2, float64)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_lowerLimit(arg2 float64) {
	_swig_wrap_btHingeConstraintDoubleData2_m_lowerLimit_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_lowerLimit_get(SwigcptrBtHingeConstraintDoubleData2) float64

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_lowerLimit() float64 {
	return _swig_wrap_btHingeConstraintDoubleData2_m_lowerLimit_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_upperLimit_set(SwigcptrBtHingeConstraintDoubleData2, float64)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_upperLimit(arg2 float64) {
	_swig_wrap_btHingeConstraintDoubleData2_m_upperLimit_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_upperLimit_get(SwigcptrBtHingeConstraintDoubleData2) float64

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_upperLimit() float64 {
	return _swig_wrap_btHingeConstraintDoubleData2_m_upperLimit_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_limitSoftness_set(SwigcptrBtHingeConstraintDoubleData2, float64)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_limitSoftness(arg2 float64) {
	_swig_wrap_btHingeConstraintDoubleData2_m_limitSoftness_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_limitSoftness_get(SwigcptrBtHingeConstraintDoubleData2) float64

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_limitSoftness() float64 {
	return _swig_wrap_btHingeConstraintDoubleData2_m_limitSoftness_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_biasFactor_set(SwigcptrBtHingeConstraintDoubleData2, float64)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_biasFactor(arg2 float64) {
	_swig_wrap_btHingeConstraintDoubleData2_m_biasFactor_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_biasFactor_get(SwigcptrBtHingeConstraintDoubleData2) float64

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_biasFactor() float64 {
	return _swig_wrap_btHingeConstraintDoubleData2_m_biasFactor_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_relaxationFactor_set(SwigcptrBtHingeConstraintDoubleData2, float64)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_relaxationFactor(arg2 float64) {
	_swig_wrap_btHingeConstraintDoubleData2_m_relaxationFactor_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_relaxationFactor_get(SwigcptrBtHingeConstraintDoubleData2) float64

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_relaxationFactor() float64 {
	return _swig_wrap_btHingeConstraintDoubleData2_m_relaxationFactor_get(arg1)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_padding1_set(SwigcptrBtHingeConstraintDoubleData2, string)

func (arg1 SwigcptrBtHingeConstraintDoubleData2) SetM_padding1(arg2 string) {
	_swig_wrap_btHingeConstraintDoubleData2_m_padding1_set(arg1, arg2)
}

func _swig_wrap_btHingeConstraintDoubleData2_m_padding1_get(SwigcptrBtHingeConstraintDoubleData2) string

func (arg1 SwigcptrBtHingeConstraintDoubleData2) GetM_padding1() string {
	return _swig_wrap_btHingeConstraintDoubleData2_m_padding1_get(arg1)
}

func _swig_wrap_new_btHingeConstraintDoubleData2() SwigcptrBtHingeConstraintDoubleData2

func NewBtHingeConstraintDoubleData2() BtHingeConstraintDoubleData2 {
	return _swig_wrap_new_btHingeConstraintDoubleData2()
}

func _swig_wrap_delete_btHingeConstraintDoubleData2(uintptr)

func DeleteBtHingeConstraintDoubleData2(arg1 BtHingeConstraintDoubleData2) {
	_swig_wrap_delete_btHingeConstraintDoubleData2(arg1.Swigcptr())
}

type BtHingeConstraintDoubleData2 interface {
	Swigcptr() uintptr
	SwigIsBtHingeConstraintDoubleData2()
	SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData)
	GetM_typeConstraintData() BtTypedConstraintDoubleData
	SetM_rbAFrame(arg2 BtTransformDoubleData)
	GetM_rbAFrame() BtTransformDoubleData
	SetM_rbBFrame(arg2 BtTransformDoubleData)
	GetM_rbBFrame() BtTransformDoubleData
	SetM_useReferenceFrameA(arg2 int)
	GetM_useReferenceFrameA() int
	SetM_angularOnly(arg2 int)
	GetM_angularOnly() int
	SetM_enableAngularMotor(arg2 int)
	GetM_enableAngularMotor() int
	SetM_motorTargetVelocity(arg2 float64)
	GetM_motorTargetVelocity() float64
	SetM_maxMotorImpulse(arg2 float64)
	GetM_maxMotorImpulse() float64
	SetM_lowerLimit(arg2 float64)
	GetM_lowerLimit() float64
	SetM_upperLimit(arg2 float64)
	GetM_upperLimit() float64
	SetM_limitSoftness(arg2 float64)
	GetM_limitSoftness() float64
	SetM_biasFactor(arg2 float64)
	GetM_biasFactor() float64
	SetM_relaxationFactor(arg2 float64)
	GetM_relaxationFactor() float64
	SetM_padding1(arg2 string)
	GetM_padding1() string
}

const BtConeTwistConstraintDataName string = "btConeTwistConstraintData"

type BtConeTwistFlags int

func _swig_getBT_CONETWIST_FLAGS_LIN_CFM() BtConeTwistFlags

var BT_CONETWIST_FLAGS_LIN_CFM BtConeTwistFlags = _swig_getBT_CONETWIST_FLAGS_LIN_CFM()

func _swig_getBT_CONETWIST_FLAGS_LIN_ERP() BtConeTwistFlags

var BT_CONETWIST_FLAGS_LIN_ERP BtConeTwistFlags = _swig_getBT_CONETWIST_FLAGS_LIN_ERP()

func _swig_getBT_CONETWIST_FLAGS_ANG_CFM() BtConeTwistFlags

var BT_CONETWIST_FLAGS_ANG_CFM BtConeTwistFlags = _swig_getBT_CONETWIST_FLAGS_ANG_CFM()

type SwigcptrBtConeTwistConstraint uintptr

func (p SwigcptrBtConeTwistConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConeTwistConstraint) SwigIsBtConeTwistConstraint() {
}

func _swig_wrap_new_btConeTwistConstraint__SWIG_0(uintptr, uintptr, uintptr, uintptr) SwigcptrBtConeTwistConstraint

func NewBtConeTwistConstraint__SWIG_0(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtTransform, arg4 BtTransform) BtConeTwistConstraint {
	return _swig_wrap_new_btConeTwistConstraint__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_new_btConeTwistConstraint__SWIG_1(uintptr, uintptr) SwigcptrBtConeTwistConstraint

func NewBtConeTwistConstraint__SWIG_1(arg1 BtRigidBody, arg2 BtTransform) BtConeTwistConstraint {
	return _swig_wrap_new_btConeTwistConstraint__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr())
}

func NewBtConeTwistConstraint(a ...interface{}) BtConeTwistConstraint {
	argc := len(a)
	if argc == 2 {
		return NewBtConeTwistConstraint__SWIG_1(a[0].(BtRigidBody), a[1].(BtTransform))
	}
	if argc == 4 {
		return NewBtConeTwistConstraint__SWIG_0(a[0].(BtRigidBody), a[1].(BtRigidBody), a[2].(BtTransform), a[3].(BtTransform))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConeTwistConstraint_buildJacobian(SwigcptrBtConeTwistConstraint)

func (arg1 SwigcptrBtConeTwistConstraint) BuildJacobian() {
	_swig_wrap_btConeTwistConstraint_buildJacobian(arg1)
}

func _swig_wrap_btConeTwistConstraint_getInfo1(SwigcptrBtConeTwistConstraint, uintptr)

func (arg1 SwigcptrBtConeTwistConstraint) GetInfo1(arg2 BtConstraintInfo1) {
	_swig_wrap_btConeTwistConstraint_getInfo1(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeTwistConstraint_getInfo1NonVirtual(SwigcptrBtConeTwistConstraint, uintptr)

func (arg1 SwigcptrBtConeTwistConstraint) GetInfo1NonVirtual(arg2 BtConstraintInfo1) {
	_swig_wrap_btConeTwistConstraint_getInfo1NonVirtual(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeTwistConstraint_getInfo2(SwigcptrBtConeTwistConstraint, uintptr)

func (arg1 SwigcptrBtConeTwistConstraint) GetInfo2(arg2 BtConstraintInfo2) {
	_swig_wrap_btConeTwistConstraint_getInfo2(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeTwistConstraint_getInfo2NonVirtual(SwigcptrBtConeTwistConstraint, uintptr, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtConeTwistConstraint) GetInfo2NonVirtual(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtMatrix3x3, arg6 BtMatrix3x3) {
	_swig_wrap_btConeTwistConstraint_getInfo2NonVirtual(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_btConeTwistConstraint_solveConstraintObsolete(SwigcptrBtConeTwistConstraint, uintptr, uintptr, float32)

func (arg1 SwigcptrBtConeTwistConstraint) SolveConstraintObsolete(arg2 BtSolverBody, arg3 BtSolverBody, arg4 float32) {
	_swig_wrap_btConeTwistConstraint_solveConstraintObsolete(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4)
}

func _swig_wrap_btConeTwistConstraint_updateRHS(SwigcptrBtConeTwistConstraint, float32)

func (arg1 SwigcptrBtConeTwistConstraint) UpdateRHS(arg2 float32) {
	_swig_wrap_btConeTwistConstraint_updateRHS(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraint_getRigidBodyA(SwigcptrBtConeTwistConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtConeTwistConstraint) GetRigidBodyA() BtRigidBody {
	return _swig_wrap_btConeTwistConstraint_getRigidBodyA(arg1)
}

func _swig_wrap_btConeTwistConstraint_getRigidBodyB(SwigcptrBtConeTwistConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtConeTwistConstraint) GetRigidBodyB() BtRigidBody {
	return _swig_wrap_btConeTwistConstraint_getRigidBodyB(arg1)
}

func _swig_wrap_btConeTwistConstraint_setAngularOnly(SwigcptrBtConeTwistConstraint, bool)

func (arg1 SwigcptrBtConeTwistConstraint) SetAngularOnly(arg2 bool) {
	_swig_wrap_btConeTwistConstraint_setAngularOnly(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraint_setLimit__SWIG_0(SwigcptrBtConeTwistConstraint, int, float32)

func (arg1 SwigcptrBtConeTwistConstraint) SetLimit__SWIG_0(arg2 int, arg3 float32) {
	_swig_wrap_btConeTwistConstraint_setLimit__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btConeTwistConstraint_setLimit__SWIG_1(SwigcptrBtConeTwistConstraint, float32, float32, float32, float32, float32, float32)

func (arg1 SwigcptrBtConeTwistConstraint) SetLimit__SWIG_1(arg2 float32, arg3 float32, arg4 float32, arg5 float32, arg6 float32, arg7 float32) {
	_swig_wrap_btConeTwistConstraint_setLimit__SWIG_1(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

func _swig_wrap_btConeTwistConstraint_setLimit__SWIG_2(SwigcptrBtConeTwistConstraint, float32, float32, float32, float32, float32)

func (arg1 SwigcptrBtConeTwistConstraint) SetLimit__SWIG_2(arg2 float32, arg3 float32, arg4 float32, arg5 float32, arg6 float32) {
	_swig_wrap_btConeTwistConstraint_setLimit__SWIG_2(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_btConeTwistConstraint_setLimit__SWIG_3(SwigcptrBtConeTwistConstraint, float32, float32, float32, float32)

func (arg1 SwigcptrBtConeTwistConstraint) SetLimit__SWIG_3(arg2 float32, arg3 float32, arg4 float32, arg5 float32) {
	_swig_wrap_btConeTwistConstraint_setLimit__SWIG_3(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_btConeTwistConstraint_setLimit__SWIG_4(SwigcptrBtConeTwistConstraint, float32, float32, float32)

func (arg1 SwigcptrBtConeTwistConstraint) SetLimit__SWIG_4(arg2 float32, arg3 float32, arg4 float32) {
	_swig_wrap_btConeTwistConstraint_setLimit__SWIG_4(arg1, arg2, arg3, arg4)
}

func (p SwigcptrBtConeTwistConstraint) SetLimit(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetLimit__SWIG_0(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetLimit__SWIG_4(a[0].(float32), a[1].(float32), a[2].(float32))
		return
	}
	if argc == 4 {
		p.SetLimit__SWIG_3(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32))
		return
	}
	if argc == 5 {
		p.SetLimit__SWIG_2(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32), a[4].(float32))
		return
	}
	if argc == 6 {
		p.SetLimit__SWIG_1(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32), a[4].(float32), a[5].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConeTwistConstraint_getAFrame(SwigcptrBtConeTwistConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtConeTwistConstraint) GetAFrame() BtTransform {
	return _swig_wrap_btConeTwistConstraint_getAFrame(arg1)
}

func _swig_wrap_btConeTwistConstraint_getBFrame(SwigcptrBtConeTwistConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtConeTwistConstraint) GetBFrame() BtTransform {
	return _swig_wrap_btConeTwistConstraint_getBFrame(arg1)
}

func _swig_wrap_btConeTwistConstraint_getSolveTwistLimit(SwigcptrBtConeTwistConstraint) int

func (arg1 SwigcptrBtConeTwistConstraint) GetSolveTwistLimit() int {
	return _swig_wrap_btConeTwistConstraint_getSolveTwistLimit(arg1)
}

func _swig_wrap_btConeTwistConstraint_getSolveSwingLimit(SwigcptrBtConeTwistConstraint) int

func (arg1 SwigcptrBtConeTwistConstraint) GetSolveSwingLimit() int {
	return _swig_wrap_btConeTwistConstraint_getSolveSwingLimit(arg1)
}

func _swig_wrap_btConeTwistConstraint_getTwistLimitSign(SwigcptrBtConeTwistConstraint) float32

func (arg1 SwigcptrBtConeTwistConstraint) GetTwistLimitSign() float32 {
	return _swig_wrap_btConeTwistConstraint_getTwistLimitSign(arg1)
}

func _swig_wrap_btConeTwistConstraint_calcAngleInfo(SwigcptrBtConeTwistConstraint)

func (arg1 SwigcptrBtConeTwistConstraint) CalcAngleInfo() {
	_swig_wrap_btConeTwistConstraint_calcAngleInfo(arg1)
}

func _swig_wrap_btConeTwistConstraint_calcAngleInfo2(SwigcptrBtConeTwistConstraint, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtConeTwistConstraint) CalcAngleInfo2(arg2 BtTransform, arg3 BtTransform, arg4 BtMatrix3x3, arg5 BtMatrix3x3) {
	_swig_wrap_btConeTwistConstraint_calcAngleInfo2(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btConeTwistConstraint_getSwingSpan1(SwigcptrBtConeTwistConstraint) float32

func (arg1 SwigcptrBtConeTwistConstraint) GetSwingSpan1() float32 {
	return _swig_wrap_btConeTwistConstraint_getSwingSpan1(arg1)
}

func _swig_wrap_btConeTwistConstraint_getSwingSpan2(SwigcptrBtConeTwistConstraint) float32

func (arg1 SwigcptrBtConeTwistConstraint) GetSwingSpan2() float32 {
	return _swig_wrap_btConeTwistConstraint_getSwingSpan2(arg1)
}

func _swig_wrap_btConeTwistConstraint_getTwistSpan(SwigcptrBtConeTwistConstraint) float32

func (arg1 SwigcptrBtConeTwistConstraint) GetTwistSpan() float32 {
	return _swig_wrap_btConeTwistConstraint_getTwistSpan(arg1)
}

func _swig_wrap_btConeTwistConstraint_getTwistAngle(SwigcptrBtConeTwistConstraint) float32

func (arg1 SwigcptrBtConeTwistConstraint) GetTwistAngle() float32 {
	return _swig_wrap_btConeTwistConstraint_getTwistAngle(arg1)
}

func _swig_wrap_btConeTwistConstraint_isPastSwingLimit(SwigcptrBtConeTwistConstraint) bool

func (arg1 SwigcptrBtConeTwistConstraint) IsPastSwingLimit() bool {
	return _swig_wrap_btConeTwistConstraint_isPastSwingLimit(arg1)
}

func _swig_wrap_btConeTwistConstraint_setDamping(SwigcptrBtConeTwistConstraint, float32)

func (arg1 SwigcptrBtConeTwistConstraint) SetDamping(arg2 float32) {
	_swig_wrap_btConeTwistConstraint_setDamping(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraint_enableMotor(SwigcptrBtConeTwistConstraint, bool)

func (arg1 SwigcptrBtConeTwistConstraint) EnableMotor(arg2 bool) {
	_swig_wrap_btConeTwistConstraint_enableMotor(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraint_setMaxMotorImpulse(SwigcptrBtConeTwistConstraint, float32)

func (arg1 SwigcptrBtConeTwistConstraint) SetMaxMotorImpulse(arg2 float32) {
	_swig_wrap_btConeTwistConstraint_setMaxMotorImpulse(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraint_setMaxMotorImpulseNormalized(SwigcptrBtConeTwistConstraint, float32)

func (arg1 SwigcptrBtConeTwistConstraint) SetMaxMotorImpulseNormalized(arg2 float32) {
	_swig_wrap_btConeTwistConstraint_setMaxMotorImpulseNormalized(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraint_getFixThresh(SwigcptrBtConeTwistConstraint) float32

func (arg1 SwigcptrBtConeTwistConstraint) GetFixThresh() float32 {
	return _swig_wrap_btConeTwistConstraint_getFixThresh(arg1)
}

func _swig_wrap_btConeTwistConstraint_setFixThresh(SwigcptrBtConeTwistConstraint, float32)

func (arg1 SwigcptrBtConeTwistConstraint) SetFixThresh(arg2 float32) {
	_swig_wrap_btConeTwistConstraint_setFixThresh(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraint_setMotorTarget(SwigcptrBtConeTwistConstraint, uintptr)

func (arg1 SwigcptrBtConeTwistConstraint) SetMotorTarget(arg2 BtQuaternion) {
	_swig_wrap_btConeTwistConstraint_setMotorTarget(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeTwistConstraint_setMotorTargetInConstraintSpace(SwigcptrBtConeTwistConstraint, uintptr)

func (arg1 SwigcptrBtConeTwistConstraint) SetMotorTargetInConstraintSpace(arg2 BtQuaternion) {
	_swig_wrap_btConeTwistConstraint_setMotorTargetInConstraintSpace(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeTwistConstraint_GetPointForAngle(SwigcptrBtConeTwistConstraint, float32, float32) SwigcptrBtVector3

func (arg1 SwigcptrBtConeTwistConstraint) GetPointForAngle(arg2 float32, arg3 float32) BtVector3 {
	return _swig_wrap_btConeTwistConstraint_GetPointForAngle(arg1, arg2, arg3)
}

func _swig_wrap_btConeTwistConstraint_setParam__SWIG_0(SwigcptrBtConeTwistConstraint, int, float32, int)

func (arg1 SwigcptrBtConeTwistConstraint) SetParam__SWIG_0(arg2 int, arg3 float32, arg4 int) {
	_swig_wrap_btConeTwistConstraint_setParam__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btConeTwistConstraint_setParam__SWIG_1(SwigcptrBtConeTwistConstraint, int, float32)

func (arg1 SwigcptrBtConeTwistConstraint) SetParam__SWIG_1(arg2 int, arg3 float32) {
	_swig_wrap_btConeTwistConstraint_setParam__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBtConeTwistConstraint) SetParam(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetParam__SWIG_1(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetParam__SWIG_0(a[0].(int), a[1].(float32), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConeTwistConstraint_setFrames(SwigcptrBtConeTwistConstraint, uintptr, uintptr)

func (arg1 SwigcptrBtConeTwistConstraint) SetFrames(arg2 BtTransform, arg3 BtTransform) {
	_swig_wrap_btConeTwistConstraint_setFrames(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConeTwistConstraint_getFrameOffsetA(SwigcptrBtConeTwistConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtConeTwistConstraint) GetFrameOffsetA() BtTransform {
	return _swig_wrap_btConeTwistConstraint_getFrameOffsetA(arg1)
}

func _swig_wrap_btConeTwistConstraint_getFrameOffsetB(SwigcptrBtConeTwistConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtConeTwistConstraint) GetFrameOffsetB() BtTransform {
	return _swig_wrap_btConeTwistConstraint_getFrameOffsetB(arg1)
}

func _swig_wrap_btConeTwistConstraint_getParam__SWIG_0(SwigcptrBtConeTwistConstraint, int, int) float32

func (arg1 SwigcptrBtConeTwistConstraint) GetParam__SWIG_0(arg2 int, arg3 int) float32 {
	return _swig_wrap_btConeTwistConstraint_getParam__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btConeTwistConstraint_getParam__SWIG_1(SwigcptrBtConeTwistConstraint, int) float32

func (arg1 SwigcptrBtConeTwistConstraint) GetParam__SWIG_1(arg2 int) float32 {
	return _swig_wrap_btConeTwistConstraint_getParam__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtConeTwistConstraint) GetParam(a ...interface{}) float32 {
	argc := len(a)
	if argc == 1 {
		return p.GetParam__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.GetParam__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConeTwistConstraint_calculateSerializeBufferSize(SwigcptrBtConeTwistConstraint) int

func (arg1 SwigcptrBtConeTwistConstraint) CalculateSerializeBufferSize() int {
	return _swig_wrap_btConeTwistConstraint_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btConeTwistConstraint_serialize(SwigcptrBtConeTwistConstraint, uintptr, uintptr) string

func (arg1 SwigcptrBtConeTwistConstraint) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btConeTwistConstraint_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btConeTwistConstraint(uintptr)

func DeleteBtConeTwistConstraint(arg1 BtConeTwistConstraint) {
	_swig_wrap_delete_btConeTwistConstraint(arg1.Swigcptr())
}

func _swig_wrap_btConeTwistConstraint_getFixedBody() SwigcptrBtRigidBody

func BtConeTwistConstraintGetFixedBody() BtRigidBody {
	return _swig_wrap_btConeTwistConstraint_getFixedBody()
}

func _swig_wrap_btConeTwistConstraint_getOverrideNumSolverIterations(SwigcptrBtConeTwistConstraint) int

func (_swig_base SwigcptrBtConeTwistConstraint) GetOverrideNumSolverIterations() int {
	return _swig_wrap_btConeTwistConstraint_getOverrideNumSolverIterations(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_setOverrideNumSolverIterations(SwigcptrBtConeTwistConstraint, int)

func (_swig_base SwigcptrBtConeTwistConstraint) SetOverrideNumSolverIterations(arg1 int) {
	_swig_wrap_btConeTwistConstraint_setOverrideNumSolverIterations(_swig_base, arg1)
}

func _swig_wrap_btConeTwistConstraint_setupSolverConstraint(SwigcptrBtConeTwistConstraint, uintptr, int, int, float32)

func (_swig_base SwigcptrBtConeTwistConstraint) SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32) {
	_swig_wrap_btConeTwistConstraint_setupSolverConstraint(_swig_base, arg1.Swigcptr(), arg2, arg3, arg4)
}

func _swig_wrap_btConeTwistConstraint_internalSetAppliedImpulse(SwigcptrBtConeTwistConstraint, float32)

func (_swig_base SwigcptrBtConeTwistConstraint) InternalSetAppliedImpulse(arg1 float32) {
	_swig_wrap_btConeTwistConstraint_internalSetAppliedImpulse(_swig_base, arg1)
}

func _swig_wrap_btConeTwistConstraint_internalGetAppliedImpulse(SwigcptrBtConeTwistConstraint) float32

func (_swig_base SwigcptrBtConeTwistConstraint) InternalGetAppliedImpulse() float32 {
	return _swig_wrap_btConeTwistConstraint_internalGetAppliedImpulse(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_getBreakingImpulseThreshold(SwigcptrBtConeTwistConstraint) float32

func (_swig_base SwigcptrBtConeTwistConstraint) GetBreakingImpulseThreshold() float32 {
	return _swig_wrap_btConeTwistConstraint_getBreakingImpulseThreshold(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_setBreakingImpulseThreshold(SwigcptrBtConeTwistConstraint, float32)

func (_swig_base SwigcptrBtConeTwistConstraint) SetBreakingImpulseThreshold(arg1 float32) {
	_swig_wrap_btConeTwistConstraint_setBreakingImpulseThreshold(_swig_base, arg1)
}

func _swig_wrap_btConeTwistConstraint_isEnabled(SwigcptrBtConeTwistConstraint) bool

func (_swig_base SwigcptrBtConeTwistConstraint) IsEnabled() bool {
	return _swig_wrap_btConeTwistConstraint_isEnabled(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_setEnabled(SwigcptrBtConeTwistConstraint, bool)

func (_swig_base SwigcptrBtConeTwistConstraint) SetEnabled(arg1 bool) {
	_swig_wrap_btConeTwistConstraint_setEnabled(_swig_base, arg1)
}

func _swig_wrap_btConeTwistConstraint_getUserConstraintType(SwigcptrBtConeTwistConstraint) int

func (_swig_base SwigcptrBtConeTwistConstraint) GetUserConstraintType() int {
	return _swig_wrap_btConeTwistConstraint_getUserConstraintType(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_setUserConstraintType(SwigcptrBtConeTwistConstraint, int)

func (_swig_base SwigcptrBtConeTwistConstraint) SetUserConstraintType(arg1 int) {
	_swig_wrap_btConeTwistConstraint_setUserConstraintType(_swig_base, arg1)
}

func _swig_wrap_btConeTwistConstraint_setUserConstraintId(SwigcptrBtConeTwistConstraint, int)

func (_swig_base SwigcptrBtConeTwistConstraint) SetUserConstraintId(arg1 int) {
	_swig_wrap_btConeTwistConstraint_setUserConstraintId(_swig_base, arg1)
}

func _swig_wrap_btConeTwistConstraint_getUserConstraintId(SwigcptrBtConeTwistConstraint) int

func (_swig_base SwigcptrBtConeTwistConstraint) GetUserConstraintId() int {
	return _swig_wrap_btConeTwistConstraint_getUserConstraintId(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_setUserConstraintPtr(SwigcptrBtConeTwistConstraint, uintptr)

func (_swig_base SwigcptrBtConeTwistConstraint) SetUserConstraintPtr(arg1 uintptr) {
	_swig_wrap_btConeTwistConstraint_setUserConstraintPtr(_swig_base, arg1)
}

func _swig_wrap_btConeTwistConstraint_getUserConstraintPtr(SwigcptrBtConeTwistConstraint) uintptr

func (_swig_base SwigcptrBtConeTwistConstraint) GetUserConstraintPtr() uintptr {
	return _swig_wrap_btConeTwistConstraint_getUserConstraintPtr(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_setJointFeedback(SwigcptrBtConeTwistConstraint, uintptr)

func (_swig_base SwigcptrBtConeTwistConstraint) SetJointFeedback(arg1 BtJointFeedback) {
	_swig_wrap_btConeTwistConstraint_setJointFeedback(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btConeTwistConstraint_getJointFeedback__SWIG_0(SwigcptrBtConeTwistConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtConeTwistConstraint) GetJointFeedback__SWIG_0() BtJointFeedback {
	return _swig_wrap_btConeTwistConstraint_getJointFeedback__SWIG_0(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_getJointFeedback__SWIG_1(SwigcptrBtConeTwistConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtConeTwistConstraint) GetJointFeedback__SWIG_1() BtJointFeedback {
	return _swig_wrap_btConeTwistConstraint_getJointFeedback__SWIG_1(_swig_base)
}

func (p SwigcptrBtConeTwistConstraint) GetJointFeedback(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetJointFeedback__SWIG_0()
	}
	if argc == 0 {
		return p.GetJointFeedback__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btConeTwistConstraint_getUid(SwigcptrBtConeTwistConstraint) int

func (_swig_base SwigcptrBtConeTwistConstraint) GetUid() int {
	return _swig_wrap_btConeTwistConstraint_getUid(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_needsFeedback(SwigcptrBtConeTwistConstraint) bool

func (_swig_base SwigcptrBtConeTwistConstraint) NeedsFeedback() bool {
	return _swig_wrap_btConeTwistConstraint_needsFeedback(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_enableFeedback(SwigcptrBtConeTwistConstraint, bool)

func (_swig_base SwigcptrBtConeTwistConstraint) EnableFeedback(arg1 bool) {
	_swig_wrap_btConeTwistConstraint_enableFeedback(_swig_base, arg1)
}

func _swig_wrap_btConeTwistConstraint_getAppliedImpulse(SwigcptrBtConeTwistConstraint) float32

func (_swig_base SwigcptrBtConeTwistConstraint) GetAppliedImpulse() float32 {
	return _swig_wrap_btConeTwistConstraint_getAppliedImpulse(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_getConstraintType(SwigcptrBtConeTwistConstraint) BtTypedConstraintType

func (_swig_base SwigcptrBtConeTwistConstraint) GetConstraintType() BtTypedConstraintType {
	return _swig_wrap_btConeTwistConstraint_getConstraintType(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_setDbgDrawSize(SwigcptrBtConeTwistConstraint, float32)

func (_swig_base SwigcptrBtConeTwistConstraint) SetDbgDrawSize(arg1 float32) {
	_swig_wrap_btConeTwistConstraint_setDbgDrawSize(_swig_base, arg1)
}

func _swig_wrap_btConeTwistConstraint_getDbgDrawSize(SwigcptrBtConeTwistConstraint) float32

func (_swig_base SwigcptrBtConeTwistConstraint) GetDbgDrawSize() float32 {
	return _swig_wrap_btConeTwistConstraint_getDbgDrawSize(_swig_base)
}

func _swig_wrap_SetbtConeTwistConstraint_M_objectType(SwigcptrBtConeTwistConstraint, int)

func (_swig_base SwigcptrBtConeTwistConstraint) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtConeTwistConstraint_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtConeTwistConstraint_M_objectType(SwigcptrBtConeTwistConstraint) int

func (_swig_base SwigcptrBtConeTwistConstraint) GetM_objectType() int {
	return _swig_wrap_GetbtConeTwistConstraint_M_objectType(_swig_base)
}

func _swig_wrap_btConeTwistConstraint_getObjectType(SwigcptrBtConeTwistConstraint) int

func (_swig_base SwigcptrBtConeTwistConstraint) GetObjectType() int {
	return _swig_wrap_btConeTwistConstraint_getObjectType(_swig_base)
}

func (p SwigcptrBtConeTwistConstraint) SwigIsBtTypedConstraint() {
}

func (p SwigcptrBtConeTwistConstraint) SwigGetBtTypedConstraint() BtTypedConstraint {
	return SwigcptrBtTypedConstraint(p.Swigcptr())
}

func (p SwigcptrBtConeTwistConstraint) SwigIsBtTypedObject() {
}

func (p SwigcptrBtConeTwistConstraint) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtConeTwistConstraint interface {
	Swigcptr() uintptr
	SwigIsBtConeTwistConstraint()
	BuildJacobian()
	GetInfo1(arg2 BtConstraintInfo1)
	GetInfo1NonVirtual(arg2 BtConstraintInfo1)
	GetInfo2(arg2 BtConstraintInfo2)
	GetInfo2NonVirtual(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtMatrix3x3, arg6 BtMatrix3x3)
	SolveConstraintObsolete(arg2 BtSolverBody, arg3 BtSolverBody, arg4 float32)
	UpdateRHS(arg2 float32)
	GetRigidBodyA() BtRigidBody
	GetRigidBodyB() BtRigidBody
	SetAngularOnly(arg2 bool)
	SetLimit(a ...interface{})
	GetAFrame() BtTransform
	GetBFrame() BtTransform
	GetSolveTwistLimit() int
	GetSolveSwingLimit() int
	GetTwistLimitSign() float32
	CalcAngleInfo()
	CalcAngleInfo2(arg2 BtTransform, arg3 BtTransform, arg4 BtMatrix3x3, arg5 BtMatrix3x3)
	GetSwingSpan1() float32
	GetSwingSpan2() float32
	GetTwistSpan() float32
	GetTwistAngle() float32
	IsPastSwingLimit() bool
	SetDamping(arg2 float32)
	EnableMotor(arg2 bool)
	SetMaxMotorImpulse(arg2 float32)
	SetMaxMotorImpulseNormalized(arg2 float32)
	GetFixThresh() float32
	SetFixThresh(arg2 float32)
	SetMotorTarget(arg2 BtQuaternion)
	SetMotorTargetInConstraintSpace(arg2 BtQuaternion)
	GetPointForAngle(arg2 float32, arg3 float32) BtVector3
	SetParam(a ...interface{})
	SetFrames(arg2 BtTransform, arg3 BtTransform)
	GetFrameOffsetA() BtTransform
	GetFrameOffsetB() BtTransform
	GetParam(a ...interface{}) float32
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetOverrideNumSolverIterations() int
	SetOverrideNumSolverIterations(arg1 int)
	SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32)
	InternalSetAppliedImpulse(arg1 float32)
	InternalGetAppliedImpulse() float32
	GetBreakingImpulseThreshold() float32
	SetBreakingImpulseThreshold(arg1 float32)
	IsEnabled() bool
	SetEnabled(arg1 bool)
	GetUserConstraintType() int
	SetUserConstraintType(arg1 int)
	SetUserConstraintId(arg1 int)
	GetUserConstraintId() int
	SetUserConstraintPtr(arg1 uintptr)
	GetUserConstraintPtr() uintptr
	SetJointFeedback(arg1 BtJointFeedback)
	GetJointFeedback(a ...interface{}) interface{}
	GetUid() int
	NeedsFeedback() bool
	EnableFeedback(arg1 bool)
	GetAppliedImpulse() float32
	GetConstraintType() BtTypedConstraintType
	SetDbgDrawSize(arg1 float32)
	GetDbgDrawSize() float32
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtTypedConstraint()
	SwigGetBtTypedConstraint() BtTypedConstraint
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

type SwigcptrBtConeTwistConstraintDoubleData uintptr

func (p SwigcptrBtConeTwistConstraintDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConeTwistConstraintDoubleData) SwigIsBtConeTwistConstraintDoubleData() {
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_typeConstraintData_set(SwigcptrBtConeTwistConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData) {
	_swig_wrap_btConeTwistConstraintDoubleData_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_typeConstraintData_get(SwigcptrBtConeTwistConstraintDoubleData) SwigcptrBtTypedConstraintDoubleData

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) GetM_typeConstraintData() BtTypedConstraintDoubleData {
	return _swig_wrap_btConeTwistConstraintDoubleData_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_rbAFrame_set(SwigcptrBtConeTwistConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) SetM_rbAFrame(arg2 BtTransformDoubleData) {
	_swig_wrap_btConeTwistConstraintDoubleData_m_rbAFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_rbAFrame_get(SwigcptrBtConeTwistConstraintDoubleData) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) GetM_rbAFrame() BtTransformDoubleData {
	return _swig_wrap_btConeTwistConstraintDoubleData_m_rbAFrame_get(arg1)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_rbBFrame_set(SwigcptrBtConeTwistConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) SetM_rbBFrame(arg2 BtTransformDoubleData) {
	_swig_wrap_btConeTwistConstraintDoubleData_m_rbBFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_rbBFrame_get(SwigcptrBtConeTwistConstraintDoubleData) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) GetM_rbBFrame() BtTransformDoubleData {
	return _swig_wrap_btConeTwistConstraintDoubleData_m_rbBFrame_get(arg1)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_swingSpan1_set(SwigcptrBtConeTwistConstraintDoubleData, float64)

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) SetM_swingSpan1(arg2 float64) {
	_swig_wrap_btConeTwistConstraintDoubleData_m_swingSpan1_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_swingSpan1_get(SwigcptrBtConeTwistConstraintDoubleData) float64

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) GetM_swingSpan1() float64 {
	return _swig_wrap_btConeTwistConstraintDoubleData_m_swingSpan1_get(arg1)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_swingSpan2_set(SwigcptrBtConeTwistConstraintDoubleData, float64)

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) SetM_swingSpan2(arg2 float64) {
	_swig_wrap_btConeTwistConstraintDoubleData_m_swingSpan2_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_swingSpan2_get(SwigcptrBtConeTwistConstraintDoubleData) float64

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) GetM_swingSpan2() float64 {
	return _swig_wrap_btConeTwistConstraintDoubleData_m_swingSpan2_get(arg1)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_twistSpan_set(SwigcptrBtConeTwistConstraintDoubleData, float64)

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) SetM_twistSpan(arg2 float64) {
	_swig_wrap_btConeTwistConstraintDoubleData_m_twistSpan_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_twistSpan_get(SwigcptrBtConeTwistConstraintDoubleData) float64

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) GetM_twistSpan() float64 {
	return _swig_wrap_btConeTwistConstraintDoubleData_m_twistSpan_get(arg1)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_limitSoftness_set(SwigcptrBtConeTwistConstraintDoubleData, float64)

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) SetM_limitSoftness(arg2 float64) {
	_swig_wrap_btConeTwistConstraintDoubleData_m_limitSoftness_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_limitSoftness_get(SwigcptrBtConeTwistConstraintDoubleData) float64

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) GetM_limitSoftness() float64 {
	return _swig_wrap_btConeTwistConstraintDoubleData_m_limitSoftness_get(arg1)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_biasFactor_set(SwigcptrBtConeTwistConstraintDoubleData, float64)

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) SetM_biasFactor(arg2 float64) {
	_swig_wrap_btConeTwistConstraintDoubleData_m_biasFactor_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_biasFactor_get(SwigcptrBtConeTwistConstraintDoubleData) float64

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) GetM_biasFactor() float64 {
	return _swig_wrap_btConeTwistConstraintDoubleData_m_biasFactor_get(arg1)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_relaxationFactor_set(SwigcptrBtConeTwistConstraintDoubleData, float64)

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) SetM_relaxationFactor(arg2 float64) {
	_swig_wrap_btConeTwistConstraintDoubleData_m_relaxationFactor_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_relaxationFactor_get(SwigcptrBtConeTwistConstraintDoubleData) float64

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) GetM_relaxationFactor() float64 {
	return _swig_wrap_btConeTwistConstraintDoubleData_m_relaxationFactor_get(arg1)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_damping_set(SwigcptrBtConeTwistConstraintDoubleData, float64)

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) SetM_damping(arg2 float64) {
	_swig_wrap_btConeTwistConstraintDoubleData_m_damping_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintDoubleData_m_damping_get(SwigcptrBtConeTwistConstraintDoubleData) float64

func (arg1 SwigcptrBtConeTwistConstraintDoubleData) GetM_damping() float64 {
	return _swig_wrap_btConeTwistConstraintDoubleData_m_damping_get(arg1)
}

func _swig_wrap_new_btConeTwistConstraintDoubleData() SwigcptrBtConeTwistConstraintDoubleData

func NewBtConeTwistConstraintDoubleData() BtConeTwistConstraintDoubleData {
	return _swig_wrap_new_btConeTwistConstraintDoubleData()
}

func _swig_wrap_delete_btConeTwistConstraintDoubleData(uintptr)

func DeleteBtConeTwistConstraintDoubleData(arg1 BtConeTwistConstraintDoubleData) {
	_swig_wrap_delete_btConeTwistConstraintDoubleData(arg1.Swigcptr())
}

type BtConeTwistConstraintDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtConeTwistConstraintDoubleData()
	SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData)
	GetM_typeConstraintData() BtTypedConstraintDoubleData
	SetM_rbAFrame(arg2 BtTransformDoubleData)
	GetM_rbAFrame() BtTransformDoubleData
	SetM_rbBFrame(arg2 BtTransformDoubleData)
	GetM_rbBFrame() BtTransformDoubleData
	SetM_swingSpan1(arg2 float64)
	GetM_swingSpan1() float64
	SetM_swingSpan2(arg2 float64)
	GetM_swingSpan2() float64
	SetM_twistSpan(arg2 float64)
	GetM_twistSpan() float64
	SetM_limitSoftness(arg2 float64)
	GetM_limitSoftness() float64
	SetM_biasFactor(arg2 float64)
	GetM_biasFactor() float64
	SetM_relaxationFactor(arg2 float64)
	GetM_relaxationFactor() float64
	SetM_damping(arg2 float64)
	GetM_damping() float64
}

type SwigcptrBtConeTwistConstraintData uintptr

func (p SwigcptrBtConeTwistConstraintData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConeTwistConstraintData) SwigIsBtConeTwistConstraintData() {
}

func _swig_wrap_btConeTwistConstraintData_m_typeConstraintData_set(SwigcptrBtConeTwistConstraintData, uintptr)

func (arg1 SwigcptrBtConeTwistConstraintData) SetM_typeConstraintData(arg2 BtTypedConstraintData) {
	_swig_wrap_btConeTwistConstraintData_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeTwistConstraintData_m_typeConstraintData_get(SwigcptrBtConeTwistConstraintData) SwigcptrBtTypedConstraintData

func (arg1 SwigcptrBtConeTwistConstraintData) GetM_typeConstraintData() BtTypedConstraintData {
	return _swig_wrap_btConeTwistConstraintData_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btConeTwistConstraintData_m_rbAFrame_set(SwigcptrBtConeTwistConstraintData, uintptr)

func (arg1 SwigcptrBtConeTwistConstraintData) SetM_rbAFrame(arg2 BtTransformFloatData) {
	_swig_wrap_btConeTwistConstraintData_m_rbAFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeTwistConstraintData_m_rbAFrame_get(SwigcptrBtConeTwistConstraintData) SwigcptrBtTransformFloatData

func (arg1 SwigcptrBtConeTwistConstraintData) GetM_rbAFrame() BtTransformFloatData {
	return _swig_wrap_btConeTwistConstraintData_m_rbAFrame_get(arg1)
}

func _swig_wrap_btConeTwistConstraintData_m_rbBFrame_set(SwigcptrBtConeTwistConstraintData, uintptr)

func (arg1 SwigcptrBtConeTwistConstraintData) SetM_rbBFrame(arg2 BtTransformFloatData) {
	_swig_wrap_btConeTwistConstraintData_m_rbBFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btConeTwistConstraintData_m_rbBFrame_get(SwigcptrBtConeTwistConstraintData) SwigcptrBtTransformFloatData

func (arg1 SwigcptrBtConeTwistConstraintData) GetM_rbBFrame() BtTransformFloatData {
	return _swig_wrap_btConeTwistConstraintData_m_rbBFrame_get(arg1)
}

func _swig_wrap_btConeTwistConstraintData_m_swingSpan1_set(SwigcptrBtConeTwistConstraintData, float32)

func (arg1 SwigcptrBtConeTwistConstraintData) SetM_swingSpan1(arg2 float32) {
	_swig_wrap_btConeTwistConstraintData_m_swingSpan1_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintData_m_swingSpan1_get(SwigcptrBtConeTwistConstraintData) float32

func (arg1 SwigcptrBtConeTwistConstraintData) GetM_swingSpan1() float32 {
	return _swig_wrap_btConeTwistConstraintData_m_swingSpan1_get(arg1)
}

func _swig_wrap_btConeTwistConstraintData_m_swingSpan2_set(SwigcptrBtConeTwistConstraintData, float32)

func (arg1 SwigcptrBtConeTwistConstraintData) SetM_swingSpan2(arg2 float32) {
	_swig_wrap_btConeTwistConstraintData_m_swingSpan2_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintData_m_swingSpan2_get(SwigcptrBtConeTwistConstraintData) float32

func (arg1 SwigcptrBtConeTwistConstraintData) GetM_swingSpan2() float32 {
	return _swig_wrap_btConeTwistConstraintData_m_swingSpan2_get(arg1)
}

func _swig_wrap_btConeTwistConstraintData_m_twistSpan_set(SwigcptrBtConeTwistConstraintData, float32)

func (arg1 SwigcptrBtConeTwistConstraintData) SetM_twistSpan(arg2 float32) {
	_swig_wrap_btConeTwistConstraintData_m_twistSpan_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintData_m_twistSpan_get(SwigcptrBtConeTwistConstraintData) float32

func (arg1 SwigcptrBtConeTwistConstraintData) GetM_twistSpan() float32 {
	return _swig_wrap_btConeTwistConstraintData_m_twistSpan_get(arg1)
}

func _swig_wrap_btConeTwistConstraintData_m_limitSoftness_set(SwigcptrBtConeTwistConstraintData, float32)

func (arg1 SwigcptrBtConeTwistConstraintData) SetM_limitSoftness(arg2 float32) {
	_swig_wrap_btConeTwistConstraintData_m_limitSoftness_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintData_m_limitSoftness_get(SwigcptrBtConeTwistConstraintData) float32

func (arg1 SwigcptrBtConeTwistConstraintData) GetM_limitSoftness() float32 {
	return _swig_wrap_btConeTwistConstraintData_m_limitSoftness_get(arg1)
}

func _swig_wrap_btConeTwistConstraintData_m_biasFactor_set(SwigcptrBtConeTwistConstraintData, float32)

func (arg1 SwigcptrBtConeTwistConstraintData) SetM_biasFactor(arg2 float32) {
	_swig_wrap_btConeTwistConstraintData_m_biasFactor_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintData_m_biasFactor_get(SwigcptrBtConeTwistConstraintData) float32

func (arg1 SwigcptrBtConeTwistConstraintData) GetM_biasFactor() float32 {
	return _swig_wrap_btConeTwistConstraintData_m_biasFactor_get(arg1)
}

func _swig_wrap_btConeTwistConstraintData_m_relaxationFactor_set(SwigcptrBtConeTwistConstraintData, float32)

func (arg1 SwigcptrBtConeTwistConstraintData) SetM_relaxationFactor(arg2 float32) {
	_swig_wrap_btConeTwistConstraintData_m_relaxationFactor_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintData_m_relaxationFactor_get(SwigcptrBtConeTwistConstraintData) float32

func (arg1 SwigcptrBtConeTwistConstraintData) GetM_relaxationFactor() float32 {
	return _swig_wrap_btConeTwistConstraintData_m_relaxationFactor_get(arg1)
}

func _swig_wrap_btConeTwistConstraintData_m_damping_set(SwigcptrBtConeTwistConstraintData, float32)

func (arg1 SwigcptrBtConeTwistConstraintData) SetM_damping(arg2 float32) {
	_swig_wrap_btConeTwistConstraintData_m_damping_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintData_m_damping_get(SwigcptrBtConeTwistConstraintData) float32

func (arg1 SwigcptrBtConeTwistConstraintData) GetM_damping() float32 {
	return _swig_wrap_btConeTwistConstraintData_m_damping_get(arg1)
}

func _swig_wrap_btConeTwistConstraintData_m_pad_set(SwigcptrBtConeTwistConstraintData, string)

func (arg1 SwigcptrBtConeTwistConstraintData) SetM_pad(arg2 string) {
	_swig_wrap_btConeTwistConstraintData_m_pad_set(arg1, arg2)
}

func _swig_wrap_btConeTwistConstraintData_m_pad_get(SwigcptrBtConeTwistConstraintData) string

func (arg1 SwigcptrBtConeTwistConstraintData) GetM_pad() string {
	return _swig_wrap_btConeTwistConstraintData_m_pad_get(arg1)
}

func _swig_wrap_new_btConeTwistConstraintData() SwigcptrBtConeTwistConstraintData

func NewBtConeTwistConstraintData() BtConeTwistConstraintData {
	return _swig_wrap_new_btConeTwistConstraintData()
}

func _swig_wrap_delete_btConeTwistConstraintData(uintptr)

func DeleteBtConeTwistConstraintData(arg1 BtConeTwistConstraintData) {
	_swig_wrap_delete_btConeTwistConstraintData(arg1.Swigcptr())
}

type BtConeTwistConstraintData interface {
	Swigcptr() uintptr
	SwigIsBtConeTwistConstraintData()
	SetM_typeConstraintData(arg2 BtTypedConstraintData)
	GetM_typeConstraintData() BtTypedConstraintData
	SetM_rbAFrame(arg2 BtTransformFloatData)
	GetM_rbAFrame() BtTransformFloatData
	SetM_rbBFrame(arg2 BtTransformFloatData)
	GetM_rbBFrame() BtTransformFloatData
	SetM_swingSpan1(arg2 float32)
	GetM_swingSpan1() float32
	SetM_swingSpan2(arg2 float32)
	GetM_swingSpan2() float32
	SetM_twistSpan(arg2 float32)
	GetM_twistSpan() float32
	SetM_limitSoftness(arg2 float32)
	GetM_limitSoftness() float32
	SetM_biasFactor(arg2 float32)
	GetM_biasFactor() float32
	SetM_relaxationFactor(arg2 float32)
	GetM_relaxationFactor() float32
	SetM_damping(arg2 float32)
	GetM_damping() float32
	SetM_pad(arg2 string)
	GetM_pad() string
}

const BtGeneric6DofConstraintDataName string = "btGeneric6DofConstraintData"

type SwigcptrBtRotationalLimitMotor uintptr

func (p SwigcptrBtRotationalLimitMotor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtRotationalLimitMotor) SwigIsBtRotationalLimitMotor() {
}

func _swig_wrap_btRotationalLimitMotor_m_loLimit_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_loLimit(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_loLimit_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_loLimit_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_loLimit() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_loLimit_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_hiLimit_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_hiLimit(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_hiLimit_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_hiLimit_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_hiLimit() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_hiLimit_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_targetVelocity_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_targetVelocity(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_targetVelocity_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_targetVelocity_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_targetVelocity() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_targetVelocity_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_maxMotorForce_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_maxMotorForce(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_maxMotorForce_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_maxMotorForce_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_maxMotorForce() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_maxMotorForce_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_maxLimitForce_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_maxLimitForce(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_maxLimitForce_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_maxLimitForce_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_maxLimitForce() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_maxLimitForce_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_damping_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_damping(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_damping_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_damping_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_damping() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_damping_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_limitSoftness_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_limitSoftness(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_limitSoftness_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_limitSoftness_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_limitSoftness() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_limitSoftness_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_normalCFM_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_normalCFM(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_normalCFM_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_normalCFM_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_normalCFM() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_normalCFM_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_stopERP_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_stopERP(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_stopERP_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_stopERP_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_stopERP() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_stopERP_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_stopCFM_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_stopCFM(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_stopCFM_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_stopCFM_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_stopCFM() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_stopCFM_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_bounce_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_bounce(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_bounce_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_bounce_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_bounce() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_bounce_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_enableMotor_set(SwigcptrBtRotationalLimitMotor, bool)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_enableMotor(arg2 bool) {
	_swig_wrap_btRotationalLimitMotor_m_enableMotor_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_enableMotor_get(SwigcptrBtRotationalLimitMotor) bool

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_enableMotor() bool {
	return _swig_wrap_btRotationalLimitMotor_m_enableMotor_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_currentLimitError_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_currentLimitError(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_currentLimitError_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_currentLimitError_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_currentLimitError() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_currentLimitError_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_currentPosition_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_currentPosition(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_currentPosition_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_currentPosition_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_currentPosition() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_currentPosition_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_currentLimit_set(SwigcptrBtRotationalLimitMotor, int)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_currentLimit(arg2 int) {
	_swig_wrap_btRotationalLimitMotor_m_currentLimit_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_currentLimit_get(SwigcptrBtRotationalLimitMotor) int

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_currentLimit() int {
	return _swig_wrap_btRotationalLimitMotor_m_currentLimit_get(arg1)
}

func _swig_wrap_btRotationalLimitMotor_m_accumulatedImpulse_set(SwigcptrBtRotationalLimitMotor, float32)

func (arg1 SwigcptrBtRotationalLimitMotor) SetM_accumulatedImpulse(arg2 float32) {
	_swig_wrap_btRotationalLimitMotor_m_accumulatedImpulse_set(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_m_accumulatedImpulse_get(SwigcptrBtRotationalLimitMotor) float32

func (arg1 SwigcptrBtRotationalLimitMotor) GetM_accumulatedImpulse() float32 {
	return _swig_wrap_btRotationalLimitMotor_m_accumulatedImpulse_get(arg1)
}

func _swig_wrap_new_btRotationalLimitMotor__SWIG_0() SwigcptrBtRotationalLimitMotor

func NewBtRotationalLimitMotor__SWIG_0() BtRotationalLimitMotor {
	return _swig_wrap_new_btRotationalLimitMotor__SWIG_0()
}

func _swig_wrap_new_btRotationalLimitMotor__SWIG_1(uintptr) SwigcptrBtRotationalLimitMotor

func NewBtRotationalLimitMotor__SWIG_1(arg1 BtRotationalLimitMotor) BtRotationalLimitMotor {
	return _swig_wrap_new_btRotationalLimitMotor__SWIG_1(arg1.Swigcptr())
}

func NewBtRotationalLimitMotor(a ...interface{}) BtRotationalLimitMotor {
	argc := len(a)
	if argc == 0 {
		return NewBtRotationalLimitMotor__SWIG_0()
	}
	if argc == 1 {
		return NewBtRotationalLimitMotor__SWIG_1(a[0].(BtRotationalLimitMotor))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btRotationalLimitMotor_isLimited(SwigcptrBtRotationalLimitMotor) bool

func (arg1 SwigcptrBtRotationalLimitMotor) IsLimited() bool {
	return _swig_wrap_btRotationalLimitMotor_isLimited(arg1)
}

func _swig_wrap_btRotationalLimitMotor_needApplyTorques(SwigcptrBtRotationalLimitMotor) bool

func (arg1 SwigcptrBtRotationalLimitMotor) NeedApplyTorques() bool {
	return _swig_wrap_btRotationalLimitMotor_needApplyTorques(arg1)
}

func _swig_wrap_btRotationalLimitMotor_testLimitValue(SwigcptrBtRotationalLimitMotor, float32) int

func (arg1 SwigcptrBtRotationalLimitMotor) TestLimitValue(arg2 float32) int {
	return _swig_wrap_btRotationalLimitMotor_testLimitValue(arg1, arg2)
}

func _swig_wrap_btRotationalLimitMotor_solveAngularLimits(SwigcptrBtRotationalLimitMotor, float32, uintptr, float32, uintptr, uintptr) float32

func (arg1 SwigcptrBtRotationalLimitMotor) SolveAngularLimits(arg2 float32, arg3 BtVector3, arg4 float32, arg5 BtRigidBody, arg6 BtRigidBody) float32 {
	return _swig_wrap_btRotationalLimitMotor_solveAngularLimits(arg1, arg2, arg3.Swigcptr(), arg4, arg5.Swigcptr(), arg6.Swigcptr())
}

func _swig_wrap_delete_btRotationalLimitMotor(uintptr)

func DeleteBtRotationalLimitMotor(arg1 BtRotationalLimitMotor) {
	_swig_wrap_delete_btRotationalLimitMotor(arg1.Swigcptr())
}

type BtRotationalLimitMotor interface {
	Swigcptr() uintptr
	SwigIsBtRotationalLimitMotor()
	SetM_loLimit(arg2 float32)
	GetM_loLimit() float32
	SetM_hiLimit(arg2 float32)
	GetM_hiLimit() float32
	SetM_targetVelocity(arg2 float32)
	GetM_targetVelocity() float32
	SetM_maxMotorForce(arg2 float32)
	GetM_maxMotorForce() float32
	SetM_maxLimitForce(arg2 float32)
	GetM_maxLimitForce() float32
	SetM_damping(arg2 float32)
	GetM_damping() float32
	SetM_limitSoftness(arg2 float32)
	GetM_limitSoftness() float32
	SetM_normalCFM(arg2 float32)
	GetM_normalCFM() float32
	SetM_stopERP(arg2 float32)
	GetM_stopERP() float32
	SetM_stopCFM(arg2 float32)
	GetM_stopCFM() float32
	SetM_bounce(arg2 float32)
	GetM_bounce() float32
	SetM_enableMotor(arg2 bool)
	GetM_enableMotor() bool
	SetM_currentLimitError(arg2 float32)
	GetM_currentLimitError() float32
	SetM_currentPosition(arg2 float32)
	GetM_currentPosition() float32
	SetM_currentLimit(arg2 int)
	GetM_currentLimit() int
	SetM_accumulatedImpulse(arg2 float32)
	GetM_accumulatedImpulse() float32
	IsLimited() bool
	NeedApplyTorques() bool
	TestLimitValue(arg2 float32) int
	SolveAngularLimits(arg2 float32, arg3 BtVector3, arg4 float32, arg5 BtRigidBody, arg6 BtRigidBody) float32
}

type SwigcptrBtTranslationalLimitMotor uintptr

func (p SwigcptrBtTranslationalLimitMotor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtTranslationalLimitMotor) SwigIsBtTranslationalLimitMotor() {
}

func _swig_wrap_btTranslationalLimitMotor_m_lowerLimit_set(SwigcptrBtTranslationalLimitMotor, uintptr)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_lowerLimit(arg2 BtVector3) {
	_swig_wrap_btTranslationalLimitMotor_m_lowerLimit_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTranslationalLimitMotor_m_lowerLimit_get(SwigcptrBtTranslationalLimitMotor) SwigcptrBtVector3

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_lowerLimit() BtVector3 {
	return _swig_wrap_btTranslationalLimitMotor_m_lowerLimit_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_upperLimit_set(SwigcptrBtTranslationalLimitMotor, uintptr)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_upperLimit(arg2 BtVector3) {
	_swig_wrap_btTranslationalLimitMotor_m_upperLimit_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTranslationalLimitMotor_m_upperLimit_get(SwigcptrBtTranslationalLimitMotor) SwigcptrBtVector3

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_upperLimit() BtVector3 {
	return _swig_wrap_btTranslationalLimitMotor_m_upperLimit_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_accumulatedImpulse_set(SwigcptrBtTranslationalLimitMotor, uintptr)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_accumulatedImpulse(arg2 BtVector3) {
	_swig_wrap_btTranslationalLimitMotor_m_accumulatedImpulse_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTranslationalLimitMotor_m_accumulatedImpulse_get(SwigcptrBtTranslationalLimitMotor) SwigcptrBtVector3

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_accumulatedImpulse() BtVector3 {
	return _swig_wrap_btTranslationalLimitMotor_m_accumulatedImpulse_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_limitSoftness_set(SwigcptrBtTranslationalLimitMotor, float32)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_limitSoftness(arg2 float32) {
	_swig_wrap_btTranslationalLimitMotor_m_limitSoftness_set(arg1, arg2)
}

func _swig_wrap_btTranslationalLimitMotor_m_limitSoftness_get(SwigcptrBtTranslationalLimitMotor) float32

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_limitSoftness() float32 {
	return _swig_wrap_btTranslationalLimitMotor_m_limitSoftness_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_damping_set(SwigcptrBtTranslationalLimitMotor, float32)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_damping(arg2 float32) {
	_swig_wrap_btTranslationalLimitMotor_m_damping_set(arg1, arg2)
}

func _swig_wrap_btTranslationalLimitMotor_m_damping_get(SwigcptrBtTranslationalLimitMotor) float32

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_damping() float32 {
	return _swig_wrap_btTranslationalLimitMotor_m_damping_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_restitution_set(SwigcptrBtTranslationalLimitMotor, float32)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_restitution(arg2 float32) {
	_swig_wrap_btTranslationalLimitMotor_m_restitution_set(arg1, arg2)
}

func _swig_wrap_btTranslationalLimitMotor_m_restitution_get(SwigcptrBtTranslationalLimitMotor) float32

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_restitution() float32 {
	return _swig_wrap_btTranslationalLimitMotor_m_restitution_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_normalCFM_set(SwigcptrBtTranslationalLimitMotor, uintptr)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_normalCFM(arg2 BtVector3) {
	_swig_wrap_btTranslationalLimitMotor_m_normalCFM_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTranslationalLimitMotor_m_normalCFM_get(SwigcptrBtTranslationalLimitMotor) SwigcptrBtVector3

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_normalCFM() BtVector3 {
	return _swig_wrap_btTranslationalLimitMotor_m_normalCFM_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_stopERP_set(SwigcptrBtTranslationalLimitMotor, uintptr)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_stopERP(arg2 BtVector3) {
	_swig_wrap_btTranslationalLimitMotor_m_stopERP_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTranslationalLimitMotor_m_stopERP_get(SwigcptrBtTranslationalLimitMotor) SwigcptrBtVector3

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_stopERP() BtVector3 {
	return _swig_wrap_btTranslationalLimitMotor_m_stopERP_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_stopCFM_set(SwigcptrBtTranslationalLimitMotor, uintptr)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_stopCFM(arg2 BtVector3) {
	_swig_wrap_btTranslationalLimitMotor_m_stopCFM_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTranslationalLimitMotor_m_stopCFM_get(SwigcptrBtTranslationalLimitMotor) SwigcptrBtVector3

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_stopCFM() BtVector3 {
	return _swig_wrap_btTranslationalLimitMotor_m_stopCFM_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_enableMotor_set(SwigcptrBtTranslationalLimitMotor, *bool)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_enableMotor(arg2 *bool) {
	_swig_wrap_btTranslationalLimitMotor_m_enableMotor_set(arg1, arg2)
}

func _swig_wrap_btTranslationalLimitMotor_m_enableMotor_get(SwigcptrBtTranslationalLimitMotor) *bool

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_enableMotor() *bool {
	return _swig_wrap_btTranslationalLimitMotor_m_enableMotor_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_targetVelocity_set(SwigcptrBtTranslationalLimitMotor, uintptr)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_targetVelocity(arg2 BtVector3) {
	_swig_wrap_btTranslationalLimitMotor_m_targetVelocity_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTranslationalLimitMotor_m_targetVelocity_get(SwigcptrBtTranslationalLimitMotor) SwigcptrBtVector3

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_targetVelocity() BtVector3 {
	return _swig_wrap_btTranslationalLimitMotor_m_targetVelocity_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_maxMotorForce_set(SwigcptrBtTranslationalLimitMotor, uintptr)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_maxMotorForce(arg2 BtVector3) {
	_swig_wrap_btTranslationalLimitMotor_m_maxMotorForce_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTranslationalLimitMotor_m_maxMotorForce_get(SwigcptrBtTranslationalLimitMotor) SwigcptrBtVector3

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_maxMotorForce() BtVector3 {
	return _swig_wrap_btTranslationalLimitMotor_m_maxMotorForce_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_currentLimitError_set(SwigcptrBtTranslationalLimitMotor, uintptr)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_currentLimitError(arg2 BtVector3) {
	_swig_wrap_btTranslationalLimitMotor_m_currentLimitError_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTranslationalLimitMotor_m_currentLimitError_get(SwigcptrBtTranslationalLimitMotor) SwigcptrBtVector3

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_currentLimitError() BtVector3 {
	return _swig_wrap_btTranslationalLimitMotor_m_currentLimitError_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_currentLinearDiff_set(SwigcptrBtTranslationalLimitMotor, uintptr)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_currentLinearDiff(arg2 BtVector3) {
	_swig_wrap_btTranslationalLimitMotor_m_currentLinearDiff_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btTranslationalLimitMotor_m_currentLinearDiff_get(SwigcptrBtTranslationalLimitMotor) SwigcptrBtVector3

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_currentLinearDiff() BtVector3 {
	return _swig_wrap_btTranslationalLimitMotor_m_currentLinearDiff_get(arg1)
}

func _swig_wrap_btTranslationalLimitMotor_m_currentLimit_set(SwigcptrBtTranslationalLimitMotor, *int)

func (arg1 SwigcptrBtTranslationalLimitMotor) SetM_currentLimit(arg2 *int) {
	_swig_wrap_btTranslationalLimitMotor_m_currentLimit_set(arg1, arg2)
}

func _swig_wrap_btTranslationalLimitMotor_m_currentLimit_get(SwigcptrBtTranslationalLimitMotor) *int

func (arg1 SwigcptrBtTranslationalLimitMotor) GetM_currentLimit() *int {
	return _swig_wrap_btTranslationalLimitMotor_m_currentLimit_get(arg1)
}

func _swig_wrap_new_btTranslationalLimitMotor__SWIG_0() SwigcptrBtTranslationalLimitMotor

func NewBtTranslationalLimitMotor__SWIG_0() BtTranslationalLimitMotor {
	return _swig_wrap_new_btTranslationalLimitMotor__SWIG_0()
}

func _swig_wrap_new_btTranslationalLimitMotor__SWIG_1(uintptr) SwigcptrBtTranslationalLimitMotor

func NewBtTranslationalLimitMotor__SWIG_1(arg1 BtTranslationalLimitMotor) BtTranslationalLimitMotor {
	return _swig_wrap_new_btTranslationalLimitMotor__SWIG_1(arg1.Swigcptr())
}

func NewBtTranslationalLimitMotor(a ...interface{}) BtTranslationalLimitMotor {
	argc := len(a)
	if argc == 0 {
		return NewBtTranslationalLimitMotor__SWIG_0()
	}
	if argc == 1 {
		return NewBtTranslationalLimitMotor__SWIG_1(a[0].(BtTranslationalLimitMotor))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btTranslationalLimitMotor_isLimited(SwigcptrBtTranslationalLimitMotor, int) bool

func (arg1 SwigcptrBtTranslationalLimitMotor) IsLimited(arg2 int) bool {
	return _swig_wrap_btTranslationalLimitMotor_isLimited(arg1, arg2)
}

func _swig_wrap_btTranslationalLimitMotor_needApplyForce(SwigcptrBtTranslationalLimitMotor, int) bool

func (arg1 SwigcptrBtTranslationalLimitMotor) NeedApplyForce(arg2 int) bool {
	return _swig_wrap_btTranslationalLimitMotor_needApplyForce(arg1, arg2)
}

func _swig_wrap_btTranslationalLimitMotor_testLimitValue(SwigcptrBtTranslationalLimitMotor, int, float32) int

func (arg1 SwigcptrBtTranslationalLimitMotor) TestLimitValue(arg2 int, arg3 float32) int {
	return _swig_wrap_btTranslationalLimitMotor_testLimitValue(arg1, arg2, arg3)
}

func _swig_wrap_btTranslationalLimitMotor_solveLinearAxis(SwigcptrBtTranslationalLimitMotor, float32, float32, uintptr, uintptr, uintptr, uintptr, int, uintptr, uintptr) float32

func (arg1 SwigcptrBtTranslationalLimitMotor) SolveLinearAxis(arg2 float32, arg3 float32, arg4 BtRigidBody, arg5 BtVector3, arg6 BtRigidBody, arg7 BtVector3, arg8 int, arg9 BtVector3, arg10 BtVector3) float32 {
	return _swig_wrap_btTranslationalLimitMotor_solveLinearAxis(arg1, arg2, arg3, arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7.Swigcptr(), arg8, arg9.Swigcptr(), arg10.Swigcptr())
}

func _swig_wrap_delete_btTranslationalLimitMotor(uintptr)

func DeleteBtTranslationalLimitMotor(arg1 BtTranslationalLimitMotor) {
	_swig_wrap_delete_btTranslationalLimitMotor(arg1.Swigcptr())
}

type BtTranslationalLimitMotor interface {
	Swigcptr() uintptr
	SwigIsBtTranslationalLimitMotor()
	SetM_lowerLimit(arg2 BtVector3)
	GetM_lowerLimit() BtVector3
	SetM_upperLimit(arg2 BtVector3)
	GetM_upperLimit() BtVector3
	SetM_accumulatedImpulse(arg2 BtVector3)
	GetM_accumulatedImpulse() BtVector3
	SetM_limitSoftness(arg2 float32)
	GetM_limitSoftness() float32
	SetM_damping(arg2 float32)
	GetM_damping() float32
	SetM_restitution(arg2 float32)
	GetM_restitution() float32
	SetM_normalCFM(arg2 BtVector3)
	GetM_normalCFM() BtVector3
	SetM_stopERP(arg2 BtVector3)
	GetM_stopERP() BtVector3
	SetM_stopCFM(arg2 BtVector3)
	GetM_stopCFM() BtVector3
	SetM_enableMotor(arg2 *bool)
	GetM_enableMotor() *bool
	SetM_targetVelocity(arg2 BtVector3)
	GetM_targetVelocity() BtVector3
	SetM_maxMotorForce(arg2 BtVector3)
	GetM_maxMotorForce() BtVector3
	SetM_currentLimitError(arg2 BtVector3)
	GetM_currentLimitError() BtVector3
	SetM_currentLinearDiff(arg2 BtVector3)
	GetM_currentLinearDiff() BtVector3
	SetM_currentLimit(arg2 *int)
	GetM_currentLimit() *int
	IsLimited(arg2 int) bool
	NeedApplyForce(arg2 int) bool
	TestLimitValue(arg2 int, arg3 float32) int
	SolveLinearAxis(arg2 float32, arg3 float32, arg4 BtRigidBody, arg5 BtVector3, arg6 BtRigidBody, arg7 BtVector3, arg8 int, arg9 BtVector3, arg10 BtVector3) float32
}

type Bt6DofFlags int

func _swig_getBT_6DOF_FLAGS_CFM_NORM() Bt6DofFlags

var BT_6DOF_FLAGS_CFM_NORM Bt6DofFlags = _swig_getBT_6DOF_FLAGS_CFM_NORM()

func _swig_getBT_6DOF_FLAGS_CFM_STOP() Bt6DofFlags

var BT_6DOF_FLAGS_CFM_STOP Bt6DofFlags = _swig_getBT_6DOF_FLAGS_CFM_STOP()

func _swig_getBT_6DOF_FLAGS_ERP_STOP() Bt6DofFlags

var BT_6DOF_FLAGS_ERP_STOP Bt6DofFlags = _swig_getBT_6DOF_FLAGS_ERP_STOP()

const BT_6DOF_FLAGS_AXIS_SHIFT int = 3

type SwigcptrBtGeneric6DofConstraint uintptr

func (p SwigcptrBtGeneric6DofConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtGeneric6DofConstraint) SwigIsBtGeneric6DofConstraint() {
}

func _swig_wrap_btGeneric6DofConstraint_m_useSolveConstraintObsolete_set(SwigcptrBtGeneric6DofConstraint, bool)

func (arg1 SwigcptrBtGeneric6DofConstraint) SetM_useSolveConstraintObsolete(arg2 bool) {
	_swig_wrap_btGeneric6DofConstraint_m_useSolveConstraintObsolete_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraint_m_useSolveConstraintObsolete_get(SwigcptrBtGeneric6DofConstraint) bool

func (arg1 SwigcptrBtGeneric6DofConstraint) GetM_useSolveConstraintObsolete() bool {
	return _swig_wrap_btGeneric6DofConstraint_m_useSolveConstraintObsolete_get(arg1)
}

func _swig_wrap_new_btGeneric6DofConstraint__SWIG_0(uintptr, uintptr, uintptr, uintptr, bool) SwigcptrBtGeneric6DofConstraint

func NewBtGeneric6DofConstraint__SWIG_0(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtTransform, arg4 BtTransform, arg5 bool) BtGeneric6DofConstraint {
	return _swig_wrap_new_btGeneric6DofConstraint__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_new_btGeneric6DofConstraint__SWIG_1(uintptr, uintptr, bool) SwigcptrBtGeneric6DofConstraint

func NewBtGeneric6DofConstraint__SWIG_1(arg1 BtRigidBody, arg2 BtTransform, arg3 bool) BtGeneric6DofConstraint {
	return _swig_wrap_new_btGeneric6DofConstraint__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func NewBtGeneric6DofConstraint(a ...interface{}) BtGeneric6DofConstraint {
	argc := len(a)
	if argc == 3 {
		return NewBtGeneric6DofConstraint__SWIG_1(a[0].(BtRigidBody), a[1].(BtTransform), a[2].(bool))
	}
	if argc == 5 {
		return NewBtGeneric6DofConstraint__SWIG_0(a[0].(BtRigidBody), a[1].(BtRigidBody), a[2].(BtTransform), a[3].(BtTransform), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofConstraint_calculateTransforms__SWIG_0(SwigcptrBtGeneric6DofConstraint, uintptr, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) CalculateTransforms__SWIG_0(arg2 BtTransform, arg3 BtTransform) {
	_swig_wrap_btGeneric6DofConstraint_calculateTransforms__SWIG_0(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_calculateTransforms__SWIG_1(SwigcptrBtGeneric6DofConstraint)

func (arg1 SwigcptrBtGeneric6DofConstraint) CalculateTransforms__SWIG_1() {
	_swig_wrap_btGeneric6DofConstraint_calculateTransforms__SWIG_1(arg1)
}

func (p SwigcptrBtGeneric6DofConstraint) CalculateTransforms(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.CalculateTransforms__SWIG_1()
		return
	}
	if argc == 2 {
		p.CalculateTransforms__SWIG_0(a[0].(BtTransform), a[1].(BtTransform))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofConstraint_getCalculatedTransformA(SwigcptrBtGeneric6DofConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtGeneric6DofConstraint) GetCalculatedTransformA() BtTransform {
	return _swig_wrap_btGeneric6DofConstraint_getCalculatedTransformA(arg1)
}

func _swig_wrap_btGeneric6DofConstraint_getCalculatedTransformB(SwigcptrBtGeneric6DofConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtGeneric6DofConstraint) GetCalculatedTransformB() BtTransform {
	return _swig_wrap_btGeneric6DofConstraint_getCalculatedTransformB(arg1)
}

func _swig_wrap_btGeneric6DofConstraint_getFrameOffsetA__SWIG_0(SwigcptrBtGeneric6DofConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtGeneric6DofConstraint) GetFrameOffsetA__SWIG_0() BtTransform {
	return _swig_wrap_btGeneric6DofConstraint_getFrameOffsetA__SWIG_0(arg1)
}

func _swig_wrap_btGeneric6DofConstraint_getFrameOffsetB__SWIG_0(SwigcptrBtGeneric6DofConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtGeneric6DofConstraint) GetFrameOffsetB__SWIG_0() BtTransform {
	return _swig_wrap_btGeneric6DofConstraint_getFrameOffsetB__SWIG_0(arg1)
}

func _swig_wrap_btGeneric6DofConstraint_getFrameOffsetA__SWIG_1(SwigcptrBtGeneric6DofConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtGeneric6DofConstraint) GetFrameOffsetA__SWIG_1() BtTransform {
	return _swig_wrap_btGeneric6DofConstraint_getFrameOffsetA__SWIG_1(arg1)
}

func (p SwigcptrBtGeneric6DofConstraint) GetFrameOffsetA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetFrameOffsetA__SWIG_0()
	}
	if argc == 0 {
		return p.GetFrameOffsetA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofConstraint_getFrameOffsetB__SWIG_1(SwigcptrBtGeneric6DofConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtGeneric6DofConstraint) GetFrameOffsetB__SWIG_1() BtTransform {
	return _swig_wrap_btGeneric6DofConstraint_getFrameOffsetB__SWIG_1(arg1)
}

func (p SwigcptrBtGeneric6DofConstraint) GetFrameOffsetB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetFrameOffsetB__SWIG_0()
	}
	if argc == 0 {
		return p.GetFrameOffsetB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofConstraint_buildJacobian(SwigcptrBtGeneric6DofConstraint)

func (arg1 SwigcptrBtGeneric6DofConstraint) BuildJacobian() {
	_swig_wrap_btGeneric6DofConstraint_buildJacobian(arg1)
}

func _swig_wrap_btGeneric6DofConstraint_getInfo1(SwigcptrBtGeneric6DofConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) GetInfo1(arg2 BtConstraintInfo1) {
	_swig_wrap_btGeneric6DofConstraint_getInfo1(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_getInfo1NonVirtual(SwigcptrBtGeneric6DofConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) GetInfo1NonVirtual(arg2 BtConstraintInfo1) {
	_swig_wrap_btGeneric6DofConstraint_getInfo1NonVirtual(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_getInfo2(SwigcptrBtGeneric6DofConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) GetInfo2(arg2 BtConstraintInfo2) {
	_swig_wrap_btGeneric6DofConstraint_getInfo2(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_getInfo2NonVirtual(SwigcptrBtGeneric6DofConstraint, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) GetInfo2NonVirtual(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtVector3, arg6 BtVector3, arg7 BtVector3, arg8 BtVector3) {
	_swig_wrap_btGeneric6DofConstraint_getInfo2NonVirtual(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7.Swigcptr(), arg8.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_updateRHS(SwigcptrBtGeneric6DofConstraint, float32)

func (arg1 SwigcptrBtGeneric6DofConstraint) UpdateRHS(arg2 float32) {
	_swig_wrap_btGeneric6DofConstraint_updateRHS(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraint_getAxis(SwigcptrBtGeneric6DofConstraint, int) SwigcptrBtVector3

func (arg1 SwigcptrBtGeneric6DofConstraint) GetAxis(arg2 int) BtVector3 {
	return _swig_wrap_btGeneric6DofConstraint_getAxis(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraint_getAngle(SwigcptrBtGeneric6DofConstraint, int) float32

func (arg1 SwigcptrBtGeneric6DofConstraint) GetAngle(arg2 int) float32 {
	return _swig_wrap_btGeneric6DofConstraint_getAngle(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraint_getRelativePivotPosition(SwigcptrBtGeneric6DofConstraint, int) float32

func (arg1 SwigcptrBtGeneric6DofConstraint) GetRelativePivotPosition(arg2 int) float32 {
	return _swig_wrap_btGeneric6DofConstraint_getRelativePivotPosition(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraint_setFrames(SwigcptrBtGeneric6DofConstraint, uintptr, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) SetFrames(arg2 BtTransform, arg3 BtTransform) {
	_swig_wrap_btGeneric6DofConstraint_setFrames(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_testAngularLimitMotor(SwigcptrBtGeneric6DofConstraint, int) bool

func (arg1 SwigcptrBtGeneric6DofConstraint) TestAngularLimitMotor(arg2 int) bool {
	return _swig_wrap_btGeneric6DofConstraint_testAngularLimitMotor(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraint_setLinearLowerLimit(SwigcptrBtGeneric6DofConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) SetLinearLowerLimit(arg2 BtVector3) {
	_swig_wrap_btGeneric6DofConstraint_setLinearLowerLimit(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_getLinearLowerLimit(SwigcptrBtGeneric6DofConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) GetLinearLowerLimit(arg2 BtVector3) {
	_swig_wrap_btGeneric6DofConstraint_getLinearLowerLimit(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_setLinearUpperLimit(SwigcptrBtGeneric6DofConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) SetLinearUpperLimit(arg2 BtVector3) {
	_swig_wrap_btGeneric6DofConstraint_setLinearUpperLimit(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_getLinearUpperLimit(SwigcptrBtGeneric6DofConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) GetLinearUpperLimit(arg2 BtVector3) {
	_swig_wrap_btGeneric6DofConstraint_getLinearUpperLimit(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_setAngularLowerLimit(SwigcptrBtGeneric6DofConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) SetAngularLowerLimit(arg2 BtVector3) {
	_swig_wrap_btGeneric6DofConstraint_setAngularLowerLimit(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_getAngularLowerLimit(SwigcptrBtGeneric6DofConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) GetAngularLowerLimit(arg2 BtVector3) {
	_swig_wrap_btGeneric6DofConstraint_getAngularLowerLimit(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_setAngularUpperLimit(SwigcptrBtGeneric6DofConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) SetAngularUpperLimit(arg2 BtVector3) {
	_swig_wrap_btGeneric6DofConstraint_setAngularUpperLimit(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_getAngularUpperLimit(SwigcptrBtGeneric6DofConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) GetAngularUpperLimit(arg2 BtVector3) {
	_swig_wrap_btGeneric6DofConstraint_getAngularUpperLimit(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_getRotationalLimitMotor(SwigcptrBtGeneric6DofConstraint, int) SwigcptrBtRotationalLimitMotor

func (arg1 SwigcptrBtGeneric6DofConstraint) GetRotationalLimitMotor(arg2 int) BtRotationalLimitMotor {
	return _swig_wrap_btGeneric6DofConstraint_getRotationalLimitMotor(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraint_getTranslationalLimitMotor(SwigcptrBtGeneric6DofConstraint) SwigcptrBtTranslationalLimitMotor

func (arg1 SwigcptrBtGeneric6DofConstraint) GetTranslationalLimitMotor() BtTranslationalLimitMotor {
	return _swig_wrap_btGeneric6DofConstraint_getTranslationalLimitMotor(arg1)
}

func _swig_wrap_btGeneric6DofConstraint_setLimit(SwigcptrBtGeneric6DofConstraint, int, float32, float32)

func (arg1 SwigcptrBtGeneric6DofConstraint) SetLimit(arg2 int, arg3 float32, arg4 float32) {
	_swig_wrap_btGeneric6DofConstraint_setLimit(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btGeneric6DofConstraint_isLimited(SwigcptrBtGeneric6DofConstraint, int) bool

func (arg1 SwigcptrBtGeneric6DofConstraint) IsLimited(arg2 int) bool {
	return _swig_wrap_btGeneric6DofConstraint_isLimited(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraint_calcAnchorPos(SwigcptrBtGeneric6DofConstraint)

func (arg1 SwigcptrBtGeneric6DofConstraint) CalcAnchorPos() {
	_swig_wrap_btGeneric6DofConstraint_calcAnchorPos(arg1)
}

func _swig_wrap_btGeneric6DofConstraint_getUseFrameOffset(SwigcptrBtGeneric6DofConstraint) bool

func (arg1 SwigcptrBtGeneric6DofConstraint) GetUseFrameOffset() bool {
	return _swig_wrap_btGeneric6DofConstraint_getUseFrameOffset(arg1)
}

func _swig_wrap_btGeneric6DofConstraint_setUseFrameOffset(SwigcptrBtGeneric6DofConstraint, bool)

func (arg1 SwigcptrBtGeneric6DofConstraint) SetUseFrameOffset(arg2 bool) {
	_swig_wrap_btGeneric6DofConstraint_setUseFrameOffset(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraint_setParam__SWIG_0(SwigcptrBtGeneric6DofConstraint, int, float32, int)

func (arg1 SwigcptrBtGeneric6DofConstraint) SetParam__SWIG_0(arg2 int, arg3 float32, arg4 int) {
	_swig_wrap_btGeneric6DofConstraint_setParam__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btGeneric6DofConstraint_setParam__SWIG_1(SwigcptrBtGeneric6DofConstraint, int, float32)

func (arg1 SwigcptrBtGeneric6DofConstraint) SetParam__SWIG_1(arg2 int, arg3 float32) {
	_swig_wrap_btGeneric6DofConstraint_setParam__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBtGeneric6DofConstraint) SetParam(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetParam__SWIG_1(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetParam__SWIG_0(a[0].(int), a[1].(float32), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofConstraint_getParam__SWIG_0(SwigcptrBtGeneric6DofConstraint, int, int) float32

func (arg1 SwigcptrBtGeneric6DofConstraint) GetParam__SWIG_0(arg2 int, arg3 int) float32 {
	return _swig_wrap_btGeneric6DofConstraint_getParam__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btGeneric6DofConstraint_getParam__SWIG_1(SwigcptrBtGeneric6DofConstraint, int) float32

func (arg1 SwigcptrBtGeneric6DofConstraint) GetParam__SWIG_1(arg2 int) float32 {
	return _swig_wrap_btGeneric6DofConstraint_getParam__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtGeneric6DofConstraint) GetParam(a ...interface{}) float32 {
	argc := len(a)
	if argc == 1 {
		return p.GetParam__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.GetParam__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofConstraint_setAxis(SwigcptrBtGeneric6DofConstraint, uintptr, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraint) SetAxis(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btGeneric6DofConstraint_setAxis(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_calculateSerializeBufferSize(SwigcptrBtGeneric6DofConstraint) int

func (arg1 SwigcptrBtGeneric6DofConstraint) CalculateSerializeBufferSize() int {
	return _swig_wrap_btGeneric6DofConstraint_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btGeneric6DofConstraint_serialize(SwigcptrBtGeneric6DofConstraint, uintptr, uintptr) string

func (arg1 SwigcptrBtGeneric6DofConstraint) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btGeneric6DofConstraint_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btGeneric6DofConstraint(uintptr)

func DeleteBtGeneric6DofConstraint(arg1 BtGeneric6DofConstraint) {
	_swig_wrap_delete_btGeneric6DofConstraint(arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_getFixedBody() SwigcptrBtRigidBody

func BtGeneric6DofConstraintGetFixedBody() BtRigidBody {
	return _swig_wrap_btGeneric6DofConstraint_getFixedBody()
}

func _swig_wrap_btGeneric6DofConstraint_getOverrideNumSolverIterations(SwigcptrBtGeneric6DofConstraint) int

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetOverrideNumSolverIterations() int {
	return _swig_wrap_btGeneric6DofConstraint_getOverrideNumSolverIterations(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_setOverrideNumSolverIterations(SwigcptrBtGeneric6DofConstraint, int)

func (_swig_base SwigcptrBtGeneric6DofConstraint) SetOverrideNumSolverIterations(arg1 int) {
	_swig_wrap_btGeneric6DofConstraint_setOverrideNumSolverIterations(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofConstraint_setupSolverConstraint(SwigcptrBtGeneric6DofConstraint, uintptr, int, int, float32)

func (_swig_base SwigcptrBtGeneric6DofConstraint) SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32) {
	_swig_wrap_btGeneric6DofConstraint_setupSolverConstraint(_swig_base, arg1.Swigcptr(), arg2, arg3, arg4)
}

func _swig_wrap_btGeneric6DofConstraint_internalSetAppliedImpulse(SwigcptrBtGeneric6DofConstraint, float32)

func (_swig_base SwigcptrBtGeneric6DofConstraint) InternalSetAppliedImpulse(arg1 float32) {
	_swig_wrap_btGeneric6DofConstraint_internalSetAppliedImpulse(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofConstraint_internalGetAppliedImpulse(SwigcptrBtGeneric6DofConstraint) float32

func (_swig_base SwigcptrBtGeneric6DofConstraint) InternalGetAppliedImpulse() float32 {
	return _swig_wrap_btGeneric6DofConstraint_internalGetAppliedImpulse(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_getBreakingImpulseThreshold(SwigcptrBtGeneric6DofConstraint) float32

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetBreakingImpulseThreshold() float32 {
	return _swig_wrap_btGeneric6DofConstraint_getBreakingImpulseThreshold(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_setBreakingImpulseThreshold(SwigcptrBtGeneric6DofConstraint, float32)

func (_swig_base SwigcptrBtGeneric6DofConstraint) SetBreakingImpulseThreshold(arg1 float32) {
	_swig_wrap_btGeneric6DofConstraint_setBreakingImpulseThreshold(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofConstraint_isEnabled(SwigcptrBtGeneric6DofConstraint) bool

func (_swig_base SwigcptrBtGeneric6DofConstraint) IsEnabled() bool {
	return _swig_wrap_btGeneric6DofConstraint_isEnabled(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_setEnabled(SwigcptrBtGeneric6DofConstraint, bool)

func (_swig_base SwigcptrBtGeneric6DofConstraint) SetEnabled(arg1 bool) {
	_swig_wrap_btGeneric6DofConstraint_setEnabled(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofConstraint_solveConstraintObsolete(SwigcptrBtGeneric6DofConstraint, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtGeneric6DofConstraint) SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32) {
	_swig_wrap_btGeneric6DofConstraint_solveConstraintObsolete(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btGeneric6DofConstraint_getRigidBodyA__SWIG_0(SwigcptrBtGeneric6DofConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetRigidBodyA__SWIG_0() BtRigidBody {
	return _swig_wrap_btGeneric6DofConstraint_getRigidBodyA__SWIG_0(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_getRigidBodyA__SWIG_1(SwigcptrBtGeneric6DofConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetRigidBodyA__SWIG_1() BtRigidBody {
	return _swig_wrap_btGeneric6DofConstraint_getRigidBodyA__SWIG_1(_swig_base)
}

func (p SwigcptrBtGeneric6DofConstraint) GetRigidBodyA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofConstraint_getRigidBodyB__SWIG_0(SwigcptrBtGeneric6DofConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetRigidBodyB__SWIG_0() BtRigidBody {
	return _swig_wrap_btGeneric6DofConstraint_getRigidBodyB__SWIG_0(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_getRigidBodyB__SWIG_1(SwigcptrBtGeneric6DofConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetRigidBodyB__SWIG_1() BtRigidBody {
	return _swig_wrap_btGeneric6DofConstraint_getRigidBodyB__SWIG_1(_swig_base)
}

func (p SwigcptrBtGeneric6DofConstraint) GetRigidBodyB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofConstraint_getUserConstraintType(SwigcptrBtGeneric6DofConstraint) int

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetUserConstraintType() int {
	return _swig_wrap_btGeneric6DofConstraint_getUserConstraintType(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_setUserConstraintType(SwigcptrBtGeneric6DofConstraint, int)

func (_swig_base SwigcptrBtGeneric6DofConstraint) SetUserConstraintType(arg1 int) {
	_swig_wrap_btGeneric6DofConstraint_setUserConstraintType(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofConstraint_setUserConstraintId(SwigcptrBtGeneric6DofConstraint, int)

func (_swig_base SwigcptrBtGeneric6DofConstraint) SetUserConstraintId(arg1 int) {
	_swig_wrap_btGeneric6DofConstraint_setUserConstraintId(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofConstraint_getUserConstraintId(SwigcptrBtGeneric6DofConstraint) int

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetUserConstraintId() int {
	return _swig_wrap_btGeneric6DofConstraint_getUserConstraintId(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_setUserConstraintPtr(SwigcptrBtGeneric6DofConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofConstraint) SetUserConstraintPtr(arg1 uintptr) {
	_swig_wrap_btGeneric6DofConstraint_setUserConstraintPtr(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofConstraint_getUserConstraintPtr(SwigcptrBtGeneric6DofConstraint) uintptr

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetUserConstraintPtr() uintptr {
	return _swig_wrap_btGeneric6DofConstraint_getUserConstraintPtr(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_setJointFeedback(SwigcptrBtGeneric6DofConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofConstraint) SetJointFeedback(arg1 BtJointFeedback) {
	_swig_wrap_btGeneric6DofConstraint_setJointFeedback(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraint_getJointFeedback__SWIG_0(SwigcptrBtGeneric6DofConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetJointFeedback__SWIG_0() BtJointFeedback {
	return _swig_wrap_btGeneric6DofConstraint_getJointFeedback__SWIG_0(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_getJointFeedback__SWIG_1(SwigcptrBtGeneric6DofConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetJointFeedback__SWIG_1() BtJointFeedback {
	return _swig_wrap_btGeneric6DofConstraint_getJointFeedback__SWIG_1(_swig_base)
}

func (p SwigcptrBtGeneric6DofConstraint) GetJointFeedback(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetJointFeedback__SWIG_0()
	}
	if argc == 0 {
		return p.GetJointFeedback__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofConstraint_getUid(SwigcptrBtGeneric6DofConstraint) int

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetUid() int {
	return _swig_wrap_btGeneric6DofConstraint_getUid(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_needsFeedback(SwigcptrBtGeneric6DofConstraint) bool

func (_swig_base SwigcptrBtGeneric6DofConstraint) NeedsFeedback() bool {
	return _swig_wrap_btGeneric6DofConstraint_needsFeedback(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_enableFeedback(SwigcptrBtGeneric6DofConstraint, bool)

func (_swig_base SwigcptrBtGeneric6DofConstraint) EnableFeedback(arg1 bool) {
	_swig_wrap_btGeneric6DofConstraint_enableFeedback(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofConstraint_getAppliedImpulse(SwigcptrBtGeneric6DofConstraint) float32

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetAppliedImpulse() float32 {
	return _swig_wrap_btGeneric6DofConstraint_getAppliedImpulse(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_getConstraintType(SwigcptrBtGeneric6DofConstraint) BtTypedConstraintType

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetConstraintType() BtTypedConstraintType {
	return _swig_wrap_btGeneric6DofConstraint_getConstraintType(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_setDbgDrawSize(SwigcptrBtGeneric6DofConstraint, float32)

func (_swig_base SwigcptrBtGeneric6DofConstraint) SetDbgDrawSize(arg1 float32) {
	_swig_wrap_btGeneric6DofConstraint_setDbgDrawSize(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofConstraint_getDbgDrawSize(SwigcptrBtGeneric6DofConstraint) float32

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetDbgDrawSize() float32 {
	return _swig_wrap_btGeneric6DofConstraint_getDbgDrawSize(_swig_base)
}

func _swig_wrap_SetbtGeneric6DofConstraint_M_objectType(SwigcptrBtGeneric6DofConstraint, int)

func (_swig_base SwigcptrBtGeneric6DofConstraint) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtGeneric6DofConstraint_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtGeneric6DofConstraint_M_objectType(SwigcptrBtGeneric6DofConstraint) int

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetM_objectType() int {
	return _swig_wrap_GetbtGeneric6DofConstraint_M_objectType(_swig_base)
}

func _swig_wrap_btGeneric6DofConstraint_getObjectType(SwigcptrBtGeneric6DofConstraint) int

func (_swig_base SwigcptrBtGeneric6DofConstraint) GetObjectType() int {
	return _swig_wrap_btGeneric6DofConstraint_getObjectType(_swig_base)
}

func (p SwigcptrBtGeneric6DofConstraint) SwigIsBtTypedConstraint() {
}

func (p SwigcptrBtGeneric6DofConstraint) SwigGetBtTypedConstraint() BtTypedConstraint {
	return SwigcptrBtTypedConstraint(p.Swigcptr())
}

func (p SwigcptrBtGeneric6DofConstraint) SwigIsBtTypedObject() {
}

func (p SwigcptrBtGeneric6DofConstraint) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtGeneric6DofConstraint interface {
	Swigcptr() uintptr
	SwigIsBtGeneric6DofConstraint()
	SetM_useSolveConstraintObsolete(arg2 bool)
	GetM_useSolveConstraintObsolete() bool
	CalculateTransforms(a ...interface{})
	GetCalculatedTransformA() BtTransform
	GetCalculatedTransformB() BtTransform
	GetFrameOffsetA(a ...interface{}) interface{}
	GetFrameOffsetB(a ...interface{}) interface{}
	BuildJacobian()
	GetInfo1(arg2 BtConstraintInfo1)
	GetInfo1NonVirtual(arg2 BtConstraintInfo1)
	GetInfo2(arg2 BtConstraintInfo2)
	GetInfo2NonVirtual(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtVector3, arg6 BtVector3, arg7 BtVector3, arg8 BtVector3)
	UpdateRHS(arg2 float32)
	GetAxis(arg2 int) BtVector3
	GetAngle(arg2 int) float32
	GetRelativePivotPosition(arg2 int) float32
	SetFrames(arg2 BtTransform, arg3 BtTransform)
	TestAngularLimitMotor(arg2 int) bool
	SetLinearLowerLimit(arg2 BtVector3)
	GetLinearLowerLimit(arg2 BtVector3)
	SetLinearUpperLimit(arg2 BtVector3)
	GetLinearUpperLimit(arg2 BtVector3)
	SetAngularLowerLimit(arg2 BtVector3)
	GetAngularLowerLimit(arg2 BtVector3)
	SetAngularUpperLimit(arg2 BtVector3)
	GetAngularUpperLimit(arg2 BtVector3)
	GetRotationalLimitMotor(arg2 int) BtRotationalLimitMotor
	GetTranslationalLimitMotor() BtTranslationalLimitMotor
	SetLimit(arg2 int, arg3 float32, arg4 float32)
	IsLimited(arg2 int) bool
	CalcAnchorPos()
	GetUseFrameOffset() bool
	SetUseFrameOffset(arg2 bool)
	SetParam(a ...interface{})
	GetParam(a ...interface{}) float32
	SetAxis(arg2 BtVector3, arg3 BtVector3)
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetOverrideNumSolverIterations() int
	SetOverrideNumSolverIterations(arg1 int)
	SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32)
	InternalSetAppliedImpulse(arg1 float32)
	InternalGetAppliedImpulse() float32
	GetBreakingImpulseThreshold() float32
	SetBreakingImpulseThreshold(arg1 float32)
	IsEnabled() bool
	SetEnabled(arg1 bool)
	SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32)
	GetRigidBodyA(a ...interface{}) interface{}
	GetRigidBodyB(a ...interface{}) interface{}
	GetUserConstraintType() int
	SetUserConstraintType(arg1 int)
	SetUserConstraintId(arg1 int)
	GetUserConstraintId() int
	SetUserConstraintPtr(arg1 uintptr)
	GetUserConstraintPtr() uintptr
	SetJointFeedback(arg1 BtJointFeedback)
	GetJointFeedback(a ...interface{}) interface{}
	GetUid() int
	NeedsFeedback() bool
	EnableFeedback(arg1 bool)
	GetAppliedImpulse() float32
	GetConstraintType() BtTypedConstraintType
	SetDbgDrawSize(arg1 float32)
	GetDbgDrawSize() float32
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtTypedConstraint()
	SwigGetBtTypedConstraint() BtTypedConstraint
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

type SwigcptrBtGeneric6DofConstraintData uintptr

func (p SwigcptrBtGeneric6DofConstraintData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtGeneric6DofConstraintData) SwigIsBtGeneric6DofConstraintData() {
}

func _swig_wrap_btGeneric6DofConstraintData_m_typeConstraintData_set(SwigcptrBtGeneric6DofConstraintData, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintData) SetM_typeConstraintData(arg2 BtTypedConstraintData) {
	_swig_wrap_btGeneric6DofConstraintData_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintData_m_typeConstraintData_get(SwigcptrBtGeneric6DofConstraintData) SwigcptrBtTypedConstraintData

func (arg1 SwigcptrBtGeneric6DofConstraintData) GetM_typeConstraintData() BtTypedConstraintData {
	return _swig_wrap_btGeneric6DofConstraintData_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintData_m_rbAFrame_set(SwigcptrBtGeneric6DofConstraintData, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintData) SetM_rbAFrame(arg2 BtTransformFloatData) {
	_swig_wrap_btGeneric6DofConstraintData_m_rbAFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintData_m_rbAFrame_get(SwigcptrBtGeneric6DofConstraintData) SwigcptrBtTransformFloatData

func (arg1 SwigcptrBtGeneric6DofConstraintData) GetM_rbAFrame() BtTransformFloatData {
	return _swig_wrap_btGeneric6DofConstraintData_m_rbAFrame_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintData_m_rbBFrame_set(SwigcptrBtGeneric6DofConstraintData, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintData) SetM_rbBFrame(arg2 BtTransformFloatData) {
	_swig_wrap_btGeneric6DofConstraintData_m_rbBFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintData_m_rbBFrame_get(SwigcptrBtGeneric6DofConstraintData) SwigcptrBtTransformFloatData

func (arg1 SwigcptrBtGeneric6DofConstraintData) GetM_rbBFrame() BtTransformFloatData {
	return _swig_wrap_btGeneric6DofConstraintData_m_rbBFrame_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintData_m_linearUpperLimit_set(SwigcptrBtGeneric6DofConstraintData, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintData) SetM_linearUpperLimit(arg2 BtVector3FloatData) {
	_swig_wrap_btGeneric6DofConstraintData_m_linearUpperLimit_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintData_m_linearUpperLimit_get(SwigcptrBtGeneric6DofConstraintData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtGeneric6DofConstraintData) GetM_linearUpperLimit() BtVector3FloatData {
	return _swig_wrap_btGeneric6DofConstraintData_m_linearUpperLimit_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintData_m_linearLowerLimit_set(SwigcptrBtGeneric6DofConstraintData, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintData) SetM_linearLowerLimit(arg2 BtVector3FloatData) {
	_swig_wrap_btGeneric6DofConstraintData_m_linearLowerLimit_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintData_m_linearLowerLimit_get(SwigcptrBtGeneric6DofConstraintData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtGeneric6DofConstraintData) GetM_linearLowerLimit() BtVector3FloatData {
	return _swig_wrap_btGeneric6DofConstraintData_m_linearLowerLimit_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintData_m_angularUpperLimit_set(SwigcptrBtGeneric6DofConstraintData, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintData) SetM_angularUpperLimit(arg2 BtVector3FloatData) {
	_swig_wrap_btGeneric6DofConstraintData_m_angularUpperLimit_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintData_m_angularUpperLimit_get(SwigcptrBtGeneric6DofConstraintData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtGeneric6DofConstraintData) GetM_angularUpperLimit() BtVector3FloatData {
	return _swig_wrap_btGeneric6DofConstraintData_m_angularUpperLimit_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintData_m_angularLowerLimit_set(SwigcptrBtGeneric6DofConstraintData, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintData) SetM_angularLowerLimit(arg2 BtVector3FloatData) {
	_swig_wrap_btGeneric6DofConstraintData_m_angularLowerLimit_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintData_m_angularLowerLimit_get(SwigcptrBtGeneric6DofConstraintData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtGeneric6DofConstraintData) GetM_angularLowerLimit() BtVector3FloatData {
	return _swig_wrap_btGeneric6DofConstraintData_m_angularLowerLimit_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintData_m_useLinearReferenceFrameA_set(SwigcptrBtGeneric6DofConstraintData, int)

func (arg1 SwigcptrBtGeneric6DofConstraintData) SetM_useLinearReferenceFrameA(arg2 int) {
	_swig_wrap_btGeneric6DofConstraintData_m_useLinearReferenceFrameA_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraintData_m_useLinearReferenceFrameA_get(SwigcptrBtGeneric6DofConstraintData) int

func (arg1 SwigcptrBtGeneric6DofConstraintData) GetM_useLinearReferenceFrameA() int {
	return _swig_wrap_btGeneric6DofConstraintData_m_useLinearReferenceFrameA_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintData_m_useOffsetForConstraintFrame_set(SwigcptrBtGeneric6DofConstraintData, int)

func (arg1 SwigcptrBtGeneric6DofConstraintData) SetM_useOffsetForConstraintFrame(arg2 int) {
	_swig_wrap_btGeneric6DofConstraintData_m_useOffsetForConstraintFrame_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraintData_m_useOffsetForConstraintFrame_get(SwigcptrBtGeneric6DofConstraintData) int

func (arg1 SwigcptrBtGeneric6DofConstraintData) GetM_useOffsetForConstraintFrame() int {
	return _swig_wrap_btGeneric6DofConstraintData_m_useOffsetForConstraintFrame_get(arg1)
}

func _swig_wrap_new_btGeneric6DofConstraintData() SwigcptrBtGeneric6DofConstraintData

func NewBtGeneric6DofConstraintData() BtGeneric6DofConstraintData {
	return _swig_wrap_new_btGeneric6DofConstraintData()
}

func _swig_wrap_delete_btGeneric6DofConstraintData(uintptr)

func DeleteBtGeneric6DofConstraintData(arg1 BtGeneric6DofConstraintData) {
	_swig_wrap_delete_btGeneric6DofConstraintData(arg1.Swigcptr())
}

type BtGeneric6DofConstraintData interface {
	Swigcptr() uintptr
	SwigIsBtGeneric6DofConstraintData()
	SetM_typeConstraintData(arg2 BtTypedConstraintData)
	GetM_typeConstraintData() BtTypedConstraintData
	SetM_rbAFrame(arg2 BtTransformFloatData)
	GetM_rbAFrame() BtTransformFloatData
	SetM_rbBFrame(arg2 BtTransformFloatData)
	GetM_rbBFrame() BtTransformFloatData
	SetM_linearUpperLimit(arg2 BtVector3FloatData)
	GetM_linearUpperLimit() BtVector3FloatData
	SetM_linearLowerLimit(arg2 BtVector3FloatData)
	GetM_linearLowerLimit() BtVector3FloatData
	SetM_angularUpperLimit(arg2 BtVector3FloatData)
	GetM_angularUpperLimit() BtVector3FloatData
	SetM_angularLowerLimit(arg2 BtVector3FloatData)
	GetM_angularLowerLimit() BtVector3FloatData
	SetM_useLinearReferenceFrameA(arg2 int)
	GetM_useLinearReferenceFrameA() int
	SetM_useOffsetForConstraintFrame(arg2 int)
	GetM_useOffsetForConstraintFrame() int
}

type SwigcptrBtGeneric6DofConstraintDoubleData2 uintptr

func (p SwigcptrBtGeneric6DofConstraintDoubleData2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtGeneric6DofConstraintDoubleData2) SwigIsBtGeneric6DofConstraintDoubleData2() {
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_typeConstraintData_set(SwigcptrBtGeneric6DofConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData) {
	_swig_wrap_btGeneric6DofConstraintDoubleData2_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_typeConstraintData_get(SwigcptrBtGeneric6DofConstraintDoubleData2) SwigcptrBtTypedConstraintDoubleData

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) GetM_typeConstraintData() BtTypedConstraintDoubleData {
	return _swig_wrap_btGeneric6DofConstraintDoubleData2_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_rbAFrame_set(SwigcptrBtGeneric6DofConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) SetM_rbAFrame(arg2 BtTransformDoubleData) {
	_swig_wrap_btGeneric6DofConstraintDoubleData2_m_rbAFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_rbAFrame_get(SwigcptrBtGeneric6DofConstraintDoubleData2) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) GetM_rbAFrame() BtTransformDoubleData {
	return _swig_wrap_btGeneric6DofConstraintDoubleData2_m_rbAFrame_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_rbBFrame_set(SwigcptrBtGeneric6DofConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) SetM_rbBFrame(arg2 BtTransformDoubleData) {
	_swig_wrap_btGeneric6DofConstraintDoubleData2_m_rbBFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_rbBFrame_get(SwigcptrBtGeneric6DofConstraintDoubleData2) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) GetM_rbBFrame() BtTransformDoubleData {
	return _swig_wrap_btGeneric6DofConstraintDoubleData2_m_rbBFrame_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_linearUpperLimit_set(SwigcptrBtGeneric6DofConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) SetM_linearUpperLimit(arg2 BtVector3DoubleData) {
	_swig_wrap_btGeneric6DofConstraintDoubleData2_m_linearUpperLimit_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_linearUpperLimit_get(SwigcptrBtGeneric6DofConstraintDoubleData2) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) GetM_linearUpperLimit() BtVector3DoubleData {
	return _swig_wrap_btGeneric6DofConstraintDoubleData2_m_linearUpperLimit_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_linearLowerLimit_set(SwigcptrBtGeneric6DofConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) SetM_linearLowerLimit(arg2 BtVector3DoubleData) {
	_swig_wrap_btGeneric6DofConstraintDoubleData2_m_linearLowerLimit_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_linearLowerLimit_get(SwigcptrBtGeneric6DofConstraintDoubleData2) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) GetM_linearLowerLimit() BtVector3DoubleData {
	return _swig_wrap_btGeneric6DofConstraintDoubleData2_m_linearLowerLimit_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_angularUpperLimit_set(SwigcptrBtGeneric6DofConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) SetM_angularUpperLimit(arg2 BtVector3DoubleData) {
	_swig_wrap_btGeneric6DofConstraintDoubleData2_m_angularUpperLimit_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_angularUpperLimit_get(SwigcptrBtGeneric6DofConstraintDoubleData2) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) GetM_angularUpperLimit() BtVector3DoubleData {
	return _swig_wrap_btGeneric6DofConstraintDoubleData2_m_angularUpperLimit_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_angularLowerLimit_set(SwigcptrBtGeneric6DofConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) SetM_angularLowerLimit(arg2 BtVector3DoubleData) {
	_swig_wrap_btGeneric6DofConstraintDoubleData2_m_angularLowerLimit_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_angularLowerLimit_get(SwigcptrBtGeneric6DofConstraintDoubleData2) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) GetM_angularLowerLimit() BtVector3DoubleData {
	return _swig_wrap_btGeneric6DofConstraintDoubleData2_m_angularLowerLimit_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_useLinearReferenceFrameA_set(SwigcptrBtGeneric6DofConstraintDoubleData2, int)

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) SetM_useLinearReferenceFrameA(arg2 int) {
	_swig_wrap_btGeneric6DofConstraintDoubleData2_m_useLinearReferenceFrameA_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_useLinearReferenceFrameA_get(SwigcptrBtGeneric6DofConstraintDoubleData2) int

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) GetM_useLinearReferenceFrameA() int {
	return _swig_wrap_btGeneric6DofConstraintDoubleData2_m_useLinearReferenceFrameA_get(arg1)
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_useOffsetForConstraintFrame_set(SwigcptrBtGeneric6DofConstraintDoubleData2, int)

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) SetM_useOffsetForConstraintFrame(arg2 int) {
	_swig_wrap_btGeneric6DofConstraintDoubleData2_m_useOffsetForConstraintFrame_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofConstraintDoubleData2_m_useOffsetForConstraintFrame_get(SwigcptrBtGeneric6DofConstraintDoubleData2) int

func (arg1 SwigcptrBtGeneric6DofConstraintDoubleData2) GetM_useOffsetForConstraintFrame() int {
	return _swig_wrap_btGeneric6DofConstraintDoubleData2_m_useOffsetForConstraintFrame_get(arg1)
}

func _swig_wrap_new_btGeneric6DofConstraintDoubleData2() SwigcptrBtGeneric6DofConstraintDoubleData2

func NewBtGeneric6DofConstraintDoubleData2() BtGeneric6DofConstraintDoubleData2 {
	return _swig_wrap_new_btGeneric6DofConstraintDoubleData2()
}

func _swig_wrap_delete_btGeneric6DofConstraintDoubleData2(uintptr)

func DeleteBtGeneric6DofConstraintDoubleData2(arg1 BtGeneric6DofConstraintDoubleData2) {
	_swig_wrap_delete_btGeneric6DofConstraintDoubleData2(arg1.Swigcptr())
}

type BtGeneric6DofConstraintDoubleData2 interface {
	Swigcptr() uintptr
	SwigIsBtGeneric6DofConstraintDoubleData2()
	SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData)
	GetM_typeConstraintData() BtTypedConstraintDoubleData
	SetM_rbAFrame(arg2 BtTransformDoubleData)
	GetM_rbAFrame() BtTransformDoubleData
	SetM_rbBFrame(arg2 BtTransformDoubleData)
	GetM_rbBFrame() BtTransformDoubleData
	SetM_linearUpperLimit(arg2 BtVector3DoubleData)
	GetM_linearUpperLimit() BtVector3DoubleData
	SetM_linearLowerLimit(arg2 BtVector3DoubleData)
	GetM_linearLowerLimit() BtVector3DoubleData
	SetM_angularUpperLimit(arg2 BtVector3DoubleData)
	GetM_angularUpperLimit() BtVector3DoubleData
	SetM_angularLowerLimit(arg2 BtVector3DoubleData)
	GetM_angularLowerLimit() BtVector3DoubleData
	SetM_useLinearReferenceFrameA(arg2 int)
	GetM_useLinearReferenceFrameA() int
	SetM_useOffsetForConstraintFrame(arg2 int)
	GetM_useOffsetForConstraintFrame() int
}

const BtSliderConstraintDataName string = "btSliderConstraintData"

type BtSliderFlags int

func _swig_getBT_SLIDER_FLAGS_CFM_DIRLIN() BtSliderFlags

var BT_SLIDER_FLAGS_CFM_DIRLIN BtSliderFlags = _swig_getBT_SLIDER_FLAGS_CFM_DIRLIN()

func _swig_getBT_SLIDER_FLAGS_ERP_DIRLIN() BtSliderFlags

var BT_SLIDER_FLAGS_ERP_DIRLIN BtSliderFlags = _swig_getBT_SLIDER_FLAGS_ERP_DIRLIN()

func _swig_getBT_SLIDER_FLAGS_CFM_DIRANG() BtSliderFlags

var BT_SLIDER_FLAGS_CFM_DIRANG BtSliderFlags = _swig_getBT_SLIDER_FLAGS_CFM_DIRANG()

func _swig_getBT_SLIDER_FLAGS_ERP_DIRANG() BtSliderFlags

var BT_SLIDER_FLAGS_ERP_DIRANG BtSliderFlags = _swig_getBT_SLIDER_FLAGS_ERP_DIRANG()

func _swig_getBT_SLIDER_FLAGS_CFM_ORTLIN() BtSliderFlags

var BT_SLIDER_FLAGS_CFM_ORTLIN BtSliderFlags = _swig_getBT_SLIDER_FLAGS_CFM_ORTLIN()

func _swig_getBT_SLIDER_FLAGS_ERP_ORTLIN() BtSliderFlags

var BT_SLIDER_FLAGS_ERP_ORTLIN BtSliderFlags = _swig_getBT_SLIDER_FLAGS_ERP_ORTLIN()

func _swig_getBT_SLIDER_FLAGS_CFM_ORTANG() BtSliderFlags

var BT_SLIDER_FLAGS_CFM_ORTANG BtSliderFlags = _swig_getBT_SLIDER_FLAGS_CFM_ORTANG()

func _swig_getBT_SLIDER_FLAGS_ERP_ORTANG() BtSliderFlags

var BT_SLIDER_FLAGS_ERP_ORTANG BtSliderFlags = _swig_getBT_SLIDER_FLAGS_ERP_ORTANG()

func _swig_getBT_SLIDER_FLAGS_CFM_LIMLIN() BtSliderFlags

var BT_SLIDER_FLAGS_CFM_LIMLIN BtSliderFlags = _swig_getBT_SLIDER_FLAGS_CFM_LIMLIN()

func _swig_getBT_SLIDER_FLAGS_ERP_LIMLIN() BtSliderFlags

var BT_SLIDER_FLAGS_ERP_LIMLIN BtSliderFlags = _swig_getBT_SLIDER_FLAGS_ERP_LIMLIN()

func _swig_getBT_SLIDER_FLAGS_CFM_LIMANG() BtSliderFlags

var BT_SLIDER_FLAGS_CFM_LIMANG BtSliderFlags = _swig_getBT_SLIDER_FLAGS_CFM_LIMANG()

func _swig_getBT_SLIDER_FLAGS_ERP_LIMANG() BtSliderFlags

var BT_SLIDER_FLAGS_ERP_LIMANG BtSliderFlags = _swig_getBT_SLIDER_FLAGS_ERP_LIMANG()

type SwigcptrBtSliderConstraint uintptr

func (p SwigcptrBtSliderConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSliderConstraint) SwigIsBtSliderConstraint() {
}

func _swig_wrap_new_btSliderConstraint__SWIG_0(uintptr, uintptr, uintptr, uintptr, bool) SwigcptrBtSliderConstraint

func NewBtSliderConstraint__SWIG_0(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtTransform, arg4 BtTransform, arg5 bool) BtSliderConstraint {
	return _swig_wrap_new_btSliderConstraint__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_new_btSliderConstraint__SWIG_1(uintptr, uintptr, bool) SwigcptrBtSliderConstraint

func NewBtSliderConstraint__SWIG_1(arg1 BtRigidBody, arg2 BtTransform, arg3 bool) BtSliderConstraint {
	return _swig_wrap_new_btSliderConstraint__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func NewBtSliderConstraint(a ...interface{}) BtSliderConstraint {
	argc := len(a)
	if argc == 3 {
		return NewBtSliderConstraint__SWIG_1(a[0].(BtRigidBody), a[1].(BtTransform), a[2].(bool))
	}
	if argc == 5 {
		return NewBtSliderConstraint__SWIG_0(a[0].(BtRigidBody), a[1].(BtRigidBody), a[2].(BtTransform), a[3].(BtTransform), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSliderConstraint_getInfo1(SwigcptrBtSliderConstraint, uintptr)

func (arg1 SwigcptrBtSliderConstraint) GetInfo1(arg2 BtConstraintInfo1) {
	_swig_wrap_btSliderConstraint_getInfo1(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSliderConstraint_getInfo1NonVirtual(SwigcptrBtSliderConstraint, uintptr)

func (arg1 SwigcptrBtSliderConstraint) GetInfo1NonVirtual(arg2 BtConstraintInfo1) {
	_swig_wrap_btSliderConstraint_getInfo1NonVirtual(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSliderConstraint_getInfo2(SwigcptrBtSliderConstraint, uintptr)

func (arg1 SwigcptrBtSliderConstraint) GetInfo2(arg2 BtConstraintInfo2) {
	_swig_wrap_btSliderConstraint_getInfo2(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSliderConstraint_getInfo2NonVirtual(SwigcptrBtSliderConstraint, uintptr, uintptr, uintptr, uintptr, uintptr, float32, float32)

func (arg1 SwigcptrBtSliderConstraint) GetInfo2NonVirtual(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtVector3, arg6 BtVector3, arg7 float32, arg8 float32) {
	_swig_wrap_btSliderConstraint_getInfo2NonVirtual(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7, arg8)
}

func _swig_wrap_btSliderConstraint_getRigidBodyA(SwigcptrBtSliderConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtSliderConstraint) GetRigidBodyA() BtRigidBody {
	return _swig_wrap_btSliderConstraint_getRigidBodyA(arg1)
}

func _swig_wrap_btSliderConstraint_getRigidBodyB(SwigcptrBtSliderConstraint) SwigcptrBtRigidBody

func (arg1 SwigcptrBtSliderConstraint) GetRigidBodyB() BtRigidBody {
	return _swig_wrap_btSliderConstraint_getRigidBodyB(arg1)
}

func _swig_wrap_btSliderConstraint_getCalculatedTransformA(SwigcptrBtSliderConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtSliderConstraint) GetCalculatedTransformA() BtTransform {
	return _swig_wrap_btSliderConstraint_getCalculatedTransformA(arg1)
}

func _swig_wrap_btSliderConstraint_getCalculatedTransformB(SwigcptrBtSliderConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtSliderConstraint) GetCalculatedTransformB() BtTransform {
	return _swig_wrap_btSliderConstraint_getCalculatedTransformB(arg1)
}

func _swig_wrap_btSliderConstraint_getFrameOffsetA__SWIG_0(SwigcptrBtSliderConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtSliderConstraint) GetFrameOffsetA__SWIG_0() BtTransform {
	return _swig_wrap_btSliderConstraint_getFrameOffsetA__SWIG_0(arg1)
}

func _swig_wrap_btSliderConstraint_getFrameOffsetB__SWIG_0(SwigcptrBtSliderConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtSliderConstraint) GetFrameOffsetB__SWIG_0() BtTransform {
	return _swig_wrap_btSliderConstraint_getFrameOffsetB__SWIG_0(arg1)
}

func _swig_wrap_btSliderConstraint_getFrameOffsetA__SWIG_1(SwigcptrBtSliderConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtSliderConstraint) GetFrameOffsetA__SWIG_1() BtTransform {
	return _swig_wrap_btSliderConstraint_getFrameOffsetA__SWIG_1(arg1)
}

func (p SwigcptrBtSliderConstraint) GetFrameOffsetA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetFrameOffsetA__SWIG_0()
	}
	if argc == 0 {
		return p.GetFrameOffsetA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSliderConstraint_getFrameOffsetB__SWIG_1(SwigcptrBtSliderConstraint) SwigcptrBtTransform

func (arg1 SwigcptrBtSliderConstraint) GetFrameOffsetB__SWIG_1() BtTransform {
	return _swig_wrap_btSliderConstraint_getFrameOffsetB__SWIG_1(arg1)
}

func (p SwigcptrBtSliderConstraint) GetFrameOffsetB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetFrameOffsetB__SWIG_0()
	}
	if argc == 0 {
		return p.GetFrameOffsetB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSliderConstraint_getLowerLinLimit(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetLowerLinLimit() float32 {
	return _swig_wrap_btSliderConstraint_getLowerLinLimit(arg1)
}

func _swig_wrap_btSliderConstraint_setLowerLinLimit(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetLowerLinLimit(arg2 float32) {
	_swig_wrap_btSliderConstraint_setLowerLinLimit(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_getUpperLinLimit(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetUpperLinLimit() float32 {
	return _swig_wrap_btSliderConstraint_getUpperLinLimit(arg1)
}

func _swig_wrap_btSliderConstraint_setUpperLinLimit(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetUpperLinLimit(arg2 float32) {
	_swig_wrap_btSliderConstraint_setUpperLinLimit(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_getLowerAngLimit(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetLowerAngLimit() float32 {
	return _swig_wrap_btSliderConstraint_getLowerAngLimit(arg1)
}

func _swig_wrap_btSliderConstraint_setLowerAngLimit(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetLowerAngLimit(arg2 float32) {
	_swig_wrap_btSliderConstraint_setLowerAngLimit(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_getUpperAngLimit(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetUpperAngLimit() float32 {
	return _swig_wrap_btSliderConstraint_getUpperAngLimit(arg1)
}

func _swig_wrap_btSliderConstraint_setUpperAngLimit(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetUpperAngLimit(arg2 float32) {
	_swig_wrap_btSliderConstraint_setUpperAngLimit(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_getUseLinearReferenceFrameA(SwigcptrBtSliderConstraint) bool

func (arg1 SwigcptrBtSliderConstraint) GetUseLinearReferenceFrameA() bool {
	return _swig_wrap_btSliderConstraint_getUseLinearReferenceFrameA(arg1)
}

func _swig_wrap_btSliderConstraint_getSoftnessDirLin(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetSoftnessDirLin() float32 {
	return _swig_wrap_btSliderConstraint_getSoftnessDirLin(arg1)
}

func _swig_wrap_btSliderConstraint_getRestitutionDirLin(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetRestitutionDirLin() float32 {
	return _swig_wrap_btSliderConstraint_getRestitutionDirLin(arg1)
}

func _swig_wrap_btSliderConstraint_getDampingDirLin(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetDampingDirLin() float32 {
	return _swig_wrap_btSliderConstraint_getDampingDirLin(arg1)
}

func _swig_wrap_btSliderConstraint_getSoftnessDirAng(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetSoftnessDirAng() float32 {
	return _swig_wrap_btSliderConstraint_getSoftnessDirAng(arg1)
}

func _swig_wrap_btSliderConstraint_getRestitutionDirAng(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetRestitutionDirAng() float32 {
	return _swig_wrap_btSliderConstraint_getRestitutionDirAng(arg1)
}

func _swig_wrap_btSliderConstraint_getDampingDirAng(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetDampingDirAng() float32 {
	return _swig_wrap_btSliderConstraint_getDampingDirAng(arg1)
}

func _swig_wrap_btSliderConstraint_getSoftnessLimLin(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetSoftnessLimLin() float32 {
	return _swig_wrap_btSliderConstraint_getSoftnessLimLin(arg1)
}

func _swig_wrap_btSliderConstraint_getRestitutionLimLin(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetRestitutionLimLin() float32 {
	return _swig_wrap_btSliderConstraint_getRestitutionLimLin(arg1)
}

func _swig_wrap_btSliderConstraint_getDampingLimLin(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetDampingLimLin() float32 {
	return _swig_wrap_btSliderConstraint_getDampingLimLin(arg1)
}

func _swig_wrap_btSliderConstraint_getSoftnessLimAng(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetSoftnessLimAng() float32 {
	return _swig_wrap_btSliderConstraint_getSoftnessLimAng(arg1)
}

func _swig_wrap_btSliderConstraint_getRestitutionLimAng(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetRestitutionLimAng() float32 {
	return _swig_wrap_btSliderConstraint_getRestitutionLimAng(arg1)
}

func _swig_wrap_btSliderConstraint_getDampingLimAng(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetDampingLimAng() float32 {
	return _swig_wrap_btSliderConstraint_getDampingLimAng(arg1)
}

func _swig_wrap_btSliderConstraint_getSoftnessOrthoLin(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetSoftnessOrthoLin() float32 {
	return _swig_wrap_btSliderConstraint_getSoftnessOrthoLin(arg1)
}

func _swig_wrap_btSliderConstraint_getRestitutionOrthoLin(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetRestitutionOrthoLin() float32 {
	return _swig_wrap_btSliderConstraint_getRestitutionOrthoLin(arg1)
}

func _swig_wrap_btSliderConstraint_getDampingOrthoLin(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetDampingOrthoLin() float32 {
	return _swig_wrap_btSliderConstraint_getDampingOrthoLin(arg1)
}

func _swig_wrap_btSliderConstraint_getSoftnessOrthoAng(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetSoftnessOrthoAng() float32 {
	return _swig_wrap_btSliderConstraint_getSoftnessOrthoAng(arg1)
}

func _swig_wrap_btSliderConstraint_getRestitutionOrthoAng(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetRestitutionOrthoAng() float32 {
	return _swig_wrap_btSliderConstraint_getRestitutionOrthoAng(arg1)
}

func _swig_wrap_btSliderConstraint_getDampingOrthoAng(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetDampingOrthoAng() float32 {
	return _swig_wrap_btSliderConstraint_getDampingOrthoAng(arg1)
}

func _swig_wrap_btSliderConstraint_setSoftnessDirLin(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetSoftnessDirLin(arg2 float32) {
	_swig_wrap_btSliderConstraint_setSoftnessDirLin(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setRestitutionDirLin(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetRestitutionDirLin(arg2 float32) {
	_swig_wrap_btSliderConstraint_setRestitutionDirLin(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setDampingDirLin(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetDampingDirLin(arg2 float32) {
	_swig_wrap_btSliderConstraint_setDampingDirLin(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setSoftnessDirAng(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetSoftnessDirAng(arg2 float32) {
	_swig_wrap_btSliderConstraint_setSoftnessDirAng(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setRestitutionDirAng(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetRestitutionDirAng(arg2 float32) {
	_swig_wrap_btSliderConstraint_setRestitutionDirAng(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setDampingDirAng(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetDampingDirAng(arg2 float32) {
	_swig_wrap_btSliderConstraint_setDampingDirAng(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setSoftnessLimLin(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetSoftnessLimLin(arg2 float32) {
	_swig_wrap_btSliderConstraint_setSoftnessLimLin(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setRestitutionLimLin(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetRestitutionLimLin(arg2 float32) {
	_swig_wrap_btSliderConstraint_setRestitutionLimLin(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setDampingLimLin(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetDampingLimLin(arg2 float32) {
	_swig_wrap_btSliderConstraint_setDampingLimLin(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setSoftnessLimAng(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetSoftnessLimAng(arg2 float32) {
	_swig_wrap_btSliderConstraint_setSoftnessLimAng(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setRestitutionLimAng(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetRestitutionLimAng(arg2 float32) {
	_swig_wrap_btSliderConstraint_setRestitutionLimAng(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setDampingLimAng(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetDampingLimAng(arg2 float32) {
	_swig_wrap_btSliderConstraint_setDampingLimAng(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setSoftnessOrthoLin(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetSoftnessOrthoLin(arg2 float32) {
	_swig_wrap_btSliderConstraint_setSoftnessOrthoLin(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setRestitutionOrthoLin(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetRestitutionOrthoLin(arg2 float32) {
	_swig_wrap_btSliderConstraint_setRestitutionOrthoLin(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setDampingOrthoLin(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetDampingOrthoLin(arg2 float32) {
	_swig_wrap_btSliderConstraint_setDampingOrthoLin(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setSoftnessOrthoAng(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetSoftnessOrthoAng(arg2 float32) {
	_swig_wrap_btSliderConstraint_setSoftnessOrthoAng(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setRestitutionOrthoAng(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetRestitutionOrthoAng(arg2 float32) {
	_swig_wrap_btSliderConstraint_setRestitutionOrthoAng(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setDampingOrthoAng(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetDampingOrthoAng(arg2 float32) {
	_swig_wrap_btSliderConstraint_setDampingOrthoAng(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setPoweredLinMotor(SwigcptrBtSliderConstraint, bool)

func (arg1 SwigcptrBtSliderConstraint) SetPoweredLinMotor(arg2 bool) {
	_swig_wrap_btSliderConstraint_setPoweredLinMotor(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_getPoweredLinMotor(SwigcptrBtSliderConstraint) bool

func (arg1 SwigcptrBtSliderConstraint) GetPoweredLinMotor() bool {
	return _swig_wrap_btSliderConstraint_getPoweredLinMotor(arg1)
}

func _swig_wrap_btSliderConstraint_setTargetLinMotorVelocity(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetTargetLinMotorVelocity(arg2 float32) {
	_swig_wrap_btSliderConstraint_setTargetLinMotorVelocity(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_getTargetLinMotorVelocity(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetTargetLinMotorVelocity() float32 {
	return _swig_wrap_btSliderConstraint_getTargetLinMotorVelocity(arg1)
}

func _swig_wrap_btSliderConstraint_setMaxLinMotorForce(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetMaxLinMotorForce(arg2 float32) {
	_swig_wrap_btSliderConstraint_setMaxLinMotorForce(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_getMaxLinMotorForce(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetMaxLinMotorForce() float32 {
	return _swig_wrap_btSliderConstraint_getMaxLinMotorForce(arg1)
}

func _swig_wrap_btSliderConstraint_setPoweredAngMotor(SwigcptrBtSliderConstraint, bool)

func (arg1 SwigcptrBtSliderConstraint) SetPoweredAngMotor(arg2 bool) {
	_swig_wrap_btSliderConstraint_setPoweredAngMotor(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_getPoweredAngMotor(SwigcptrBtSliderConstraint) bool

func (arg1 SwigcptrBtSliderConstraint) GetPoweredAngMotor() bool {
	return _swig_wrap_btSliderConstraint_getPoweredAngMotor(arg1)
}

func _swig_wrap_btSliderConstraint_setTargetAngMotorVelocity(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetTargetAngMotorVelocity(arg2 float32) {
	_swig_wrap_btSliderConstraint_setTargetAngMotorVelocity(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_getTargetAngMotorVelocity(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetTargetAngMotorVelocity() float32 {
	return _swig_wrap_btSliderConstraint_getTargetAngMotorVelocity(arg1)
}

func _swig_wrap_btSliderConstraint_setMaxAngMotorForce(SwigcptrBtSliderConstraint, float32)

func (arg1 SwigcptrBtSliderConstraint) SetMaxAngMotorForce(arg2 float32) {
	_swig_wrap_btSliderConstraint_setMaxAngMotorForce(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_getMaxAngMotorForce(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetMaxAngMotorForce() float32 {
	return _swig_wrap_btSliderConstraint_getMaxAngMotorForce(arg1)
}

func _swig_wrap_btSliderConstraint_getLinearPos(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetLinearPos() float32 {
	return _swig_wrap_btSliderConstraint_getLinearPos(arg1)
}

func _swig_wrap_btSliderConstraint_getAngularPos(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetAngularPos() float32 {
	return _swig_wrap_btSliderConstraint_getAngularPos(arg1)
}

func _swig_wrap_btSliderConstraint_getSolveLinLimit(SwigcptrBtSliderConstraint) bool

func (arg1 SwigcptrBtSliderConstraint) GetSolveLinLimit() bool {
	return _swig_wrap_btSliderConstraint_getSolveLinLimit(arg1)
}

func _swig_wrap_btSliderConstraint_getLinDepth(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetLinDepth() float32 {
	return _swig_wrap_btSliderConstraint_getLinDepth(arg1)
}

func _swig_wrap_btSliderConstraint_getSolveAngLimit(SwigcptrBtSliderConstraint) bool

func (arg1 SwigcptrBtSliderConstraint) GetSolveAngLimit() bool {
	return _swig_wrap_btSliderConstraint_getSolveAngLimit(arg1)
}

func _swig_wrap_btSliderConstraint_getAngDepth(SwigcptrBtSliderConstraint) float32

func (arg1 SwigcptrBtSliderConstraint) GetAngDepth() float32 {
	return _swig_wrap_btSliderConstraint_getAngDepth(arg1)
}

func _swig_wrap_btSliderConstraint_calculateTransforms(SwigcptrBtSliderConstraint, uintptr, uintptr)

func (arg1 SwigcptrBtSliderConstraint) CalculateTransforms(arg2 BtTransform, arg3 BtTransform) {
	_swig_wrap_btSliderConstraint_calculateTransforms(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSliderConstraint_testLinLimits(SwigcptrBtSliderConstraint)

func (arg1 SwigcptrBtSliderConstraint) TestLinLimits() {
	_swig_wrap_btSliderConstraint_testLinLimits(arg1)
}

func _swig_wrap_btSliderConstraint_testAngLimits(SwigcptrBtSliderConstraint)

func (arg1 SwigcptrBtSliderConstraint) TestAngLimits() {
	_swig_wrap_btSliderConstraint_testAngLimits(arg1)
}

func _swig_wrap_btSliderConstraint_getAncorInA(SwigcptrBtSliderConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtSliderConstraint) GetAncorInA() BtVector3 {
	return _swig_wrap_btSliderConstraint_getAncorInA(arg1)
}

func _swig_wrap_btSliderConstraint_getAncorInB(SwigcptrBtSliderConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtSliderConstraint) GetAncorInB() BtVector3 {
	return _swig_wrap_btSliderConstraint_getAncorInB(arg1)
}

func _swig_wrap_btSliderConstraint_getUseFrameOffset(SwigcptrBtSliderConstraint) bool

func (arg1 SwigcptrBtSliderConstraint) GetUseFrameOffset() bool {
	return _swig_wrap_btSliderConstraint_getUseFrameOffset(arg1)
}

func _swig_wrap_btSliderConstraint_setUseFrameOffset(SwigcptrBtSliderConstraint, bool)

func (arg1 SwigcptrBtSliderConstraint) SetUseFrameOffset(arg2 bool) {
	_swig_wrap_btSliderConstraint_setUseFrameOffset(arg1, arg2)
}

func _swig_wrap_btSliderConstraint_setFrames(SwigcptrBtSliderConstraint, uintptr, uintptr)

func (arg1 SwigcptrBtSliderConstraint) SetFrames(arg2 BtTransform, arg3 BtTransform) {
	_swig_wrap_btSliderConstraint_setFrames(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btSliderConstraint_setParam__SWIG_0(SwigcptrBtSliderConstraint, int, float32, int)

func (arg1 SwigcptrBtSliderConstraint) SetParam__SWIG_0(arg2 int, arg3 float32, arg4 int) {
	_swig_wrap_btSliderConstraint_setParam__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btSliderConstraint_setParam__SWIG_1(SwigcptrBtSliderConstraint, int, float32)

func (arg1 SwigcptrBtSliderConstraint) SetParam__SWIG_1(arg2 int, arg3 float32) {
	_swig_wrap_btSliderConstraint_setParam__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBtSliderConstraint) SetParam(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetParam__SWIG_1(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetParam__SWIG_0(a[0].(int), a[1].(float32), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSliderConstraint_getParam__SWIG_0(SwigcptrBtSliderConstraint, int, int) float32

func (arg1 SwigcptrBtSliderConstraint) GetParam__SWIG_0(arg2 int, arg3 int) float32 {
	return _swig_wrap_btSliderConstraint_getParam__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btSliderConstraint_getParam__SWIG_1(SwigcptrBtSliderConstraint, int) float32

func (arg1 SwigcptrBtSliderConstraint) GetParam__SWIG_1(arg2 int) float32 {
	return _swig_wrap_btSliderConstraint_getParam__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtSliderConstraint) GetParam(a ...interface{}) float32 {
	argc := len(a)
	if argc == 1 {
		return p.GetParam__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.GetParam__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSliderConstraint_calculateSerializeBufferSize(SwigcptrBtSliderConstraint) int

func (arg1 SwigcptrBtSliderConstraint) CalculateSerializeBufferSize() int {
	return _swig_wrap_btSliderConstraint_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btSliderConstraint_serialize(SwigcptrBtSliderConstraint, uintptr, uintptr) string

func (arg1 SwigcptrBtSliderConstraint) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btSliderConstraint_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btSliderConstraint(uintptr)

func DeleteBtSliderConstraint(arg1 BtSliderConstraint) {
	_swig_wrap_delete_btSliderConstraint(arg1.Swigcptr())
}

func _swig_wrap_btSliderConstraint_getFixedBody() SwigcptrBtRigidBody

func BtSliderConstraintGetFixedBody() BtRigidBody {
	return _swig_wrap_btSliderConstraint_getFixedBody()
}

func _swig_wrap_btSliderConstraint_getOverrideNumSolverIterations(SwigcptrBtSliderConstraint) int

func (_swig_base SwigcptrBtSliderConstraint) GetOverrideNumSolverIterations() int {
	return _swig_wrap_btSliderConstraint_getOverrideNumSolverIterations(_swig_base)
}

func _swig_wrap_btSliderConstraint_setOverrideNumSolverIterations(SwigcptrBtSliderConstraint, int)

func (_swig_base SwigcptrBtSliderConstraint) SetOverrideNumSolverIterations(arg1 int) {
	_swig_wrap_btSliderConstraint_setOverrideNumSolverIterations(_swig_base, arg1)
}

func _swig_wrap_btSliderConstraint_buildJacobian(SwigcptrBtSliderConstraint)

func (_swig_base SwigcptrBtSliderConstraint) BuildJacobian() {
	_swig_wrap_btSliderConstraint_buildJacobian(_swig_base)
}

func _swig_wrap_btSliderConstraint_setupSolverConstraint(SwigcptrBtSliderConstraint, uintptr, int, int, float32)

func (_swig_base SwigcptrBtSliderConstraint) SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32) {
	_swig_wrap_btSliderConstraint_setupSolverConstraint(_swig_base, arg1.Swigcptr(), arg2, arg3, arg4)
}

func _swig_wrap_btSliderConstraint_internalSetAppliedImpulse(SwigcptrBtSliderConstraint, float32)

func (_swig_base SwigcptrBtSliderConstraint) InternalSetAppliedImpulse(arg1 float32) {
	_swig_wrap_btSliderConstraint_internalSetAppliedImpulse(_swig_base, arg1)
}

func _swig_wrap_btSliderConstraint_internalGetAppliedImpulse(SwigcptrBtSliderConstraint) float32

func (_swig_base SwigcptrBtSliderConstraint) InternalGetAppliedImpulse() float32 {
	return _swig_wrap_btSliderConstraint_internalGetAppliedImpulse(_swig_base)
}

func _swig_wrap_btSliderConstraint_getBreakingImpulseThreshold(SwigcptrBtSliderConstraint) float32

func (_swig_base SwigcptrBtSliderConstraint) GetBreakingImpulseThreshold() float32 {
	return _swig_wrap_btSliderConstraint_getBreakingImpulseThreshold(_swig_base)
}

func _swig_wrap_btSliderConstraint_setBreakingImpulseThreshold(SwigcptrBtSliderConstraint, float32)

func (_swig_base SwigcptrBtSliderConstraint) SetBreakingImpulseThreshold(arg1 float32) {
	_swig_wrap_btSliderConstraint_setBreakingImpulseThreshold(_swig_base, arg1)
}

func _swig_wrap_btSliderConstraint_isEnabled(SwigcptrBtSliderConstraint) bool

func (_swig_base SwigcptrBtSliderConstraint) IsEnabled() bool {
	return _swig_wrap_btSliderConstraint_isEnabled(_swig_base)
}

func _swig_wrap_btSliderConstraint_setEnabled(SwigcptrBtSliderConstraint, bool)

func (_swig_base SwigcptrBtSliderConstraint) SetEnabled(arg1 bool) {
	_swig_wrap_btSliderConstraint_setEnabled(_swig_base, arg1)
}

func _swig_wrap_btSliderConstraint_solveConstraintObsolete(SwigcptrBtSliderConstraint, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtSliderConstraint) SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32) {
	_swig_wrap_btSliderConstraint_solveConstraintObsolete(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btSliderConstraint_getUserConstraintType(SwigcptrBtSliderConstraint) int

func (_swig_base SwigcptrBtSliderConstraint) GetUserConstraintType() int {
	return _swig_wrap_btSliderConstraint_getUserConstraintType(_swig_base)
}

func _swig_wrap_btSliderConstraint_setUserConstraintType(SwigcptrBtSliderConstraint, int)

func (_swig_base SwigcptrBtSliderConstraint) SetUserConstraintType(arg1 int) {
	_swig_wrap_btSliderConstraint_setUserConstraintType(_swig_base, arg1)
}

func _swig_wrap_btSliderConstraint_setUserConstraintId(SwigcptrBtSliderConstraint, int)

func (_swig_base SwigcptrBtSliderConstraint) SetUserConstraintId(arg1 int) {
	_swig_wrap_btSliderConstraint_setUserConstraintId(_swig_base, arg1)
}

func _swig_wrap_btSliderConstraint_getUserConstraintId(SwigcptrBtSliderConstraint) int

func (_swig_base SwigcptrBtSliderConstraint) GetUserConstraintId() int {
	return _swig_wrap_btSliderConstraint_getUserConstraintId(_swig_base)
}

func _swig_wrap_btSliderConstraint_setUserConstraintPtr(SwigcptrBtSliderConstraint, uintptr)

func (_swig_base SwigcptrBtSliderConstraint) SetUserConstraintPtr(arg1 uintptr) {
	_swig_wrap_btSliderConstraint_setUserConstraintPtr(_swig_base, arg1)
}

func _swig_wrap_btSliderConstraint_getUserConstraintPtr(SwigcptrBtSliderConstraint) uintptr

func (_swig_base SwigcptrBtSliderConstraint) GetUserConstraintPtr() uintptr {
	return _swig_wrap_btSliderConstraint_getUserConstraintPtr(_swig_base)
}

func _swig_wrap_btSliderConstraint_setJointFeedback(SwigcptrBtSliderConstraint, uintptr)

func (_swig_base SwigcptrBtSliderConstraint) SetJointFeedback(arg1 BtJointFeedback) {
	_swig_wrap_btSliderConstraint_setJointFeedback(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btSliderConstraint_getJointFeedback__SWIG_0(SwigcptrBtSliderConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtSliderConstraint) GetJointFeedback__SWIG_0() BtJointFeedback {
	return _swig_wrap_btSliderConstraint_getJointFeedback__SWIG_0(_swig_base)
}

func _swig_wrap_btSliderConstraint_getJointFeedback__SWIG_1(SwigcptrBtSliderConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtSliderConstraint) GetJointFeedback__SWIG_1() BtJointFeedback {
	return _swig_wrap_btSliderConstraint_getJointFeedback__SWIG_1(_swig_base)
}

func (p SwigcptrBtSliderConstraint) GetJointFeedback(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetJointFeedback__SWIG_0()
	}
	if argc == 0 {
		return p.GetJointFeedback__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btSliderConstraint_getUid(SwigcptrBtSliderConstraint) int

func (_swig_base SwigcptrBtSliderConstraint) GetUid() int {
	return _swig_wrap_btSliderConstraint_getUid(_swig_base)
}

func _swig_wrap_btSliderConstraint_needsFeedback(SwigcptrBtSliderConstraint) bool

func (_swig_base SwigcptrBtSliderConstraint) NeedsFeedback() bool {
	return _swig_wrap_btSliderConstraint_needsFeedback(_swig_base)
}

func _swig_wrap_btSliderConstraint_enableFeedback(SwigcptrBtSliderConstraint, bool)

func (_swig_base SwigcptrBtSliderConstraint) EnableFeedback(arg1 bool) {
	_swig_wrap_btSliderConstraint_enableFeedback(_swig_base, arg1)
}

func _swig_wrap_btSliderConstraint_getAppliedImpulse(SwigcptrBtSliderConstraint) float32

func (_swig_base SwigcptrBtSliderConstraint) GetAppliedImpulse() float32 {
	return _swig_wrap_btSliderConstraint_getAppliedImpulse(_swig_base)
}

func _swig_wrap_btSliderConstraint_getConstraintType(SwigcptrBtSliderConstraint) BtTypedConstraintType

func (_swig_base SwigcptrBtSliderConstraint) GetConstraintType() BtTypedConstraintType {
	return _swig_wrap_btSliderConstraint_getConstraintType(_swig_base)
}

func _swig_wrap_btSliderConstraint_setDbgDrawSize(SwigcptrBtSliderConstraint, float32)

func (_swig_base SwigcptrBtSliderConstraint) SetDbgDrawSize(arg1 float32) {
	_swig_wrap_btSliderConstraint_setDbgDrawSize(_swig_base, arg1)
}

func _swig_wrap_btSliderConstraint_getDbgDrawSize(SwigcptrBtSliderConstraint) float32

func (_swig_base SwigcptrBtSliderConstraint) GetDbgDrawSize() float32 {
	return _swig_wrap_btSliderConstraint_getDbgDrawSize(_swig_base)
}

func _swig_wrap_SetbtSliderConstraint_M_objectType(SwigcptrBtSliderConstraint, int)

func (_swig_base SwigcptrBtSliderConstraint) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtSliderConstraint_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtSliderConstraint_M_objectType(SwigcptrBtSliderConstraint) int

func (_swig_base SwigcptrBtSliderConstraint) GetM_objectType() int {
	return _swig_wrap_GetbtSliderConstraint_M_objectType(_swig_base)
}

func _swig_wrap_btSliderConstraint_getObjectType(SwigcptrBtSliderConstraint) int

func (_swig_base SwigcptrBtSliderConstraint) GetObjectType() int {
	return _swig_wrap_btSliderConstraint_getObjectType(_swig_base)
}

func (p SwigcptrBtSliderConstraint) SwigIsBtTypedConstraint() {
}

func (p SwigcptrBtSliderConstraint) SwigGetBtTypedConstraint() BtTypedConstraint {
	return SwigcptrBtTypedConstraint(p.Swigcptr())
}

func (p SwigcptrBtSliderConstraint) SwigIsBtTypedObject() {
}

func (p SwigcptrBtSliderConstraint) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtSliderConstraint interface {
	Swigcptr() uintptr
	SwigIsBtSliderConstraint()
	GetInfo1(arg2 BtConstraintInfo1)
	GetInfo1NonVirtual(arg2 BtConstraintInfo1)
	GetInfo2(arg2 BtConstraintInfo2)
	GetInfo2NonVirtual(arg2 BtConstraintInfo2, arg3 BtTransform, arg4 BtTransform, arg5 BtVector3, arg6 BtVector3, arg7 float32, arg8 float32)
	GetRigidBodyA() BtRigidBody
	GetRigidBodyB() BtRigidBody
	GetCalculatedTransformA() BtTransform
	GetCalculatedTransformB() BtTransform
	GetFrameOffsetA(a ...interface{}) interface{}
	GetFrameOffsetB(a ...interface{}) interface{}
	GetLowerLinLimit() float32
	SetLowerLinLimit(arg2 float32)
	GetUpperLinLimit() float32
	SetUpperLinLimit(arg2 float32)
	GetLowerAngLimit() float32
	SetLowerAngLimit(arg2 float32)
	GetUpperAngLimit() float32
	SetUpperAngLimit(arg2 float32)
	GetUseLinearReferenceFrameA() bool
	GetSoftnessDirLin() float32
	GetRestitutionDirLin() float32
	GetDampingDirLin() float32
	GetSoftnessDirAng() float32
	GetRestitutionDirAng() float32
	GetDampingDirAng() float32
	GetSoftnessLimLin() float32
	GetRestitutionLimLin() float32
	GetDampingLimLin() float32
	GetSoftnessLimAng() float32
	GetRestitutionLimAng() float32
	GetDampingLimAng() float32
	GetSoftnessOrthoLin() float32
	GetRestitutionOrthoLin() float32
	GetDampingOrthoLin() float32
	GetSoftnessOrthoAng() float32
	GetRestitutionOrthoAng() float32
	GetDampingOrthoAng() float32
	SetSoftnessDirLin(arg2 float32)
	SetRestitutionDirLin(arg2 float32)
	SetDampingDirLin(arg2 float32)
	SetSoftnessDirAng(arg2 float32)
	SetRestitutionDirAng(arg2 float32)
	SetDampingDirAng(arg2 float32)
	SetSoftnessLimLin(arg2 float32)
	SetRestitutionLimLin(arg2 float32)
	SetDampingLimLin(arg2 float32)
	SetSoftnessLimAng(arg2 float32)
	SetRestitutionLimAng(arg2 float32)
	SetDampingLimAng(arg2 float32)
	SetSoftnessOrthoLin(arg2 float32)
	SetRestitutionOrthoLin(arg2 float32)
	SetDampingOrthoLin(arg2 float32)
	SetSoftnessOrthoAng(arg2 float32)
	SetRestitutionOrthoAng(arg2 float32)
	SetDampingOrthoAng(arg2 float32)
	SetPoweredLinMotor(arg2 bool)
	GetPoweredLinMotor() bool
	SetTargetLinMotorVelocity(arg2 float32)
	GetTargetLinMotorVelocity() float32
	SetMaxLinMotorForce(arg2 float32)
	GetMaxLinMotorForce() float32
	SetPoweredAngMotor(arg2 bool)
	GetPoweredAngMotor() bool
	SetTargetAngMotorVelocity(arg2 float32)
	GetTargetAngMotorVelocity() float32
	SetMaxAngMotorForce(arg2 float32)
	GetMaxAngMotorForce() float32
	GetLinearPos() float32
	GetAngularPos() float32
	GetSolveLinLimit() bool
	GetLinDepth() float32
	GetSolveAngLimit() bool
	GetAngDepth() float32
	CalculateTransforms(arg2 BtTransform, arg3 BtTransform)
	TestLinLimits()
	TestAngLimits()
	GetAncorInA() BtVector3
	GetAncorInB() BtVector3
	GetUseFrameOffset() bool
	SetUseFrameOffset(arg2 bool)
	SetFrames(arg2 BtTransform, arg3 BtTransform)
	SetParam(a ...interface{})
	GetParam(a ...interface{}) float32
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetOverrideNumSolverIterations() int
	SetOverrideNumSolverIterations(arg1 int)
	BuildJacobian()
	SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32)
	InternalSetAppliedImpulse(arg1 float32)
	InternalGetAppliedImpulse() float32
	GetBreakingImpulseThreshold() float32
	SetBreakingImpulseThreshold(arg1 float32)
	IsEnabled() bool
	SetEnabled(arg1 bool)
	SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32)
	GetUserConstraintType() int
	SetUserConstraintType(arg1 int)
	SetUserConstraintId(arg1 int)
	GetUserConstraintId() int
	SetUserConstraintPtr(arg1 uintptr)
	GetUserConstraintPtr() uintptr
	SetJointFeedback(arg1 BtJointFeedback)
	GetJointFeedback(a ...interface{}) interface{}
	GetUid() int
	NeedsFeedback() bool
	EnableFeedback(arg1 bool)
	GetAppliedImpulse() float32
	GetConstraintType() BtTypedConstraintType
	SetDbgDrawSize(arg1 float32)
	GetDbgDrawSize() float32
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtTypedConstraint()
	SwigGetBtTypedConstraint() BtTypedConstraint
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

type SwigcptrBtSliderConstraintData uintptr

func (p SwigcptrBtSliderConstraintData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSliderConstraintData) SwigIsBtSliderConstraintData() {
}

func _swig_wrap_btSliderConstraintData_m_typeConstraintData_set(SwigcptrBtSliderConstraintData, uintptr)

func (arg1 SwigcptrBtSliderConstraintData) SetM_typeConstraintData(arg2 BtTypedConstraintData) {
	_swig_wrap_btSliderConstraintData_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSliderConstraintData_m_typeConstraintData_get(SwigcptrBtSliderConstraintData) SwigcptrBtTypedConstraintData

func (arg1 SwigcptrBtSliderConstraintData) GetM_typeConstraintData() BtTypedConstraintData {
	return _swig_wrap_btSliderConstraintData_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btSliderConstraintData_m_rbAFrame_set(SwigcptrBtSliderConstraintData, uintptr)

func (arg1 SwigcptrBtSliderConstraintData) SetM_rbAFrame(arg2 BtTransformFloatData) {
	_swig_wrap_btSliderConstraintData_m_rbAFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSliderConstraintData_m_rbAFrame_get(SwigcptrBtSliderConstraintData) SwigcptrBtTransformFloatData

func (arg1 SwigcptrBtSliderConstraintData) GetM_rbAFrame() BtTransformFloatData {
	return _swig_wrap_btSliderConstraintData_m_rbAFrame_get(arg1)
}

func _swig_wrap_btSliderConstraintData_m_rbBFrame_set(SwigcptrBtSliderConstraintData, uintptr)

func (arg1 SwigcptrBtSliderConstraintData) SetM_rbBFrame(arg2 BtTransformFloatData) {
	_swig_wrap_btSliderConstraintData_m_rbBFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSliderConstraintData_m_rbBFrame_get(SwigcptrBtSliderConstraintData) SwigcptrBtTransformFloatData

func (arg1 SwigcptrBtSliderConstraintData) GetM_rbBFrame() BtTransformFloatData {
	return _swig_wrap_btSliderConstraintData_m_rbBFrame_get(arg1)
}

func _swig_wrap_btSliderConstraintData_m_linearUpperLimit_set(SwigcptrBtSliderConstraintData, float32)

func (arg1 SwigcptrBtSliderConstraintData) SetM_linearUpperLimit(arg2 float32) {
	_swig_wrap_btSliderConstraintData_m_linearUpperLimit_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintData_m_linearUpperLimit_get(SwigcptrBtSliderConstraintData) float32

func (arg1 SwigcptrBtSliderConstraintData) GetM_linearUpperLimit() float32 {
	return _swig_wrap_btSliderConstraintData_m_linearUpperLimit_get(arg1)
}

func _swig_wrap_btSliderConstraintData_m_linearLowerLimit_set(SwigcptrBtSliderConstraintData, float32)

func (arg1 SwigcptrBtSliderConstraintData) SetM_linearLowerLimit(arg2 float32) {
	_swig_wrap_btSliderConstraintData_m_linearLowerLimit_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintData_m_linearLowerLimit_get(SwigcptrBtSliderConstraintData) float32

func (arg1 SwigcptrBtSliderConstraintData) GetM_linearLowerLimit() float32 {
	return _swig_wrap_btSliderConstraintData_m_linearLowerLimit_get(arg1)
}

func _swig_wrap_btSliderConstraintData_m_angularUpperLimit_set(SwigcptrBtSliderConstraintData, float32)

func (arg1 SwigcptrBtSliderConstraintData) SetM_angularUpperLimit(arg2 float32) {
	_swig_wrap_btSliderConstraintData_m_angularUpperLimit_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintData_m_angularUpperLimit_get(SwigcptrBtSliderConstraintData) float32

func (arg1 SwigcptrBtSliderConstraintData) GetM_angularUpperLimit() float32 {
	return _swig_wrap_btSliderConstraintData_m_angularUpperLimit_get(arg1)
}

func _swig_wrap_btSliderConstraintData_m_angularLowerLimit_set(SwigcptrBtSliderConstraintData, float32)

func (arg1 SwigcptrBtSliderConstraintData) SetM_angularLowerLimit(arg2 float32) {
	_swig_wrap_btSliderConstraintData_m_angularLowerLimit_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintData_m_angularLowerLimit_get(SwigcptrBtSliderConstraintData) float32

func (arg1 SwigcptrBtSliderConstraintData) GetM_angularLowerLimit() float32 {
	return _swig_wrap_btSliderConstraintData_m_angularLowerLimit_get(arg1)
}

func _swig_wrap_btSliderConstraintData_m_useLinearReferenceFrameA_set(SwigcptrBtSliderConstraintData, int)

func (arg1 SwigcptrBtSliderConstraintData) SetM_useLinearReferenceFrameA(arg2 int) {
	_swig_wrap_btSliderConstraintData_m_useLinearReferenceFrameA_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintData_m_useLinearReferenceFrameA_get(SwigcptrBtSliderConstraintData) int

func (arg1 SwigcptrBtSliderConstraintData) GetM_useLinearReferenceFrameA() int {
	return _swig_wrap_btSliderConstraintData_m_useLinearReferenceFrameA_get(arg1)
}

func _swig_wrap_btSliderConstraintData_m_useOffsetForConstraintFrame_set(SwigcptrBtSliderConstraintData, int)

func (arg1 SwigcptrBtSliderConstraintData) SetM_useOffsetForConstraintFrame(arg2 int) {
	_swig_wrap_btSliderConstraintData_m_useOffsetForConstraintFrame_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintData_m_useOffsetForConstraintFrame_get(SwigcptrBtSliderConstraintData) int

func (arg1 SwigcptrBtSliderConstraintData) GetM_useOffsetForConstraintFrame() int {
	return _swig_wrap_btSliderConstraintData_m_useOffsetForConstraintFrame_get(arg1)
}

func _swig_wrap_new_btSliderConstraintData() SwigcptrBtSliderConstraintData

func NewBtSliderConstraintData() BtSliderConstraintData {
	return _swig_wrap_new_btSliderConstraintData()
}

func _swig_wrap_delete_btSliderConstraintData(uintptr)

func DeleteBtSliderConstraintData(arg1 BtSliderConstraintData) {
	_swig_wrap_delete_btSliderConstraintData(arg1.Swigcptr())
}

type BtSliderConstraintData interface {
	Swigcptr() uintptr
	SwigIsBtSliderConstraintData()
	SetM_typeConstraintData(arg2 BtTypedConstraintData)
	GetM_typeConstraintData() BtTypedConstraintData
	SetM_rbAFrame(arg2 BtTransformFloatData)
	GetM_rbAFrame() BtTransformFloatData
	SetM_rbBFrame(arg2 BtTransformFloatData)
	GetM_rbBFrame() BtTransformFloatData
	SetM_linearUpperLimit(arg2 float32)
	GetM_linearUpperLimit() float32
	SetM_linearLowerLimit(arg2 float32)
	GetM_linearLowerLimit() float32
	SetM_angularUpperLimit(arg2 float32)
	GetM_angularUpperLimit() float32
	SetM_angularLowerLimit(arg2 float32)
	GetM_angularLowerLimit() float32
	SetM_useLinearReferenceFrameA(arg2 int)
	GetM_useLinearReferenceFrameA() int
	SetM_useOffsetForConstraintFrame(arg2 int)
	GetM_useOffsetForConstraintFrame() int
}

type SwigcptrBtSliderConstraintDoubleData uintptr

func (p SwigcptrBtSliderConstraintDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSliderConstraintDoubleData) SwigIsBtSliderConstraintDoubleData() {
}

func _swig_wrap_btSliderConstraintDoubleData_m_typeConstraintData_set(SwigcptrBtSliderConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtSliderConstraintDoubleData) SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData) {
	_swig_wrap_btSliderConstraintDoubleData_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSliderConstraintDoubleData_m_typeConstraintData_get(SwigcptrBtSliderConstraintDoubleData) SwigcptrBtTypedConstraintDoubleData

func (arg1 SwigcptrBtSliderConstraintDoubleData) GetM_typeConstraintData() BtTypedConstraintDoubleData {
	return _swig_wrap_btSliderConstraintDoubleData_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btSliderConstraintDoubleData_m_rbAFrame_set(SwigcptrBtSliderConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtSliderConstraintDoubleData) SetM_rbAFrame(arg2 BtTransformDoubleData) {
	_swig_wrap_btSliderConstraintDoubleData_m_rbAFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSliderConstraintDoubleData_m_rbAFrame_get(SwigcptrBtSliderConstraintDoubleData) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtSliderConstraintDoubleData) GetM_rbAFrame() BtTransformDoubleData {
	return _swig_wrap_btSliderConstraintDoubleData_m_rbAFrame_get(arg1)
}

func _swig_wrap_btSliderConstraintDoubleData_m_rbBFrame_set(SwigcptrBtSliderConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtSliderConstraintDoubleData) SetM_rbBFrame(arg2 BtTransformDoubleData) {
	_swig_wrap_btSliderConstraintDoubleData_m_rbBFrame_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btSliderConstraintDoubleData_m_rbBFrame_get(SwigcptrBtSliderConstraintDoubleData) SwigcptrBtTransformDoubleData

func (arg1 SwigcptrBtSliderConstraintDoubleData) GetM_rbBFrame() BtTransformDoubleData {
	return _swig_wrap_btSliderConstraintDoubleData_m_rbBFrame_get(arg1)
}

func _swig_wrap_btSliderConstraintDoubleData_m_linearUpperLimit_set(SwigcptrBtSliderConstraintDoubleData, float64)

func (arg1 SwigcptrBtSliderConstraintDoubleData) SetM_linearUpperLimit(arg2 float64) {
	_swig_wrap_btSliderConstraintDoubleData_m_linearUpperLimit_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintDoubleData_m_linearUpperLimit_get(SwigcptrBtSliderConstraintDoubleData) float64

func (arg1 SwigcptrBtSliderConstraintDoubleData) GetM_linearUpperLimit() float64 {
	return _swig_wrap_btSliderConstraintDoubleData_m_linearUpperLimit_get(arg1)
}

func _swig_wrap_btSliderConstraintDoubleData_m_linearLowerLimit_set(SwigcptrBtSliderConstraintDoubleData, float64)

func (arg1 SwigcptrBtSliderConstraintDoubleData) SetM_linearLowerLimit(arg2 float64) {
	_swig_wrap_btSliderConstraintDoubleData_m_linearLowerLimit_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintDoubleData_m_linearLowerLimit_get(SwigcptrBtSliderConstraintDoubleData) float64

func (arg1 SwigcptrBtSliderConstraintDoubleData) GetM_linearLowerLimit() float64 {
	return _swig_wrap_btSliderConstraintDoubleData_m_linearLowerLimit_get(arg1)
}

func _swig_wrap_btSliderConstraintDoubleData_m_angularUpperLimit_set(SwigcptrBtSliderConstraintDoubleData, float64)

func (arg1 SwigcptrBtSliderConstraintDoubleData) SetM_angularUpperLimit(arg2 float64) {
	_swig_wrap_btSliderConstraintDoubleData_m_angularUpperLimit_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintDoubleData_m_angularUpperLimit_get(SwigcptrBtSliderConstraintDoubleData) float64

func (arg1 SwigcptrBtSliderConstraintDoubleData) GetM_angularUpperLimit() float64 {
	return _swig_wrap_btSliderConstraintDoubleData_m_angularUpperLimit_get(arg1)
}

func _swig_wrap_btSliderConstraintDoubleData_m_angularLowerLimit_set(SwigcptrBtSliderConstraintDoubleData, float64)

func (arg1 SwigcptrBtSliderConstraintDoubleData) SetM_angularLowerLimit(arg2 float64) {
	_swig_wrap_btSliderConstraintDoubleData_m_angularLowerLimit_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintDoubleData_m_angularLowerLimit_get(SwigcptrBtSliderConstraintDoubleData) float64

func (arg1 SwigcptrBtSliderConstraintDoubleData) GetM_angularLowerLimit() float64 {
	return _swig_wrap_btSliderConstraintDoubleData_m_angularLowerLimit_get(arg1)
}

func _swig_wrap_btSliderConstraintDoubleData_m_useLinearReferenceFrameA_set(SwigcptrBtSliderConstraintDoubleData, int)

func (arg1 SwigcptrBtSliderConstraintDoubleData) SetM_useLinearReferenceFrameA(arg2 int) {
	_swig_wrap_btSliderConstraintDoubleData_m_useLinearReferenceFrameA_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintDoubleData_m_useLinearReferenceFrameA_get(SwigcptrBtSliderConstraintDoubleData) int

func (arg1 SwigcptrBtSliderConstraintDoubleData) GetM_useLinearReferenceFrameA() int {
	return _swig_wrap_btSliderConstraintDoubleData_m_useLinearReferenceFrameA_get(arg1)
}

func _swig_wrap_btSliderConstraintDoubleData_m_useOffsetForConstraintFrame_set(SwigcptrBtSliderConstraintDoubleData, int)

func (arg1 SwigcptrBtSliderConstraintDoubleData) SetM_useOffsetForConstraintFrame(arg2 int) {
	_swig_wrap_btSliderConstraintDoubleData_m_useOffsetForConstraintFrame_set(arg1, arg2)
}

func _swig_wrap_btSliderConstraintDoubleData_m_useOffsetForConstraintFrame_get(SwigcptrBtSliderConstraintDoubleData) int

func (arg1 SwigcptrBtSliderConstraintDoubleData) GetM_useOffsetForConstraintFrame() int {
	return _swig_wrap_btSliderConstraintDoubleData_m_useOffsetForConstraintFrame_get(arg1)
}

func _swig_wrap_new_btSliderConstraintDoubleData() SwigcptrBtSliderConstraintDoubleData

func NewBtSliderConstraintDoubleData() BtSliderConstraintDoubleData {
	return _swig_wrap_new_btSliderConstraintDoubleData()
}

func _swig_wrap_delete_btSliderConstraintDoubleData(uintptr)

func DeleteBtSliderConstraintDoubleData(arg1 BtSliderConstraintDoubleData) {
	_swig_wrap_delete_btSliderConstraintDoubleData(arg1.Swigcptr())
}

type BtSliderConstraintDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtSliderConstraintDoubleData()
	SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData)
	GetM_typeConstraintData() BtTypedConstraintDoubleData
	SetM_rbAFrame(arg2 BtTransformDoubleData)
	GetM_rbAFrame() BtTransformDoubleData
	SetM_rbBFrame(arg2 BtTransformDoubleData)
	GetM_rbBFrame() BtTransformDoubleData
	SetM_linearUpperLimit(arg2 float64)
	GetM_linearUpperLimit() float64
	SetM_linearLowerLimit(arg2 float64)
	GetM_linearLowerLimit() float64
	SetM_angularUpperLimit(arg2 float64)
	GetM_angularUpperLimit() float64
	SetM_angularLowerLimit(arg2 float64)
	GetM_angularLowerLimit() float64
	SetM_useLinearReferenceFrameA(arg2 int)
	GetM_useLinearReferenceFrameA() int
	SetM_useOffsetForConstraintFrame(arg2 int)
	GetM_useOffsetForConstraintFrame() int
}

const BtGeneric6DofSpringConstraintDataName string = "btGeneric6DofSpringConstraintData"

type SwigcptrBtGeneric6DofSpringConstraint uintptr

func (p SwigcptrBtGeneric6DofSpringConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtGeneric6DofSpringConstraint) SwigIsBtGeneric6DofSpringConstraint() {
}

func _swig_wrap_new_btGeneric6DofSpringConstraint__SWIG_0(uintptr, uintptr, uintptr, uintptr, bool) SwigcptrBtGeneric6DofSpringConstraint

func NewBtGeneric6DofSpringConstraint__SWIG_0(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtTransform, arg4 BtTransform, arg5 bool) BtGeneric6DofSpringConstraint {
	return _swig_wrap_new_btGeneric6DofSpringConstraint__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_new_btGeneric6DofSpringConstraint__SWIG_1(uintptr, uintptr, bool) SwigcptrBtGeneric6DofSpringConstraint

func NewBtGeneric6DofSpringConstraint__SWIG_1(arg1 BtRigidBody, arg2 BtTransform, arg3 bool) BtGeneric6DofSpringConstraint {
	return _swig_wrap_new_btGeneric6DofSpringConstraint__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func NewBtGeneric6DofSpringConstraint(a ...interface{}) BtGeneric6DofSpringConstraint {
	argc := len(a)
	if argc == 3 {
		return NewBtGeneric6DofSpringConstraint__SWIG_1(a[0].(BtRigidBody), a[1].(BtTransform), a[2].(bool))
	}
	if argc == 5 {
		return NewBtGeneric6DofSpringConstraint__SWIG_0(a[0].(BtRigidBody), a[1].(BtRigidBody), a[2].(BtTransform), a[3].(BtTransform), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofSpringConstraint_enableSpring(SwigcptrBtGeneric6DofSpringConstraint, int, bool)

func (arg1 SwigcptrBtGeneric6DofSpringConstraint) EnableSpring(arg2 int, arg3 bool) {
	_swig_wrap_btGeneric6DofSpringConstraint_enableSpring(arg1, arg2, arg3)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setStiffness(SwigcptrBtGeneric6DofSpringConstraint, int, float32)

func (arg1 SwigcptrBtGeneric6DofSpringConstraint) SetStiffness(arg2 int, arg3 float32) {
	_swig_wrap_btGeneric6DofSpringConstraint_setStiffness(arg1, arg2, arg3)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setDamping(SwigcptrBtGeneric6DofSpringConstraint, int, float32)

func (arg1 SwigcptrBtGeneric6DofSpringConstraint) SetDamping(arg2 int, arg3 float32) {
	_swig_wrap_btGeneric6DofSpringConstraint_setDamping(arg1, arg2, arg3)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_0(SwigcptrBtGeneric6DofSpringConstraint)

func (arg1 SwigcptrBtGeneric6DofSpringConstraint) SetEquilibriumPoint__SWIG_0() {
	_swig_wrap_btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_0(arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_1(SwigcptrBtGeneric6DofSpringConstraint, int)

func (arg1 SwigcptrBtGeneric6DofSpringConstraint) SetEquilibriumPoint__SWIG_1(arg2 int) {
	_swig_wrap_btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_1(arg1, arg2)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_2(SwigcptrBtGeneric6DofSpringConstraint, int, float32)

func (arg1 SwigcptrBtGeneric6DofSpringConstraint) SetEquilibriumPoint__SWIG_2(arg2 int, arg3 float32) {
	_swig_wrap_btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_2(arg1, arg2, arg3)
}

func (p SwigcptrBtGeneric6DofSpringConstraint) SetEquilibriumPoint(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.SetEquilibriumPoint__SWIG_0()
		return
	}
	if argc == 1 {
		p.SetEquilibriumPoint__SWIG_1(a[0].(int))
		return
	}
	if argc == 2 {
		p.SetEquilibriumPoint__SWIG_2(a[0].(int), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofSpringConstraint_setAxis(SwigcptrBtGeneric6DofSpringConstraint, uintptr, uintptr)

func (arg1 SwigcptrBtGeneric6DofSpringConstraint) SetAxis(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btGeneric6DofSpringConstraint_setAxis(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_getInfo2(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (arg1 SwigcptrBtGeneric6DofSpringConstraint) GetInfo2(arg2 BtConstraintInfo2) {
	_swig_wrap_btGeneric6DofSpringConstraint_getInfo2(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_calculateSerializeBufferSize(SwigcptrBtGeneric6DofSpringConstraint) int

func (arg1 SwigcptrBtGeneric6DofSpringConstraint) CalculateSerializeBufferSize() int {
	return _swig_wrap_btGeneric6DofSpringConstraint_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_serialize(SwigcptrBtGeneric6DofSpringConstraint, uintptr, uintptr) string

func (arg1 SwigcptrBtGeneric6DofSpringConstraint) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btGeneric6DofSpringConstraint_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_delete_btGeneric6DofSpringConstraint(uintptr)

func DeleteBtGeneric6DofSpringConstraint(arg1 BtGeneric6DofSpringConstraint) {
	_swig_wrap_delete_btGeneric6DofSpringConstraint(arg1.Swigcptr())
}

func _swig_wrap_SetbtGeneric6DofSpringConstraint_M_useSolveConstraintObsolete(SwigcptrBtGeneric6DofSpringConstraint, bool)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetM_useSolveConstraintObsolete(arg1 bool) {
	_swig_wrap_SetbtGeneric6DofSpringConstraint_M_useSolveConstraintObsolete(_swig_base, arg1)
}

func _swig_wrap_GetbtGeneric6DofSpringConstraint_M_useSolveConstraintObsolete(SwigcptrBtGeneric6DofSpringConstraint) bool

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetM_useSolveConstraintObsolete() bool {
	return _swig_wrap_GetbtGeneric6DofSpringConstraint_M_useSolveConstraintObsolete(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_calculateTransforms__SWIG_0(SwigcptrBtGeneric6DofSpringConstraint, uintptr, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) CalculateTransforms__SWIG_0(arg1 BtTransform, arg2 BtTransform) {
	_swig_wrap_btGeneric6DofSpringConstraint_calculateTransforms__SWIG_0(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_calculateTransforms__SWIG_1(SwigcptrBtGeneric6DofSpringConstraint)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) CalculateTransforms__SWIG_1() {
	_swig_wrap_btGeneric6DofSpringConstraint_calculateTransforms__SWIG_1(_swig_base)
}

func (p SwigcptrBtGeneric6DofSpringConstraint) CalculateTransforms(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.CalculateTransforms__SWIG_1()
		return
	}
	if argc == 2 {
		p.CalculateTransforms__SWIG_0(a[0].(BtTransform), a[1].(BtTransform))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofSpringConstraint_getCalculatedTransformA(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetCalculatedTransformA() BtTransform {
	return _swig_wrap_btGeneric6DofSpringConstraint_getCalculatedTransformA(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getCalculatedTransformB(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetCalculatedTransformB() BtTransform {
	return _swig_wrap_btGeneric6DofSpringConstraint_getCalculatedTransformB(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getFrameOffsetA__SWIG_0(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetFrameOffsetA__SWIG_0() BtTransform {
	return _swig_wrap_btGeneric6DofSpringConstraint_getFrameOffsetA__SWIG_0(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getFrameOffsetA__SWIG_1(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetFrameOffsetA__SWIG_1() BtTransform {
	return _swig_wrap_btGeneric6DofSpringConstraint_getFrameOffsetA__SWIG_1(_swig_base)
}

func (p SwigcptrBtGeneric6DofSpringConstraint) GetFrameOffsetA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetFrameOffsetA__SWIG_0()
	}
	if argc == 0 {
		return p.GetFrameOffsetA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofSpringConstraint_getFrameOffsetB__SWIG_0(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetFrameOffsetB__SWIG_0() BtTransform {
	return _swig_wrap_btGeneric6DofSpringConstraint_getFrameOffsetB__SWIG_0(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getFrameOffsetB__SWIG_1(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetFrameOffsetB__SWIG_1() BtTransform {
	return _swig_wrap_btGeneric6DofSpringConstraint_getFrameOffsetB__SWIG_1(_swig_base)
}

func (p SwigcptrBtGeneric6DofSpringConstraint) GetFrameOffsetB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetFrameOffsetB__SWIG_0()
	}
	if argc == 0 {
		return p.GetFrameOffsetB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofSpringConstraint_buildJacobian(SwigcptrBtGeneric6DofSpringConstraint)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) BuildJacobian() {
	_swig_wrap_btGeneric6DofSpringConstraint_buildJacobian(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getInfo1(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetInfo1(arg1 BtConstraintInfo1) {
	_swig_wrap_btGeneric6DofSpringConstraint_getInfo1(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_getInfo1NonVirtual(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetInfo1NonVirtual(arg1 BtConstraintInfo1) {
	_swig_wrap_btGeneric6DofSpringConstraint_getInfo1NonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_getInfo2NonVirtual(SwigcptrBtGeneric6DofSpringConstraint, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetInfo2NonVirtual(arg1 BtConstraintInfo2, arg2 BtTransform, arg3 BtTransform, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3, arg7 BtVector3) {
	_swig_wrap_btGeneric6DofSpringConstraint_getInfo2NonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_updateRHS(SwigcptrBtGeneric6DofSpringConstraint, float32)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) UpdateRHS(arg1 float32) {
	_swig_wrap_btGeneric6DofSpringConstraint_updateRHS(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getAxis(SwigcptrBtGeneric6DofSpringConstraint, int) SwigcptrBtVector3

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetAxis(arg1 int) BtVector3 {
	return _swig_wrap_btGeneric6DofSpringConstraint_getAxis(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getAngle(SwigcptrBtGeneric6DofSpringConstraint, int) float32

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetAngle(arg1 int) float32 {
	return _swig_wrap_btGeneric6DofSpringConstraint_getAngle(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getRelativePivotPosition(SwigcptrBtGeneric6DofSpringConstraint, int) float32

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetRelativePivotPosition(arg1 int) float32 {
	return _swig_wrap_btGeneric6DofSpringConstraint_getRelativePivotPosition(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setFrames(SwigcptrBtGeneric6DofSpringConstraint, uintptr, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetFrames(arg1 BtTransform, arg2 BtTransform) {
	_swig_wrap_btGeneric6DofSpringConstraint_setFrames(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_testAngularLimitMotor(SwigcptrBtGeneric6DofSpringConstraint, int) bool

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) TestAngularLimitMotor(arg1 int) bool {
	return _swig_wrap_btGeneric6DofSpringConstraint_testAngularLimitMotor(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setLinearLowerLimit(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetLinearLowerLimit(arg1 BtVector3) {
	_swig_wrap_btGeneric6DofSpringConstraint_setLinearLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_getLinearLowerLimit(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetLinearLowerLimit(arg1 BtVector3) {
	_swig_wrap_btGeneric6DofSpringConstraint_getLinearLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_setLinearUpperLimit(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetLinearUpperLimit(arg1 BtVector3) {
	_swig_wrap_btGeneric6DofSpringConstraint_setLinearUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_getLinearUpperLimit(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetLinearUpperLimit(arg1 BtVector3) {
	_swig_wrap_btGeneric6DofSpringConstraint_getLinearUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_setAngularLowerLimit(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetAngularLowerLimit(arg1 BtVector3) {
	_swig_wrap_btGeneric6DofSpringConstraint_setAngularLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_getAngularLowerLimit(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetAngularLowerLimit(arg1 BtVector3) {
	_swig_wrap_btGeneric6DofSpringConstraint_getAngularLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_setAngularUpperLimit(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetAngularUpperLimit(arg1 BtVector3) {
	_swig_wrap_btGeneric6DofSpringConstraint_setAngularUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_getAngularUpperLimit(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetAngularUpperLimit(arg1 BtVector3) {
	_swig_wrap_btGeneric6DofSpringConstraint_getAngularUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_getRotationalLimitMotor(SwigcptrBtGeneric6DofSpringConstraint, int) SwigcptrBtRotationalLimitMotor

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetRotationalLimitMotor(arg1 int) BtRotationalLimitMotor {
	return _swig_wrap_btGeneric6DofSpringConstraint_getRotationalLimitMotor(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getTranslationalLimitMotor(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtTranslationalLimitMotor

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetTranslationalLimitMotor() BtTranslationalLimitMotor {
	return _swig_wrap_btGeneric6DofSpringConstraint_getTranslationalLimitMotor(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setLimit(SwigcptrBtGeneric6DofSpringConstraint, int, float32, float32)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetLimit(arg1 int, arg2 float32, arg3 float32) {
	_swig_wrap_btGeneric6DofSpringConstraint_setLimit(_swig_base, arg1, arg2, arg3)
}

func _swig_wrap_btGeneric6DofSpringConstraint_isLimited(SwigcptrBtGeneric6DofSpringConstraint, int) bool

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) IsLimited(arg1 int) bool {
	return _swig_wrap_btGeneric6DofSpringConstraint_isLimited(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_calcAnchorPos(SwigcptrBtGeneric6DofSpringConstraint)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) CalcAnchorPos() {
	_swig_wrap_btGeneric6DofSpringConstraint_calcAnchorPos(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getUseFrameOffset(SwigcptrBtGeneric6DofSpringConstraint) bool

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetUseFrameOffset() bool {
	return _swig_wrap_btGeneric6DofSpringConstraint_getUseFrameOffset(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setUseFrameOffset(SwigcptrBtGeneric6DofSpringConstraint, bool)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetUseFrameOffset(arg1 bool) {
	_swig_wrap_btGeneric6DofSpringConstraint_setUseFrameOffset(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setParam__SWIG_0(SwigcptrBtGeneric6DofSpringConstraint, int, float32, int)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetParam__SWIG_0(arg1 int, arg2 float32, arg3 int) {
	_swig_wrap_btGeneric6DofSpringConstraint_setParam__SWIG_0(_swig_base, arg1, arg2, arg3)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setParam__SWIG_1(SwigcptrBtGeneric6DofSpringConstraint, int, float32)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetParam__SWIG_1(arg1 int, arg2 float32) {
	_swig_wrap_btGeneric6DofSpringConstraint_setParam__SWIG_1(_swig_base, arg1, arg2)
}

func (p SwigcptrBtGeneric6DofSpringConstraint) SetParam(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetParam__SWIG_1(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetParam__SWIG_0(a[0].(int), a[1].(float32), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofSpringConstraint_getParam__SWIG_0(SwigcptrBtGeneric6DofSpringConstraint, int, int) float32

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetParam__SWIG_0(arg1 int, arg2 int) float32 {
	return _swig_wrap_btGeneric6DofSpringConstraint_getParam__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getParam__SWIG_1(SwigcptrBtGeneric6DofSpringConstraint, int) float32

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetParam__SWIG_1(arg1 int) float32 {
	return _swig_wrap_btGeneric6DofSpringConstraint_getParam__SWIG_1(_swig_base, arg1)
}

func (p SwigcptrBtGeneric6DofSpringConstraint) GetParam(a ...interface{}) float32 {
	argc := len(a)
	if argc == 1 {
		return p.GetParam__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.GetParam__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofSpringConstraint_getFixedBody() SwigcptrBtRigidBody

func BtGeneric6DofSpringConstraintGetFixedBody() BtRigidBody {
	return _swig_wrap_btGeneric6DofSpringConstraint_getFixedBody()
}

func _swig_wrap_btGeneric6DofSpringConstraint_getOverrideNumSolverIterations(SwigcptrBtGeneric6DofSpringConstraint) int

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetOverrideNumSolverIterations() int {
	return _swig_wrap_btGeneric6DofSpringConstraint_getOverrideNumSolverIterations(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setOverrideNumSolverIterations(SwigcptrBtGeneric6DofSpringConstraint, int)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetOverrideNumSolverIterations(arg1 int) {
	_swig_wrap_btGeneric6DofSpringConstraint_setOverrideNumSolverIterations(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setupSolverConstraint(SwigcptrBtGeneric6DofSpringConstraint, uintptr, int, int, float32)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32) {
	_swig_wrap_btGeneric6DofSpringConstraint_setupSolverConstraint(_swig_base, arg1.Swigcptr(), arg2, arg3, arg4)
}

func _swig_wrap_btGeneric6DofSpringConstraint_internalSetAppliedImpulse(SwigcptrBtGeneric6DofSpringConstraint, float32)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) InternalSetAppliedImpulse(arg1 float32) {
	_swig_wrap_btGeneric6DofSpringConstraint_internalSetAppliedImpulse(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_internalGetAppliedImpulse(SwigcptrBtGeneric6DofSpringConstraint) float32

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) InternalGetAppliedImpulse() float32 {
	return _swig_wrap_btGeneric6DofSpringConstraint_internalGetAppliedImpulse(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold(SwigcptrBtGeneric6DofSpringConstraint) float32

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetBreakingImpulseThreshold() float32 {
	return _swig_wrap_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold(SwigcptrBtGeneric6DofSpringConstraint, float32)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetBreakingImpulseThreshold(arg1 float32) {
	_swig_wrap_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_isEnabled(SwigcptrBtGeneric6DofSpringConstraint) bool

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) IsEnabled() bool {
	return _swig_wrap_btGeneric6DofSpringConstraint_isEnabled(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setEnabled(SwigcptrBtGeneric6DofSpringConstraint, bool)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetEnabled(arg1 bool) {
	_swig_wrap_btGeneric6DofSpringConstraint_setEnabled(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_solveConstraintObsolete(SwigcptrBtGeneric6DofSpringConstraint, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32) {
	_swig_wrap_btGeneric6DofSpringConstraint_solveConstraintObsolete(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getRigidBodyA__SWIG_0(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetRigidBodyA__SWIG_0() BtRigidBody {
	return _swig_wrap_btGeneric6DofSpringConstraint_getRigidBodyA__SWIG_0(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getRigidBodyA__SWIG_1(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetRigidBodyA__SWIG_1() BtRigidBody {
	return _swig_wrap_btGeneric6DofSpringConstraint_getRigidBodyA__SWIG_1(_swig_base)
}

func (p SwigcptrBtGeneric6DofSpringConstraint) GetRigidBodyA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofSpringConstraint_getRigidBodyB__SWIG_0(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetRigidBodyB__SWIG_0() BtRigidBody {
	return _swig_wrap_btGeneric6DofSpringConstraint_getRigidBodyB__SWIG_0(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getRigidBodyB__SWIG_1(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetRigidBodyB__SWIG_1() BtRigidBody {
	return _swig_wrap_btGeneric6DofSpringConstraint_getRigidBodyB__SWIG_1(_swig_base)
}

func (p SwigcptrBtGeneric6DofSpringConstraint) GetRigidBodyB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofSpringConstraint_getUserConstraintType(SwigcptrBtGeneric6DofSpringConstraint) int

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetUserConstraintType() int {
	return _swig_wrap_btGeneric6DofSpringConstraint_getUserConstraintType(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setUserConstraintType(SwigcptrBtGeneric6DofSpringConstraint, int)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetUserConstraintType(arg1 int) {
	_swig_wrap_btGeneric6DofSpringConstraint_setUserConstraintType(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setUserConstraintId(SwigcptrBtGeneric6DofSpringConstraint, int)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetUserConstraintId(arg1 int) {
	_swig_wrap_btGeneric6DofSpringConstraint_setUserConstraintId(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getUserConstraintId(SwigcptrBtGeneric6DofSpringConstraint) int

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetUserConstraintId() int {
	return _swig_wrap_btGeneric6DofSpringConstraint_getUserConstraintId(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setUserConstraintPtr(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetUserConstraintPtr(arg1 uintptr) {
	_swig_wrap_btGeneric6DofSpringConstraint_setUserConstraintPtr(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getUserConstraintPtr(SwigcptrBtGeneric6DofSpringConstraint) uintptr

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetUserConstraintPtr() uintptr {
	return _swig_wrap_btGeneric6DofSpringConstraint_getUserConstraintPtr(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setJointFeedback(SwigcptrBtGeneric6DofSpringConstraint, uintptr)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetJointFeedback(arg1 BtJointFeedback) {
	_swig_wrap_btGeneric6DofSpringConstraint_setJointFeedback(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraint_getJointFeedback__SWIG_0(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetJointFeedback__SWIG_0() BtJointFeedback {
	return _swig_wrap_btGeneric6DofSpringConstraint_getJointFeedback__SWIG_0(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getJointFeedback__SWIG_1(SwigcptrBtGeneric6DofSpringConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetJointFeedback__SWIG_1() BtJointFeedback {
	return _swig_wrap_btGeneric6DofSpringConstraint_getJointFeedback__SWIG_1(_swig_base)
}

func (p SwigcptrBtGeneric6DofSpringConstraint) GetJointFeedback(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetJointFeedback__SWIG_0()
	}
	if argc == 0 {
		return p.GetJointFeedback__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGeneric6DofSpringConstraint_getUid(SwigcptrBtGeneric6DofSpringConstraint) int

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetUid() int {
	return _swig_wrap_btGeneric6DofSpringConstraint_getUid(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_needsFeedback(SwigcptrBtGeneric6DofSpringConstraint) bool

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) NeedsFeedback() bool {
	return _swig_wrap_btGeneric6DofSpringConstraint_needsFeedback(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_enableFeedback(SwigcptrBtGeneric6DofSpringConstraint, bool)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) EnableFeedback(arg1 bool) {
	_swig_wrap_btGeneric6DofSpringConstraint_enableFeedback(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getAppliedImpulse(SwigcptrBtGeneric6DofSpringConstraint) float32

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetAppliedImpulse() float32 {
	return _swig_wrap_btGeneric6DofSpringConstraint_getAppliedImpulse(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getConstraintType(SwigcptrBtGeneric6DofSpringConstraint) BtTypedConstraintType

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetConstraintType() BtTypedConstraintType {
	return _swig_wrap_btGeneric6DofSpringConstraint_getConstraintType(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_setDbgDrawSize(SwigcptrBtGeneric6DofSpringConstraint, float32)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetDbgDrawSize(arg1 float32) {
	_swig_wrap_btGeneric6DofSpringConstraint_setDbgDrawSize(_swig_base, arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getDbgDrawSize(SwigcptrBtGeneric6DofSpringConstraint) float32

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetDbgDrawSize() float32 {
	return _swig_wrap_btGeneric6DofSpringConstraint_getDbgDrawSize(_swig_base)
}

func _swig_wrap_SetbtGeneric6DofSpringConstraint_M_objectType(SwigcptrBtGeneric6DofSpringConstraint, int)

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtGeneric6DofSpringConstraint_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtGeneric6DofSpringConstraint_M_objectType(SwigcptrBtGeneric6DofSpringConstraint) int

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetM_objectType() int {
	return _swig_wrap_GetbtGeneric6DofSpringConstraint_M_objectType(_swig_base)
}

func _swig_wrap_btGeneric6DofSpringConstraint_getObjectType(SwigcptrBtGeneric6DofSpringConstraint) int

func (_swig_base SwigcptrBtGeneric6DofSpringConstraint) GetObjectType() int {
	return _swig_wrap_btGeneric6DofSpringConstraint_getObjectType(_swig_base)
}

func (p SwigcptrBtGeneric6DofSpringConstraint) SwigIsBtGeneric6DofConstraint() {
}

func (p SwigcptrBtGeneric6DofSpringConstraint) SwigGetBtGeneric6DofConstraint() BtGeneric6DofConstraint {
	return SwigcptrBtGeneric6DofConstraint(p.Swigcptr())
}

func (p SwigcptrBtGeneric6DofSpringConstraint) SwigIsBtTypedConstraint() {
}

func (p SwigcptrBtGeneric6DofSpringConstraint) SwigGetBtTypedConstraint() BtTypedConstraint {
	return SwigcptrBtTypedConstraint(p.Swigcptr())
}

func (p SwigcptrBtGeneric6DofSpringConstraint) SwigIsBtTypedObject() {
}

func (p SwigcptrBtGeneric6DofSpringConstraint) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtGeneric6DofSpringConstraint interface {
	Swigcptr() uintptr
	SwigIsBtGeneric6DofSpringConstraint()
	EnableSpring(arg2 int, arg3 bool)
	SetStiffness(arg2 int, arg3 float32)
	SetDamping(arg2 int, arg3 float32)
	SetEquilibriumPoint(a ...interface{})
	SetAxis(arg2 BtVector3, arg3 BtVector3)
	GetInfo2(arg2 BtConstraintInfo2)
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	SetM_useSolveConstraintObsolete(arg1 bool)
	GetM_useSolveConstraintObsolete() bool
	CalculateTransforms(a ...interface{})
	GetCalculatedTransformA() BtTransform
	GetCalculatedTransformB() BtTransform
	GetFrameOffsetA(a ...interface{}) interface{}
	GetFrameOffsetB(a ...interface{}) interface{}
	BuildJacobian()
	GetInfo1(arg1 BtConstraintInfo1)
	GetInfo1NonVirtual(arg1 BtConstraintInfo1)
	GetInfo2NonVirtual(arg1 BtConstraintInfo2, arg2 BtTransform, arg3 BtTransform, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3, arg7 BtVector3)
	UpdateRHS(arg1 float32)
	GetAxis(arg1 int) BtVector3
	GetAngle(arg1 int) float32
	GetRelativePivotPosition(arg1 int) float32
	SetFrames(arg1 BtTransform, arg2 BtTransform)
	TestAngularLimitMotor(arg1 int) bool
	SetLinearLowerLimit(arg1 BtVector3)
	GetLinearLowerLimit(arg1 BtVector3)
	SetLinearUpperLimit(arg1 BtVector3)
	GetLinearUpperLimit(arg1 BtVector3)
	SetAngularLowerLimit(arg1 BtVector3)
	GetAngularLowerLimit(arg1 BtVector3)
	SetAngularUpperLimit(arg1 BtVector3)
	GetAngularUpperLimit(arg1 BtVector3)
	GetRotationalLimitMotor(arg1 int) BtRotationalLimitMotor
	GetTranslationalLimitMotor() BtTranslationalLimitMotor
	SetLimit(arg1 int, arg2 float32, arg3 float32)
	IsLimited(arg1 int) bool
	CalcAnchorPos()
	GetUseFrameOffset() bool
	SetUseFrameOffset(arg1 bool)
	SetParam(a ...interface{})
	GetParam(a ...interface{}) float32
	GetOverrideNumSolverIterations() int
	SetOverrideNumSolverIterations(arg1 int)
	SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32)
	InternalSetAppliedImpulse(arg1 float32)
	InternalGetAppliedImpulse() float32
	GetBreakingImpulseThreshold() float32
	SetBreakingImpulseThreshold(arg1 float32)
	IsEnabled() bool
	SetEnabled(arg1 bool)
	SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32)
	GetRigidBodyA(a ...interface{}) interface{}
	GetRigidBodyB(a ...interface{}) interface{}
	GetUserConstraintType() int
	SetUserConstraintType(arg1 int)
	SetUserConstraintId(arg1 int)
	GetUserConstraintId() int
	SetUserConstraintPtr(arg1 uintptr)
	GetUserConstraintPtr() uintptr
	SetJointFeedback(arg1 BtJointFeedback)
	GetJointFeedback(a ...interface{}) interface{}
	GetUid() int
	NeedsFeedback() bool
	EnableFeedback(arg1 bool)
	GetAppliedImpulse() float32
	GetConstraintType() BtTypedConstraintType
	SetDbgDrawSize(arg1 float32)
	GetDbgDrawSize() float32
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtGeneric6DofConstraint()
	SwigGetBtGeneric6DofConstraint() BtGeneric6DofConstraint
	SwigIsBtTypedConstraint()
	SwigGetBtTypedConstraint() BtTypedConstraint
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

type SwigcptrBtGeneric6DofSpringConstraintData uintptr

func (p SwigcptrBtGeneric6DofSpringConstraintData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtGeneric6DofSpringConstraintData) SwigIsBtGeneric6DofSpringConstraintData() {
}

func _swig_wrap_btGeneric6DofSpringConstraintData_m_6dofData_set(SwigcptrBtGeneric6DofSpringConstraintData, uintptr)

func (arg1 SwigcptrBtGeneric6DofSpringConstraintData) SetM_6dofData(arg2 BtGeneric6DofConstraintData) {
	_swig_wrap_btGeneric6DofSpringConstraintData_m_6dofData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraintData_m_6dofData_get(SwigcptrBtGeneric6DofSpringConstraintData) SwigcptrBtGeneric6DofConstraintData

func (arg1 SwigcptrBtGeneric6DofSpringConstraintData) GetM_6dofData() BtGeneric6DofConstraintData {
	return _swig_wrap_btGeneric6DofSpringConstraintData_m_6dofData_get(arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraintData_m_springEnabled_set(SwigcptrBtGeneric6DofSpringConstraintData, *int)

func (arg1 SwigcptrBtGeneric6DofSpringConstraintData) SetM_springEnabled(arg2 *int) {
	_swig_wrap_btGeneric6DofSpringConstraintData_m_springEnabled_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofSpringConstraintData_m_springEnabled_get(SwigcptrBtGeneric6DofSpringConstraintData) *int

func (arg1 SwigcptrBtGeneric6DofSpringConstraintData) GetM_springEnabled() *int {
	return _swig_wrap_btGeneric6DofSpringConstraintData_m_springEnabled_get(arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraintData_m_equilibriumPoint_set(SwigcptrBtGeneric6DofSpringConstraintData, *float32)

func (arg1 SwigcptrBtGeneric6DofSpringConstraintData) SetM_equilibriumPoint(arg2 *float32) {
	_swig_wrap_btGeneric6DofSpringConstraintData_m_equilibriumPoint_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofSpringConstraintData_m_equilibriumPoint_get(SwigcptrBtGeneric6DofSpringConstraintData) *float32

func (arg1 SwigcptrBtGeneric6DofSpringConstraintData) GetM_equilibriumPoint() *float32 {
	return _swig_wrap_btGeneric6DofSpringConstraintData_m_equilibriumPoint_get(arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraintData_m_springStiffness_set(SwigcptrBtGeneric6DofSpringConstraintData, *float32)

func (arg1 SwigcptrBtGeneric6DofSpringConstraintData) SetM_springStiffness(arg2 *float32) {
	_swig_wrap_btGeneric6DofSpringConstraintData_m_springStiffness_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofSpringConstraintData_m_springStiffness_get(SwigcptrBtGeneric6DofSpringConstraintData) *float32

func (arg1 SwigcptrBtGeneric6DofSpringConstraintData) GetM_springStiffness() *float32 {
	return _swig_wrap_btGeneric6DofSpringConstraintData_m_springStiffness_get(arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraintData_m_springDamping_set(SwigcptrBtGeneric6DofSpringConstraintData, *float32)

func (arg1 SwigcptrBtGeneric6DofSpringConstraintData) SetM_springDamping(arg2 *float32) {
	_swig_wrap_btGeneric6DofSpringConstraintData_m_springDamping_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofSpringConstraintData_m_springDamping_get(SwigcptrBtGeneric6DofSpringConstraintData) *float32

func (arg1 SwigcptrBtGeneric6DofSpringConstraintData) GetM_springDamping() *float32 {
	return _swig_wrap_btGeneric6DofSpringConstraintData_m_springDamping_get(arg1)
}

func _swig_wrap_new_btGeneric6DofSpringConstraintData() SwigcptrBtGeneric6DofSpringConstraintData

func NewBtGeneric6DofSpringConstraintData() BtGeneric6DofSpringConstraintData {
	return _swig_wrap_new_btGeneric6DofSpringConstraintData()
}

func _swig_wrap_delete_btGeneric6DofSpringConstraintData(uintptr)

func DeleteBtGeneric6DofSpringConstraintData(arg1 BtGeneric6DofSpringConstraintData) {
	_swig_wrap_delete_btGeneric6DofSpringConstraintData(arg1.Swigcptr())
}

type BtGeneric6DofSpringConstraintData interface {
	Swigcptr() uintptr
	SwigIsBtGeneric6DofSpringConstraintData()
	SetM_6dofData(arg2 BtGeneric6DofConstraintData)
	GetM_6dofData() BtGeneric6DofConstraintData
	SetM_springEnabled(arg2 *int)
	GetM_springEnabled() *int
	SetM_equilibriumPoint(arg2 *float32)
	GetM_equilibriumPoint() *float32
	SetM_springStiffness(arg2 *float32)
	GetM_springStiffness() *float32
	SetM_springDamping(arg2 *float32)
	GetM_springDamping() *float32
}

type SwigcptrBtGeneric6DofSpringConstraintDoubleData2 uintptr

func (p SwigcptrBtGeneric6DofSpringConstraintDoubleData2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtGeneric6DofSpringConstraintDoubleData2) SwigIsBtGeneric6DofSpringConstraintDoubleData2() {
}

func _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_6dofData_set(SwigcptrBtGeneric6DofSpringConstraintDoubleData2, uintptr)

func (arg1 SwigcptrBtGeneric6DofSpringConstraintDoubleData2) SetM_6dofData(arg2 BtGeneric6DofConstraintDoubleData2) {
	_swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_6dofData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_6dofData_get(SwigcptrBtGeneric6DofSpringConstraintDoubleData2) SwigcptrBtGeneric6DofConstraintDoubleData2

func (arg1 SwigcptrBtGeneric6DofSpringConstraintDoubleData2) GetM_6dofData() BtGeneric6DofConstraintDoubleData2 {
	return _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_6dofData_get(arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springEnabled_set(SwigcptrBtGeneric6DofSpringConstraintDoubleData2, *int)

func (arg1 SwigcptrBtGeneric6DofSpringConstraintDoubleData2) SetM_springEnabled(arg2 *int) {
	_swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springEnabled_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springEnabled_get(SwigcptrBtGeneric6DofSpringConstraintDoubleData2) *int

func (arg1 SwigcptrBtGeneric6DofSpringConstraintDoubleData2) GetM_springEnabled() *int {
	return _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springEnabled_get(arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_equilibriumPoint_set(SwigcptrBtGeneric6DofSpringConstraintDoubleData2, *float64)

func (arg1 SwigcptrBtGeneric6DofSpringConstraintDoubleData2) SetM_equilibriumPoint(arg2 *float64) {
	_swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_equilibriumPoint_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_equilibriumPoint_get(SwigcptrBtGeneric6DofSpringConstraintDoubleData2) *float64

func (arg1 SwigcptrBtGeneric6DofSpringConstraintDoubleData2) GetM_equilibriumPoint() *float64 {
	return _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_equilibriumPoint_get(arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springStiffness_set(SwigcptrBtGeneric6DofSpringConstraintDoubleData2, *float64)

func (arg1 SwigcptrBtGeneric6DofSpringConstraintDoubleData2) SetM_springStiffness(arg2 *float64) {
	_swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springStiffness_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springStiffness_get(SwigcptrBtGeneric6DofSpringConstraintDoubleData2) *float64

func (arg1 SwigcptrBtGeneric6DofSpringConstraintDoubleData2) GetM_springStiffness() *float64 {
	return _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springStiffness_get(arg1)
}

func _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springDamping_set(SwigcptrBtGeneric6DofSpringConstraintDoubleData2, *float64)

func (arg1 SwigcptrBtGeneric6DofSpringConstraintDoubleData2) SetM_springDamping(arg2 *float64) {
	_swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springDamping_set(arg1, arg2)
}

func _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springDamping_get(SwigcptrBtGeneric6DofSpringConstraintDoubleData2) *float64

func (arg1 SwigcptrBtGeneric6DofSpringConstraintDoubleData2) GetM_springDamping() *float64 {
	return _swig_wrap_btGeneric6DofSpringConstraintDoubleData2_m_springDamping_get(arg1)
}

func _swig_wrap_new_btGeneric6DofSpringConstraintDoubleData2() SwigcptrBtGeneric6DofSpringConstraintDoubleData2

func NewBtGeneric6DofSpringConstraintDoubleData2() BtGeneric6DofSpringConstraintDoubleData2 {
	return _swig_wrap_new_btGeneric6DofSpringConstraintDoubleData2()
}

func _swig_wrap_delete_btGeneric6DofSpringConstraintDoubleData2(uintptr)

func DeleteBtGeneric6DofSpringConstraintDoubleData2(arg1 BtGeneric6DofSpringConstraintDoubleData2) {
	_swig_wrap_delete_btGeneric6DofSpringConstraintDoubleData2(arg1.Swigcptr())
}

type BtGeneric6DofSpringConstraintDoubleData2 interface {
	Swigcptr() uintptr
	SwigIsBtGeneric6DofSpringConstraintDoubleData2()
	SetM_6dofData(arg2 BtGeneric6DofConstraintDoubleData2)
	GetM_6dofData() BtGeneric6DofConstraintDoubleData2
	SetM_springEnabled(arg2 *int)
	GetM_springEnabled() *int
	SetM_equilibriumPoint(arg2 *float64)
	GetM_equilibriumPoint() *float64
	SetM_springStiffness(arg2 *float64)
	GetM_springStiffness() *float64
	SetM_springDamping(arg2 *float64)
	GetM_springDamping() *float64
}

type SwigcptrBtUniversalConstraint uintptr

func (p SwigcptrBtUniversalConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtUniversalConstraint) SwigIsBtUniversalConstraint() {
}

func _swig_wrap_new_btUniversalConstraint(uintptr, uintptr, uintptr, uintptr, uintptr) SwigcptrBtUniversalConstraint

func NewBtUniversalConstraint(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3) BtUniversalConstraint {
	return _swig_wrap_new_btUniversalConstraint(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_getAnchor(SwigcptrBtUniversalConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtUniversalConstraint) GetAnchor() BtVector3 {
	return _swig_wrap_btUniversalConstraint_getAnchor(arg1)
}

func _swig_wrap_btUniversalConstraint_getAnchor2(SwigcptrBtUniversalConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtUniversalConstraint) GetAnchor2() BtVector3 {
	return _swig_wrap_btUniversalConstraint_getAnchor2(arg1)
}

func _swig_wrap_btUniversalConstraint_getAxis1(SwigcptrBtUniversalConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtUniversalConstraint) GetAxis1() BtVector3 {
	return _swig_wrap_btUniversalConstraint_getAxis1(arg1)
}

func _swig_wrap_btUniversalConstraint_getAxis2(SwigcptrBtUniversalConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtUniversalConstraint) GetAxis2() BtVector3 {
	return _swig_wrap_btUniversalConstraint_getAxis2(arg1)
}

func _swig_wrap_btUniversalConstraint_getAngle1(SwigcptrBtUniversalConstraint) float32

func (arg1 SwigcptrBtUniversalConstraint) GetAngle1() float32 {
	return _swig_wrap_btUniversalConstraint_getAngle1(arg1)
}

func _swig_wrap_btUniversalConstraint_getAngle2(SwigcptrBtUniversalConstraint) float32

func (arg1 SwigcptrBtUniversalConstraint) GetAngle2() float32 {
	return _swig_wrap_btUniversalConstraint_getAngle2(arg1)
}

func _swig_wrap_btUniversalConstraint_setUpperLimit(SwigcptrBtUniversalConstraint, float32, float32)

func (arg1 SwigcptrBtUniversalConstraint) SetUpperLimit(arg2 float32, arg3 float32) {
	_swig_wrap_btUniversalConstraint_setUpperLimit(arg1, arg2, arg3)
}

func _swig_wrap_btUniversalConstraint_setLowerLimit(SwigcptrBtUniversalConstraint, float32, float32)

func (arg1 SwigcptrBtUniversalConstraint) SetLowerLimit(arg2 float32, arg3 float32) {
	_swig_wrap_btUniversalConstraint_setLowerLimit(arg1, arg2, arg3)
}

func _swig_wrap_btUniversalConstraint_setAxis(SwigcptrBtUniversalConstraint, uintptr, uintptr)

func (arg1 SwigcptrBtUniversalConstraint) SetAxis(arg2 BtVector3, arg3 BtVector3) {
	_swig_wrap_btUniversalConstraint_setAxis(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_delete_btUniversalConstraint(uintptr)

func DeleteBtUniversalConstraint(arg1 BtUniversalConstraint) {
	_swig_wrap_delete_btUniversalConstraint(arg1.Swigcptr())
}

func _swig_wrap_SetbtUniversalConstraint_M_useSolveConstraintObsolete(SwigcptrBtUniversalConstraint, bool)

func (_swig_base SwigcptrBtUniversalConstraint) SetM_useSolveConstraintObsolete(arg1 bool) {
	_swig_wrap_SetbtUniversalConstraint_M_useSolveConstraintObsolete(_swig_base, arg1)
}

func _swig_wrap_GetbtUniversalConstraint_M_useSolveConstraintObsolete(SwigcptrBtUniversalConstraint) bool

func (_swig_base SwigcptrBtUniversalConstraint) GetM_useSolveConstraintObsolete() bool {
	return _swig_wrap_GetbtUniversalConstraint_M_useSolveConstraintObsolete(_swig_base)
}

func _swig_wrap_btUniversalConstraint_calculateTransforms__SWIG_0(SwigcptrBtUniversalConstraint, uintptr, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) CalculateTransforms__SWIG_0(arg1 BtTransform, arg2 BtTransform) {
	_swig_wrap_btUniversalConstraint_calculateTransforms__SWIG_0(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_calculateTransforms__SWIG_1(SwigcptrBtUniversalConstraint)

func (_swig_base SwigcptrBtUniversalConstraint) CalculateTransforms__SWIG_1() {
	_swig_wrap_btUniversalConstraint_calculateTransforms__SWIG_1(_swig_base)
}

func (p SwigcptrBtUniversalConstraint) CalculateTransforms(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.CalculateTransforms__SWIG_1()
		return
	}
	if argc == 2 {
		p.CalculateTransforms__SWIG_0(a[0].(BtTransform), a[1].(BtTransform))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btUniversalConstraint_getCalculatedTransformA(SwigcptrBtUniversalConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtUniversalConstraint) GetCalculatedTransformA() BtTransform {
	return _swig_wrap_btUniversalConstraint_getCalculatedTransformA(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getCalculatedTransformB(SwigcptrBtUniversalConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtUniversalConstraint) GetCalculatedTransformB() BtTransform {
	return _swig_wrap_btUniversalConstraint_getCalculatedTransformB(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getFrameOffsetA__SWIG_0(SwigcptrBtUniversalConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtUniversalConstraint) GetFrameOffsetA__SWIG_0() BtTransform {
	return _swig_wrap_btUniversalConstraint_getFrameOffsetA__SWIG_0(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getFrameOffsetA__SWIG_1(SwigcptrBtUniversalConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtUniversalConstraint) GetFrameOffsetA__SWIG_1() BtTransform {
	return _swig_wrap_btUniversalConstraint_getFrameOffsetA__SWIG_1(_swig_base)
}

func (p SwigcptrBtUniversalConstraint) GetFrameOffsetA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetFrameOffsetA__SWIG_0()
	}
	if argc == 0 {
		return p.GetFrameOffsetA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btUniversalConstraint_getFrameOffsetB__SWIG_0(SwigcptrBtUniversalConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtUniversalConstraint) GetFrameOffsetB__SWIG_0() BtTransform {
	return _swig_wrap_btUniversalConstraint_getFrameOffsetB__SWIG_0(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getFrameOffsetB__SWIG_1(SwigcptrBtUniversalConstraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtUniversalConstraint) GetFrameOffsetB__SWIG_1() BtTransform {
	return _swig_wrap_btUniversalConstraint_getFrameOffsetB__SWIG_1(_swig_base)
}

func (p SwigcptrBtUniversalConstraint) GetFrameOffsetB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetFrameOffsetB__SWIG_0()
	}
	if argc == 0 {
		return p.GetFrameOffsetB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btUniversalConstraint_buildJacobian(SwigcptrBtUniversalConstraint)

func (_swig_base SwigcptrBtUniversalConstraint) BuildJacobian() {
	_swig_wrap_btUniversalConstraint_buildJacobian(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getInfo1(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) GetInfo1(arg1 BtConstraintInfo1) {
	_swig_wrap_btUniversalConstraint_getInfo1(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_getInfo1NonVirtual(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) GetInfo1NonVirtual(arg1 BtConstraintInfo1) {
	_swig_wrap_btUniversalConstraint_getInfo1NonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_getInfo2(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) GetInfo2(arg1 BtConstraintInfo2) {
	_swig_wrap_btUniversalConstraint_getInfo2(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_getInfo2NonVirtual(SwigcptrBtUniversalConstraint, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) GetInfo2NonVirtual(arg1 BtConstraintInfo2, arg2 BtTransform, arg3 BtTransform, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3, arg7 BtVector3) {
	_swig_wrap_btUniversalConstraint_getInfo2NonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_updateRHS(SwigcptrBtUniversalConstraint, float32)

func (_swig_base SwigcptrBtUniversalConstraint) UpdateRHS(arg1 float32) {
	_swig_wrap_btUniversalConstraint_updateRHS(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_getAxis(SwigcptrBtUniversalConstraint, int) SwigcptrBtVector3

func (_swig_base SwigcptrBtUniversalConstraint) GetAxis(arg1 int) BtVector3 {
	return _swig_wrap_btUniversalConstraint_getAxis(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_getAngle(SwigcptrBtUniversalConstraint, int) float32

func (_swig_base SwigcptrBtUniversalConstraint) GetAngle(arg1 int) float32 {
	return _swig_wrap_btUniversalConstraint_getAngle(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_getRelativePivotPosition(SwigcptrBtUniversalConstraint, int) float32

func (_swig_base SwigcptrBtUniversalConstraint) GetRelativePivotPosition(arg1 int) float32 {
	return _swig_wrap_btUniversalConstraint_getRelativePivotPosition(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_setFrames(SwigcptrBtUniversalConstraint, uintptr, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) SetFrames(arg1 BtTransform, arg2 BtTransform) {
	_swig_wrap_btUniversalConstraint_setFrames(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_testAngularLimitMotor(SwigcptrBtUniversalConstraint, int) bool

func (_swig_base SwigcptrBtUniversalConstraint) TestAngularLimitMotor(arg1 int) bool {
	return _swig_wrap_btUniversalConstraint_testAngularLimitMotor(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_setLinearLowerLimit(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) SetLinearLowerLimit(arg1 BtVector3) {
	_swig_wrap_btUniversalConstraint_setLinearLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_getLinearLowerLimit(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) GetLinearLowerLimit(arg1 BtVector3) {
	_swig_wrap_btUniversalConstraint_getLinearLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_setLinearUpperLimit(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) SetLinearUpperLimit(arg1 BtVector3) {
	_swig_wrap_btUniversalConstraint_setLinearUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_getLinearUpperLimit(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) GetLinearUpperLimit(arg1 BtVector3) {
	_swig_wrap_btUniversalConstraint_getLinearUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_setAngularLowerLimit(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) SetAngularLowerLimit(arg1 BtVector3) {
	_swig_wrap_btUniversalConstraint_setAngularLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_getAngularLowerLimit(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) GetAngularLowerLimit(arg1 BtVector3) {
	_swig_wrap_btUniversalConstraint_getAngularLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_setAngularUpperLimit(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) SetAngularUpperLimit(arg1 BtVector3) {
	_swig_wrap_btUniversalConstraint_setAngularUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_getAngularUpperLimit(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) GetAngularUpperLimit(arg1 BtVector3) {
	_swig_wrap_btUniversalConstraint_getAngularUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_getRotationalLimitMotor(SwigcptrBtUniversalConstraint, int) SwigcptrBtRotationalLimitMotor

func (_swig_base SwigcptrBtUniversalConstraint) GetRotationalLimitMotor(arg1 int) BtRotationalLimitMotor {
	return _swig_wrap_btUniversalConstraint_getRotationalLimitMotor(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_getTranslationalLimitMotor(SwigcptrBtUniversalConstraint) SwigcptrBtTranslationalLimitMotor

func (_swig_base SwigcptrBtUniversalConstraint) GetTranslationalLimitMotor() BtTranslationalLimitMotor {
	return _swig_wrap_btUniversalConstraint_getTranslationalLimitMotor(_swig_base)
}

func _swig_wrap_btUniversalConstraint_setLimit(SwigcptrBtUniversalConstraint, int, float32, float32)

func (_swig_base SwigcptrBtUniversalConstraint) SetLimit(arg1 int, arg2 float32, arg3 float32) {
	_swig_wrap_btUniversalConstraint_setLimit(_swig_base, arg1, arg2, arg3)
}

func _swig_wrap_btUniversalConstraint_isLimited(SwigcptrBtUniversalConstraint, int) bool

func (_swig_base SwigcptrBtUniversalConstraint) IsLimited(arg1 int) bool {
	return _swig_wrap_btUniversalConstraint_isLimited(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_calcAnchorPos(SwigcptrBtUniversalConstraint)

func (_swig_base SwigcptrBtUniversalConstraint) CalcAnchorPos() {
	_swig_wrap_btUniversalConstraint_calcAnchorPos(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getUseFrameOffset(SwigcptrBtUniversalConstraint) bool

func (_swig_base SwigcptrBtUniversalConstraint) GetUseFrameOffset() bool {
	return _swig_wrap_btUniversalConstraint_getUseFrameOffset(_swig_base)
}

func _swig_wrap_btUniversalConstraint_setUseFrameOffset(SwigcptrBtUniversalConstraint, bool)

func (_swig_base SwigcptrBtUniversalConstraint) SetUseFrameOffset(arg1 bool) {
	_swig_wrap_btUniversalConstraint_setUseFrameOffset(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_setParam__SWIG_0(SwigcptrBtUniversalConstraint, int, float32, int)

func (_swig_base SwigcptrBtUniversalConstraint) SetParam__SWIG_0(arg1 int, arg2 float32, arg3 int) {
	_swig_wrap_btUniversalConstraint_setParam__SWIG_0(_swig_base, arg1, arg2, arg3)
}

func _swig_wrap_btUniversalConstraint_setParam__SWIG_1(SwigcptrBtUniversalConstraint, int, float32)

func (_swig_base SwigcptrBtUniversalConstraint) SetParam__SWIG_1(arg1 int, arg2 float32) {
	_swig_wrap_btUniversalConstraint_setParam__SWIG_1(_swig_base, arg1, arg2)
}

func (p SwigcptrBtUniversalConstraint) SetParam(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetParam__SWIG_1(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetParam__SWIG_0(a[0].(int), a[1].(float32), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btUniversalConstraint_getParam__SWIG_0(SwigcptrBtUniversalConstraint, int, int) float32

func (_swig_base SwigcptrBtUniversalConstraint) GetParam__SWIG_0(arg1 int, arg2 int) float32 {
	return _swig_wrap_btUniversalConstraint_getParam__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btUniversalConstraint_getParam__SWIG_1(SwigcptrBtUniversalConstraint, int) float32

func (_swig_base SwigcptrBtUniversalConstraint) GetParam__SWIG_1(arg1 int) float32 {
	return _swig_wrap_btUniversalConstraint_getParam__SWIG_1(_swig_base, arg1)
}

func (p SwigcptrBtUniversalConstraint) GetParam(a ...interface{}) float32 {
	argc := len(a)
	if argc == 1 {
		return p.GetParam__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.GetParam__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btUniversalConstraint_calculateSerializeBufferSize(SwigcptrBtUniversalConstraint) int

func (_swig_base SwigcptrBtUniversalConstraint) CalculateSerializeBufferSize() int {
	return _swig_wrap_btUniversalConstraint_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btUniversalConstraint_serialize(SwigcptrBtUniversalConstraint, uintptr, uintptr) string

func (_swig_base SwigcptrBtUniversalConstraint) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btUniversalConstraint_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_getFixedBody() SwigcptrBtRigidBody

func BtUniversalConstraintGetFixedBody() BtRigidBody {
	return _swig_wrap_btUniversalConstraint_getFixedBody()
}

func _swig_wrap_btUniversalConstraint_getOverrideNumSolverIterations(SwigcptrBtUniversalConstraint) int

func (_swig_base SwigcptrBtUniversalConstraint) GetOverrideNumSolverIterations() int {
	return _swig_wrap_btUniversalConstraint_getOverrideNumSolverIterations(_swig_base)
}

func _swig_wrap_btUniversalConstraint_setOverrideNumSolverIterations(SwigcptrBtUniversalConstraint, int)

func (_swig_base SwigcptrBtUniversalConstraint) SetOverrideNumSolverIterations(arg1 int) {
	_swig_wrap_btUniversalConstraint_setOverrideNumSolverIterations(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_setupSolverConstraint(SwigcptrBtUniversalConstraint, uintptr, int, int, float32)

func (_swig_base SwigcptrBtUniversalConstraint) SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32) {
	_swig_wrap_btUniversalConstraint_setupSolverConstraint(_swig_base, arg1.Swigcptr(), arg2, arg3, arg4)
}

func _swig_wrap_btUniversalConstraint_internalSetAppliedImpulse(SwigcptrBtUniversalConstraint, float32)

func (_swig_base SwigcptrBtUniversalConstraint) InternalSetAppliedImpulse(arg1 float32) {
	_swig_wrap_btUniversalConstraint_internalSetAppliedImpulse(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_internalGetAppliedImpulse(SwigcptrBtUniversalConstraint) float32

func (_swig_base SwigcptrBtUniversalConstraint) InternalGetAppliedImpulse() float32 {
	return _swig_wrap_btUniversalConstraint_internalGetAppliedImpulse(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getBreakingImpulseThreshold(SwigcptrBtUniversalConstraint) float32

func (_swig_base SwigcptrBtUniversalConstraint) GetBreakingImpulseThreshold() float32 {
	return _swig_wrap_btUniversalConstraint_getBreakingImpulseThreshold(_swig_base)
}

func _swig_wrap_btUniversalConstraint_setBreakingImpulseThreshold(SwigcptrBtUniversalConstraint, float32)

func (_swig_base SwigcptrBtUniversalConstraint) SetBreakingImpulseThreshold(arg1 float32) {
	_swig_wrap_btUniversalConstraint_setBreakingImpulseThreshold(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_isEnabled(SwigcptrBtUniversalConstraint) bool

func (_swig_base SwigcptrBtUniversalConstraint) IsEnabled() bool {
	return _swig_wrap_btUniversalConstraint_isEnabled(_swig_base)
}

func _swig_wrap_btUniversalConstraint_setEnabled(SwigcptrBtUniversalConstraint, bool)

func (_swig_base SwigcptrBtUniversalConstraint) SetEnabled(arg1 bool) {
	_swig_wrap_btUniversalConstraint_setEnabled(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_solveConstraintObsolete(SwigcptrBtUniversalConstraint, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtUniversalConstraint) SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32) {
	_swig_wrap_btUniversalConstraint_solveConstraintObsolete(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btUniversalConstraint_getRigidBodyA__SWIG_0(SwigcptrBtUniversalConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtUniversalConstraint) GetRigidBodyA__SWIG_0() BtRigidBody {
	return _swig_wrap_btUniversalConstraint_getRigidBodyA__SWIG_0(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getRigidBodyA__SWIG_1(SwigcptrBtUniversalConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtUniversalConstraint) GetRigidBodyA__SWIG_1() BtRigidBody {
	return _swig_wrap_btUniversalConstraint_getRigidBodyA__SWIG_1(_swig_base)
}

func (p SwigcptrBtUniversalConstraint) GetRigidBodyA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btUniversalConstraint_getRigidBodyB__SWIG_0(SwigcptrBtUniversalConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtUniversalConstraint) GetRigidBodyB__SWIG_0() BtRigidBody {
	return _swig_wrap_btUniversalConstraint_getRigidBodyB__SWIG_0(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getRigidBodyB__SWIG_1(SwigcptrBtUniversalConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtUniversalConstraint) GetRigidBodyB__SWIG_1() BtRigidBody {
	return _swig_wrap_btUniversalConstraint_getRigidBodyB__SWIG_1(_swig_base)
}

func (p SwigcptrBtUniversalConstraint) GetRigidBodyB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btUniversalConstraint_getUserConstraintType(SwigcptrBtUniversalConstraint) int

func (_swig_base SwigcptrBtUniversalConstraint) GetUserConstraintType() int {
	return _swig_wrap_btUniversalConstraint_getUserConstraintType(_swig_base)
}

func _swig_wrap_btUniversalConstraint_setUserConstraintType(SwigcptrBtUniversalConstraint, int)

func (_swig_base SwigcptrBtUniversalConstraint) SetUserConstraintType(arg1 int) {
	_swig_wrap_btUniversalConstraint_setUserConstraintType(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_setUserConstraintId(SwigcptrBtUniversalConstraint, int)

func (_swig_base SwigcptrBtUniversalConstraint) SetUserConstraintId(arg1 int) {
	_swig_wrap_btUniversalConstraint_setUserConstraintId(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_getUserConstraintId(SwigcptrBtUniversalConstraint) int

func (_swig_base SwigcptrBtUniversalConstraint) GetUserConstraintId() int {
	return _swig_wrap_btUniversalConstraint_getUserConstraintId(_swig_base)
}

func _swig_wrap_btUniversalConstraint_setUserConstraintPtr(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) SetUserConstraintPtr(arg1 uintptr) {
	_swig_wrap_btUniversalConstraint_setUserConstraintPtr(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_getUserConstraintPtr(SwigcptrBtUniversalConstraint) uintptr

func (_swig_base SwigcptrBtUniversalConstraint) GetUserConstraintPtr() uintptr {
	return _swig_wrap_btUniversalConstraint_getUserConstraintPtr(_swig_base)
}

func _swig_wrap_btUniversalConstraint_setJointFeedback(SwigcptrBtUniversalConstraint, uintptr)

func (_swig_base SwigcptrBtUniversalConstraint) SetJointFeedback(arg1 BtJointFeedback) {
	_swig_wrap_btUniversalConstraint_setJointFeedback(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btUniversalConstraint_getJointFeedback__SWIG_0(SwigcptrBtUniversalConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtUniversalConstraint) GetJointFeedback__SWIG_0() BtJointFeedback {
	return _swig_wrap_btUniversalConstraint_getJointFeedback__SWIG_0(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getJointFeedback__SWIG_1(SwigcptrBtUniversalConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtUniversalConstraint) GetJointFeedback__SWIG_1() BtJointFeedback {
	return _swig_wrap_btUniversalConstraint_getJointFeedback__SWIG_1(_swig_base)
}

func (p SwigcptrBtUniversalConstraint) GetJointFeedback(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetJointFeedback__SWIG_0()
	}
	if argc == 0 {
		return p.GetJointFeedback__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btUniversalConstraint_getUid(SwigcptrBtUniversalConstraint) int

func (_swig_base SwigcptrBtUniversalConstraint) GetUid() int {
	return _swig_wrap_btUniversalConstraint_getUid(_swig_base)
}

func _swig_wrap_btUniversalConstraint_needsFeedback(SwigcptrBtUniversalConstraint) bool

func (_swig_base SwigcptrBtUniversalConstraint) NeedsFeedback() bool {
	return _swig_wrap_btUniversalConstraint_needsFeedback(_swig_base)
}

func _swig_wrap_btUniversalConstraint_enableFeedback(SwigcptrBtUniversalConstraint, bool)

func (_swig_base SwigcptrBtUniversalConstraint) EnableFeedback(arg1 bool) {
	_swig_wrap_btUniversalConstraint_enableFeedback(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_getAppliedImpulse(SwigcptrBtUniversalConstraint) float32

func (_swig_base SwigcptrBtUniversalConstraint) GetAppliedImpulse() float32 {
	return _swig_wrap_btUniversalConstraint_getAppliedImpulse(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getConstraintType(SwigcptrBtUniversalConstraint) BtTypedConstraintType

func (_swig_base SwigcptrBtUniversalConstraint) GetConstraintType() BtTypedConstraintType {
	return _swig_wrap_btUniversalConstraint_getConstraintType(_swig_base)
}

func _swig_wrap_btUniversalConstraint_setDbgDrawSize(SwigcptrBtUniversalConstraint, float32)

func (_swig_base SwigcptrBtUniversalConstraint) SetDbgDrawSize(arg1 float32) {
	_swig_wrap_btUniversalConstraint_setDbgDrawSize(_swig_base, arg1)
}

func _swig_wrap_btUniversalConstraint_getDbgDrawSize(SwigcptrBtUniversalConstraint) float32

func (_swig_base SwigcptrBtUniversalConstraint) GetDbgDrawSize() float32 {
	return _swig_wrap_btUniversalConstraint_getDbgDrawSize(_swig_base)
}

func _swig_wrap_SetbtUniversalConstraint_M_objectType(SwigcptrBtUniversalConstraint, int)

func (_swig_base SwigcptrBtUniversalConstraint) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtUniversalConstraint_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtUniversalConstraint_M_objectType(SwigcptrBtUniversalConstraint) int

func (_swig_base SwigcptrBtUniversalConstraint) GetM_objectType() int {
	return _swig_wrap_GetbtUniversalConstraint_M_objectType(_swig_base)
}

func _swig_wrap_btUniversalConstraint_getObjectType(SwigcptrBtUniversalConstraint) int

func (_swig_base SwigcptrBtUniversalConstraint) GetObjectType() int {
	return _swig_wrap_btUniversalConstraint_getObjectType(_swig_base)
}

func (p SwigcptrBtUniversalConstraint) SwigIsBtGeneric6DofConstraint() {
}

func (p SwigcptrBtUniversalConstraint) SwigGetBtGeneric6DofConstraint() BtGeneric6DofConstraint {
	return SwigcptrBtGeneric6DofConstraint(p.Swigcptr())
}

func (p SwigcptrBtUniversalConstraint) SwigIsBtTypedConstraint() {
}

func (p SwigcptrBtUniversalConstraint) SwigGetBtTypedConstraint() BtTypedConstraint {
	return SwigcptrBtTypedConstraint(p.Swigcptr())
}

func (p SwigcptrBtUniversalConstraint) SwigIsBtTypedObject() {
}

func (p SwigcptrBtUniversalConstraint) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtUniversalConstraint interface {
	Swigcptr() uintptr
	SwigIsBtUniversalConstraint()
	GetAnchor() BtVector3
	GetAnchor2() BtVector3
	GetAxis1() BtVector3
	GetAxis2() BtVector3
	GetAngle1() float32
	GetAngle2() float32
	SetUpperLimit(arg2 float32, arg3 float32)
	SetLowerLimit(arg2 float32, arg3 float32)
	SetAxis(arg2 BtVector3, arg3 BtVector3)
	SetM_useSolveConstraintObsolete(arg1 bool)
	GetM_useSolveConstraintObsolete() bool
	CalculateTransforms(a ...interface{})
	GetCalculatedTransformA() BtTransform
	GetCalculatedTransformB() BtTransform
	GetFrameOffsetA(a ...interface{}) interface{}
	GetFrameOffsetB(a ...interface{}) interface{}
	BuildJacobian()
	GetInfo1(arg1 BtConstraintInfo1)
	GetInfo1NonVirtual(arg1 BtConstraintInfo1)
	GetInfo2(arg1 BtConstraintInfo2)
	GetInfo2NonVirtual(arg1 BtConstraintInfo2, arg2 BtTransform, arg3 BtTransform, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3, arg7 BtVector3)
	UpdateRHS(arg1 float32)
	GetAxis(arg1 int) BtVector3
	GetAngle(arg1 int) float32
	GetRelativePivotPosition(arg1 int) float32
	SetFrames(arg1 BtTransform, arg2 BtTransform)
	TestAngularLimitMotor(arg1 int) bool
	SetLinearLowerLimit(arg1 BtVector3)
	GetLinearLowerLimit(arg1 BtVector3)
	SetLinearUpperLimit(arg1 BtVector3)
	GetLinearUpperLimit(arg1 BtVector3)
	SetAngularLowerLimit(arg1 BtVector3)
	GetAngularLowerLimit(arg1 BtVector3)
	SetAngularUpperLimit(arg1 BtVector3)
	GetAngularUpperLimit(arg1 BtVector3)
	GetRotationalLimitMotor(arg1 int) BtRotationalLimitMotor
	GetTranslationalLimitMotor() BtTranslationalLimitMotor
	SetLimit(arg1 int, arg2 float32, arg3 float32)
	IsLimited(arg1 int) bool
	CalcAnchorPos()
	GetUseFrameOffset() bool
	SetUseFrameOffset(arg1 bool)
	SetParam(a ...interface{})
	GetParam(a ...interface{}) float32
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	GetOverrideNumSolverIterations() int
	SetOverrideNumSolverIterations(arg1 int)
	SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32)
	InternalSetAppliedImpulse(arg1 float32)
	InternalGetAppliedImpulse() float32
	GetBreakingImpulseThreshold() float32
	SetBreakingImpulseThreshold(arg1 float32)
	IsEnabled() bool
	SetEnabled(arg1 bool)
	SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32)
	GetRigidBodyA(a ...interface{}) interface{}
	GetRigidBodyB(a ...interface{}) interface{}
	GetUserConstraintType() int
	SetUserConstraintType(arg1 int)
	SetUserConstraintId(arg1 int)
	GetUserConstraintId() int
	SetUserConstraintPtr(arg1 uintptr)
	GetUserConstraintPtr() uintptr
	SetJointFeedback(arg1 BtJointFeedback)
	GetJointFeedback(a ...interface{}) interface{}
	GetUid() int
	NeedsFeedback() bool
	EnableFeedback(arg1 bool)
	GetAppliedImpulse() float32
	GetConstraintType() BtTypedConstraintType
	SetDbgDrawSize(arg1 float32)
	GetDbgDrawSize() float32
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtGeneric6DofConstraint()
	SwigGetBtGeneric6DofConstraint() BtGeneric6DofConstraint
	SwigIsBtTypedConstraint()
	SwigGetBtTypedConstraint() BtTypedConstraint
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

type SwigcptrBtHinge2Constraint uintptr

func (p SwigcptrBtHinge2Constraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtHinge2Constraint) SwigIsBtHinge2Constraint() {
}

func _swig_wrap_new_btHinge2Constraint(uintptr, uintptr, uintptr, uintptr, uintptr) SwigcptrBtHinge2Constraint

func NewBtHinge2Constraint(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtVector3, arg4 BtVector3, arg5 BtVector3) BtHinge2Constraint {
	return _swig_wrap_new_btHinge2Constraint(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_getAnchor(SwigcptrBtHinge2Constraint) SwigcptrBtVector3

func (arg1 SwigcptrBtHinge2Constraint) GetAnchor() BtVector3 {
	return _swig_wrap_btHinge2Constraint_getAnchor(arg1)
}

func _swig_wrap_btHinge2Constraint_getAnchor2(SwigcptrBtHinge2Constraint) SwigcptrBtVector3

func (arg1 SwigcptrBtHinge2Constraint) GetAnchor2() BtVector3 {
	return _swig_wrap_btHinge2Constraint_getAnchor2(arg1)
}

func _swig_wrap_btHinge2Constraint_getAxis1(SwigcptrBtHinge2Constraint) SwigcptrBtVector3

func (arg1 SwigcptrBtHinge2Constraint) GetAxis1() BtVector3 {
	return _swig_wrap_btHinge2Constraint_getAxis1(arg1)
}

func _swig_wrap_btHinge2Constraint_getAxis2(SwigcptrBtHinge2Constraint) SwigcptrBtVector3

func (arg1 SwigcptrBtHinge2Constraint) GetAxis2() BtVector3 {
	return _swig_wrap_btHinge2Constraint_getAxis2(arg1)
}

func _swig_wrap_btHinge2Constraint_getAngle1(SwigcptrBtHinge2Constraint) float32

func (arg1 SwigcptrBtHinge2Constraint) GetAngle1() float32 {
	return _swig_wrap_btHinge2Constraint_getAngle1(arg1)
}

func _swig_wrap_btHinge2Constraint_getAngle2(SwigcptrBtHinge2Constraint) float32

func (arg1 SwigcptrBtHinge2Constraint) GetAngle2() float32 {
	return _swig_wrap_btHinge2Constraint_getAngle2(arg1)
}

func _swig_wrap_btHinge2Constraint_setUpperLimit(SwigcptrBtHinge2Constraint, float32)

func (arg1 SwigcptrBtHinge2Constraint) SetUpperLimit(arg2 float32) {
	_swig_wrap_btHinge2Constraint_setUpperLimit(arg1, arg2)
}

func _swig_wrap_btHinge2Constraint_setLowerLimit(SwigcptrBtHinge2Constraint, float32)

func (arg1 SwigcptrBtHinge2Constraint) SetLowerLimit(arg2 float32) {
	_swig_wrap_btHinge2Constraint_setLowerLimit(arg1, arg2)
}

func _swig_wrap_delete_btHinge2Constraint(uintptr)

func DeleteBtHinge2Constraint(arg1 BtHinge2Constraint) {
	_swig_wrap_delete_btHinge2Constraint(arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_enableSpring(SwigcptrBtHinge2Constraint, int, bool)

func (_swig_base SwigcptrBtHinge2Constraint) EnableSpring(arg1 int, arg2 bool) {
	_swig_wrap_btHinge2Constraint_enableSpring(_swig_base, arg1, arg2)
}

func _swig_wrap_btHinge2Constraint_setStiffness(SwigcptrBtHinge2Constraint, int, float32)

func (_swig_base SwigcptrBtHinge2Constraint) SetStiffness(arg1 int, arg2 float32) {
	_swig_wrap_btHinge2Constraint_setStiffness(_swig_base, arg1, arg2)
}

func _swig_wrap_btHinge2Constraint_setDamping(SwigcptrBtHinge2Constraint, int, float32)

func (_swig_base SwigcptrBtHinge2Constraint) SetDamping(arg1 int, arg2 float32) {
	_swig_wrap_btHinge2Constraint_setDamping(_swig_base, arg1, arg2)
}

func _swig_wrap_btHinge2Constraint_setEquilibriumPoint__SWIG_0(SwigcptrBtHinge2Constraint)

func (_swig_base SwigcptrBtHinge2Constraint) SetEquilibriumPoint__SWIG_0() {
	_swig_wrap_btHinge2Constraint_setEquilibriumPoint__SWIG_0(_swig_base)
}

func _swig_wrap_btHinge2Constraint_setEquilibriumPoint__SWIG_1(SwigcptrBtHinge2Constraint, int)

func (_swig_base SwigcptrBtHinge2Constraint) SetEquilibriumPoint__SWIG_1(arg1 int) {
	_swig_wrap_btHinge2Constraint_setEquilibriumPoint__SWIG_1(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_setEquilibriumPoint__SWIG_2(SwigcptrBtHinge2Constraint, int, float32)

func (_swig_base SwigcptrBtHinge2Constraint) SetEquilibriumPoint__SWIG_2(arg1 int, arg2 float32) {
	_swig_wrap_btHinge2Constraint_setEquilibriumPoint__SWIG_2(_swig_base, arg1, arg2)
}

func (p SwigcptrBtHinge2Constraint) SetEquilibriumPoint(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.SetEquilibriumPoint__SWIG_0()
		return
	}
	if argc == 1 {
		p.SetEquilibriumPoint__SWIG_1(a[0].(int))
		return
	}
	if argc == 2 {
		p.SetEquilibriumPoint__SWIG_2(a[0].(int), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHinge2Constraint_setAxis(SwigcptrBtHinge2Constraint, uintptr, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) SetAxis(arg1 BtVector3, arg2 BtVector3) {
	_swig_wrap_btHinge2Constraint_setAxis(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_getInfo2(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) GetInfo2(arg1 BtConstraintInfo2) {
	_swig_wrap_btHinge2Constraint_getInfo2(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_calculateSerializeBufferSize(SwigcptrBtHinge2Constraint) int

func (_swig_base SwigcptrBtHinge2Constraint) CalculateSerializeBufferSize() int {
	return _swig_wrap_btHinge2Constraint_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btHinge2Constraint_serialize(SwigcptrBtHinge2Constraint, uintptr, uintptr) string

func (_swig_base SwigcptrBtHinge2Constraint) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btHinge2Constraint_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_SetbtHinge2Constraint_M_useSolveConstraintObsolete(SwigcptrBtHinge2Constraint, bool)

func (_swig_base SwigcptrBtHinge2Constraint) SetM_useSolveConstraintObsolete(arg1 bool) {
	_swig_wrap_SetbtHinge2Constraint_M_useSolveConstraintObsolete(_swig_base, arg1)
}

func _swig_wrap_GetbtHinge2Constraint_M_useSolveConstraintObsolete(SwigcptrBtHinge2Constraint) bool

func (_swig_base SwigcptrBtHinge2Constraint) GetM_useSolveConstraintObsolete() bool {
	return _swig_wrap_GetbtHinge2Constraint_M_useSolveConstraintObsolete(_swig_base)
}

func _swig_wrap_btHinge2Constraint_calculateTransforms__SWIG_0(SwigcptrBtHinge2Constraint, uintptr, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) CalculateTransforms__SWIG_0(arg1 BtTransform, arg2 BtTransform) {
	_swig_wrap_btHinge2Constraint_calculateTransforms__SWIG_0(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_calculateTransforms__SWIG_1(SwigcptrBtHinge2Constraint)

func (_swig_base SwigcptrBtHinge2Constraint) CalculateTransforms__SWIG_1() {
	_swig_wrap_btHinge2Constraint_calculateTransforms__SWIG_1(_swig_base)
}

func (p SwigcptrBtHinge2Constraint) CalculateTransforms(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.CalculateTransforms__SWIG_1()
		return
	}
	if argc == 2 {
		p.CalculateTransforms__SWIG_0(a[0].(BtTransform), a[1].(BtTransform))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHinge2Constraint_getCalculatedTransformA(SwigcptrBtHinge2Constraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtHinge2Constraint) GetCalculatedTransformA() BtTransform {
	return _swig_wrap_btHinge2Constraint_getCalculatedTransformA(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getCalculatedTransformB(SwigcptrBtHinge2Constraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtHinge2Constraint) GetCalculatedTransformB() BtTransform {
	return _swig_wrap_btHinge2Constraint_getCalculatedTransformB(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getFrameOffsetA__SWIG_0(SwigcptrBtHinge2Constraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtHinge2Constraint) GetFrameOffsetA__SWIG_0() BtTransform {
	return _swig_wrap_btHinge2Constraint_getFrameOffsetA__SWIG_0(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getFrameOffsetA__SWIG_1(SwigcptrBtHinge2Constraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtHinge2Constraint) GetFrameOffsetA__SWIG_1() BtTransform {
	return _swig_wrap_btHinge2Constraint_getFrameOffsetA__SWIG_1(_swig_base)
}

func (p SwigcptrBtHinge2Constraint) GetFrameOffsetA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetFrameOffsetA__SWIG_0()
	}
	if argc == 0 {
		return p.GetFrameOffsetA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHinge2Constraint_getFrameOffsetB__SWIG_0(SwigcptrBtHinge2Constraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtHinge2Constraint) GetFrameOffsetB__SWIG_0() BtTransform {
	return _swig_wrap_btHinge2Constraint_getFrameOffsetB__SWIG_0(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getFrameOffsetB__SWIG_1(SwigcptrBtHinge2Constraint) SwigcptrBtTransform

func (_swig_base SwigcptrBtHinge2Constraint) GetFrameOffsetB__SWIG_1() BtTransform {
	return _swig_wrap_btHinge2Constraint_getFrameOffsetB__SWIG_1(_swig_base)
}

func (p SwigcptrBtHinge2Constraint) GetFrameOffsetB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetFrameOffsetB__SWIG_0()
	}
	if argc == 0 {
		return p.GetFrameOffsetB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHinge2Constraint_buildJacobian(SwigcptrBtHinge2Constraint)

func (_swig_base SwigcptrBtHinge2Constraint) BuildJacobian() {
	_swig_wrap_btHinge2Constraint_buildJacobian(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getInfo1(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) GetInfo1(arg1 BtConstraintInfo1) {
	_swig_wrap_btHinge2Constraint_getInfo1(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_getInfo1NonVirtual(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) GetInfo1NonVirtual(arg1 BtConstraintInfo1) {
	_swig_wrap_btHinge2Constraint_getInfo1NonVirtual(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_getInfo2NonVirtual(SwigcptrBtHinge2Constraint, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) GetInfo2NonVirtual(arg1 BtConstraintInfo2, arg2 BtTransform, arg3 BtTransform, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3, arg7 BtVector3) {
	_swig_wrap_btHinge2Constraint_getInfo2NonVirtual(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5.Swigcptr(), arg6.Swigcptr(), arg7.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_updateRHS(SwigcptrBtHinge2Constraint, float32)

func (_swig_base SwigcptrBtHinge2Constraint) UpdateRHS(arg1 float32) {
	_swig_wrap_btHinge2Constraint_updateRHS(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_getAxis(SwigcptrBtHinge2Constraint, int) SwigcptrBtVector3

func (_swig_base SwigcptrBtHinge2Constraint) GetAxis(arg1 int) BtVector3 {
	return _swig_wrap_btHinge2Constraint_getAxis(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_getAngle(SwigcptrBtHinge2Constraint, int) float32

func (_swig_base SwigcptrBtHinge2Constraint) GetAngle(arg1 int) float32 {
	return _swig_wrap_btHinge2Constraint_getAngle(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_getRelativePivotPosition(SwigcptrBtHinge2Constraint, int) float32

func (_swig_base SwigcptrBtHinge2Constraint) GetRelativePivotPosition(arg1 int) float32 {
	return _swig_wrap_btHinge2Constraint_getRelativePivotPosition(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_setFrames(SwigcptrBtHinge2Constraint, uintptr, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) SetFrames(arg1 BtTransform, arg2 BtTransform) {
	_swig_wrap_btHinge2Constraint_setFrames(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_testAngularLimitMotor(SwigcptrBtHinge2Constraint, int) bool

func (_swig_base SwigcptrBtHinge2Constraint) TestAngularLimitMotor(arg1 int) bool {
	return _swig_wrap_btHinge2Constraint_testAngularLimitMotor(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_setLinearLowerLimit(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) SetLinearLowerLimit(arg1 BtVector3) {
	_swig_wrap_btHinge2Constraint_setLinearLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_getLinearLowerLimit(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) GetLinearLowerLimit(arg1 BtVector3) {
	_swig_wrap_btHinge2Constraint_getLinearLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_setLinearUpperLimit(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) SetLinearUpperLimit(arg1 BtVector3) {
	_swig_wrap_btHinge2Constraint_setLinearUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_getLinearUpperLimit(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) GetLinearUpperLimit(arg1 BtVector3) {
	_swig_wrap_btHinge2Constraint_getLinearUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_setAngularLowerLimit(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) SetAngularLowerLimit(arg1 BtVector3) {
	_swig_wrap_btHinge2Constraint_setAngularLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_getAngularLowerLimit(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) GetAngularLowerLimit(arg1 BtVector3) {
	_swig_wrap_btHinge2Constraint_getAngularLowerLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_setAngularUpperLimit(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) SetAngularUpperLimit(arg1 BtVector3) {
	_swig_wrap_btHinge2Constraint_setAngularUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_getAngularUpperLimit(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) GetAngularUpperLimit(arg1 BtVector3) {
	_swig_wrap_btHinge2Constraint_getAngularUpperLimit(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_getRotationalLimitMotor(SwigcptrBtHinge2Constraint, int) SwigcptrBtRotationalLimitMotor

func (_swig_base SwigcptrBtHinge2Constraint) GetRotationalLimitMotor(arg1 int) BtRotationalLimitMotor {
	return _swig_wrap_btHinge2Constraint_getRotationalLimitMotor(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_getTranslationalLimitMotor(SwigcptrBtHinge2Constraint) SwigcptrBtTranslationalLimitMotor

func (_swig_base SwigcptrBtHinge2Constraint) GetTranslationalLimitMotor() BtTranslationalLimitMotor {
	return _swig_wrap_btHinge2Constraint_getTranslationalLimitMotor(_swig_base)
}

func _swig_wrap_btHinge2Constraint_setLimit(SwigcptrBtHinge2Constraint, int, float32, float32)

func (_swig_base SwigcptrBtHinge2Constraint) SetLimit(arg1 int, arg2 float32, arg3 float32) {
	_swig_wrap_btHinge2Constraint_setLimit(_swig_base, arg1, arg2, arg3)
}

func _swig_wrap_btHinge2Constraint_isLimited(SwigcptrBtHinge2Constraint, int) bool

func (_swig_base SwigcptrBtHinge2Constraint) IsLimited(arg1 int) bool {
	return _swig_wrap_btHinge2Constraint_isLimited(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_calcAnchorPos(SwigcptrBtHinge2Constraint)

func (_swig_base SwigcptrBtHinge2Constraint) CalcAnchorPos() {
	_swig_wrap_btHinge2Constraint_calcAnchorPos(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getUseFrameOffset(SwigcptrBtHinge2Constraint) bool

func (_swig_base SwigcptrBtHinge2Constraint) GetUseFrameOffset() bool {
	return _swig_wrap_btHinge2Constraint_getUseFrameOffset(_swig_base)
}

func _swig_wrap_btHinge2Constraint_setUseFrameOffset(SwigcptrBtHinge2Constraint, bool)

func (_swig_base SwigcptrBtHinge2Constraint) SetUseFrameOffset(arg1 bool) {
	_swig_wrap_btHinge2Constraint_setUseFrameOffset(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_setParam__SWIG_0(SwigcptrBtHinge2Constraint, int, float32, int)

func (_swig_base SwigcptrBtHinge2Constraint) SetParam__SWIG_0(arg1 int, arg2 float32, arg3 int) {
	_swig_wrap_btHinge2Constraint_setParam__SWIG_0(_swig_base, arg1, arg2, arg3)
}

func _swig_wrap_btHinge2Constraint_setParam__SWIG_1(SwigcptrBtHinge2Constraint, int, float32)

func (_swig_base SwigcptrBtHinge2Constraint) SetParam__SWIG_1(arg1 int, arg2 float32) {
	_swig_wrap_btHinge2Constraint_setParam__SWIG_1(_swig_base, arg1, arg2)
}

func (p SwigcptrBtHinge2Constraint) SetParam(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetParam__SWIG_1(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetParam__SWIG_0(a[0].(int), a[1].(float32), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHinge2Constraint_getParam__SWIG_0(SwigcptrBtHinge2Constraint, int, int) float32

func (_swig_base SwigcptrBtHinge2Constraint) GetParam__SWIG_0(arg1 int, arg2 int) float32 {
	return _swig_wrap_btHinge2Constraint_getParam__SWIG_0(_swig_base, arg1, arg2)
}

func _swig_wrap_btHinge2Constraint_getParam__SWIG_1(SwigcptrBtHinge2Constraint, int) float32

func (_swig_base SwigcptrBtHinge2Constraint) GetParam__SWIG_1(arg1 int) float32 {
	return _swig_wrap_btHinge2Constraint_getParam__SWIG_1(_swig_base, arg1)
}

func (p SwigcptrBtHinge2Constraint) GetParam(a ...interface{}) float32 {
	argc := len(a)
	if argc == 1 {
		return p.GetParam__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.GetParam__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHinge2Constraint_getFixedBody() SwigcptrBtRigidBody

func BtHinge2ConstraintGetFixedBody() BtRigidBody {
	return _swig_wrap_btHinge2Constraint_getFixedBody()
}

func _swig_wrap_btHinge2Constraint_getOverrideNumSolverIterations(SwigcptrBtHinge2Constraint) int

func (_swig_base SwigcptrBtHinge2Constraint) GetOverrideNumSolverIterations() int {
	return _swig_wrap_btHinge2Constraint_getOverrideNumSolverIterations(_swig_base)
}

func _swig_wrap_btHinge2Constraint_setOverrideNumSolverIterations(SwigcptrBtHinge2Constraint, int)

func (_swig_base SwigcptrBtHinge2Constraint) SetOverrideNumSolverIterations(arg1 int) {
	_swig_wrap_btHinge2Constraint_setOverrideNumSolverIterations(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_setupSolverConstraint(SwigcptrBtHinge2Constraint, uintptr, int, int, float32)

func (_swig_base SwigcptrBtHinge2Constraint) SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32) {
	_swig_wrap_btHinge2Constraint_setupSolverConstraint(_swig_base, arg1.Swigcptr(), arg2, arg3, arg4)
}

func _swig_wrap_btHinge2Constraint_internalSetAppliedImpulse(SwigcptrBtHinge2Constraint, float32)

func (_swig_base SwigcptrBtHinge2Constraint) InternalSetAppliedImpulse(arg1 float32) {
	_swig_wrap_btHinge2Constraint_internalSetAppliedImpulse(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_internalGetAppliedImpulse(SwigcptrBtHinge2Constraint) float32

func (_swig_base SwigcptrBtHinge2Constraint) InternalGetAppliedImpulse() float32 {
	return _swig_wrap_btHinge2Constraint_internalGetAppliedImpulse(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getBreakingImpulseThreshold(SwigcptrBtHinge2Constraint) float32

func (_swig_base SwigcptrBtHinge2Constraint) GetBreakingImpulseThreshold() float32 {
	return _swig_wrap_btHinge2Constraint_getBreakingImpulseThreshold(_swig_base)
}

func _swig_wrap_btHinge2Constraint_setBreakingImpulseThreshold(SwigcptrBtHinge2Constraint, float32)

func (_swig_base SwigcptrBtHinge2Constraint) SetBreakingImpulseThreshold(arg1 float32) {
	_swig_wrap_btHinge2Constraint_setBreakingImpulseThreshold(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_isEnabled(SwigcptrBtHinge2Constraint) bool

func (_swig_base SwigcptrBtHinge2Constraint) IsEnabled() bool {
	return _swig_wrap_btHinge2Constraint_isEnabled(_swig_base)
}

func _swig_wrap_btHinge2Constraint_setEnabled(SwigcptrBtHinge2Constraint, bool)

func (_swig_base SwigcptrBtHinge2Constraint) SetEnabled(arg1 bool) {
	_swig_wrap_btHinge2Constraint_setEnabled(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_solveConstraintObsolete(SwigcptrBtHinge2Constraint, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtHinge2Constraint) SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32) {
	_swig_wrap_btHinge2Constraint_solveConstraintObsolete(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btHinge2Constraint_getRigidBodyA__SWIG_0(SwigcptrBtHinge2Constraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtHinge2Constraint) GetRigidBodyA__SWIG_0() BtRigidBody {
	return _swig_wrap_btHinge2Constraint_getRigidBodyA__SWIG_0(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getRigidBodyA__SWIG_1(SwigcptrBtHinge2Constraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtHinge2Constraint) GetRigidBodyA__SWIG_1() BtRigidBody {
	return _swig_wrap_btHinge2Constraint_getRigidBodyA__SWIG_1(_swig_base)
}

func (p SwigcptrBtHinge2Constraint) GetRigidBodyA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHinge2Constraint_getRigidBodyB__SWIG_0(SwigcptrBtHinge2Constraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtHinge2Constraint) GetRigidBodyB__SWIG_0() BtRigidBody {
	return _swig_wrap_btHinge2Constraint_getRigidBodyB__SWIG_0(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getRigidBodyB__SWIG_1(SwigcptrBtHinge2Constraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtHinge2Constraint) GetRigidBodyB__SWIG_1() BtRigidBody {
	return _swig_wrap_btHinge2Constraint_getRigidBodyB__SWIG_1(_swig_base)
}

func (p SwigcptrBtHinge2Constraint) GetRigidBodyB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHinge2Constraint_getUserConstraintType(SwigcptrBtHinge2Constraint) int

func (_swig_base SwigcptrBtHinge2Constraint) GetUserConstraintType() int {
	return _swig_wrap_btHinge2Constraint_getUserConstraintType(_swig_base)
}

func _swig_wrap_btHinge2Constraint_setUserConstraintType(SwigcptrBtHinge2Constraint, int)

func (_swig_base SwigcptrBtHinge2Constraint) SetUserConstraintType(arg1 int) {
	_swig_wrap_btHinge2Constraint_setUserConstraintType(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_setUserConstraintId(SwigcptrBtHinge2Constraint, int)

func (_swig_base SwigcptrBtHinge2Constraint) SetUserConstraintId(arg1 int) {
	_swig_wrap_btHinge2Constraint_setUserConstraintId(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_getUserConstraintId(SwigcptrBtHinge2Constraint) int

func (_swig_base SwigcptrBtHinge2Constraint) GetUserConstraintId() int {
	return _swig_wrap_btHinge2Constraint_getUserConstraintId(_swig_base)
}

func _swig_wrap_btHinge2Constraint_setUserConstraintPtr(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) SetUserConstraintPtr(arg1 uintptr) {
	_swig_wrap_btHinge2Constraint_setUserConstraintPtr(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_getUserConstraintPtr(SwigcptrBtHinge2Constraint) uintptr

func (_swig_base SwigcptrBtHinge2Constraint) GetUserConstraintPtr() uintptr {
	return _swig_wrap_btHinge2Constraint_getUserConstraintPtr(_swig_base)
}

func _swig_wrap_btHinge2Constraint_setJointFeedback(SwigcptrBtHinge2Constraint, uintptr)

func (_swig_base SwigcptrBtHinge2Constraint) SetJointFeedback(arg1 BtJointFeedback) {
	_swig_wrap_btHinge2Constraint_setJointFeedback(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btHinge2Constraint_getJointFeedback__SWIG_0(SwigcptrBtHinge2Constraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtHinge2Constraint) GetJointFeedback__SWIG_0() BtJointFeedback {
	return _swig_wrap_btHinge2Constraint_getJointFeedback__SWIG_0(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getJointFeedback__SWIG_1(SwigcptrBtHinge2Constraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtHinge2Constraint) GetJointFeedback__SWIG_1() BtJointFeedback {
	return _swig_wrap_btHinge2Constraint_getJointFeedback__SWIG_1(_swig_base)
}

func (p SwigcptrBtHinge2Constraint) GetJointFeedback(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetJointFeedback__SWIG_0()
	}
	if argc == 0 {
		return p.GetJointFeedback__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btHinge2Constraint_getUid(SwigcptrBtHinge2Constraint) int

func (_swig_base SwigcptrBtHinge2Constraint) GetUid() int {
	return _swig_wrap_btHinge2Constraint_getUid(_swig_base)
}

func _swig_wrap_btHinge2Constraint_needsFeedback(SwigcptrBtHinge2Constraint) bool

func (_swig_base SwigcptrBtHinge2Constraint) NeedsFeedback() bool {
	return _swig_wrap_btHinge2Constraint_needsFeedback(_swig_base)
}

func _swig_wrap_btHinge2Constraint_enableFeedback(SwigcptrBtHinge2Constraint, bool)

func (_swig_base SwigcptrBtHinge2Constraint) EnableFeedback(arg1 bool) {
	_swig_wrap_btHinge2Constraint_enableFeedback(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_getAppliedImpulse(SwigcptrBtHinge2Constraint) float32

func (_swig_base SwigcptrBtHinge2Constraint) GetAppliedImpulse() float32 {
	return _swig_wrap_btHinge2Constraint_getAppliedImpulse(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getConstraintType(SwigcptrBtHinge2Constraint) BtTypedConstraintType

func (_swig_base SwigcptrBtHinge2Constraint) GetConstraintType() BtTypedConstraintType {
	return _swig_wrap_btHinge2Constraint_getConstraintType(_swig_base)
}

func _swig_wrap_btHinge2Constraint_setDbgDrawSize(SwigcptrBtHinge2Constraint, float32)

func (_swig_base SwigcptrBtHinge2Constraint) SetDbgDrawSize(arg1 float32) {
	_swig_wrap_btHinge2Constraint_setDbgDrawSize(_swig_base, arg1)
}

func _swig_wrap_btHinge2Constraint_getDbgDrawSize(SwigcptrBtHinge2Constraint) float32

func (_swig_base SwigcptrBtHinge2Constraint) GetDbgDrawSize() float32 {
	return _swig_wrap_btHinge2Constraint_getDbgDrawSize(_swig_base)
}

func _swig_wrap_SetbtHinge2Constraint_M_objectType(SwigcptrBtHinge2Constraint, int)

func (_swig_base SwigcptrBtHinge2Constraint) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtHinge2Constraint_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtHinge2Constraint_M_objectType(SwigcptrBtHinge2Constraint) int

func (_swig_base SwigcptrBtHinge2Constraint) GetM_objectType() int {
	return _swig_wrap_GetbtHinge2Constraint_M_objectType(_swig_base)
}

func _swig_wrap_btHinge2Constraint_getObjectType(SwigcptrBtHinge2Constraint) int

func (_swig_base SwigcptrBtHinge2Constraint) GetObjectType() int {
	return _swig_wrap_btHinge2Constraint_getObjectType(_swig_base)
}

func (p SwigcptrBtHinge2Constraint) SwigIsBtGeneric6DofSpringConstraint() {
}

func (p SwigcptrBtHinge2Constraint) SwigGetBtGeneric6DofSpringConstraint() BtGeneric6DofSpringConstraint {
	return SwigcptrBtGeneric6DofSpringConstraint(p.Swigcptr())
}

func (p SwigcptrBtHinge2Constraint) SwigIsBtGeneric6DofConstraint() {
}

func (p SwigcptrBtHinge2Constraint) SwigGetBtGeneric6DofConstraint() BtGeneric6DofConstraint {
	return SwigcptrBtGeneric6DofConstraint(p.Swigcptr())
}

func (p SwigcptrBtHinge2Constraint) SwigIsBtTypedConstraint() {
}

func (p SwigcptrBtHinge2Constraint) SwigGetBtTypedConstraint() BtTypedConstraint {
	return SwigcptrBtTypedConstraint(p.Swigcptr())
}

func (p SwigcptrBtHinge2Constraint) SwigIsBtTypedObject() {
}

func (p SwigcptrBtHinge2Constraint) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtHinge2Constraint interface {
	Swigcptr() uintptr
	SwigIsBtHinge2Constraint()
	GetAnchor() BtVector3
	GetAnchor2() BtVector3
	GetAxis1() BtVector3
	GetAxis2() BtVector3
	GetAngle1() float32
	GetAngle2() float32
	SetUpperLimit(arg2 float32)
	SetLowerLimit(arg2 float32)
	EnableSpring(arg1 int, arg2 bool)
	SetStiffness(arg1 int, arg2 float32)
	SetDamping(arg1 int, arg2 float32)
	SetEquilibriumPoint(a ...interface{})
	SetAxis(arg1 BtVector3, arg2 BtVector3)
	GetInfo2(arg1 BtConstraintInfo2)
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	SetM_useSolveConstraintObsolete(arg1 bool)
	GetM_useSolveConstraintObsolete() bool
	CalculateTransforms(a ...interface{})
	GetCalculatedTransformA() BtTransform
	GetCalculatedTransformB() BtTransform
	GetFrameOffsetA(a ...interface{}) interface{}
	GetFrameOffsetB(a ...interface{}) interface{}
	BuildJacobian()
	GetInfo1(arg1 BtConstraintInfo1)
	GetInfo1NonVirtual(arg1 BtConstraintInfo1)
	GetInfo2NonVirtual(arg1 BtConstraintInfo2, arg2 BtTransform, arg3 BtTransform, arg4 BtVector3, arg5 BtVector3, arg6 BtVector3, arg7 BtVector3)
	UpdateRHS(arg1 float32)
	GetAxis(arg1 int) BtVector3
	GetAngle(arg1 int) float32
	GetRelativePivotPosition(arg1 int) float32
	SetFrames(arg1 BtTransform, arg2 BtTransform)
	TestAngularLimitMotor(arg1 int) bool
	SetLinearLowerLimit(arg1 BtVector3)
	GetLinearLowerLimit(arg1 BtVector3)
	SetLinearUpperLimit(arg1 BtVector3)
	GetLinearUpperLimit(arg1 BtVector3)
	SetAngularLowerLimit(arg1 BtVector3)
	GetAngularLowerLimit(arg1 BtVector3)
	SetAngularUpperLimit(arg1 BtVector3)
	GetAngularUpperLimit(arg1 BtVector3)
	GetRotationalLimitMotor(arg1 int) BtRotationalLimitMotor
	GetTranslationalLimitMotor() BtTranslationalLimitMotor
	SetLimit(arg1 int, arg2 float32, arg3 float32)
	IsLimited(arg1 int) bool
	CalcAnchorPos()
	GetUseFrameOffset() bool
	SetUseFrameOffset(arg1 bool)
	SetParam(a ...interface{})
	GetParam(a ...interface{}) float32
	GetOverrideNumSolverIterations() int
	SetOverrideNumSolverIterations(arg1 int)
	SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32)
	InternalSetAppliedImpulse(arg1 float32)
	InternalGetAppliedImpulse() float32
	GetBreakingImpulseThreshold() float32
	SetBreakingImpulseThreshold(arg1 float32)
	IsEnabled() bool
	SetEnabled(arg1 bool)
	SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32)
	GetRigidBodyA(a ...interface{}) interface{}
	GetRigidBodyB(a ...interface{}) interface{}
	GetUserConstraintType() int
	SetUserConstraintType(arg1 int)
	SetUserConstraintId(arg1 int)
	GetUserConstraintId() int
	SetUserConstraintPtr(arg1 uintptr)
	GetUserConstraintPtr() uintptr
	SetJointFeedback(arg1 BtJointFeedback)
	GetJointFeedback(a ...interface{}) interface{}
	GetUid() int
	NeedsFeedback() bool
	EnableFeedback(arg1 bool)
	GetAppliedImpulse() float32
	GetConstraintType() BtTypedConstraintType
	SetDbgDrawSize(arg1 float32)
	GetDbgDrawSize() float32
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtGeneric6DofSpringConstraint()
	SwigGetBtGeneric6DofSpringConstraint() BtGeneric6DofSpringConstraint
	SwigIsBtGeneric6DofConstraint()
	SwigGetBtGeneric6DofConstraint() BtGeneric6DofConstraint
	SwigIsBtTypedConstraint()
	SwigGetBtTypedConstraint() BtTypedConstraint
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

const BtGearConstraintDataName string = "btGearConstraintFloatData"

type SwigcptrBtGearConstraint uintptr

func (p SwigcptrBtGearConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtGearConstraint) SwigIsBtGearConstraint() {
}

func _swig_wrap_new_btGearConstraint__SWIG_0(uintptr, uintptr, uintptr, uintptr, float32) SwigcptrBtGearConstraint

func NewBtGearConstraint__SWIG_0(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtVector3, arg4 BtVector3, arg5 float32) BtGearConstraint {
	return _swig_wrap_new_btGearConstraint__SWIG_0(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr(), arg5)
}

func _swig_wrap_new_btGearConstraint__SWIG_1(uintptr, uintptr, uintptr, uintptr) SwigcptrBtGearConstraint

func NewBtGearConstraint__SWIG_1(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtVector3, arg4 BtVector3) BtGearConstraint {
	return _swig_wrap_new_btGearConstraint__SWIG_1(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func NewBtGearConstraint(a ...interface{}) BtGearConstraint {
	argc := len(a)
	if argc == 4 {
		return NewBtGearConstraint__SWIG_1(a[0].(BtRigidBody), a[1].(BtRigidBody), a[2].(BtVector3), a[3].(BtVector3))
	}
	if argc == 5 {
		return NewBtGearConstraint__SWIG_0(a[0].(BtRigidBody), a[1].(BtRigidBody), a[2].(BtVector3), a[3].(BtVector3), a[4].(float32))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_btGearConstraint(uintptr)

func DeleteBtGearConstraint(arg1 BtGearConstraint) {
	_swig_wrap_delete_btGearConstraint(arg1.Swigcptr())
}

func _swig_wrap_btGearConstraint_getInfo1(SwigcptrBtGearConstraint, uintptr)

func (arg1 SwigcptrBtGearConstraint) GetInfo1(arg2 BtConstraintInfo1) {
	_swig_wrap_btGearConstraint_getInfo1(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGearConstraint_getInfo2(SwigcptrBtGearConstraint, uintptr)

func (arg1 SwigcptrBtGearConstraint) GetInfo2(arg2 BtConstraintInfo2) {
	_swig_wrap_btGearConstraint_getInfo2(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGearConstraint_setAxisA(SwigcptrBtGearConstraint, uintptr)

func (arg1 SwigcptrBtGearConstraint) SetAxisA(arg2 BtVector3) {
	_swig_wrap_btGearConstraint_setAxisA(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGearConstraint_setAxisB(SwigcptrBtGearConstraint, uintptr)

func (arg1 SwigcptrBtGearConstraint) SetAxisB(arg2 BtVector3) {
	_swig_wrap_btGearConstraint_setAxisB(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGearConstraint_setRatio(SwigcptrBtGearConstraint, float32)

func (arg1 SwigcptrBtGearConstraint) SetRatio(arg2 float32) {
	_swig_wrap_btGearConstraint_setRatio(arg1, arg2)
}

func _swig_wrap_btGearConstraint_getAxisA(SwigcptrBtGearConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtGearConstraint) GetAxisA() BtVector3 {
	return _swig_wrap_btGearConstraint_getAxisA(arg1)
}

func _swig_wrap_btGearConstraint_getAxisB(SwigcptrBtGearConstraint) SwigcptrBtVector3

func (arg1 SwigcptrBtGearConstraint) GetAxisB() BtVector3 {
	return _swig_wrap_btGearConstraint_getAxisB(arg1)
}

func _swig_wrap_btGearConstraint_getRatio(SwigcptrBtGearConstraint) float32

func (arg1 SwigcptrBtGearConstraint) GetRatio() float32 {
	return _swig_wrap_btGearConstraint_getRatio(arg1)
}

func _swig_wrap_btGearConstraint_setParam__SWIG_0(SwigcptrBtGearConstraint, int, float32, int)

func (arg1 SwigcptrBtGearConstraint) SetParam__SWIG_0(arg2 int, arg3 float32, arg4 int) {
	_swig_wrap_btGearConstraint_setParam__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btGearConstraint_setParam__SWIG_1(SwigcptrBtGearConstraint, int, float32)

func (arg1 SwigcptrBtGearConstraint) SetParam__SWIG_1(arg2 int, arg3 float32) {
	_swig_wrap_btGearConstraint_setParam__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBtGearConstraint) SetParam(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetParam__SWIG_1(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetParam__SWIG_0(a[0].(int), a[1].(float32), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGearConstraint_getParam__SWIG_0(SwigcptrBtGearConstraint, int, int) float32

func (arg1 SwigcptrBtGearConstraint) GetParam__SWIG_0(arg2 int, arg3 int) float32 {
	return _swig_wrap_btGearConstraint_getParam__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btGearConstraint_getParam__SWIG_1(SwigcptrBtGearConstraint, int) float32

func (arg1 SwigcptrBtGearConstraint) GetParam__SWIG_1(arg2 int) float32 {
	return _swig_wrap_btGearConstraint_getParam__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtGearConstraint) GetParam(a ...interface{}) float32 {
	argc := len(a)
	if argc == 1 {
		return p.GetParam__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.GetParam__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGearConstraint_calculateSerializeBufferSize(SwigcptrBtGearConstraint) int

func (arg1 SwigcptrBtGearConstraint) CalculateSerializeBufferSize() int {
	return _swig_wrap_btGearConstraint_calculateSerializeBufferSize(arg1)
}

func _swig_wrap_btGearConstraint_serialize(SwigcptrBtGearConstraint, uintptr, uintptr) string

func (arg1 SwigcptrBtGearConstraint) Serialize(arg2 uintptr, arg3 BtSerializer) string {
	return _swig_wrap_btGearConstraint_serialize(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_btGearConstraint_getFixedBody() SwigcptrBtRigidBody

func BtGearConstraintGetFixedBody() BtRigidBody {
	return _swig_wrap_btGearConstraint_getFixedBody()
}

func _swig_wrap_btGearConstraint_getOverrideNumSolverIterations(SwigcptrBtGearConstraint) int

func (_swig_base SwigcptrBtGearConstraint) GetOverrideNumSolverIterations() int {
	return _swig_wrap_btGearConstraint_getOverrideNumSolverIterations(_swig_base)
}

func _swig_wrap_btGearConstraint_setOverrideNumSolverIterations(SwigcptrBtGearConstraint, int)

func (_swig_base SwigcptrBtGearConstraint) SetOverrideNumSolverIterations(arg1 int) {
	_swig_wrap_btGearConstraint_setOverrideNumSolverIterations(_swig_base, arg1)
}

func _swig_wrap_btGearConstraint_buildJacobian(SwigcptrBtGearConstraint)

func (_swig_base SwigcptrBtGearConstraint) BuildJacobian() {
	_swig_wrap_btGearConstraint_buildJacobian(_swig_base)
}

func _swig_wrap_btGearConstraint_setupSolverConstraint(SwigcptrBtGearConstraint, uintptr, int, int, float32)

func (_swig_base SwigcptrBtGearConstraint) SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32) {
	_swig_wrap_btGearConstraint_setupSolverConstraint(_swig_base, arg1.Swigcptr(), arg2, arg3, arg4)
}

func _swig_wrap_btGearConstraint_internalSetAppliedImpulse(SwigcptrBtGearConstraint, float32)

func (_swig_base SwigcptrBtGearConstraint) InternalSetAppliedImpulse(arg1 float32) {
	_swig_wrap_btGearConstraint_internalSetAppliedImpulse(_swig_base, arg1)
}

func _swig_wrap_btGearConstraint_internalGetAppliedImpulse(SwigcptrBtGearConstraint) float32

func (_swig_base SwigcptrBtGearConstraint) InternalGetAppliedImpulse() float32 {
	return _swig_wrap_btGearConstraint_internalGetAppliedImpulse(_swig_base)
}

func _swig_wrap_btGearConstraint_getBreakingImpulseThreshold(SwigcptrBtGearConstraint) float32

func (_swig_base SwigcptrBtGearConstraint) GetBreakingImpulseThreshold() float32 {
	return _swig_wrap_btGearConstraint_getBreakingImpulseThreshold(_swig_base)
}

func _swig_wrap_btGearConstraint_setBreakingImpulseThreshold(SwigcptrBtGearConstraint, float32)

func (_swig_base SwigcptrBtGearConstraint) SetBreakingImpulseThreshold(arg1 float32) {
	_swig_wrap_btGearConstraint_setBreakingImpulseThreshold(_swig_base, arg1)
}

func _swig_wrap_btGearConstraint_isEnabled(SwigcptrBtGearConstraint) bool

func (_swig_base SwigcptrBtGearConstraint) IsEnabled() bool {
	return _swig_wrap_btGearConstraint_isEnabled(_swig_base)
}

func _swig_wrap_btGearConstraint_setEnabled(SwigcptrBtGearConstraint, bool)

func (_swig_base SwigcptrBtGearConstraint) SetEnabled(arg1 bool) {
	_swig_wrap_btGearConstraint_setEnabled(_swig_base, arg1)
}

func _swig_wrap_btGearConstraint_solveConstraintObsolete(SwigcptrBtGearConstraint, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtGearConstraint) SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32) {
	_swig_wrap_btGearConstraint_solveConstraintObsolete(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btGearConstraint_getRigidBodyA__SWIG_0(SwigcptrBtGearConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGearConstraint) GetRigidBodyA__SWIG_0() BtRigidBody {
	return _swig_wrap_btGearConstraint_getRigidBodyA__SWIG_0(_swig_base)
}

func _swig_wrap_btGearConstraint_getRigidBodyA__SWIG_1(SwigcptrBtGearConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGearConstraint) GetRigidBodyA__SWIG_1() BtRigidBody {
	return _swig_wrap_btGearConstraint_getRigidBodyA__SWIG_1(_swig_base)
}

func (p SwigcptrBtGearConstraint) GetRigidBodyA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGearConstraint_getRigidBodyB__SWIG_0(SwigcptrBtGearConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGearConstraint) GetRigidBodyB__SWIG_0() BtRigidBody {
	return _swig_wrap_btGearConstraint_getRigidBodyB__SWIG_0(_swig_base)
}

func _swig_wrap_btGearConstraint_getRigidBodyB__SWIG_1(SwigcptrBtGearConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtGearConstraint) GetRigidBodyB__SWIG_1() BtRigidBody {
	return _swig_wrap_btGearConstraint_getRigidBodyB__SWIG_1(_swig_base)
}

func (p SwigcptrBtGearConstraint) GetRigidBodyB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGearConstraint_getUserConstraintType(SwigcptrBtGearConstraint) int

func (_swig_base SwigcptrBtGearConstraint) GetUserConstraintType() int {
	return _swig_wrap_btGearConstraint_getUserConstraintType(_swig_base)
}

func _swig_wrap_btGearConstraint_setUserConstraintType(SwigcptrBtGearConstraint, int)

func (_swig_base SwigcptrBtGearConstraint) SetUserConstraintType(arg1 int) {
	_swig_wrap_btGearConstraint_setUserConstraintType(_swig_base, arg1)
}

func _swig_wrap_btGearConstraint_setUserConstraintId(SwigcptrBtGearConstraint, int)

func (_swig_base SwigcptrBtGearConstraint) SetUserConstraintId(arg1 int) {
	_swig_wrap_btGearConstraint_setUserConstraintId(_swig_base, arg1)
}

func _swig_wrap_btGearConstraint_getUserConstraintId(SwigcptrBtGearConstraint) int

func (_swig_base SwigcptrBtGearConstraint) GetUserConstraintId() int {
	return _swig_wrap_btGearConstraint_getUserConstraintId(_swig_base)
}

func _swig_wrap_btGearConstraint_setUserConstraintPtr(SwigcptrBtGearConstraint, uintptr)

func (_swig_base SwigcptrBtGearConstraint) SetUserConstraintPtr(arg1 uintptr) {
	_swig_wrap_btGearConstraint_setUserConstraintPtr(_swig_base, arg1)
}

func _swig_wrap_btGearConstraint_getUserConstraintPtr(SwigcptrBtGearConstraint) uintptr

func (_swig_base SwigcptrBtGearConstraint) GetUserConstraintPtr() uintptr {
	return _swig_wrap_btGearConstraint_getUserConstraintPtr(_swig_base)
}

func _swig_wrap_btGearConstraint_setJointFeedback(SwigcptrBtGearConstraint, uintptr)

func (_swig_base SwigcptrBtGearConstraint) SetJointFeedback(arg1 BtJointFeedback) {
	_swig_wrap_btGearConstraint_setJointFeedback(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btGearConstraint_getJointFeedback__SWIG_0(SwigcptrBtGearConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtGearConstraint) GetJointFeedback__SWIG_0() BtJointFeedback {
	return _swig_wrap_btGearConstraint_getJointFeedback__SWIG_0(_swig_base)
}

func _swig_wrap_btGearConstraint_getJointFeedback__SWIG_1(SwigcptrBtGearConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtGearConstraint) GetJointFeedback__SWIG_1() BtJointFeedback {
	return _swig_wrap_btGearConstraint_getJointFeedback__SWIG_1(_swig_base)
}

func (p SwigcptrBtGearConstraint) GetJointFeedback(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetJointFeedback__SWIG_0()
	}
	if argc == 0 {
		return p.GetJointFeedback__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btGearConstraint_getUid(SwigcptrBtGearConstraint) int

func (_swig_base SwigcptrBtGearConstraint) GetUid() int {
	return _swig_wrap_btGearConstraint_getUid(_swig_base)
}

func _swig_wrap_btGearConstraint_needsFeedback(SwigcptrBtGearConstraint) bool

func (_swig_base SwigcptrBtGearConstraint) NeedsFeedback() bool {
	return _swig_wrap_btGearConstraint_needsFeedback(_swig_base)
}

func _swig_wrap_btGearConstraint_enableFeedback(SwigcptrBtGearConstraint, bool)

func (_swig_base SwigcptrBtGearConstraint) EnableFeedback(arg1 bool) {
	_swig_wrap_btGearConstraint_enableFeedback(_swig_base, arg1)
}

func _swig_wrap_btGearConstraint_getAppliedImpulse(SwigcptrBtGearConstraint) float32

func (_swig_base SwigcptrBtGearConstraint) GetAppliedImpulse() float32 {
	return _swig_wrap_btGearConstraint_getAppliedImpulse(_swig_base)
}

func _swig_wrap_btGearConstraint_getConstraintType(SwigcptrBtGearConstraint) BtTypedConstraintType

func (_swig_base SwigcptrBtGearConstraint) GetConstraintType() BtTypedConstraintType {
	return _swig_wrap_btGearConstraint_getConstraintType(_swig_base)
}

func _swig_wrap_btGearConstraint_setDbgDrawSize(SwigcptrBtGearConstraint, float32)

func (_swig_base SwigcptrBtGearConstraint) SetDbgDrawSize(arg1 float32) {
	_swig_wrap_btGearConstraint_setDbgDrawSize(_swig_base, arg1)
}

func _swig_wrap_btGearConstraint_getDbgDrawSize(SwigcptrBtGearConstraint) float32

func (_swig_base SwigcptrBtGearConstraint) GetDbgDrawSize() float32 {
	return _swig_wrap_btGearConstraint_getDbgDrawSize(_swig_base)
}

func _swig_wrap_SetbtGearConstraint_M_objectType(SwigcptrBtGearConstraint, int)

func (_swig_base SwigcptrBtGearConstraint) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtGearConstraint_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtGearConstraint_M_objectType(SwigcptrBtGearConstraint) int

func (_swig_base SwigcptrBtGearConstraint) GetM_objectType() int {
	return _swig_wrap_GetbtGearConstraint_M_objectType(_swig_base)
}

func _swig_wrap_btGearConstraint_getObjectType(SwigcptrBtGearConstraint) int

func (_swig_base SwigcptrBtGearConstraint) GetObjectType() int {
	return _swig_wrap_btGearConstraint_getObjectType(_swig_base)
}

func (p SwigcptrBtGearConstraint) SwigIsBtTypedConstraint() {
}

func (p SwigcptrBtGearConstraint) SwigGetBtTypedConstraint() BtTypedConstraint {
	return SwigcptrBtTypedConstraint(p.Swigcptr())
}

func (p SwigcptrBtGearConstraint) SwigIsBtTypedObject() {
}

func (p SwigcptrBtGearConstraint) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtGearConstraint interface {
	Swigcptr() uintptr
	SwigIsBtGearConstraint()
	GetInfo1(arg2 BtConstraintInfo1)
	GetInfo2(arg2 BtConstraintInfo2)
	SetAxisA(arg2 BtVector3)
	SetAxisB(arg2 BtVector3)
	SetRatio(arg2 float32)
	GetAxisA() BtVector3
	GetAxisB() BtVector3
	GetRatio() float32
	SetParam(a ...interface{})
	GetParam(a ...interface{}) float32
	CalculateSerializeBufferSize() int
	Serialize(arg2 uintptr, arg3 BtSerializer) string
	GetOverrideNumSolverIterations() int
	SetOverrideNumSolverIterations(arg1 int)
	BuildJacobian()
	SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32)
	InternalSetAppliedImpulse(arg1 float32)
	InternalGetAppliedImpulse() float32
	GetBreakingImpulseThreshold() float32
	SetBreakingImpulseThreshold(arg1 float32)
	IsEnabled() bool
	SetEnabled(arg1 bool)
	SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32)
	GetRigidBodyA(a ...interface{}) interface{}
	GetRigidBodyB(a ...interface{}) interface{}
	GetUserConstraintType() int
	SetUserConstraintType(arg1 int)
	SetUserConstraintId(arg1 int)
	GetUserConstraintId() int
	SetUserConstraintPtr(arg1 uintptr)
	GetUserConstraintPtr() uintptr
	SetJointFeedback(arg1 BtJointFeedback)
	GetJointFeedback(a ...interface{}) interface{}
	GetUid() int
	NeedsFeedback() bool
	EnableFeedback(arg1 bool)
	GetAppliedImpulse() float32
	GetConstraintType() BtTypedConstraintType
	SetDbgDrawSize(arg1 float32)
	GetDbgDrawSize() float32
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtTypedConstraint()
	SwigGetBtTypedConstraint() BtTypedConstraint
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

type SwigcptrBtGearConstraintFloatData uintptr

func (p SwigcptrBtGearConstraintFloatData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtGearConstraintFloatData) SwigIsBtGearConstraintFloatData() {
}

func _swig_wrap_btGearConstraintFloatData_m_typeConstraintData_set(SwigcptrBtGearConstraintFloatData, uintptr)

func (arg1 SwigcptrBtGearConstraintFloatData) SetM_typeConstraintData(arg2 BtTypedConstraintFloatData) {
	_swig_wrap_btGearConstraintFloatData_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGearConstraintFloatData_m_typeConstraintData_get(SwigcptrBtGearConstraintFloatData) SwigcptrBtTypedConstraintFloatData

func (arg1 SwigcptrBtGearConstraintFloatData) GetM_typeConstraintData() BtTypedConstraintFloatData {
	return _swig_wrap_btGearConstraintFloatData_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btGearConstraintFloatData_m_axisInA_set(SwigcptrBtGearConstraintFloatData, uintptr)

func (arg1 SwigcptrBtGearConstraintFloatData) SetM_axisInA(arg2 BtVector3FloatData) {
	_swig_wrap_btGearConstraintFloatData_m_axisInA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGearConstraintFloatData_m_axisInA_get(SwigcptrBtGearConstraintFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtGearConstraintFloatData) GetM_axisInA() BtVector3FloatData {
	return _swig_wrap_btGearConstraintFloatData_m_axisInA_get(arg1)
}

func _swig_wrap_btGearConstraintFloatData_m_axisInB_set(SwigcptrBtGearConstraintFloatData, uintptr)

func (arg1 SwigcptrBtGearConstraintFloatData) SetM_axisInB(arg2 BtVector3FloatData) {
	_swig_wrap_btGearConstraintFloatData_m_axisInB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGearConstraintFloatData_m_axisInB_get(SwigcptrBtGearConstraintFloatData) SwigcptrBtVector3FloatData

func (arg1 SwigcptrBtGearConstraintFloatData) GetM_axisInB() BtVector3FloatData {
	return _swig_wrap_btGearConstraintFloatData_m_axisInB_get(arg1)
}

func _swig_wrap_btGearConstraintFloatData_m_ratio_set(SwigcptrBtGearConstraintFloatData, float32)

func (arg1 SwigcptrBtGearConstraintFloatData) SetM_ratio(arg2 float32) {
	_swig_wrap_btGearConstraintFloatData_m_ratio_set(arg1, arg2)
}

func _swig_wrap_btGearConstraintFloatData_m_ratio_get(SwigcptrBtGearConstraintFloatData) float32

func (arg1 SwigcptrBtGearConstraintFloatData) GetM_ratio() float32 {
	return _swig_wrap_btGearConstraintFloatData_m_ratio_get(arg1)
}

func _swig_wrap_btGearConstraintFloatData_m_padding_set(SwigcptrBtGearConstraintFloatData, string)

func (arg1 SwigcptrBtGearConstraintFloatData) SetM_padding(arg2 string) {
	_swig_wrap_btGearConstraintFloatData_m_padding_set(arg1, arg2)
}

func _swig_wrap_btGearConstraintFloatData_m_padding_get(SwigcptrBtGearConstraintFloatData) string

func (arg1 SwigcptrBtGearConstraintFloatData) GetM_padding() string {
	return _swig_wrap_btGearConstraintFloatData_m_padding_get(arg1)
}

func _swig_wrap_new_btGearConstraintFloatData() SwigcptrBtGearConstraintFloatData

func NewBtGearConstraintFloatData() BtGearConstraintFloatData {
	return _swig_wrap_new_btGearConstraintFloatData()
}

func _swig_wrap_delete_btGearConstraintFloatData(uintptr)

func DeleteBtGearConstraintFloatData(arg1 BtGearConstraintFloatData) {
	_swig_wrap_delete_btGearConstraintFloatData(arg1.Swigcptr())
}

type BtGearConstraintFloatData interface {
	Swigcptr() uintptr
	SwigIsBtGearConstraintFloatData()
	SetM_typeConstraintData(arg2 BtTypedConstraintFloatData)
	GetM_typeConstraintData() BtTypedConstraintFloatData
	SetM_axisInA(arg2 BtVector3FloatData)
	GetM_axisInA() BtVector3FloatData
	SetM_axisInB(arg2 BtVector3FloatData)
	GetM_axisInB() BtVector3FloatData
	SetM_ratio(arg2 float32)
	GetM_ratio() float32
	SetM_padding(arg2 string)
	GetM_padding() string
}

type SwigcptrBtGearConstraintDoubleData uintptr

func (p SwigcptrBtGearConstraintDoubleData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtGearConstraintDoubleData) SwigIsBtGearConstraintDoubleData() {
}

func _swig_wrap_btGearConstraintDoubleData_m_typeConstraintData_set(SwigcptrBtGearConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtGearConstraintDoubleData) SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData) {
	_swig_wrap_btGearConstraintDoubleData_m_typeConstraintData_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGearConstraintDoubleData_m_typeConstraintData_get(SwigcptrBtGearConstraintDoubleData) SwigcptrBtTypedConstraintDoubleData

func (arg1 SwigcptrBtGearConstraintDoubleData) GetM_typeConstraintData() BtTypedConstraintDoubleData {
	return _swig_wrap_btGearConstraintDoubleData_m_typeConstraintData_get(arg1)
}

func _swig_wrap_btGearConstraintDoubleData_m_axisInA_set(SwigcptrBtGearConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtGearConstraintDoubleData) SetM_axisInA(arg2 BtVector3DoubleData) {
	_swig_wrap_btGearConstraintDoubleData_m_axisInA_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGearConstraintDoubleData_m_axisInA_get(SwigcptrBtGearConstraintDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtGearConstraintDoubleData) GetM_axisInA() BtVector3DoubleData {
	return _swig_wrap_btGearConstraintDoubleData_m_axisInA_get(arg1)
}

func _swig_wrap_btGearConstraintDoubleData_m_axisInB_set(SwigcptrBtGearConstraintDoubleData, uintptr)

func (arg1 SwigcptrBtGearConstraintDoubleData) SetM_axisInB(arg2 BtVector3DoubleData) {
	_swig_wrap_btGearConstraintDoubleData_m_axisInB_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btGearConstraintDoubleData_m_axisInB_get(SwigcptrBtGearConstraintDoubleData) SwigcptrBtVector3DoubleData

func (arg1 SwigcptrBtGearConstraintDoubleData) GetM_axisInB() BtVector3DoubleData {
	return _swig_wrap_btGearConstraintDoubleData_m_axisInB_get(arg1)
}

func _swig_wrap_btGearConstraintDoubleData_m_ratio_set(SwigcptrBtGearConstraintDoubleData, float64)

func (arg1 SwigcptrBtGearConstraintDoubleData) SetM_ratio(arg2 float64) {
	_swig_wrap_btGearConstraintDoubleData_m_ratio_set(arg1, arg2)
}

func _swig_wrap_btGearConstraintDoubleData_m_ratio_get(SwigcptrBtGearConstraintDoubleData) float64

func (arg1 SwigcptrBtGearConstraintDoubleData) GetM_ratio() float64 {
	return _swig_wrap_btGearConstraintDoubleData_m_ratio_get(arg1)
}

func _swig_wrap_new_btGearConstraintDoubleData() SwigcptrBtGearConstraintDoubleData

func NewBtGearConstraintDoubleData() BtGearConstraintDoubleData {
	return _swig_wrap_new_btGearConstraintDoubleData()
}

func _swig_wrap_delete_btGearConstraintDoubleData(uintptr)

func DeleteBtGearConstraintDoubleData(arg1 BtGearConstraintDoubleData) {
	_swig_wrap_delete_btGearConstraintDoubleData(arg1.Swigcptr())
}

type BtGearConstraintDoubleData interface {
	Swigcptr() uintptr
	SwigIsBtGearConstraintDoubleData()
	SetM_typeConstraintData(arg2 BtTypedConstraintDoubleData)
	GetM_typeConstraintData() BtTypedConstraintDoubleData
	SetM_axisInA(arg2 BtVector3DoubleData)
	GetM_axisInA() BtVector3DoubleData
	SetM_axisInB(arg2 BtVector3DoubleData)
	GetM_axisInB() BtVector3DoubleData
	SetM_ratio(arg2 float64)
	GetM_ratio() float64
}

type SwigcptrBtFixedConstraint uintptr

func (p SwigcptrBtFixedConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtFixedConstraint) SwigIsBtFixedConstraint() {
}

func _swig_wrap_new_btFixedConstraint(uintptr, uintptr, uintptr, uintptr) SwigcptrBtFixedConstraint

func NewBtFixedConstraint(arg1 BtRigidBody, arg2 BtRigidBody, arg3 BtTransform, arg4 BtTransform) BtFixedConstraint {
	return _swig_wrap_new_btFixedConstraint(arg1.Swigcptr(), arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_delete_btFixedConstraint(uintptr)

func DeleteBtFixedConstraint(arg1 BtFixedConstraint) {
	_swig_wrap_delete_btFixedConstraint(arg1.Swigcptr())
}

func _swig_wrap_btFixedConstraint_getInfo1(SwigcptrBtFixedConstraint, uintptr)

func (arg1 SwigcptrBtFixedConstraint) GetInfo1(arg2 BtConstraintInfo1) {
	_swig_wrap_btFixedConstraint_getInfo1(arg1, arg2.Swigcptr())
}

func _swig_wrap_btFixedConstraint_getInfo2(SwigcptrBtFixedConstraint, uintptr)

func (arg1 SwigcptrBtFixedConstraint) GetInfo2(arg2 BtConstraintInfo2) {
	_swig_wrap_btFixedConstraint_getInfo2(arg1, arg2.Swigcptr())
}

func _swig_wrap_btFixedConstraint_setParam__SWIG_0(SwigcptrBtFixedConstraint, int, float32, int)

func (arg1 SwigcptrBtFixedConstraint) SetParam__SWIG_0(arg2 int, arg3 float32, arg4 int) {
	_swig_wrap_btFixedConstraint_setParam__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_btFixedConstraint_setParam__SWIG_1(SwigcptrBtFixedConstraint, int, float32)

func (arg1 SwigcptrBtFixedConstraint) SetParam__SWIG_1(arg2 int, arg3 float32) {
	_swig_wrap_btFixedConstraint_setParam__SWIG_1(arg1, arg2, arg3)
}

func (p SwigcptrBtFixedConstraint) SetParam(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.SetParam__SWIG_1(a[0].(int), a[1].(float32))
		return
	}
	if argc == 3 {
		p.SetParam__SWIG_0(a[0].(int), a[1].(float32), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btFixedConstraint_getParam__SWIG_0(SwigcptrBtFixedConstraint, int, int) float32

func (arg1 SwigcptrBtFixedConstraint) GetParam__SWIG_0(arg2 int, arg3 int) float32 {
	return _swig_wrap_btFixedConstraint_getParam__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_btFixedConstraint_getParam__SWIG_1(SwigcptrBtFixedConstraint, int) float32

func (arg1 SwigcptrBtFixedConstraint) GetParam__SWIG_1(arg2 int) float32 {
	return _swig_wrap_btFixedConstraint_getParam__SWIG_1(arg1, arg2)
}

func (p SwigcptrBtFixedConstraint) GetParam(a ...interface{}) float32 {
	argc := len(a)
	if argc == 1 {
		return p.GetParam__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.GetParam__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btFixedConstraint_getFixedBody() SwigcptrBtRigidBody

func BtFixedConstraintGetFixedBody() BtRigidBody {
	return _swig_wrap_btFixedConstraint_getFixedBody()
}

func _swig_wrap_btFixedConstraint_getOverrideNumSolverIterations(SwigcptrBtFixedConstraint) int

func (_swig_base SwigcptrBtFixedConstraint) GetOverrideNumSolverIterations() int {
	return _swig_wrap_btFixedConstraint_getOverrideNumSolverIterations(_swig_base)
}

func _swig_wrap_btFixedConstraint_setOverrideNumSolverIterations(SwigcptrBtFixedConstraint, int)

func (_swig_base SwigcptrBtFixedConstraint) SetOverrideNumSolverIterations(arg1 int) {
	_swig_wrap_btFixedConstraint_setOverrideNumSolverIterations(_swig_base, arg1)
}

func _swig_wrap_btFixedConstraint_buildJacobian(SwigcptrBtFixedConstraint)

func (_swig_base SwigcptrBtFixedConstraint) BuildJacobian() {
	_swig_wrap_btFixedConstraint_buildJacobian(_swig_base)
}

func _swig_wrap_btFixedConstraint_setupSolverConstraint(SwigcptrBtFixedConstraint, uintptr, int, int, float32)

func (_swig_base SwigcptrBtFixedConstraint) SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32) {
	_swig_wrap_btFixedConstraint_setupSolverConstraint(_swig_base, arg1.Swigcptr(), arg2, arg3, arg4)
}

func _swig_wrap_btFixedConstraint_internalSetAppliedImpulse(SwigcptrBtFixedConstraint, float32)

func (_swig_base SwigcptrBtFixedConstraint) InternalSetAppliedImpulse(arg1 float32) {
	_swig_wrap_btFixedConstraint_internalSetAppliedImpulse(_swig_base, arg1)
}

func _swig_wrap_btFixedConstraint_internalGetAppliedImpulse(SwigcptrBtFixedConstraint) float32

func (_swig_base SwigcptrBtFixedConstraint) InternalGetAppliedImpulse() float32 {
	return _swig_wrap_btFixedConstraint_internalGetAppliedImpulse(_swig_base)
}

func _swig_wrap_btFixedConstraint_getBreakingImpulseThreshold(SwigcptrBtFixedConstraint) float32

func (_swig_base SwigcptrBtFixedConstraint) GetBreakingImpulseThreshold() float32 {
	return _swig_wrap_btFixedConstraint_getBreakingImpulseThreshold(_swig_base)
}

func _swig_wrap_btFixedConstraint_setBreakingImpulseThreshold(SwigcptrBtFixedConstraint, float32)

func (_swig_base SwigcptrBtFixedConstraint) SetBreakingImpulseThreshold(arg1 float32) {
	_swig_wrap_btFixedConstraint_setBreakingImpulseThreshold(_swig_base, arg1)
}

func _swig_wrap_btFixedConstraint_isEnabled(SwigcptrBtFixedConstraint) bool

func (_swig_base SwigcptrBtFixedConstraint) IsEnabled() bool {
	return _swig_wrap_btFixedConstraint_isEnabled(_swig_base)
}

func _swig_wrap_btFixedConstraint_setEnabled(SwigcptrBtFixedConstraint, bool)

func (_swig_base SwigcptrBtFixedConstraint) SetEnabled(arg1 bool) {
	_swig_wrap_btFixedConstraint_setEnabled(_swig_base, arg1)
}

func _swig_wrap_btFixedConstraint_solveConstraintObsolete(SwigcptrBtFixedConstraint, uintptr, uintptr, float32)

func (_swig_base SwigcptrBtFixedConstraint) SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32) {
	_swig_wrap_btFixedConstraint_solveConstraintObsolete(_swig_base, arg1.Swigcptr(), arg2.Swigcptr(), arg3)
}

func _swig_wrap_btFixedConstraint_getRigidBodyA__SWIG_0(SwigcptrBtFixedConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtFixedConstraint) GetRigidBodyA__SWIG_0() BtRigidBody {
	return _swig_wrap_btFixedConstraint_getRigidBodyA__SWIG_0(_swig_base)
}

func _swig_wrap_btFixedConstraint_getRigidBodyA__SWIG_1(SwigcptrBtFixedConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtFixedConstraint) GetRigidBodyA__SWIG_1() BtRigidBody {
	return _swig_wrap_btFixedConstraint_getRigidBodyA__SWIG_1(_swig_base)
}

func (p SwigcptrBtFixedConstraint) GetRigidBodyA(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyA__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btFixedConstraint_getRigidBodyB__SWIG_0(SwigcptrBtFixedConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtFixedConstraint) GetRigidBodyB__SWIG_0() BtRigidBody {
	return _swig_wrap_btFixedConstraint_getRigidBodyB__SWIG_0(_swig_base)
}

func _swig_wrap_btFixedConstraint_getRigidBodyB__SWIG_1(SwigcptrBtFixedConstraint) SwigcptrBtRigidBody

func (_swig_base SwigcptrBtFixedConstraint) GetRigidBodyB__SWIG_1() BtRigidBody {
	return _swig_wrap_btFixedConstraint_getRigidBodyB__SWIG_1(_swig_base)
}

func (p SwigcptrBtFixedConstraint) GetRigidBodyB(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_0()
	}
	if argc == 0 {
		return p.GetRigidBodyB__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btFixedConstraint_getUserConstraintType(SwigcptrBtFixedConstraint) int

func (_swig_base SwigcptrBtFixedConstraint) GetUserConstraintType() int {
	return _swig_wrap_btFixedConstraint_getUserConstraintType(_swig_base)
}

func _swig_wrap_btFixedConstraint_setUserConstraintType(SwigcptrBtFixedConstraint, int)

func (_swig_base SwigcptrBtFixedConstraint) SetUserConstraintType(arg1 int) {
	_swig_wrap_btFixedConstraint_setUserConstraintType(_swig_base, arg1)
}

func _swig_wrap_btFixedConstraint_setUserConstraintId(SwigcptrBtFixedConstraint, int)

func (_swig_base SwigcptrBtFixedConstraint) SetUserConstraintId(arg1 int) {
	_swig_wrap_btFixedConstraint_setUserConstraintId(_swig_base, arg1)
}

func _swig_wrap_btFixedConstraint_getUserConstraintId(SwigcptrBtFixedConstraint) int

func (_swig_base SwigcptrBtFixedConstraint) GetUserConstraintId() int {
	return _swig_wrap_btFixedConstraint_getUserConstraintId(_swig_base)
}

func _swig_wrap_btFixedConstraint_setUserConstraintPtr(SwigcptrBtFixedConstraint, uintptr)

func (_swig_base SwigcptrBtFixedConstraint) SetUserConstraintPtr(arg1 uintptr) {
	_swig_wrap_btFixedConstraint_setUserConstraintPtr(_swig_base, arg1)
}

func _swig_wrap_btFixedConstraint_getUserConstraintPtr(SwigcptrBtFixedConstraint) uintptr

func (_swig_base SwigcptrBtFixedConstraint) GetUserConstraintPtr() uintptr {
	return _swig_wrap_btFixedConstraint_getUserConstraintPtr(_swig_base)
}

func _swig_wrap_btFixedConstraint_setJointFeedback(SwigcptrBtFixedConstraint, uintptr)

func (_swig_base SwigcptrBtFixedConstraint) SetJointFeedback(arg1 BtJointFeedback) {
	_swig_wrap_btFixedConstraint_setJointFeedback(_swig_base, arg1.Swigcptr())
}

func _swig_wrap_btFixedConstraint_getJointFeedback__SWIG_0(SwigcptrBtFixedConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtFixedConstraint) GetJointFeedback__SWIG_0() BtJointFeedback {
	return _swig_wrap_btFixedConstraint_getJointFeedback__SWIG_0(_swig_base)
}

func _swig_wrap_btFixedConstraint_getJointFeedback__SWIG_1(SwigcptrBtFixedConstraint) SwigcptrBtJointFeedback

func (_swig_base SwigcptrBtFixedConstraint) GetJointFeedback__SWIG_1() BtJointFeedback {
	return _swig_wrap_btFixedConstraint_getJointFeedback__SWIG_1(_swig_base)
}

func (p SwigcptrBtFixedConstraint) GetJointFeedback(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.GetJointFeedback__SWIG_0()
	}
	if argc == 0 {
		return p.GetJointFeedback__SWIG_1()
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_btFixedConstraint_getUid(SwigcptrBtFixedConstraint) int

func (_swig_base SwigcptrBtFixedConstraint) GetUid() int {
	return _swig_wrap_btFixedConstraint_getUid(_swig_base)
}

func _swig_wrap_btFixedConstraint_needsFeedback(SwigcptrBtFixedConstraint) bool

func (_swig_base SwigcptrBtFixedConstraint) NeedsFeedback() bool {
	return _swig_wrap_btFixedConstraint_needsFeedback(_swig_base)
}

func _swig_wrap_btFixedConstraint_enableFeedback(SwigcptrBtFixedConstraint, bool)

func (_swig_base SwigcptrBtFixedConstraint) EnableFeedback(arg1 bool) {
	_swig_wrap_btFixedConstraint_enableFeedback(_swig_base, arg1)
}

func _swig_wrap_btFixedConstraint_getAppliedImpulse(SwigcptrBtFixedConstraint) float32

func (_swig_base SwigcptrBtFixedConstraint) GetAppliedImpulse() float32 {
	return _swig_wrap_btFixedConstraint_getAppliedImpulse(_swig_base)
}

func _swig_wrap_btFixedConstraint_getConstraintType(SwigcptrBtFixedConstraint) BtTypedConstraintType

func (_swig_base SwigcptrBtFixedConstraint) GetConstraintType() BtTypedConstraintType {
	return _swig_wrap_btFixedConstraint_getConstraintType(_swig_base)
}

func _swig_wrap_btFixedConstraint_setDbgDrawSize(SwigcptrBtFixedConstraint, float32)

func (_swig_base SwigcptrBtFixedConstraint) SetDbgDrawSize(arg1 float32) {
	_swig_wrap_btFixedConstraint_setDbgDrawSize(_swig_base, arg1)
}

func _swig_wrap_btFixedConstraint_getDbgDrawSize(SwigcptrBtFixedConstraint) float32

func (_swig_base SwigcptrBtFixedConstraint) GetDbgDrawSize() float32 {
	return _swig_wrap_btFixedConstraint_getDbgDrawSize(_swig_base)
}

func _swig_wrap_btFixedConstraint_calculateSerializeBufferSize(SwigcptrBtFixedConstraint) int

func (_swig_base SwigcptrBtFixedConstraint) CalculateSerializeBufferSize() int {
	return _swig_wrap_btFixedConstraint_calculateSerializeBufferSize(_swig_base)
}

func _swig_wrap_btFixedConstraint_serialize(SwigcptrBtFixedConstraint, uintptr, uintptr) string

func (_swig_base SwigcptrBtFixedConstraint) Serialize(arg1 uintptr, arg2 BtSerializer) string {
	return _swig_wrap_btFixedConstraint_serialize(_swig_base, arg1, arg2.Swigcptr())
}

func _swig_wrap_SetbtFixedConstraint_M_objectType(SwigcptrBtFixedConstraint, int)

func (_swig_base SwigcptrBtFixedConstraint) SetM_objectType(arg1 int) {
	_swig_wrap_SetbtFixedConstraint_M_objectType(_swig_base, arg1)
}

func _swig_wrap_GetbtFixedConstraint_M_objectType(SwigcptrBtFixedConstraint) int

func (_swig_base SwigcptrBtFixedConstraint) GetM_objectType() int {
	return _swig_wrap_GetbtFixedConstraint_M_objectType(_swig_base)
}

func _swig_wrap_btFixedConstraint_getObjectType(SwigcptrBtFixedConstraint) int

func (_swig_base SwigcptrBtFixedConstraint) GetObjectType() int {
	return _swig_wrap_btFixedConstraint_getObjectType(_swig_base)
}

func (p SwigcptrBtFixedConstraint) SwigIsBtTypedConstraint() {
}

func (p SwigcptrBtFixedConstraint) SwigGetBtTypedConstraint() BtTypedConstraint {
	return SwigcptrBtTypedConstraint(p.Swigcptr())
}

func (p SwigcptrBtFixedConstraint) SwigIsBtTypedObject() {
}

func (p SwigcptrBtFixedConstraint) SwigGetBtTypedObject() BtTypedObject {
	return SwigcptrBtTypedObject(p.Swigcptr())
}

type BtFixedConstraint interface {
	Swigcptr() uintptr
	SwigIsBtFixedConstraint()
	GetInfo1(arg2 BtConstraintInfo1)
	GetInfo2(arg2 BtConstraintInfo2)
	SetParam(a ...interface{})
	GetParam(a ...interface{}) float32
	GetOverrideNumSolverIterations() int
	SetOverrideNumSolverIterations(arg1 int)
	BuildJacobian()
	SetupSolverConstraint(arg1 BtAlignedObjectArray_Sl_btSolverConstraint_Sg_, arg2 int, arg3 int, arg4 float32)
	InternalSetAppliedImpulse(arg1 float32)
	InternalGetAppliedImpulse() float32
	GetBreakingImpulseThreshold() float32
	SetBreakingImpulseThreshold(arg1 float32)
	IsEnabled() bool
	SetEnabled(arg1 bool)
	SolveConstraintObsolete(arg1 BtSolverBody, arg2 BtSolverBody, arg3 float32)
	GetRigidBodyA(a ...interface{}) interface{}
	GetRigidBodyB(a ...interface{}) interface{}
	GetUserConstraintType() int
	SetUserConstraintType(arg1 int)
	SetUserConstraintId(arg1 int)
	GetUserConstraintId() int
	SetUserConstraintPtr(arg1 uintptr)
	GetUserConstraintPtr() uintptr
	SetJointFeedback(arg1 BtJointFeedback)
	GetJointFeedback(a ...interface{}) interface{}
	GetUid() int
	NeedsFeedback() bool
	EnableFeedback(arg1 bool)
	GetAppliedImpulse() float32
	GetConstraintType() BtTypedConstraintType
	SetDbgDrawSize(arg1 float32)
	GetDbgDrawSize() float32
	CalculateSerializeBufferSize() int
	Serialize(arg1 uintptr, arg2 BtSerializer) string
	SetM_objectType(arg1 int)
	GetM_objectType() int
	GetObjectType() int
	SwigIsBtTypedConstraint()
	SwigGetBtTypedConstraint() BtTypedConstraint
	SwigIsBtTypedObject()
	SwigGetBtTypedObject() BtTypedObject
}

type BtConstraintSolverType int

func _swig_getBT_SEQUENTIAL_IMPULSE_SOLVER() BtConstraintSolverType

var BT_SEQUENTIAL_IMPULSE_SOLVER BtConstraintSolverType = _swig_getBT_SEQUENTIAL_IMPULSE_SOLVER()

func _swig_getBT_MLCP_SOLVER() BtConstraintSolverType

var BT_MLCP_SOLVER BtConstraintSolverType = _swig_getBT_MLCP_SOLVER()

type SwigcptrBtConstraintSolver uintptr

func (p SwigcptrBtConstraintSolver) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtConstraintSolver) SwigIsBtConstraintSolver() {
}

func _swig_wrap_delete_btConstraintSolver(uintptr)

func DeleteBtConstraintSolver(arg1 BtConstraintSolver) {
	_swig_wrap_delete_btConstraintSolver(arg1.Swigcptr())
}

func _swig_wrap_btConstraintSolver_prepareSolve(SwigcptrBtConstraintSolver, int, int)

func (arg1 SwigcptrBtConstraintSolver) PrepareSolve(arg2 int, arg3 int) {
	_swig_wrap_btConstraintSolver_prepareSolve(arg1, arg2, arg3)
}

func _swig_wrap_btConstraintSolver_solveGroup(SwigcptrBtConstraintSolver, uintptr, int, uintptr, int, uintptr, int, uintptr, uintptr, uintptr) float32

func (arg1 SwigcptrBtConstraintSolver) SolveGroup(arg2 BtCollisionObject, arg3 int, arg4 BtPersistentManifold, arg5 int, arg6 BtTypedConstraint, arg7 int, arg8 BtContactSolverInfo, arg9 BtIDebugDraw, arg10 BtDispatcher) float32 {
	return _swig_wrap_btConstraintSolver_solveGroup(arg1, arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5, arg6.Swigcptr(), arg7, arg8.Swigcptr(), arg9.Swigcptr(), arg10.Swigcptr())
}

func _swig_wrap_btConstraintSolver_allSolved(SwigcptrBtConstraintSolver, uintptr, uintptr)

func (arg1 SwigcptrBtConstraintSolver) AllSolved(arg2 BtContactSolverInfo, arg3 BtIDebugDraw) {
	_swig_wrap_btConstraintSolver_allSolved(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btConstraintSolver_reset(SwigcptrBtConstraintSolver)

func (arg1 SwigcptrBtConstraintSolver) Reset() {
	_swig_wrap_btConstraintSolver_reset(arg1)
}

func _swig_wrap_btConstraintSolver_getSolverType(SwigcptrBtConstraintSolver) BtConstraintSolverType

func (arg1 SwigcptrBtConstraintSolver) GetSolverType() BtConstraintSolverType {
	return _swig_wrap_btConstraintSolver_getSolverType(arg1)
}

type BtConstraintSolver interface {
	Swigcptr() uintptr
	SwigIsBtConstraintSolver()
	PrepareSolve(arg2 int, arg3 int)
	SolveGroup(arg2 BtCollisionObject, arg3 int, arg4 BtPersistentManifold, arg5 int, arg6 BtTypedConstraint, arg7 int, arg8 BtContactSolverInfo, arg9 BtIDebugDraw, arg10 BtDispatcher) float32
	AllSolved(arg2 BtContactSolverInfo, arg3 BtIDebugDraw)
	Reset()
	GetSolverType() BtConstraintSolverType
}

type SwigcptrBtSequentialImpulseConstraintSolver uintptr

func (p SwigcptrBtSequentialImpulseConstraintSolver) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtSequentialImpulseConstraintSolver) SwigIsBtSequentialImpulseConstraintSolver() {
}

func _swig_wrap_new_btSequentialImpulseConstraintSolver() SwigcptrBtSequentialImpulseConstraintSolver

func NewBtSequentialImpulseConstraintSolver() BtSequentialImpulseConstraintSolver {
	return _swig_wrap_new_btSequentialImpulseConstraintSolver()
}

func _swig_wrap_delete_btSequentialImpulseConstraintSolver(uintptr)

func DeleteBtSequentialImpulseConstraintSolver(arg1 BtSequentialImpulseConstraintSolver) {
	_swig_wrap_delete_btSequentialImpulseConstraintSolver(arg1.Swigcptr())
}

func _swig_wrap_btSequentialImpulseConstraintSolver_solveGroup(SwigcptrBtSequentialImpulseConstraintSolver, uintptr, int, uintptr, int, uintptr, int, uintptr, uintptr, uintptr) float32

func (arg1 SwigcptrBtSequentialImpulseConstraintSolver) SolveGroup(arg2 BtCollisionObject, arg3 int, arg4 BtPersistentManifold, arg5 int, arg6 BtTypedConstraint, arg7 int, arg8 BtContactSolverInfo, arg9 BtIDebugDraw, arg10 BtDispatcher) float32 {
	return _swig_wrap_btSequentialImpulseConstraintSolver_solveGroup(arg1, arg2.Swigcptr(), arg3, arg4.Swigcptr(), arg5, arg6.Swigcptr(), arg7, arg8.Swigcptr(), arg9.Swigcptr(), arg10.Swigcptr())
}

func _swig_wrap_btSequentialImpulseConstraintSolver_reset(SwigcptrBtSequentialImpulseConstraintSolver)

func (arg1 SwigcptrBtSequentialImpulseConstraintSolver) Reset() {
	_swig_wrap_btSequentialImpulseConstraintSolver_reset(arg1)
}

func _swig_wrap_btSequentialImpulseConstraintSolver_btRand2(SwigcptrBtSequentialImpulseConstraintSolver) uint64

func (arg1 SwigcptrBtSequentialImpulseConstraintSolver) BtRand2() uint64 {
	return _swig_wrap_btSequentialImpulseConstraintSolver_btRand2(arg1)
}

func _swig_wrap_btSequentialImpulseConstraintSolver_btRandInt2(SwigcptrBtSequentialImpulseConstraintSolver, int) int

func (arg1 SwigcptrBtSequentialImpulseConstraintSolver) BtRandInt2(arg2 int) int {
	return _swig_wrap_btSequentialImpulseConstraintSolver_btRandInt2(arg1, arg2)
}

func _swig_wrap_btSequentialImpulseConstraintSolver_setRandSeed(SwigcptrBtSequentialImpulseConstraintSolver, uint64)

func (arg1 SwigcptrBtSequentialImpulseConstraintSolver) SetRandSeed(arg2 uint64) {
	_swig_wrap_btSequentialImpulseConstraintSolver_setRandSeed(arg1, arg2)
}

func _swig_wrap_btSequentialImpulseConstraintSolver_getRandSeed(SwigcptrBtSequentialImpulseConstraintSolver) uint64

func (arg1 SwigcptrBtSequentialImpulseConstraintSolver) GetRandSeed() uint64 {
	return _swig_wrap_btSequentialImpulseConstraintSolver_getRandSeed(arg1)
}

func _swig_wrap_btSequentialImpulseConstraintSolver_getSolverType(SwigcptrBtSequentialImpulseConstraintSolver) BtConstraintSolverType

func (arg1 SwigcptrBtSequentialImpulseConstraintSolver) GetSolverType() BtConstraintSolverType {
	return _swig_wrap_btSequentialImpulseConstraintSolver_getSolverType(arg1)
}

func _swig_wrap_btSequentialImpulseConstraintSolver_prepareSolve(SwigcptrBtSequentialImpulseConstraintSolver, int, int)

func (_swig_base SwigcptrBtSequentialImpulseConstraintSolver) PrepareSolve(arg1 int, arg2 int) {
	_swig_wrap_btSequentialImpulseConstraintSolver_prepareSolve(_swig_base, arg1, arg2)
}

func _swig_wrap_btSequentialImpulseConstraintSolver_allSolved(SwigcptrBtSequentialImpulseConstraintSolver, uintptr, uintptr)

func (_swig_base SwigcptrBtSequentialImpulseConstraintSolver) AllSolved(arg1 BtContactSolverInfo, arg2 BtIDebugDraw) {
	_swig_wrap_btSequentialImpulseConstraintSolver_allSolved(_swig_base, arg1.Swigcptr(), arg2.Swigcptr())
}

func (p SwigcptrBtSequentialImpulseConstraintSolver) SwigIsBtConstraintSolver() {
}

func (p SwigcptrBtSequentialImpulseConstraintSolver) SwigGetBtConstraintSolver() BtConstraintSolver {
	return SwigcptrBtConstraintSolver(p.Swigcptr())
}

type BtSequentialImpulseConstraintSolver interface {
	Swigcptr() uintptr
	SwigIsBtSequentialImpulseConstraintSolver()
	SolveGroup(arg2 BtCollisionObject, arg3 int, arg4 BtPersistentManifold, arg5 int, arg6 BtTypedConstraint, arg7 int, arg8 BtContactSolverInfo, arg9 BtIDebugDraw, arg10 BtDispatcher) float32
	Reset()
	BtRand2() uint64
	BtRandInt2(arg2 int) int
	SetRandSeed(arg2 uint64)
	GetRandSeed() uint64
	GetSolverType() BtConstraintSolverType
	PrepareSolve(arg1 int, arg2 int)
	AllSolved(arg1 BtContactSolverInfo, arg2 BtIDebugDraw)
	SwigIsBtConstraintSolver()
	SwigGetBtConstraintSolver() BtConstraintSolver
}

type SwigcptrBtVehicleRaycaster uintptr

func (p SwigcptrBtVehicleRaycaster) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtVehicleRaycaster) SwigIsBtVehicleRaycaster() {
}

func _swig_wrap_delete_btVehicleRaycaster(uintptr)

func DeleteBtVehicleRaycaster(arg1 BtVehicleRaycaster) {
	_swig_wrap_delete_btVehicleRaycaster(arg1.Swigcptr())
}

func _swig_wrap_btVehicleRaycaster_castRay(SwigcptrBtVehicleRaycaster, uintptr, uintptr, uintptr) uintptr

func (arg1 SwigcptrBtVehicleRaycaster) CastRay(arg2 BtVector3, arg3 BtVector3, arg4 BtVehicleRaycasterResult) uintptr {
	return _swig_wrap_btVehicleRaycaster_castRay(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

type BtVehicleRaycaster interface {
	Swigcptr() uintptr
	SwigIsBtVehicleRaycaster()
	CastRay(arg2 BtVector3, arg3 BtVector3, arg4 BtVehicleRaycasterResult) uintptr
}

type SwigcptrBtWheelInfoConstructionInfo uintptr

func (p SwigcptrBtWheelInfoConstructionInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtWheelInfoConstructionInfo) SwigIsBtWheelInfoConstructionInfo() {
}

func _swig_wrap_btWheelInfoConstructionInfo_m_chassisConnectionCS_set(SwigcptrBtWheelInfoConstructionInfo, uintptr)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_chassisConnectionCS(arg2 BtVector3) {
	_swig_wrap_btWheelInfoConstructionInfo_m_chassisConnectionCS_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btWheelInfoConstructionInfo_m_chassisConnectionCS_get(SwigcptrBtWheelInfoConstructionInfo) SwigcptrBtVector3

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_chassisConnectionCS() BtVector3 {
	return _swig_wrap_btWheelInfoConstructionInfo_m_chassisConnectionCS_get(arg1)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_wheelDirectionCS_set(SwigcptrBtWheelInfoConstructionInfo, uintptr)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_wheelDirectionCS(arg2 BtVector3) {
	_swig_wrap_btWheelInfoConstructionInfo_m_wheelDirectionCS_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btWheelInfoConstructionInfo_m_wheelDirectionCS_get(SwigcptrBtWheelInfoConstructionInfo) SwigcptrBtVector3

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_wheelDirectionCS() BtVector3 {
	return _swig_wrap_btWheelInfoConstructionInfo_m_wheelDirectionCS_get(arg1)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_wheelAxleCS_set(SwigcptrBtWheelInfoConstructionInfo, uintptr)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_wheelAxleCS(arg2 BtVector3) {
	_swig_wrap_btWheelInfoConstructionInfo_m_wheelAxleCS_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btWheelInfoConstructionInfo_m_wheelAxleCS_get(SwigcptrBtWheelInfoConstructionInfo) SwigcptrBtVector3

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_wheelAxleCS() BtVector3 {
	return _swig_wrap_btWheelInfoConstructionInfo_m_wheelAxleCS_get(arg1)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_suspensionRestLength_set(SwigcptrBtWheelInfoConstructionInfo, float32)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_suspensionRestLength(arg2 float32) {
	_swig_wrap_btWheelInfoConstructionInfo_m_suspensionRestLength_set(arg1, arg2)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_suspensionRestLength_get(SwigcptrBtWheelInfoConstructionInfo) float32

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_suspensionRestLength() float32 {
	return _swig_wrap_btWheelInfoConstructionInfo_m_suspensionRestLength_get(arg1)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_maxSuspensionTravelCm_set(SwigcptrBtWheelInfoConstructionInfo, float32)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_maxSuspensionTravelCm(arg2 float32) {
	_swig_wrap_btWheelInfoConstructionInfo_m_maxSuspensionTravelCm_set(arg1, arg2)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_maxSuspensionTravelCm_get(SwigcptrBtWheelInfoConstructionInfo) float32

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_maxSuspensionTravelCm() float32 {
	return _swig_wrap_btWheelInfoConstructionInfo_m_maxSuspensionTravelCm_get(arg1)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_wheelRadius_set(SwigcptrBtWheelInfoConstructionInfo, float32)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_wheelRadius(arg2 float32) {
	_swig_wrap_btWheelInfoConstructionInfo_m_wheelRadius_set(arg1, arg2)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_wheelRadius_get(SwigcptrBtWheelInfoConstructionInfo) float32

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_wheelRadius() float32 {
	return _swig_wrap_btWheelInfoConstructionInfo_m_wheelRadius_get(arg1)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_suspensionStiffness_set(SwigcptrBtWheelInfoConstructionInfo, float32)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_suspensionStiffness(arg2 float32) {
	_swig_wrap_btWheelInfoConstructionInfo_m_suspensionStiffness_set(arg1, arg2)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_suspensionStiffness_get(SwigcptrBtWheelInfoConstructionInfo) float32

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_suspensionStiffness() float32 {
	return _swig_wrap_btWheelInfoConstructionInfo_m_suspensionStiffness_get(arg1)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_wheelsDampingCompression_set(SwigcptrBtWheelInfoConstructionInfo, float32)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_wheelsDampingCompression(arg2 float32) {
	_swig_wrap_btWheelInfoConstructionInfo_m_wheelsDampingCompression_set(arg1, arg2)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_wheelsDampingCompression_get(SwigcptrBtWheelInfoConstructionInfo) float32

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_wheelsDampingCompression() float32 {
	return _swig_wrap_btWheelInfoConstructionInfo_m_wheelsDampingCompression_get(arg1)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_wheelsDampingRelaxation_set(SwigcptrBtWheelInfoConstructionInfo, float32)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_wheelsDampingRelaxation(arg2 float32) {
	_swig_wrap_btWheelInfoConstructionInfo_m_wheelsDampingRelaxation_set(arg1, arg2)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_wheelsDampingRelaxation_get(SwigcptrBtWheelInfoConstructionInfo) float32

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_wheelsDampingRelaxation() float32 {
	return _swig_wrap_btWheelInfoConstructionInfo_m_wheelsDampingRelaxation_get(arg1)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_frictionSlip_set(SwigcptrBtWheelInfoConstructionInfo, float32)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_frictionSlip(arg2 float32) {
	_swig_wrap_btWheelInfoConstructionInfo_m_frictionSlip_set(arg1, arg2)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_frictionSlip_get(SwigcptrBtWheelInfoConstructionInfo) float32

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_frictionSlip() float32 {
	return _swig_wrap_btWheelInfoConstructionInfo_m_frictionSlip_get(arg1)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_maxSuspensionForce_set(SwigcptrBtWheelInfoConstructionInfo, float32)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_maxSuspensionForce(arg2 float32) {
	_swig_wrap_btWheelInfoConstructionInfo_m_maxSuspensionForce_set(arg1, arg2)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_maxSuspensionForce_get(SwigcptrBtWheelInfoConstructionInfo) float32

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_maxSuspensionForce() float32 {
	return _swig_wrap_btWheelInfoConstructionInfo_m_maxSuspensionForce_get(arg1)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_bIsFrontWheel_set(SwigcptrBtWheelInfoConstructionInfo, bool)

func (arg1 SwigcptrBtWheelInfoConstructionInfo) SetM_bIsFrontWheel(arg2 bool) {
	_swig_wrap_btWheelInfoConstructionInfo_m_bIsFrontWheel_set(arg1, arg2)
}

func _swig_wrap_btWheelInfoConstructionInfo_m_bIsFrontWheel_get(SwigcptrBtWheelInfoConstructionInfo) bool

func (arg1 SwigcptrBtWheelInfoConstructionInfo) GetM_bIsFrontWheel() bool {
	return _swig_wrap_btWheelInfoConstructionInfo_m_bIsFrontWheel_get(arg1)
}

func _swig_wrap_new_btWheelInfoConstructionInfo() SwigcptrBtWheelInfoConstructionInfo

func NewBtWheelInfoConstructionInfo() BtWheelInfoConstructionInfo {
	return _swig_wrap_new_btWheelInfoConstructionInfo()
}

func _swig_wrap_delete_btWheelInfoConstructionInfo(uintptr)

func DeleteBtWheelInfoConstructionInfo(arg1 BtWheelInfoConstructionInfo) {
	_swig_wrap_delete_btWheelInfoConstructionInfo(arg1.Swigcptr())
}

type BtWheelInfoConstructionInfo interface {
	Swigcptr() uintptr
	SwigIsBtWheelInfoConstructionInfo()
	SetM_chassisConnectionCS(arg2 BtVector3)
	GetM_chassisConnectionCS() BtVector3
	SetM_wheelDirectionCS(arg2 BtVector3)
	GetM_wheelDirectionCS() BtVector3
	SetM_wheelAxleCS(arg2 BtVector3)
	GetM_wheelAxleCS() BtVector3
	SetM_suspensionRestLength(arg2 float32)
	GetM_suspensionRestLength() float32
	SetM_maxSuspensionTravelCm(arg2 float32)
	GetM_maxSuspensionTravelCm() float32
	SetM_wheelRadius(arg2 float32)
	GetM_wheelRadius() float32
	SetM_suspensionStiffness(arg2 float32)
	GetM_suspensionStiffness() float32
	SetM_wheelsDampingCompression(arg2 float32)
	GetM_wheelsDampingCompression() float32
	SetM_wheelsDampingRelaxation(arg2 float32)
	GetM_wheelsDampingRelaxation() float32
	SetM_frictionSlip(arg2 float32)
	GetM_frictionSlip() float32
	SetM_maxSuspensionForce(arg2 float32)
	GetM_maxSuspensionForce() float32
	SetM_bIsFrontWheel(arg2 bool)
	GetM_bIsFrontWheel() bool
}

type SwigcptrBtWheelInfo uintptr

func (p SwigcptrBtWheelInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtWheelInfo) SwigIsBtWheelInfo() {
}

func _swig_wrap_btWheelInfo_m_raycastInfo_set(SwigcptrBtWheelInfo, uintptr)

func (arg1 SwigcptrBtWheelInfo) SetM_raycastInfo(arg2 RaycastInfo) {
	_swig_wrap_btWheelInfo_m_raycastInfo_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btWheelInfo_m_raycastInfo_get(SwigcptrBtWheelInfo) SwigcptrRaycastInfo

func (arg1 SwigcptrBtWheelInfo) GetM_raycastInfo() RaycastInfo {
	return _swig_wrap_btWheelInfo_m_raycastInfo_get(arg1)
}

func _swig_wrap_btWheelInfo_m_worldTransform_set(SwigcptrBtWheelInfo, uintptr)

func (arg1 SwigcptrBtWheelInfo) SetM_worldTransform(arg2 BtTransform) {
	_swig_wrap_btWheelInfo_m_worldTransform_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btWheelInfo_m_worldTransform_get(SwigcptrBtWheelInfo) SwigcptrBtTransform

func (arg1 SwigcptrBtWheelInfo) GetM_worldTransform() BtTransform {
	return _swig_wrap_btWheelInfo_m_worldTransform_get(arg1)
}

func _swig_wrap_btWheelInfo_m_chassisConnectionPointCS_set(SwigcptrBtWheelInfo, uintptr)

func (arg1 SwigcptrBtWheelInfo) SetM_chassisConnectionPointCS(arg2 BtVector3) {
	_swig_wrap_btWheelInfo_m_chassisConnectionPointCS_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btWheelInfo_m_chassisConnectionPointCS_get(SwigcptrBtWheelInfo) SwigcptrBtVector3

func (arg1 SwigcptrBtWheelInfo) GetM_chassisConnectionPointCS() BtVector3 {
	return _swig_wrap_btWheelInfo_m_chassisConnectionPointCS_get(arg1)
}

func _swig_wrap_btWheelInfo_m_wheelDirectionCS_set(SwigcptrBtWheelInfo, uintptr)

func (arg1 SwigcptrBtWheelInfo) SetM_wheelDirectionCS(arg2 BtVector3) {
	_swig_wrap_btWheelInfo_m_wheelDirectionCS_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btWheelInfo_m_wheelDirectionCS_get(SwigcptrBtWheelInfo) SwigcptrBtVector3

func (arg1 SwigcptrBtWheelInfo) GetM_wheelDirectionCS() BtVector3 {
	return _swig_wrap_btWheelInfo_m_wheelDirectionCS_get(arg1)
}

func _swig_wrap_btWheelInfo_m_wheelAxleCS_set(SwigcptrBtWheelInfo, uintptr)

func (arg1 SwigcptrBtWheelInfo) SetM_wheelAxleCS(arg2 BtVector3) {
	_swig_wrap_btWheelInfo_m_wheelAxleCS_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_btWheelInfo_m_wheelAxleCS_get(SwigcptrBtWheelInfo) SwigcptrBtVector3

func (arg1 SwigcptrBtWheelInfo) GetM_wheelAxleCS() BtVector3 {
	return _swig_wrap_btWheelInfo_m_wheelAxleCS_get(arg1)
}

func _swig_wrap_btWheelInfo_m_suspensionRestLength1_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_suspensionRestLength1(arg2 float32) {
	_swig_wrap_btWheelInfo_m_suspensionRestLength1_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_suspensionRestLength1_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_suspensionRestLength1() float32 {
	return _swig_wrap_btWheelInfo_m_suspensionRestLength1_get(arg1)
}

func _swig_wrap_btWheelInfo_m_maxSuspensionTravelCm_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_maxSuspensionTravelCm(arg2 float32) {
	_swig_wrap_btWheelInfo_m_maxSuspensionTravelCm_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_maxSuspensionTravelCm_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_maxSuspensionTravelCm() float32 {
	return _swig_wrap_btWheelInfo_m_maxSuspensionTravelCm_get(arg1)
}

func _swig_wrap_btWheelInfo_getSuspensionRestLength(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetSuspensionRestLength() float32 {
	return _swig_wrap_btWheelInfo_getSuspensionRestLength(arg1)
}

func _swig_wrap_btWheelInfo_m_wheelsRadius_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_wheelsRadius(arg2 float32) {
	_swig_wrap_btWheelInfo_m_wheelsRadius_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_wheelsRadius_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_wheelsRadius() float32 {
	return _swig_wrap_btWheelInfo_m_wheelsRadius_get(arg1)
}

func _swig_wrap_btWheelInfo_m_suspensionStiffness_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_suspensionStiffness(arg2 float32) {
	_swig_wrap_btWheelInfo_m_suspensionStiffness_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_suspensionStiffness_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_suspensionStiffness() float32 {
	return _swig_wrap_btWheelInfo_m_suspensionStiffness_get(arg1)
}

func _swig_wrap_btWheelInfo_m_wheelsDampingCompression_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_wheelsDampingCompression(arg2 float32) {
	_swig_wrap_btWheelInfo_m_wheelsDampingCompression_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_wheelsDampingCompression_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_wheelsDampingCompression() float32 {
	return _swig_wrap_btWheelInfo_m_wheelsDampingCompression_get(arg1)
}

func _swig_wrap_btWheelInfo_m_wheelsDampingRelaxation_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_wheelsDampingRelaxation(arg2 float32) {
	_swig_wrap_btWheelInfo_m_wheelsDampingRelaxation_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_wheelsDampingRelaxation_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_wheelsDampingRelaxation() float32 {
	return _swig_wrap_btWheelInfo_m_wheelsDampingRelaxation_get(arg1)
}

func _swig_wrap_btWheelInfo_m_frictionSlip_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_frictionSlip(arg2 float32) {
	_swig_wrap_btWheelInfo_m_frictionSlip_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_frictionSlip_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_frictionSlip() float32 {
	return _swig_wrap_btWheelInfo_m_frictionSlip_get(arg1)
}

func _swig_wrap_btWheelInfo_m_steering_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_steering(arg2 float32) {
	_swig_wrap_btWheelInfo_m_steering_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_steering_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_steering() float32 {
	return _swig_wrap_btWheelInfo_m_steering_get(arg1)
}

func _swig_wrap_btWheelInfo_m_rotation_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_rotation(arg2 float32) {
	_swig_wrap_btWheelInfo_m_rotation_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_rotation_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_rotation() float32 {
	return _swig_wrap_btWheelInfo_m_rotation_get(arg1)
}

func _swig_wrap_btWheelInfo_m_deltaRotation_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_deltaRotation(arg2 float32) {
	_swig_wrap_btWheelInfo_m_deltaRotation_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_deltaRotation_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_deltaRotation() float32 {
	return _swig_wrap_btWheelInfo_m_deltaRotation_get(arg1)
}

func _swig_wrap_btWheelInfo_m_rollInfluence_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_rollInfluence(arg2 float32) {
	_swig_wrap_btWheelInfo_m_rollInfluence_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_rollInfluence_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_rollInfluence() float32 {
	return _swig_wrap_btWheelInfo_m_rollInfluence_get(arg1)
}

func _swig_wrap_btWheelInfo_m_maxSuspensionForce_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_maxSuspensionForce(arg2 float32) {
	_swig_wrap_btWheelInfo_m_maxSuspensionForce_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_maxSuspensionForce_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_maxSuspensionForce() float32 {
	return _swig_wrap_btWheelInfo_m_maxSuspensionForce_get(arg1)
}

func _swig_wrap_btWheelInfo_m_engineForce_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_engineForce(arg2 float32) {
	_swig_wrap_btWheelInfo_m_engineForce_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_engineForce_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_engineForce() float32 {
	return _swig_wrap_btWheelInfo_m_engineForce_get(arg1)
}

func _swig_wrap_btWheelInfo_m_brake_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_brake(arg2 float32) {
	_swig_wrap_btWheelInfo_m_brake_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_brake_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_brake() float32 {
	return _swig_wrap_btWheelInfo_m_brake_get(arg1)
}

func _swig_wrap_btWheelInfo_m_bIsFrontWheel_set(SwigcptrBtWheelInfo, bool)

func (arg1 SwigcptrBtWheelInfo) SetM_bIsFrontWheel(arg2 bool) {
	_swig_wrap_btWheelInfo_m_bIsFrontWheel_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_bIsFrontWheel_get(SwigcptrBtWheelInfo) bool

func (arg1 SwigcptrBtWheelInfo) GetM_bIsFrontWheel() bool {
	return _swig_wrap_btWheelInfo_m_bIsFrontWheel_get(arg1)
}

func _swig_wrap_btWheelInfo_m_clientInfo_set(SwigcptrBtWheelInfo, uintptr)

func (arg1 SwigcptrBtWheelInfo) SetM_clientInfo(arg2 uintptr) {
	_swig_wrap_btWheelInfo_m_clientInfo_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_clientInfo_get(SwigcptrBtWheelInfo) uintptr

func (arg1 SwigcptrBtWheelInfo) GetM_clientInfo() uintptr {
	return _swig_wrap_btWheelInfo_m_clientInfo_get(arg1)
}

func _swig_wrap_new_btWheelInfo(uintptr) SwigcptrBtWheelInfo

func NewBtWheelInfo(arg1 BtWheelInfoConstructionInfo) BtWheelInfo {
	return _swig_wrap_new_btWheelInfo(arg1.Swigcptr())
}

func _swig_wrap_btWheelInfo_updateWheel(SwigcptrBtWheelInfo, uintptr, uintptr)

func (arg1 SwigcptrBtWheelInfo) UpdateWheel(arg2 BtRigidBody, arg3 RaycastInfo) {
	_swig_wrap_btWheelInfo_updateWheel(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func _swig_wrap_btWheelInfo_m_clippedInvContactDotSuspension_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_clippedInvContactDotSuspension(arg2 float32) {
	_swig_wrap_btWheelInfo_m_clippedInvContactDotSuspension_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_clippedInvContactDotSuspension_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_clippedInvContactDotSuspension() float32 {
	return _swig_wrap_btWheelInfo_m_clippedInvContactDotSuspension_get(arg1)
}

func _swig_wrap_btWheelInfo_m_suspensionRelativeVelocity_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_suspensionRelativeVelocity(arg2 float32) {
	_swig_wrap_btWheelInfo_m_suspensionRelativeVelocity_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_suspensionRelativeVelocity_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_suspensionRelativeVelocity() float32 {
	return _swig_wrap_btWheelInfo_m_suspensionRelativeVelocity_get(arg1)
}

func _swig_wrap_btWheelInfo_m_wheelsSuspensionForce_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_wheelsSuspensionForce(arg2 float32) {
	_swig_wrap_btWheelInfo_m_wheelsSuspensionForce_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_wheelsSuspensionForce_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_wheelsSuspensionForce() float32 {
	return _swig_wrap_btWheelInfo_m_wheelsSuspensionForce_get(arg1)
}

func _swig_wrap_btWheelInfo_m_skidInfo_set(SwigcptrBtWheelInfo, float32)

func (arg1 SwigcptrBtWheelInfo) SetM_skidInfo(arg2 float32) {
	_swig_wrap_btWheelInfo_m_skidInfo_set(arg1, arg2)
}

func _swig_wrap_btWheelInfo_m_skidInfo_get(SwigcptrBtWheelInfo) float32

func (arg1 SwigcptrBtWheelInfo) GetM_skidInfo() float32 {
	return _swig_wrap_btWheelInfo_m_skidInfo_get(arg1)
}

func _swig_wrap_delete_btWheelInfo(uintptr)

func DeleteBtWheelInfo(arg1 BtWheelInfo) {
	_swig_wrap_delete_btWheelInfo(arg1.Swigcptr())
}

type BtWheelInfo interface {
	Swigcptr() uintptr
	SwigIsBtWheelInfo()
	SetM_raycastInfo(arg2 RaycastInfo)
	GetM_raycastInfo() RaycastInfo
	SetM_worldTransform(arg2 BtTransform)
	GetM_worldTransform() BtTransform
	SetM_chassisConnectionPointCS(arg2 BtVector3)
	GetM_chassisConnectionPointCS() BtVector3
	SetM_wheelDirectionCS(arg2 BtVector3)
	GetM_wheelDirectionCS() BtVector3
	SetM_wheelAxleCS(arg2 BtVector3)
	GetM_wheelAxleCS() BtVector3
	SetM_suspensionRestLength1(arg2 float32)
	GetM_suspensionRestLength1() float32
	SetM_maxSuspensionTravelCm(arg2 float32)
	GetM_maxSuspensionTravelCm() float32
	GetSuspensionRestLength() float32
	SetM_wheelsRadius(arg2 float32)
	GetM_wheelsRadius() float32
	SetM_suspensionStiffness(arg2 float32)
	GetM_suspensionStiffness() float32
	SetM_wheelsDampingCompression(arg2 float32)
	GetM_wheelsDampingCompression() float32
	SetM_wheelsDampingRelaxation(arg2 float32)
	GetM_wheelsDampingRelaxation() float32
	SetM_frictionSlip(arg2 float32)
	GetM_frictionSlip() float32
	SetM_steering(arg2 float32)
	GetM_steering() float32
	SetM_rotation(arg2 float32)
	GetM_rotation() float32
	SetM_deltaRotation(arg2 float32)
	GetM_deltaRotation() float32
	SetM_rollInfluence(arg2 float32)
	GetM_rollInfluence() float32
	SetM_maxSuspensionForce(arg2 float32)
	GetM_maxSuspensionForce() float32
	SetM_engineForce(arg2 float32)
	GetM_engineForce() float32
	SetM_brake(arg2 float32)
	GetM_brake() float32
	SetM_bIsFrontWheel(arg2 bool)
	GetM_bIsFrontWheel() bool
	SetM_clientInfo(arg2 uintptr)
	GetM_clientInfo() uintptr
	UpdateWheel(arg2 BtRigidBody, arg3 RaycastInfo)
	SetM_clippedInvContactDotSuspension(arg2 float32)
	GetM_clippedInvContactDotSuspension() float32
	SetM_suspensionRelativeVelocity(arg2 float32)
	GetM_suspensionRelativeVelocity() float32
	SetM_wheelsSuspensionForce(arg2 float32)
	GetM_wheelsSuspensionForce() float32
	SetM_skidInfo(arg2 float32)
	GetM_skidInfo() float32
}

type SwigcptrBtActionInterface uintptr

func (p SwigcptrBtActionInterface) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtActionInterface) SwigIsBtActionInterface() {
}

func _swig_wrap_delete_btActionInterface(uintptr)

func DeleteBtActionInterface(arg1 BtActionInterface) {
	_swig_wrap_delete_btActionInterface(arg1.Swigcptr())
}

func _swig_wrap_btActionInterface_updateAction(SwigcptrBtActionInterface, uintptr, float32)

func (arg1 SwigcptrBtActionInterface) UpdateAction(arg2 BtCollisionWorld, arg3 float32) {
	_swig_wrap_btActionInterface_updateAction(arg1, arg2.Swigcptr(), arg3)
}

func _swig_wrap_btActionInterface_debugDraw(SwigcptrBtActionInterface, uintptr)

func (arg1 SwigcptrBtActionInterface) DebugDraw(arg2 BtIDebugDraw) {
	_swig_wrap_btActionInterface_debugDraw(arg1, arg2.Swigcptr())
}

type BtActionInterface interface {
	Swigcptr() uintptr
	SwigIsBtActionInterface()
	UpdateAction(arg2 BtCollisionWorld, arg3 float32)
	DebugDraw(arg2 BtIDebugDraw)
}

type SwigcptrBtDefaultVehicleRaycaster uintptr

func (p SwigcptrBtDefaultVehicleRaycaster) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBtDefaultVehicleRaycaster) SwigIsBtDefaultVehicleRaycaster() {
}

func _swig_wrap_new_btDefaultVehicleRaycaster(uintptr) SwigcptrBtDefaultVehicleRaycaster

func NewBtDefaultVehicleRaycaster(arg1 BtDynamicsWorld) BtDefaultVehicleRaycaster {
	return _swig_wrap_new_btDefaultVehicleRaycaster(arg1.Swigcptr())
}

func _swig_wrap_btDefaultVehicleRaycaster_castRay(SwigcptrBtDefaultVehicleRaycaster, uintptr, uintptr, uintptr) uintptr

func (arg1 SwigcptrBtDefaultVehicleRaycaster) CastRay(arg2 BtVector3, arg3 BtVector3, arg4 BtVehicleRaycasterResult) uintptr {
	return _swig_wrap_btDefaultVehicleRaycaster_castRay(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4.Swigcptr())
}

func _swig_wrap_delete_btDefaultVehicleRaycaster(uintptr)

func DeleteBtDefaultVehicleRaycaster(arg1 BtDefaultVehicleRaycaster) {
	_swig_wrap_delete_btDefaultVehicleRaycaster(arg1.Swigcptr())
}

func (p SwigcptrBtDefaultVehicleRaycaster) SwigIsBtVehicleRaycaster() {
}

func (p SwigcptrBtDefaultVehicleRaycaster) SwigGetBtVehicleRaycaster() BtVehicleRaycaster {
	return SwigcptrBtVehicleRaycaster(p.Swigcptr())
}

type BtDefaultVehicleRaycaster interface {
	Swigcptr() uintptr
	SwigIsBtDefaultVehicleRaycaster()
	CastRay(arg2 BtVector3, arg3 BtVector3, arg4 BtVehicleRaycasterResult) uintptr
	SwigIsBtVehicleRaycaster()
	SwigGetBtVehicleRaycaster() BtVehicleRaycaster
}

type SwigcptrBtVehicleRaycasterResult uintptr
type BtVehicleRaycasterResult interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtVehicleRaycasterResult) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_int_Sg_ uintptr
type BtAlignedObjectArray_Sl_int_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_int_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_sStkNN_Sg_ uintptr
type BtAlignedObjectArray_Sl_sStkNN_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_sStkNN_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtRigidBodyConstructionInfo uintptr
type BtRigidBodyConstructionInfo interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtRigidBodyConstructionInfo) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtConvexPolyhedron uintptr
type BtConvexPolyhedron interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtConvexPolyhedron) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr
}

func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_btSolverConstraint_Sg_ uintptr
type BtAlignedObjectArray_Sl_btSolverConstraint_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_btSolverConstraint_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtMultiSapProxy uintptr
type BtMultiSapProxy interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtMultiSapProxy) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtConstraintInfo1 uintptr
type BtConstraintInfo1 interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtConstraintInfo1) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtConstraintInfo2 uintptr
type BtConstraintInfo2 interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtConstraintInfo2) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrIClone uintptr
type IClone interface {
	Swigcptr() uintptr
}

func (p SwigcptrIClone) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSStkNPS uintptr
type SStkNPS interface {
	Swigcptr() uintptr
}

func (p SwigcptrSStkNPS) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtDbvt_sStkNPS uintptr
type BtDbvt_sStkNPS interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtDbvt_sStkNPS) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrICollide uintptr
type ICollide interface {
	Swigcptr() uintptr
}

func (p SwigcptrICollide) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_btPersistentManifold_Sm__Sg_ uintptr
type BtAlignedObjectArray_Sl_btPersistentManifold_Sm__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_btPersistentManifold_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrRayResultCallback uintptr
type RayResultCallback interface {
	Swigcptr() uintptr
}

func (p SwigcptrRayResultCallback) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrConvexResultCallback uintptr
type ConvexResultCallback interface {
	Swigcptr() uintptr
}

func (p SwigcptrConvexResultCallback) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrContactResultCallback uintptr
type ContactResultCallback interface {
	Swigcptr() uintptr
}

func (p SwigcptrContactResultCallback) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_sStkNPS_Sg_ uintptr
type BtAlignedObjectArray_Sl_sStkNPS_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_sStkNPS_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_ uintptr
type BtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_btCollisionObject_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrRaycastInfo uintptr
type RaycastInfo interface {
	Swigcptr() uintptr
}

func (p SwigcptrRaycastInfo) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtPoolAllocator uintptr
type BtPoolAllocator interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtPoolAllocator) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_btDbvtNode_SS_const_Sm__Sg_ uintptr
type BtAlignedObjectArray_Sl_btDbvtNode_SS_const_Sm__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_btDbvtNode_SS_const_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_ uintptr
type BtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_btQuantizedBvhNode_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_btBvhSubtreeInfo_Sg_ uintptr
type BtAlignedObjectArray_Sl_btBvhSubtreeInfo_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_btBvhSubtreeInfo_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_btBroadphasePair_Sg_ uintptr
type BtAlignedObjectArray_Sl_btBroadphasePair_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_btBroadphasePair_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_btIndexedMesh_Sg_ uintptr
type BtAlignedObjectArray_Sl_btIndexedMesh_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_btIndexedMesh_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtAlignedObjectArray_Sl_btBroadphaseInterface_Sm__Sg_ uintptr
type BtAlignedObjectArray_Sl_btBroadphaseInterface_Sm__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtAlignedObjectArray_Sl_btBroadphaseInterface_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtVoronoiSimplexSolver uintptr
type BtVoronoiSimplexSolver interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtVoronoiSimplexSolver) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBtSimulationIslandManager uintptr
type BtSimulationIslandManager interface {
	Swigcptr() uintptr
}

func (p SwigcptrBtSimulationIslandManager) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrIWriter uintptr
type IWriter interface {
	Swigcptr() uintptr
}

func (p SwigcptrIWriter) Swigcptr() uintptr {
	return uintptr(p)
}
